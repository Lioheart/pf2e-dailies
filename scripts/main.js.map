{"version":3,"file":"main.js","mappings":"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","sources":["webpack:///../../../../foundryVTT-projects/@utils/module.ts","webpack:///./src/feats.ts","webpack:///../../../../foundryVTT-projects/@utils/foundry/notification.ts","webpack:///../../../../foundryVTT-projects/@utils/foundry/localize.ts","webpack:///../../../../foundryVTT-projects/@utils/foundry/path.ts","webpack:///../../../../foundryVTT-projects/@utils/pf2e/skills.ts","webpack:///../../../../foundryVTT-projects/@utils/foundry/uuid.ts","webpack:///../../../../foundryVTT-projects/@utils/pf2e/spell.ts","webpack:///./src/apps/interface.ts","webpack:///../../../../foundryVTT-projects/@utils/foundry/flags.ts","webpack:///./src/rules.ts","webpack:///./src/main.ts","webpack:///./src/sheet.ts"],"sourcesContent":["export let MODULE_ID = ''\r\n\r\nexport function setModuleID(id: string) {\r\n    if (!MODULE_ID) MODULE_ID = id\r\n}\r\n","type FlattenedUUIDS = Record<ItemUUID, { group: FeatGroup; index: number }>\r\n\r\nconst CATEGORIES: Record<FeatGroup, ItemUUID[]> = {\r\n    scroll: [\r\n        'Compendium.pf2e.feats-srd.OqObuRB8oVSAEKFR',\r\n        'Compendium.pf2e.feats-srd.nWd7m0yRcIEVUy7O',\r\n        'Compendium.pf2e.feats-srd.LHjPTV5vP3MOsPPJ',\r\n    ],\r\n    trickster: [\r\n        'Compendium.pf2e.feats-srd.ROAUR1GhC19Pjk9C',\r\n        'Compendium.pf2e.feats-srd.UrOj9TROtn8nuxPf',\r\n        'Compendium.pf2e.feats-srd.lIg5Gzz7W70jfbk1',\r\n    ],\r\n    longevity: ['Compendium.pf2e.feats-srd.WoLh16gyDp8y9WOZ'],\r\n}\r\n\r\nconst flattenedUUIDS = (() => {\r\n    const uuids: FlattenedUUIDS = {}\r\n    for (const [group, entries] of Object.entries(CATEGORIES)) {\r\n        for (let i = 0; i < entries.length; i++) {\r\n            const uuid = entries[i]\r\n            uuids[uuid] = { group: group as FeatGroup, index: i }\r\n        }\r\n    }\r\n    return uuids\r\n})()\r\n\r\nconst UUIDS = Object.keys(flattenedUUIDS) as ItemUUID[]\r\n\r\nexport function hasAllFeats(actor: CharacterPF2e) {\r\n    const uuids = {} as Record<FeatGroup, boolean[]>\r\n    for (const feat of actor.itemTypes.feat) {\r\n        const sourceId = feat.getFlag('core', 'sourceId') as ItemUUID\r\n        const entry = flattenedUUIDS[sourceId]\r\n        if (!entry) continue\r\n        uuids[entry.group] ??= []\r\n        uuids[entry.group][entry.index] = true\r\n    }\r\n    return uuids\r\n}\r\n\r\nexport function getFeat(actor: CharacterPF2e, feat: FeatGroup, index = 0) {\r\n    const uuid = CATEGORIES[feat][index]\r\n    return actor.itemTypes.feat.find(x => x.getFlag('core', 'sourceId') === uuid)\r\n}\r\n\r\nexport function hasAnyFeat(actor: CharacterPF2e) {\r\n    return !!actor.itemTypes.feat.find(x => UUIDS.includes(x.getFlag('core', 'sourceId') as ItemUUID))\r\n}\r\n","import { localize } from '@utils/foundry/localize'\r\n\r\nexport type NotifyArgs = [str: string, arg1?: boolean | Record<string, string>, arg2?: boolean]\r\n\r\nfunction notify(\r\n    str: string,\r\n    arg1?: 'warning' | 'info' | 'error' | boolean | Record<string, string>,\r\n    arg2?: boolean | Record<string, string>,\r\n    arg3?: boolean\r\n) {\r\n    const type = typeof arg1 === 'string' ? arg1 : 'info'\r\n    const data = typeof arg1 === 'object' ? arg1 : typeof arg2 === 'object' ? arg2 : undefined\r\n    const permanent = typeof arg1 === 'boolean' ? arg1 : typeof arg2 === 'boolean' ? arg2 : arg3 ?? false\r\n\r\n    ui.notifications.notify(localize(str, data), type, { permanent })\r\n}\r\n\r\nexport function warn(...args: NotifyArgs) {\r\n    const [str, arg1, arg2] = args\r\n    notify(str, 'warning', arg1, arg2)\r\n}\r\n\r\nexport function info(...args: NotifyArgs) {\r\n    const [str, arg1, arg2] = args\r\n    notify(str, 'info', arg1, arg2)\r\n}\r\n\r\nexport function error(...args: NotifyArgs) {\r\n    const [str, arg1, arg2] = args\r\n    notify(str, 'error', arg1, arg2)\r\n}\r\n","import { MODULE_ID } from '@utils/module'\r\nimport { warn, NotifyArgs, info, error } from '@utils/foundry/notification'\r\n\r\nexport type LocalizeArgs = [key: string, data?: Record<string, string | number>]\r\n\r\nexport function localize(...args: LocalizeArgs) {\r\n    let [key, data] = args\r\n    key = `${MODULE_ID}.${key}`\r\n    if (data) return game.i18n.format(key, data)\r\n    return game.i18n.localize(key)\r\n}\r\n\r\nexport function subLocalize(subKey: string) {\r\n    const fn = (...args: LocalizeArgs) => localize(`${subKey}.${args[0]}`, args[1])\r\n\r\n    Object.defineProperties(fn, {\r\n        warn: {\r\n            value: (...args: NotifyArgs) => warn(`${subKey}.${args[0]}`, args[1], args[2]),\r\n            enumerable: false,\r\n            configurable: false,\r\n        },\r\n        info: {\r\n            value: (...args: NotifyArgs) => info(`${subKey}.${args[0]}`, args[1], args[2]),\r\n            enumerable: false,\r\n            configurable: false,\r\n        },\r\n        error: {\r\n            value: (...args: NotifyArgs) => error(`${subKey}.${args[0]}`, args[1], args[2]),\r\n            enumerable: false,\r\n            configurable: false,\r\n        },\r\n    })\r\n\r\n    return fn as ((...args: LocalizeArgs) => string) & {\r\n        warn: (...args: NotifyArgs) => void\r\n        info: (...args: NotifyArgs) => void\r\n        error: (...args: NotifyArgs) => void\r\n    }\r\n}\r\n","import { MODULE_ID } from '@utils/module'\r\n\r\nexport function getSettingLocalizationPath(...path: string[]) {\r\n    return `${MODULE_ID}.settings.${path.join('.')}`\r\n}\r\n\r\nexport function flagsUpdatePath(...path: string[]) {\r\n    return `flags.${MODULE_ID}.${path.join('/')}`\r\n}\r\n\r\nexport function templatePath(...path: string[]) {\r\n    path = path.filter(x => typeof x === 'string')\r\n    return `modules/${MODULE_ID}/templates/${path.join('/')}`\r\n}\r\n\r\nexport function imagePath(...path: string[]) {\r\n    return `modules/${MODULE_ID}/images/${path.join('/')}`\r\n}\r\n","export const SKILL_DICTIONARY = {\r\n    acr: 'acrobatics',\r\n    arc: 'arcana',\r\n    ath: 'athletics',\r\n    cra: 'crafting',\r\n    dec: 'deception',\r\n    dip: 'diplomacy',\r\n    itm: 'intimidation',\r\n    med: 'medicine',\r\n    nat: 'nature',\r\n    occ: 'occultism',\r\n    prf: 'performance',\r\n    rel: 'religion',\r\n    soc: 'society',\r\n    ste: 'stealth',\r\n    sur: 'survival',\r\n    thi: 'thievery',\r\n} as const\r\n\r\nexport const SKILL_ABBREVIATIONS = Object.keys(SKILL_DICTIONARY) as (keyof typeof SKILL_DICTIONARY)[]\r\n\r\nexport const SKILL_LONG_FORMS = Object.values(SKILL_DICTIONARY)\r\n","export function chatUUID(uuid: string, name?: string) {\r\n    if (name) return `@UUID[${uuid}]{${name}}`\r\n    return `@UUID[${uuid}]`\r\n}\r\n\r\nexport function fakeChatUUID(name: string) {\r\n    return `<span style=\"background: #DDD;\r\n    padding: 1px 4px;\r\n    border: 1px solid var(--color-border-dark-tertiary);\r\n    border-radius: 2px;\r\n    white-space: nowrap;\r\n    word-break: break-all;\">${name}</span>`\r\n}\r\n","import { chatUUID } from '@utils/foundry/uuid'\r\n\r\nexport const MAGIC_TRADITIONS = new Set(['arcane', 'divine', 'occult', 'primal'] as const)\r\n\r\nexport const SPELL_COMPONENTS = ['focus', 'material', 'somatic', 'verbal'] as const\r\n\r\nconst scrolls: (ConsumablePF2e | null)[] = []\r\nexport async function createSpellScroll(uuid: ItemUUID, level: OneToTen | false, temp = false) {\r\n    const spell = (await fromUuid<SpellPF2e>(uuid))?.toObject()\r\n    if (!spell) return null\r\n\r\n    if (level === false) level = spell.system.level.value\r\n\r\n    const scrollUUID = getScrollCompendiumUUID(level)\r\n    scrolls[level] ??= await fromUuid<ConsumablePF2e>(scrollUUID)\r\n\r\n    const scroll = scrolls[level]?.toObject()\r\n    if (!scroll) return null\r\n\r\n    spell.system.location.heightenedLevel = level\r\n\r\n    scroll.name = `Scroll of ${spell.name} (Level ${level})`\r\n    scroll.system.temporary = temp\r\n    scroll.system.spell = spell\r\n    scroll.system.traits.value.push(...spell.system.traditions.value)\r\n\r\n    const sourceId = spell.flags.core?.sourceId\r\n    if (sourceId) scroll.system.description.value = `${chatUUID(sourceId)}\\n<hr />${scroll.system.description.value}`\r\n\r\n    return scroll\r\n}\r\n\r\nfunction getScrollCompendiumUUID(level: OneToTen): ItemUUID {\r\n    return `Compendium.pf2e.equipment-srd.${scrollCompendiumIds[level]}`\r\n}\r\n\r\nconst scrollCompendiumIds: Record<number, string> = {\r\n    1: 'RjuupS9xyXDLgyIr', // Compendium.pf2e.equipment-srd.RjuupS9xyXDLgyIr\r\n    2: 'Y7UD64foDbDMV9sx',\r\n    3: 'ZmefGBXGJF3CFDbn',\r\n    4: 'QSQZJ5BC3DeHv153',\r\n    5: 'tjLvRWklAylFhBHQ',\r\n    6: '4sGIy77COooxhQuC',\r\n    7: 'fomEZZ4MxVVK3uVu',\r\n    8: 'iPki3yuoucnj7bIt',\r\n    9: 'cFHomF3tty8Wi1e5',\r\n    10: 'o1XIHJ4MJyroAHfF',\r\n}\r\n","import { getFeat, hasAllFeats } from '@src/feats'\r\nimport { getFlag, setFlag } from '@utils/foundry/flags'\r\nimport { subLocalize } from '@utils/foundry/localize'\r\nimport { templatePath } from '@utils/foundry/path'\r\nimport { SKILL_LONG_FORMS } from '@utils/pf2e/skills'\r\nimport { warn } from '@utils/foundry/notification'\r\nimport { createLongevityRule } from '@src/rules'\r\nimport { createSpellScroll } from '@utils/pf2e/spell'\r\nimport { chatUUID } from '@utils/foundry/uuid'\r\n\r\nconst localize = subLocalize('interface')\r\n\r\nexport class DailiesInterface extends Application {\r\n    private _actor: CharacterPF2e\r\n\r\n    constructor(actor: CharacterPF2e, options?: Partial<ApplicationOptions>) {\r\n        super(options)\r\n        this._actor = actor\r\n    }\r\n\r\n    static get defaultOptions() {\r\n        return mergeObject(super.defaultOptions, {\r\n            title: localize('title'),\r\n            template: templatePath('interface.hbs'),\r\n            height: 'auto',\r\n            submitOnClose: false,\r\n            submitOnChange: false,\r\n            dragDrop: [\r\n                {\r\n                    dropSelector: '[name=\"spell\"]',\r\n                },\r\n            ],\r\n        })\r\n    }\r\n\r\n    getData(options?: Partial<FormApplicationOptions> | undefined) {\r\n        const actor = this._actor\r\n        const saved = getFlag<Partial<SavedFlags>>(actor, 'saved') ?? {}\r\n        const feats = hasAllFeats(actor)\r\n\r\n        const longevity = (() => {\r\n            if (!feats.longevity) return\r\n            let skills = SKILL_LONG_FORMS.filter(x => actor.skills[x]!.rank! < 1)\r\n            const selected = saved.longevity ?? ''\r\n            if (selected) {\r\n                skills = skills.filter(x => x !== selected)\r\n                skills.unshift(selected)\r\n            }\r\n            return { skills: skills.map(x => ({ skill: x })), selected }\r\n        })()\r\n\r\n        return mergeObject(super.getData(options), {\r\n            i18n: localize,\r\n            feats,\r\n            saved,\r\n            level: actor.level,\r\n            longevity,\r\n            getSpellValue: (values: ItemFlag[] | undefined, level: number, attr: 'name' | 'uuid') =>\r\n                values?.[level - 1]?.[attr] ?? '',\r\n        })\r\n    }\r\n\r\n    activateListeners(html: JQuery<HTMLElement>): void {\r\n        super.activateListeners(html)\r\n\r\n        html.find<HTMLAnchorElement>('[data-type=spell] [data-action=search]').on('click', this.#onSpellSearch.bind(this))\r\n        html.find<HTMLAnchorElement>('[data-action=clear]').on('click', this.#onClear.bind(this))\r\n        html.find<HTMLButtonElement>('[data-action=accept]').on('click', this.#onAccept.bind(this))\r\n        html.find<HTMLButtonElement>('[data-action=cancel]').on('click', this.#onCancel.bind(this))\r\n    }\r\n\r\n    protected async _onDrop(event: ElementDragEvent) {\r\n        const dataString = event.dataTransfer?.getData('text/plain')\r\n\r\n        try {\r\n            const input = $(event.target)\r\n            const typeError = () => localize.warn('spells.error.wrongType')\r\n\r\n            const data: { type: string; uuid: string } = JSON.parse(dataString)\r\n            if (!data || data.type !== 'Item' || typeof data.uuid !== 'string') return typeError()\r\n\r\n            const item = await fromUuid<ItemPF2e>(data.uuid)\r\n            if (!item?.isOfType('spell') || item.isCantrip || item.isRitual) return typeError()\r\n\r\n            if (item.level > Number(input.attr('data-level'))) return localize.warn('spells.error.wrongLevel')\r\n\r\n            input.attr('value', item.name)\r\n            input.attr('data-uuid', item.uuid)\r\n            input.nextAll('[data-action=\"clear\"]').first().removeClass('disabled')\r\n        } catch {}\r\n    }\r\n\r\n    #lock() {\r\n        this.element.find('button').attr('disabled', 'true')\r\n        this.element.find('a').addClass('disabled')\r\n    }\r\n\r\n    #validate() {\r\n        const warns: string[] = []\r\n        if (this.element.find('input[value=\"\"]').length) warns.push('error.empty')\r\n        warns.forEach(x => localize.warn(x))\r\n        return !warns.length\r\n    }\r\n\r\n    async #onAccept(event: JQuery.ClickEvent) {\r\n        event.preventDefault()\r\n\r\n        if (!this.#validate()) return\r\n\r\n        this.#lock()\r\n\r\n        const actor = this._actor\r\n        const flags = {} as SavedFlags\r\n        const add: BaseItemSourcePF2e[] = []\r\n        const choice: { uuid: string; choice: string; update: EmbeddedDocumentUpdateData<ItemPF2e> }[] = []\r\n        let message = `${localize('message.changes')}<hr>`\r\n\r\n        const longevityFeat = getFeat(actor, 'longevity')\r\n        if (longevityFeat) {\r\n            const rules = deepClone(longevityFeat._source.system.rules)\r\n            const ruleIndex = rules.findIndex(x => 'pf2e-dailies' in x)\r\n            const longevity = this.element.find('[name=longevity]').val() as SkillLongForm\r\n\r\n            if (ruleIndex >= 0) rules.splice(ruleIndex, 1)\r\n            if (longevity) rules.push(createLongevityRule(longevity))\r\n\r\n            choice.push({\r\n                uuid: longevityFeat.uuid,\r\n                choice: longevity,\r\n                update: { _id: longevityFeat.id, 'system.rules': rules },\r\n            })\r\n\r\n            flags.longevity = longevity\r\n        }\r\n\r\n        const groups = this.element.find('.window-content .groups .group').toArray()\r\n        for (const el of groups) {\r\n            const group = $(el)\r\n            const category = group.attr('data-category') as ScrollGroup\r\n            const spells = group.find<HTMLInputElement>('[name=\"spell\"]').toArray()\r\n\r\n            for (let i = 0; i < spells.length; i++) {\r\n                const input = $(spells[i])\r\n                const uuid = input.attr('data-uuid') as ItemUUID\r\n                const level = Number(input.attr('data-level')) as OneToTen\r\n                const name = input.attr('value') as string\r\n                const value = { name, uuid }\r\n\r\n                if (uuid) {\r\n                    const scroll = await createSpellScroll(uuid, level, true)\r\n                    if (scroll) add.push(scroll)\r\n                }\r\n\r\n                flags[category] ??= []\r\n                flags[category][i] = value\r\n            }\r\n        }\r\n\r\n        if (choice.length) {\r\n            const data: EmbeddedDocumentUpdateData<ItemPF2e>[] = []\r\n            message += `<p><strong>${localize('message.choices')}</strong></p>`\r\n\r\n            for (const entry of choice) {\r\n                message += `<p>${chatUUID(entry.uuid)} <span style=\"text-transform: capitalize;\">${entry.choice}</span></p>`\r\n                data.push(entry.update)\r\n            }\r\n\r\n            actor.updateEmbeddedDocuments('Item', data)\r\n        }\r\n\r\n        if (add.length) {\r\n            if (choice.length) message += '<hr />'\r\n            message += `<p><strong>${localize(`message.items`)}</strong></p>`\r\n            const items = (await actor.createEmbeddedDocuments('Item', add)) as ItemPF2e[]\r\n            items.map(x => (message += `<p>${chatUUID(x.uuid)}</p>`))\r\n        }\r\n\r\n        setFlag(actor, 'saved', flags)\r\n\r\n        ChatMessage.create({ content: message, speaker: ChatMessage.getSpeaker({ actor }) })\r\n\r\n        this.close()\r\n    }\r\n\r\n    #onSpellSearch(event: JQuery.ClickEvent<any, any, HTMLAnchorElement>) {\r\n        event.preventDefault()\r\n\r\n        const level = Number(event.currentTarget.dataset.level)\r\n        const levels: number[] = []\r\n\r\n        for (let i = 0; i < level; i++) {\r\n            levels[i] = i + 1\r\n        }\r\n\r\n        const filter: InitialSpellFilters = {\r\n            category: ['spell'],\r\n            classes: [],\r\n            level: levels,\r\n            rarity: [],\r\n            school: [],\r\n            source: [],\r\n            traditions: [],\r\n            traits: [],\r\n        }\r\n\r\n        game.pf2e.compendiumBrowser.openTab('spell', filter)\r\n    }\r\n\r\n    #onClear(event: JQuery.ClickEvent<any, any, HTMLAnchorElement>) {\r\n        event.preventDefault()\r\n        const target = $(event.currentTarget)\r\n        const input = target.prevAll('[name=\"spell\"]').first()\r\n        input.attr('value', '')\r\n        input.attr('data-uuid', '')\r\n        target.addClass('disabled')\r\n    }\r\n\r\n    #onCancel(event: JQuery.ClickEvent) {\r\n        event.preventDefault()\r\n        this.close()\r\n    }\r\n}\r\n","import { MODULE_ID } from '@utils/module'\r\n\r\nexport function hasModuleFlag(doc: foundry.abstract.Document) {\r\n    return getProperty(doc, `flags.${MODULE_ID}`) !== undefined\r\n}\r\n\r\nexport function getFlag<T extends unknown>(doc: foundry.abstract.Document, key: string): T | undefined\r\nexport function getFlag<T extends unknown>(doc: foundry.abstract.Document, key: string, fallback: T): T\r\nexport function getFlag<T extends unknown>(doc: foundry.abstract.Document, key: string, fallback?: T): T | undefined {\r\n    return (doc.getFlag(MODULE_ID, key) as T | undefined) ?? fallback\r\n}\r\n\r\n/**\r\n * @template {foundry.Document} T\r\n * @param {T} doc\r\n * @param {string} key\r\n * @param {any} value\r\n * @returns T\r\n */\r\nexport function setFlag(doc: foundry.abstract.Document, key: string, value: unknown) {\r\n    return doc.setFlag(MODULE_ID, key, value)\r\n}\r\n","import { MODULE_ID } from '@utils/module'\r\n\r\nexport function createLongevityRule(skill: SkillLongForm) {\r\n    return {\r\n        key: 'ActiveEffectLike',\r\n        mode: 'upgrade',\r\n        path: `system.skills.${skill}.rank`,\r\n        value: 1,\r\n        [MODULE_ID]: true,\r\n    } as const\r\n}\r\n","import { setModuleID } from '@utils/module'\r\nimport { renderCharacterSheetPF2e } from './sheet'\r\n\r\nsetModuleID('pf2e-dailies')\r\n\r\nHooks.on('renderCharacterSheetPF2e', renderCharacterSheetPF2e)\r\n","import { DailiesInterface } from '@apps/interface'\r\nimport { localize } from '@utils/foundry/localize'\r\nimport { hasAnyFeat } from './feats'\r\n\r\nexport function renderCharacterSheetPF2e(sheet: CharacterSheetPF2e, html: JQuery) {\r\n    const actor = sheet.actor\r\n    if (!hasAnyFeat(actor)) return\r\n\r\n    const title = localize('sheet.title')\r\n    const link = `<a class=\"roll-icon dailies\" title=\"${title}\"><i class=\"fas fa-mug-saucer\"></i></a>`\r\n    html.find('aside .sidebar .hitpoints .hp-small')\r\n        .append(link)\r\n        .find('.dailies')\r\n        .on('click', () => new DailiesInterface(actor).render(true, { id: `pf2e-dailies-interface-${actor.id}` }))\r\n}\r\n"],"names":["CATEGORIES","scroll","trickster","longevity","flattenedUUIDS","uuids","group","entries","Object","i","length","index","UUIDS","keys","notify","str","arg1","arg2","arg3","type","data","undefined","permanent","ui","notifications","localize","args","key","game","i18n","format","templatePath","path","filter","x","join","SKILL_DICTIONARY","acr","arc","ath","cra","dec","dip","itm","med","nat","occ","prf","rel","soc","ste","sur","thi","SKILL_LONG_FORMS","values","chatUUID","uuid","name","Set","scrolls","async","createSpellScroll","level","temp","spell","fromUuid","toObject","system","value","scrollUUID","scrollCompendiumIds","getScrollCompendiumUUID","location","heightenedLevel","temporary","traits","push","traditions","sourceId","flags","core","description","subKey","fn","defineProperties","warn","enumerable","configurable","info","error","subLocalize","DailiesInterface","Application","_actor","constructor","actor","options","super","this","defaultOptions","mergeObject","title","template","height","submitOnClose","submitOnChange","dragDrop","dropSelector","getData","saved","getFlag","fallback","feats","feat","itemTypes","entry","hasAllFeats","skills","rank","selected","unshift","map","skill","getSpellValue","attr","activateListeners","html","find","on","bind","event","dataString","dataTransfer","input","$","target","typeError","JSON","parse","item","isOfType","isCantrip","isRitual","Number","nextAll","first","removeClass","element","addClass","warns","forEach","preventDefault","add","choice","message","longevityFeat","getFeat","rules","deepClone","_source","ruleIndex","findIndex","val","splice","mode","update","_id","id","groups","toArray","el","category","spells","updateEmbeddedDocuments","createEmbeddedDocuments","setFlag","ChatMessage","create","content","speaker","getSpeaker","close","currentTarget","dataset","levels","classes","rarity","school","source","pf2e","compendiumBrowser","openTab","prevAll","Hooks","sheet","includes","hasAnyFeat","link","append","render"],"sourceRoot":""}