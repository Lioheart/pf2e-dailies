{"version":3,"file":"main.js","mappings":"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,GAAgB,CACzB,SACA,WACA,UACA,QACA,UACA,SACA,WACA,QACA,SACA,SACA,cACA,QACA,UACA,QACA,OACA,YACA,aACA,UACA,QACA,mBACA,UACA,WACA,QACA,WACA,QACA,UACA,QACA,UACA,YACA,UACA,WACA,aACA,SACA,UACA,SACA,UACA,UACA,UACA,aACA,QACA,SACA,UACA,SACA,OACA,UACA,QACA,UACA,UACA,WACA,QACA,UACA,QACA,QACA,YACA,UACA,UACA,SACA,UACA,SACA,UACA,WACA,SACA,QACA,SACA,SACA,SACA,UACA,WACA,UACA,OACA,UACA,YACA,UACA,UACA,SACA,eACA,UACA,QACA,UACA,SACA,QACA,SACA,QACA,UACA,aACA,QACA,SACA,eACA,OACA,UACA,SACA,WACA,QACA,aACA,UACA,UACA,SACA,YACA,UACA,SACA,WACA,OACA,UACA,WACA,YACA,OACA,UACA,WC5FEC,GAAgB,CAAC,MAAO,QAAS,OAAQ,SACzCC,GAAoB,CAAC,OAAQ,cAAe,SAE5CC,GAAY,IAAIC,MAClB,CACIC,cAAe,EACfC,aAAc,EACdC,gBAAiB,EACjBC,YAAa,GAEjB,CACIC,IAAG,CAACC,EAAKC,IACEA,KAAQD,EAAMA,EAAIC,GAAwB,KAKtD,SAASC,GAAQtM,GACpB,MAAMuM,EAAavM,EAAM+G,MACnBa,EAASzK,EAAQ6C,EAAO,UAAY,CAAC,EACrCwM,EXsIH,SAAuBxM,GAC1B,MAAMwM,EAAa,CAAC,EACdpM,EAAQL,EAASC,EAAO,CAAC,WAAY,OAAQ,YAAa,WAEhE,IAAK,MAAMF,KAAQM,EAAO,CACtB,MAAMzC,EAAWF,EAAsBqC,GAEvC,IAAKnC,GAAamC,EAAK2M,SAAS,eAAoC,IAApB3M,EAAK4M,WAAuB,SAE5E,MAAMrD,EAAQhH,EAAM8J,IAAIxO,GACxB,IAAK0L,EAAO,SAEZ,MAAM,SAAElH,EAAQ,MAAE1C,EAAK,KAAEU,GAASkJ,EAGlC,GAFAmD,EAAWrK,KAAc,CAAEA,WAAUhC,OAAM0K,MAAO,GAAIzK,MAAO,IAC7DoM,EAAWrK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","sources":["webpack:///../../../../foundryVTT-projects/@utils/module.ts","webpack:///../../../../foundryVTT-projects/@utils/foundry/flags.ts","webpack:///../../../../foundryVTT-projects/@utils/pf2e/utils.ts","webpack:///../../../../foundryVTT-projects/@utils/foundry/item.ts","webpack:///../../../../foundryVTT-projects/@utils/foundry/notification.ts","webpack:///../../../../foundryVTT-projects/@utils/foundry/localize.ts","webpack:///./src/categories.ts","webpack:///./src/data/weapon.ts","webpack:///../../../../foundryVTT-projects/@utils/foundry/path.ts","webpack:///../../../../foundryVTT-projects/@utils/pf2e/actor.ts","webpack:///../../../../foundryVTT-projects/@utils/pf2e/skills.ts","webpack:///../../../../foundryVTT-projects/@utils/string.ts","webpack:///../../../../foundryVTT-projects/@utils/foundry/uuid.ts","webpack:///../../../../foundryVTT-projects/@utils/pf2e/spell.ts","webpack:///./src/apps/interface/accept.ts","webpack:///./src/apps/interface/alert.ts","webpack:///../../../../foundryVTT-projects/@utils/pf2e/languages.ts","webpack:///./src/apps/interface/data.ts","webpack:///../../../../foundryVTT-projects/@utils/utils.ts","webpack:///./src/apps/interface/search.ts","webpack:///./src/apps/interface/drop.ts","webpack:///./src/apps/interface.ts","webpack:///./src/main.ts","webpack:///./src/rest.ts","webpack:///./src/sheet.ts"],"sourcesContent":["export let MODULE_ID = ''\r\n\r\nexport function setModuleID(id: string) {\r\n    if (!MODULE_ID) MODULE_ID = id\r\n}\r\n","import { MODULE_ID } from '@utils/module'\r\n\r\nexport function hasModuleFlag(doc: foundry.abstract.Document) {\r\n    return getProperty(doc, `flags.${MODULE_ID}`) !== undefined\r\n}\r\n\r\nexport function getFlag<T extends unknown>(doc: foundry.abstract.Document, key: string): T | undefined\r\nexport function getFlag<T extends unknown>(doc: foundry.abstract.Document, key: string, fallback: T): T\r\nexport function getFlag<T extends unknown>(doc: foundry.abstract.Document, key: string, fallback?: T): T | undefined {\r\n    return (doc.getFlag(MODULE_ID, key) as T | undefined) ?? fallback\r\n}\r\n\r\n/**\r\n * @template {foundry.Document} T\r\n * @param {T} doc\r\n * @param {string} key\r\n * @param {any} value\r\n * @returns T\r\n */\r\nexport function setFlag(doc: foundry.abstract.Document, key: string, value: unknown) {\r\n    return doc.setFlag(MODULE_ID, key, value)\r\n}\r\n\r\nexport function getSourceId<T extends DocumentUUID>(doc: ClientDocument) {\r\n    return doc.getFlag('core', 'sourceId') as T | undefined\r\n}\r\n\r\nexport function hasSourceId(doc: ClientDocument, sourceId: DocumentUUID) {\r\n    return getSourceId(doc) === sourceId\r\n}\r\n\r\nexport function includesSourceId(doc: ClientDocument, list: DocumentUUID[]) {\r\n    const sourceId = getSourceId(doc)\r\n    return sourceId ? list.includes(sourceId) : false\r\n}\r\n","const wordCharacter = String.raw`[\\p{Alphabetic}\\p{Mark}\\p{Decimal_Number}\\p{Join_Control}]`\r\nconst nonWordCharacter = String.raw`[^\\p{Alphabetic}\\p{Mark}\\p{Decimal_Number}\\p{Join_Control}]`\r\nconst nonWordCharacterRE = new RegExp(nonWordCharacter, 'gu')\r\n\r\nconst wordBoundary = String.raw`(?:${wordCharacter})(?=${nonWordCharacter})|(?:${nonWordCharacter})(?=${wordCharacter})`\r\nconst nonWordBoundary = String.raw`(?:${wordCharacter})(?=${wordCharacter})`\r\nconst lowerCaseLetter = String.raw`\\p{Lowercase_Letter}`\r\nconst upperCaseLetter = String.raw`\\p{Uppercase_Letter}`\r\nconst lowerCaseThenUpperCaseRE = new RegExp(`(${lowerCaseLetter})(${upperCaseLetter}${nonWordBoundary})`, 'gu')\r\n\r\nconst nonWordCharacterHyphenOrSpaceRE = /[^-\\p{White_Space}\\p{Alphabetic}\\p{Mark}\\p{Decimal_Number}\\p{Join_Control}]/gu\r\nconst upperOrWordBoundariedLowerRE = new RegExp(`${upperCaseLetter}|(?:${wordBoundary})${lowerCaseLetter}`, 'gu')\r\n\r\n/** Check if an element is present in the provided set. Especially useful for checking against literal sets */\r\nexport function setHasElement<T extends Set<unknown>>(set: T, value: unknown): value is SetElement<T> {\r\n    return set.has(value)\r\n}\r\n\r\n/**\r\n * The system's sluggification algorithm for labels and other terms.\r\n * @param text The text to sluggify\r\n * @param [options.camel=null] The sluggification style to use\r\n */\r\nexport function sluggify(text: string, { camel = null }: { camel?: 'dromedary' | 'bactrian' | null } = {}): string {\r\n    // Sanity check\r\n    if (typeof text !== 'string') {\r\n        console.warn('Non-string argument passed to `sluggify`')\r\n        return ''\r\n    }\r\n\r\n    switch (camel) {\r\n        case null:\r\n            return text\r\n                .replace(lowerCaseThenUpperCaseRE, '$1-$2')\r\n                .toLowerCase()\r\n                .replace(/['’]/g, '')\r\n                .replace(nonWordCharacterRE, ' ')\r\n                .trim()\r\n                .replace(/[-\\s]+/g, '-')\r\n        case 'bactrian': {\r\n            const dromedary = sluggify(text, { camel: 'dromedary' })\r\n            return dromedary.charAt(0).toUpperCase() + dromedary.slice(1)\r\n        }\r\n        case 'dromedary':\r\n            return text\r\n                .replace(nonWordCharacterHyphenOrSpaceRE, '')\r\n                .replace(/[-_]+/g, ' ')\r\n                .replace(upperOrWordBoundariedLowerRE, (part, index) => (index === 0 ? part.toLowerCase() : part.toUpperCase()))\r\n                .replace(/\\s+/g, '')\r\n        default:\r\n            throw ErrorPF2e(\"I don't think that's a real camel.\")\r\n    }\r\n}\r\n\r\nexport function ErrorPF2e(message: string): Error {\r\n    return Error(`PF2e System | ${message}`)\r\n}\r\n","import { getSourceId, includesSourceId } from '@utils/foundry/flags'\r\n\r\ntype ActorItemTypes<A extends Actor> = (keyof A['itemTypes'])[]\r\n\r\nfunction getItemSourceIdCondition(sourceId: ItemUUID | ItemUUID[]) {\r\n    return Array.isArray(sourceId)\r\n        ? (item: Item) => includesSourceId(item, sourceId)\r\n        : (item: Item) => getSourceId(item) === sourceId\r\n}\r\n\r\nexport function getItems<A extends Actor, I extends Item = CollectionValue<A['items']>>(actor: A, itemTypes?: ActorItemTypes<A>) {\r\n    return (itemTypes ? itemTypes.flatMap(type => actor.itemTypes[type as string]) : actor.items) as Embedded<I>[]\r\n}\r\n\r\nexport function findItemWithSourceId<A extends Actor, I extends Item = CollectionValue<A['items']>>(\r\n    actor: A,\r\n    sourceId: ItemUUID,\r\n    itemTypes?: ActorItemTypes<A>\r\n) {\r\n    return getItems<A, I>(actor, itemTypes).find(getItemSourceIdCondition(sourceId))\r\n}\r\n\r\nexport function hasItemWithSourceId<A extends Actor, I extends Item = CollectionValue<A['items']>>(\r\n    actor: A,\r\n    sourceId: ItemUUID | ItemUUID[],\r\n    itemTypes?: ActorItemTypes<A>\r\n) {\r\n    return getItems<A, I>(actor, itemTypes).some(getItemSourceIdCondition(sourceId))\r\n}\r\n\r\nexport function filterItemsWithSourceId<A extends Actor, I extends Item = CollectionValue<A['items']>>(\r\n    actor: A,\r\n    sourceId: ItemUUID | ItemUUID[],\r\n    itemTypes?: ActorItemTypes<A>\r\n) {\r\n    return getItems<A, I>(actor, itemTypes).filter(getItemSourceIdCondition(sourceId))\r\n}\r\n","import { localize } from '@utils/foundry/localize'\r\n\r\nexport type NotifyArgs = [str: string, arg1?: boolean | Record<string, string>, arg2?: boolean]\r\n\r\nfunction notify(\r\n    str: string,\r\n    arg1?: 'warning' | 'info' | 'error' | boolean | Record<string, string>,\r\n    arg2?: boolean | Record<string, string>,\r\n    arg3?: boolean\r\n) {\r\n    const type = typeof arg1 === 'string' ? arg1 : 'info'\r\n    const data = typeof arg1 === 'object' ? arg1 : typeof arg2 === 'object' ? arg2 : undefined\r\n    const permanent = typeof arg1 === 'boolean' ? arg1 : typeof arg2 === 'boolean' ? arg2 : arg3 ?? false\r\n\r\n    ui.notifications.notify(localize(str, data), type, { permanent })\r\n}\r\n\r\nexport function warn(...args: NotifyArgs) {\r\n    const [str, arg1, arg2] = args\r\n    notify(str, 'warning', arg1, arg2)\r\n}\r\n\r\nexport function info(...args: NotifyArgs) {\r\n    const [str, arg1, arg2] = args\r\n    notify(str, 'info', arg1, arg2)\r\n}\r\n\r\nexport function error(...args: NotifyArgs) {\r\n    const [str, arg1, arg2] = args\r\n    notify(str, 'error', arg1, arg2)\r\n}\r\n","import { MODULE_ID } from '@utils/module'\r\nimport { warn, NotifyArgs, info, error } from '@utils/foundry/notification'\r\n\r\nexport type LocalizeArgs = [key: string, data?: Record<string, string | number>]\r\n\r\nexport function localize(...args: LocalizeArgs) {\r\n    let [key, data] = args\r\n    key = `${MODULE_ID}.${key}`\r\n    if (data) return game.i18n.format(key, data)\r\n    return game.i18n.localize(key)\r\n}\r\n\r\nexport function hasLocalization(key: string) {\r\n    return game.i18n.has(`${MODULE_ID}.${key}`, false)\r\n}\r\n\r\nexport function localizePath(key: string) {\r\n    return `${MODULE_ID}.${key}`\r\n}\r\n\r\nexport function subLocalize(subKey: string) {\r\n    const fn = (...args: LocalizeArgs) => localize(`${subKey}.${args[0]}`, args[1])\r\n\r\n    Object.defineProperties(fn, {\r\n        warn: {\r\n            value: (...args: NotifyArgs) => warn(`${subKey}.${args[0]}`, args[1], args[2]),\r\n            enumerable: false,\r\n            configurable: false,\r\n        },\r\n        info: {\r\n            value: (...args: NotifyArgs) => info(`${subKey}.${args[0]}`, args[1], args[2]),\r\n            enumerable: false,\r\n            configurable: false,\r\n        },\r\n        error: {\r\n            value: (...args: NotifyArgs) => error(`${subKey}.${args[0]}`, args[1], args[2]),\r\n            enumerable: false,\r\n            configurable: false,\r\n        },\r\n        has: {\r\n            value: (key: string) => hasLocalization(`${subKey}.${key}`),\r\n            enumerable: false,\r\n            configurable: false,\r\n        },\r\n    })\r\n\r\n    return fn as ((...args: LocalizeArgs) => string) & {\r\n        warn: (...args: NotifyArgs) => void\r\n        info: (...args: NotifyArgs) => void\r\n        error: (...args: NotifyArgs) => void\r\n        has: (key: string) => boolean\r\n    }\r\n}\r\n","import { getSourceId, includesSourceId } from '@utils/foundry/flags'\r\nimport { filterItemsWithSourceId, getItems } from '@utils/foundry/item'\r\nimport { hasLocalization, localize } from '@utils/foundry/localize'\r\n\r\nexport const RULE_TYPES = ['addedLanguage', 'trainedSkill', 'addedResistance', 'ganziHeritage', 'thaumaturgeTome'] as const\r\n\r\nexport const CATEGORIES = [\r\n    // MindSmith\r\n    {\r\n        type: 'mindSmith',\r\n        category: 'mindsmith',\r\n        uuids: [\r\n            'Compendium.pf2e.feats-srd.juikoiIA0Jy8PboY', // Mind Smith Dedication\r\n            'Compendium.pf2e-dailies.equipment.VpmEozw21aRxX15P', // Mind Weapon\r\n            'Compendium.pf2e.feats-srd.PccekOihIbRWdDky', // Malleable Mental Forge\r\n            'Compendium.pf2e.feats-srd.2uQbQgz1AbjzcFSp', // Runic Mind Smithing\r\n            'Compendium.pf2e.feats-srd.fgnfXwFcn9jZlXGD', // Advanced Runic Mind Smithing\r\n        ],\r\n    },\r\n    // TricksterAce\r\n    {\r\n        type: 'tricksterAce',\r\n        category: 'ace',\r\n        uuids: ['Compendium.pf2e.feats-srd.POrE3ZgBRdBL9MsW'], // Trickster's Ace\r\n    },\r\n    // ThaumaturgeTome\r\n    {\r\n        type: 'thaumaturgeTome',\r\n        category: 'tome',\r\n        uuids: [\r\n            'Compendium.pf2e.classfeatures.MyN1cQgE0HsLF20e', // Tome\r\n            'Compendium.pf2e.classfeatures.Obm4ItMIIr0whYeO', // Implement Adept\r\n            'Compendium.pf2e.classfeatures.ZEUxZ4Ta1kDPHiq5', // Second Adept\r\n            'Compendium.pf2e.feats-srd.yRRM1dsY6jakEMaC', // Intense Implement\r\n            'Compendium.pf2e.classfeatures.QEtgbY8N2V4wTbsI', // Implement Paragon\r\n        ],\r\n    },\r\n    // AddedResistance\r\n    {\r\n        type: 'addedResistance',\r\n        category: 'elementalist',\r\n        uuids: ['Compendium.pf2e.feats-srd.tx9pkrpmtqe4FnvS'], // Elementalist Dedication\r\n    },\r\n    // GanziHeritage\r\n    {\r\n        type: 'ganziHeritage',\r\n        category: 'ganzi',\r\n        uuids: ['Compendium.pf2e.heritages.3reGfXH0S82hM7Gp'], // Ganzi\r\n    },\r\n    // TrainedLore\r\n    {\r\n        type: 'trainedLore',\r\n        category: 'study',\r\n        uuids: ['Compendium.pf2e.feats-srd.aLJsBBZzlUK3G8MW'], // Quick Study\r\n    },\r\n    // TrainedSkill\r\n    {\r\n        type: 'trainedSkill',\r\n        category: 'ageless',\r\n        uuids: ['Compendium.pf2e.feats-srd.wylnETwIz32Au46y'], // Ageless Spirit\r\n    },\r\n    {\r\n        type: 'trainedSkill',\r\n        category: 'longevity',\r\n        uuids: ['Compendium.pf2e.feats-srd.WoLh16gyDp8y9WOZ'], // Ancestral Longevity\r\n    },\r\n    {\r\n        type: 'trainedSkill',\r\n        category: 'memories',\r\n        uuids: ['Compendium.pf2e.feats-srd.ptEOt3lqjxUnAW62'], // Ancient Memories\r\n    },\r\n    {\r\n        type: 'trainedSkill',\r\n        category: 'studies',\r\n        uuids: ['Compendium.pf2e.feats-srd.9bgl6qYWKHzqWZj0'], // Flexible Studies\r\n    },\r\n    // AddedLanguage\r\n    {\r\n        type: 'addedLanguage',\r\n        category: 'linguistics',\r\n        uuids: ['Compendium.pf2e.feats-srd.eCWQU16hRLfN1KaX'], // Ancestral Linguistics\r\n    },\r\n    {\r\n        type: 'addedLanguage',\r\n        category: 'borts',\r\n        uuids: ['Compendium.pf2e.equipment-srd.iS7hAQMAaThHYE8g'], // Bort's Blessing\r\n    },\r\n    // CombatFlexibility\r\n    {\r\n        type: 'combatFlexibility',\r\n        category: 'flexibility',\r\n        uuids: [\r\n            'Compendium.pf2e.classfeatures.8g6HzARbhfcgilP8', // Combat Flexibility\r\n            'Compendium.pf2e.classfeatures.W2rwudMNcAxs8VoX', // Improved Flexibility\r\n        ],\r\n    },\r\n    // ScrollSavant\r\n    {\r\n        type: 'scrollSavant',\r\n        category: 'savant',\r\n        uuids: ['Compendium.pf2e.feats-srd.u5DBg0LrBUKP0JsJ'], // Scroll Savant\r\n    },\r\n    // ScrollChain\r\n    {\r\n        type: 'scrollChain',\r\n        category: 'esoterica',\r\n        uuids: [\r\n            'Compendium.pf2e.feats-srd.OqObuRB8oVSAEKFR', // Scroll Esoterica\r\n            'Compendium.pf2e.feats-srd.nWd7m0yRcIEVUy7O', // Elaborate Scroll Esoterica\r\n            'Compendium.pf2e.feats-srd.LHjPTV5vP3MOsPPJ', // Grand Scroll Esoterica\r\n        ],\r\n    },\r\n    {\r\n        type: 'scrollChain',\r\n        category: 'trickster',\r\n        uuids: [\r\n            'Compendium.pf2e.feats-srd.ROAUR1GhC19Pjk9C', // Basic Scroll Cache\r\n            'Compendium.pf2e.feats-srd.UrOj9TROtn8nuxPf', // Expert Scroll Cache\r\n            'Compendium.pf2e.feats-srd.lIg5Gzz7W70jfbk1', // Master Scroll Cache\r\n        ],\r\n    },\r\n] as const\r\n\r\ntype UuidsType = [ItemUUID, Omit<Category, 'uuids'> & { index: number }]\r\nconst [UUIDS, EQUIP_UUID, FEATS_UUID, HERITAGES_UUID, RULES_UUIDS, FLATTENED] = (() => {\r\n    const UUIDS: UuidsType[] = []\r\n    const FLATTENED = {} as Record<CategoryName, ItemUUID[]>\r\n    const FEATS: ItemUUID[] = []\r\n    const EQUIP: ItemUUID[] = []\r\n    const HERITAGES: ItemUUID[] = []\r\n    const RULES: ItemUUID[] = []\r\n\r\n    for (const { type, category, uuids } of CATEGORIES) {\r\n        FLATTENED[category] ??= []\r\n        FLATTENED[category].push(...uuids)\r\n        UUIDS.push(...uuids.map((uuid, index) => [uuid, { type, category, index }] as UuidsType))\r\n\r\n        if (RULE_TYPES.includes(type as typeof RULE_TYPES[number])) RULES.push(...uuids)\r\n\r\n        // for fast check on any category\r\n        const firstUUID = uuids[0]\r\n        if (firstUUID.includes('equipment-srd')) EQUIP.push(firstUUID)\r\n        else if (firstUUID.includes('heritages')) HERITAGES.push(firstUUID)\r\n        else FEATS.push(firstUUID)\r\n    }\r\n\r\n    return [new Map(UUIDS), EQUIP, FEATS, HERITAGES, RULES, FLATTENED]\r\n})()\r\n\r\nexport function hasAnyCategory(actor: CharacterPF2e) {\r\n    const itemTypes = actor.itemTypes\r\n    return (\r\n        itemTypes.heritage.some(item => includesSourceId(item, HERITAGES_UUID)) ||\r\n        itemTypes.feat.some(item => includesSourceId(item, FEATS_UUID)) ||\r\n        itemTypes.equipment.some(item => !(item.isInvested === false) && includesSourceId(item, EQUIP_UUID))\r\n    )\r\n}\r\n\r\nexport function getCategoryUUIDS(category: CategoryName) {\r\n    return FLATTENED[category] as ItemUUID[]\r\n}\r\n\r\nexport function getRuleItems(actor: CharacterPF2e) {\r\n    return filterItemsWithSourceId(actor, RULES_UUIDS, ['feat', 'equipment', 'heritage'])\r\n}\r\n\r\nexport function isRuleItem(item: ItemPF2e) {\r\n    return includesSourceId(item, RULES_UUIDS)\r\n}\r\n\r\nexport function hasCategories(actor: CharacterPF2e) {\r\n    const categories = {} as Record<CategoryName, Omit<ReturnedCategory, 'items'> & { items: (undefined | ItemPF2e)[] }>\r\n    const items = getItems(actor, ['heritage', 'feat', 'equipment', 'weapon'])\r\n\r\n    for (const item of items) {\r\n        const sourceId = getSourceId<ItemUUID>(item)\r\n\r\n        if (!sourceId || (item.isOfType('equipment') && item.isInvested === false)) continue\r\n\r\n        const entry = UUIDS.get(sourceId)\r\n        if (!entry) continue\r\n\r\n        const { category, index, type } = entry\r\n        categories[category] ??= { category, type, label: '', items: [] }\r\n        categories[category].items[index] = item\r\n        if (index === 0) {\r\n            const key = `label.${category}`\r\n            const label = hasLocalization(key) ? localize(key) : item.name\r\n            categories[category].label = label\r\n        }\r\n    }\r\n\r\n    return Object.values(categories).filter(x => x.items[0]) as ReturnedCategory[]\r\n}\r\n\r\nexport function isCategory<N extends CategoryType, C extends Category = ExtractedCategory<N>>(\r\n    object: ReturnedCategory,\r\n    category: N\r\n): object is ReturnedCategory<C> {\r\n    return object.type === category\r\n}\r\n","export const WEAPON_GROUPS = {\r\n    slashing: 'sword',\r\n    piercing: 'spear',\r\n    bludgeoning: 'club',\r\n} as const\r\n\r\nexport const WEAPON_DAMAGE_TYPES = Object.keys(WEAPON_GROUPS) as MindSmithDamageType[]\r\n\r\nexport const WEAPON_BASE_TYPES = {\r\n    '0': { die: 'd4', traits: ['finesse', 'agile'], usage: 'held-in-one-hand' },\r\n    '1': { die: 'd6', traits: ['finesse'], usage: 'held-in-one-hand' },\r\n    '2': { die: 'd8', traits: [], usage: 'held-in-one-hand' },\r\n    '3': { die: 'd10', traits: ['reach'], usage: 'held-in-two-hands' },\r\n} as const\r\n\r\nexport const WEAPON_TRAITS = ['grapple', 'nonlethal', 'shove', 'trip', 'modular'] as const\r\n\r\nexport const WEAPON_RUNES = ['corrosive', 'disrupting', 'flaming', 'frost', 'shock', 'thundering'] as const\r\n\r\nexport const WEAPON_GREATER_RUNES = [\r\n    'anarchic',\r\n    'axiomatic',\r\n    'greaterCorrosive',\r\n    'greaterDisrupting',\r\n    'greaterFlaming',\r\n    'greaterFrost',\r\n    'greaterShock',\r\n    'greaterThundering',\r\n    'holy',\r\n    'unholy',\r\n] as const\r\n\r\nexport const RUNE_PROPERTY_KEYS = ['propertyRune1', 'propertyRune2', 'propertyRune3', 'propertyRune4'] as const\r\n\r\nexport function getFreePropertySlot(\r\n    weapon: WeaponPF2e\r\n): null | 'propertyRune1' | 'propertyRune2' | 'propertyRune3' | 'propertyRune4' {\r\n    const potency = weapon.system.potencyRune.value\r\n    if (potency === null) return null\r\n\r\n    for (let i = 0; i < potency; i++) {\r\n        const property = RUNE_PROPERTY_KEYS[i]\r\n        if (!weapon.system[property].value) return property\r\n    }\r\n\r\n    return null\r\n}\r\n\r\nexport function runetoLabel(rune: MindSmithWeaponAllRunes | '') {\r\n    return rune.replace('greater', 'greater ') as MindSmithWeaponAllRunes\r\n}\r\n\r\nexport function labelToRune(label: string) {\r\n    return label.replace('greater ', 'greater') as MindSmithWeaponAllRunes\r\n}\r\n","import { MODULE_ID } from '@utils/module'\r\n\r\nexport function getSettingLocalizationPath(...path: string[]) {\r\n    return `${MODULE_ID}.settings.${path.join('.')}`\r\n}\r\n\r\nexport function flagsUpdatePath(...path: string[]) {\r\n    return `flags.${MODULE_ID}.${path.join('/')}`\r\n}\r\n\r\nexport function templatePath(...path: string[]) {\r\n    path = path.filter(x => typeof x === 'string')\r\n    return `modules/${MODULE_ID}/templates/${path.join('/')}`\r\n}\r\n\r\nexport function imagePath(...path: string[]) {\r\n    return `modules/${MODULE_ID}/images/${path.join('/')}`\r\n}\r\n","export function getHighestSpellSlot(actor: ActorPF2e) {\r\n    let maxSlot = 0\r\n    for (const entry of actor.spellcasting) {\r\n        if (entry.flags['pf2e-staves']) continue // we skip staff entries\r\n        const slots = entry.system.slots\r\n        for (const key in slots) {\r\n            const slot = slots[key as SlotKey]\r\n            if (slot.max) maxSlot = Math.max(maxSlot, Number(key.slice(4)))\r\n        }\r\n    }\r\n    return maxSlot as ZeroToEleven\r\n}\r\n\r\nexport const PROFICIENCY_RANKS = ['untrained', 'trained', 'expert', 'master', 'legendary'] as const\r\n","export const SKILL_DICTIONARY = {\r\n    acr: 'acrobatics',\r\n    arc: 'arcana',\r\n    ath: 'athletics',\r\n    cra: 'crafting',\r\n    dec: 'deception',\r\n    dip: 'diplomacy',\r\n    itm: 'intimidation',\r\n    med: 'medicine',\r\n    nat: 'nature',\r\n    occ: 'occultism',\r\n    prf: 'performance',\r\n    rel: 'religion',\r\n    soc: 'society',\r\n    ste: 'stealth',\r\n    sur: 'survival',\r\n    thi: 'thievery',\r\n} as const\r\n\r\nexport const SKILL_ABBREVIATIONS = Object.keys(SKILL_DICTIONARY) as (keyof typeof SKILL_DICTIONARY)[]\r\n\r\nexport const SKILL_LONG_FORMS = Object.values(SKILL_DICTIONARY)\r\n","export function cleanSplit(str: string | undefined) {\r\n    if (!str) return []\r\n    return str\r\n        .split(',')\r\n        .map(x => x.trim())\r\n        .filter(x => x)\r\n}\r\n\r\nexport function capitalize(str?: string) {\r\n    if (!str) return ''\r\n    return str[0].toUpperCase() + str.slice(1)\r\n}\r\n","export function chatUUID(uuid: string, name?: string) {\r\n    if (name) return `@UUID[${uuid}]{${name}}`\r\n    return `@UUID[${uuid}]`\r\n}\r\n\r\nexport function fakeChatUUID(name: string) {\r\n    return `<span style=\"background: #DDD;\r\n    padding: 1px 4px;\r\n    border: 1px solid var(--color-border-dark-tertiary);\r\n    border-radius: 2px;\r\n    white-space: nowrap;\r\n    word-break: break-all;\">${name}</span>`\r\n}\r\n","import { chatUUID } from '@utils/foundry/uuid'\r\n\r\nexport const MAGIC_TRADITIONS = new Set(['arcane', 'divine', 'occult', 'primal'] as const)\r\n\r\nexport const SPELL_COMPONENTS = ['focus', 'material', 'somatic', 'verbal'] as const\r\n\r\nconst scrolls: (ConsumablePF2e | null)[] = []\r\nexport async function createSpellScroll(uuid: ItemUUID, level: OneToTen | false, temp = false) {\r\n    const spell = (await fromUuid<SpellPF2e>(uuid))?.toObject()\r\n    if (!spell) return null\r\n\r\n    if (level === false) level = spell.system.level.value\r\n\r\n    const scrollUUID = getScrollCompendiumUUID(level)\r\n    scrolls[level] ??= await fromUuid<ConsumablePF2e>(scrollUUID)\r\n\r\n    const scroll = scrolls[level]?.toObject()\r\n    if (!scroll) return null\r\n\r\n    spell.system.location.heightenedLevel = level\r\n\r\n    scroll.name = `Scroll of ${spell.name} (Level ${level})`\r\n    scroll.system.temporary = temp\r\n    scroll.system.spell = spell\r\n    scroll.system.traits.value.push(...spell.system.traditions.value)\r\n\r\n    const sourceId = spell.flags.core?.sourceId\r\n    if (sourceId) scroll.system.description.value = `${chatUUID(sourceId)}\\n<hr />${scroll.system.description.value}`\r\n\r\n    return scroll\r\n}\r\n\r\nfunction getScrollCompendiumUUID(level: OneToTen): ItemUUID {\r\n    return `Compendium.pf2e.equipment-srd.${scrollCompendiumIds[level]}`\r\n}\r\n\r\nconst scrollCompendiumIds: Record<number, string> = {\r\n    1: 'RjuupS9xyXDLgyIr', // Compendium.pf2e.equipment-srd.RjuupS9xyXDLgyIr\r\n    2: 'Y7UD64foDbDMV9sx',\r\n    3: 'ZmefGBXGJF3CFDbn',\r\n    4: 'QSQZJ5BC3DeHv153',\r\n    5: 'tjLvRWklAylFhBHQ',\r\n    6: '4sGIy77COooxhQuC',\r\n    7: 'fomEZZ4MxVVK3uVu',\r\n    8: 'iPki3yuoucnj7bIt',\r\n    9: 'cFHomF3tty8Wi1e5',\r\n    10: 'o1XIHJ4MJyroAHfF',\r\n}\r\n","import { getFreePropertySlot, labelToRune, WEAPON_GROUPS } from '@data/weapon'\r\nimport { getCategoryUUIDS, getRuleItems, RULE_TYPES } from '@src/categories'\r\nimport { getFlag, hasSourceId, setFlag } from '@utils/foundry/flags'\r\nimport { findItemWithSourceId } from '@utils/foundry/item'\r\nimport { hasLocalization, localize, subLocalize } from '@utils/foundry/localize'\r\nimport { chatUUID } from '@utils/foundry/uuid'\r\nimport { MODULE_ID } from '@utils/module'\r\nimport { PROFICIENCY_RANKS } from '@utils/pf2e/actor'\r\nimport { createSpellScroll } from '@utils/pf2e/spell'\r\nimport { sluggify } from '@utils/pf2e/utils'\r\nimport { capitalize } from '@utils/string'\r\n\r\nconst msg = subLocalize('interface.message')\r\n\r\ntype ReturnedMessage = { uuid?: ItemUUID; selected?: string; label?: string; random?: boolean }\r\n\r\nexport async function accept(html: JQuery, actor: CharacterPF2e) {\r\n    let message = ''\r\n    const flags = {} as SavedCategories\r\n    const fields = html.find('.window-content .content').find('input:not(.alert), select[data-type]').toArray() as TemplateField[]\r\n    const ruleItems = fields.some(field => RULE_TYPES.includes(field.dataset.type as RulesName)) ? getRuleItems(actor) : []\r\n    const addData: Partial<BaseItemSourcePF2e>[] = []\r\n    const updateData: EmbeddedDocumentUpdateData<ItemPF2e>[] = []\r\n    const rulesToAdd: Map<string, RuleElementSource[]> = new Map()\r\n\r\n    const getRules = (item: ItemPF2e) => {\r\n        const id = item.id\r\n        const existing = rulesToAdd.get(id)\r\n        if (existing) return existing\r\n\r\n        const rules = deepClone(item._source.system.rules)\r\n\r\n        for (let i = rules.length - 1; i >= 0; i--) {\r\n            const rule = rules[i]\r\n            if (MODULE_ID in rule) rules.splice(i, 1)\r\n        }\r\n\r\n        rulesToAdd.set(id, rules)\r\n        return rules\r\n    }\r\n\r\n    const messages = {\r\n        languages: [] as ReturnedMessage[],\r\n        skills: [] as ReturnedMessage[],\r\n        tome: [] as ReturnedMessage[],\r\n        resistances: [] as ReturnedMessage[],\r\n        feats: [] as ReturnedMessage[],\r\n        scrolls: [] as ReturnedMessage[],\r\n        spells: [] as ReturnedMessage[],\r\n        mind: [] as ReturnedMessage[],\r\n    }\r\n\r\n    for (const field of fields) {\r\n        const type = field.dataset.type\r\n\r\n        if (type === 'scrollChain' || type === 'scrollSavant') {\r\n            const { uuid, category } = field.dataset\r\n            const level = Number(field.dataset.level) as OneToTen\r\n            const name = field.value\r\n\r\n            const scroll = await createSpellScroll(uuid, level, true)\r\n            if (scroll) addData.push(scroll)\r\n\r\n            flags[category] ??= []\r\n            flags[category]!.push({ name, uuid })\r\n        } else if (type === 'combatFlexibility') {\r\n            const { category, uuid, level } = field.dataset\r\n            const name = field.value\r\n            const index = level === '8' ? 0 : 1\r\n            const parentUUID = getCategoryUUIDS(category)[index]\r\n\r\n            if (parentUUID) {\r\n                const parent = findItemWithSourceId<CharacterPF2e, FeatPF2e>(actor, parentUUID, ['feat'])\r\n                if (parent) {\r\n                    const feat = await createTemporaryFeat(uuid, parent)\r\n                    if (feat) addData.push(feat)\r\n                }\r\n            }\r\n\r\n            flags[category] ??= []\r\n            flags[category]!.push({ name, uuid })\r\n        } else if (type === 'trainedLore') {\r\n            const category = field.dataset.category\r\n            const uuid = getCategoryUUIDS(category)[0]\r\n            const selected = field.value\r\n\r\n            const lore = createTemporaryLore(selected, 1)\r\n            addData.push(lore)\r\n            messages.skills.push({ uuid, selected, label: category })\r\n\r\n            flags[category] = selected\r\n        } else if (type === 'tricksterAce') {\r\n            const { category, uuid } = field.dataset\r\n            const name = field.value\r\n\r\n            const entrySlug = sluggify(\"Trickster's Ace\", { camel: 'dromedary' })\r\n            const spell = await createSpellcastingSpell(uuid, 4, entrySlug)\r\n\r\n            if (spell) {\r\n                const proficiency = actor.classDC?.slug || actor.class?.slug\r\n                const entry = createSpellcastingEntry(\"Trickster's Ace\", entrySlug, proficiency)\r\n                addData.push(spell)\r\n                addData.push(entry)\r\n            }\r\n\r\n            flags[category] = { name, uuid }\r\n        } else if (type === 'trainedSkill' || type === 'thaumaturgeTome') {\r\n            const dataset = field.dataset\r\n            const category = dataset.category\r\n            const selected = field.value\r\n            const uuid = getCategoryUUIDS(category)[0]\r\n            const rank = Number(dataset.rank || '1')\r\n            const isInput = dataset.input === 'true'\r\n\r\n            if (isInput) {\r\n                const lore = createTemporaryLore(selected, rank)\r\n                addData.push(lore)\r\n            } else {\r\n                const ruleItem = ruleItems.find(item => hasSourceId(item, uuid))\r\n                if (!ruleItem) continue\r\n\r\n                const rules = getRules(ruleItem)\r\n                rules.push(createSkillRule(selected.toLowerCase(), rank))\r\n            }\r\n\r\n            const toSave = { selected: isInput ? selected : selected.toLowerCase(), input: isInput }\r\n\r\n            if (type === 'trainedSkill') {\r\n                messages.skills.push({ uuid, selected, label: category })\r\n                flags[field.dataset.category] = toSave\r\n            } else if (type === 'thaumaturgeTome') {\r\n                const category = field.dataset.category\r\n                messages.tome.push({ selected, label: PROFICIENCY_RANKS[rank] })\r\n                flags[category] ??= []\r\n                flags[category].push(toSave)\r\n            }\r\n        } else if (type === 'mindSmith') {\r\n            const { category, subcategory } = field.dataset\r\n            const uuids = getCategoryUUIDS(category)\r\n            const weapon = findItemWithSourceId<CharacterPF2e, WeaponPF2e>(actor, uuids[1], ['weapon'])\r\n            if (!weapon) continue\r\n\r\n            let value = field.value\r\n\r\n            if (subcategory === 'damage') {\r\n                const selected = field.value as MindSmithDamageType\r\n                updateData.push({ _id: weapon.id, 'system.damage.damageType': selected, 'system.group': WEAPON_GROUPS[selected] })\r\n                messages.mind.push({ selected, uuid: uuids[0], label: 'mindsmith' })\r\n            } else if (subcategory === 'trait') {\r\n                const selected = field.value as MindSmithWeaponTrait\r\n                const traits = deepClone(weapon._source.system.traits?.value ?? [])\r\n                if (!traits.includes(selected)) traits.push(selected)\r\n                updateData.push({ _id: weapon.id, 'system.traits.value': traits })\r\n                messages.mind.push({ selected, uuid: uuids[2], label: 'mentalforge' })\r\n            } else if (subcategory === 'rune') {\r\n                const propertySlot = getFreePropertySlot(weapon)\r\n                if (!propertySlot) continue\r\n\r\n                const selected = labelToRune(value)\r\n                updateData.push({ _id: weapon.id, [`system.${propertySlot}.value`]: selected })\r\n                messages.mind.push({ selected, uuid: uuids[3], label: 'runicmind' })\r\n                setFlag(actor, 'weapon.runeProperty', propertySlot)\r\n                value = selected\r\n            }\r\n\r\n            flags[category] ??= {}\r\n            flags[category]![subcategory] = value\r\n        } else {\r\n            const category = field.dataset.category\r\n            const uuid = getCategoryUUIDS(category)[0]\r\n            const ruleItem = ruleItems.find(item => hasSourceId(item, uuid))\r\n            if (!ruleItem) continue\r\n\r\n            const selected = field.value\r\n            const rules = getRules(ruleItem)\r\n\r\n            if (type === 'addedLanguage') {\r\n                rules.push(createLanguageRule(selected))\r\n                messages.languages.push({ uuid, selected, label: category })\r\n            } else if (type === 'addedResistance') {\r\n                rules.push(createResistanceRule(selected, 'half'))\r\n                messages.resistances.push({ uuid, selected, label: category })\r\n            } else if (type === 'ganziHeritage') {\r\n                const options = Array.from((field as HTMLSelectElement).options).map(x => x.value) as ResistanceType[]\r\n                const selected = await randomOptions(options)\r\n                rules.push(createResistanceRule(selected, 'half'))\r\n                messages.resistances.push({ uuid, selected, label: category, random: true })\r\n            }\r\n\r\n            // @ts-ignore\r\n            flags[category] = selected\r\n        }\r\n    }\r\n\r\n    for (const [id, rules] of rulesToAdd) {\r\n        updateData.push({ _id: id, 'system.rules': rules })\r\n    }\r\n\r\n    const pushMessages = (type: string, list: ReturnedMessage[]) => {\r\n        if (!list.length) return\r\n\r\n        if (message) message += '<hr />'\r\n\r\n        const title = msg.has(type) ? msg(type) : msg('gained', { type })\r\n        message += `<p><strong>${title}</strong></p>`\r\n\r\n        for (let { uuid, selected, label, random = false } of list) {\r\n            label = label && hasLocalization(`label.${label}`) ? localize(`label.${label}`) : label\r\n            label = capitalize(label)\r\n\r\n            message += '<p>'\r\n            message += uuid ? `${chatUUID(uuid, label)}` : `<strong>${label}</strong>`\r\n\r\n            if (selected) message += ` <span style=\"text-transform: capitalize;\">${selected}</span>`\r\n            if (random) message += ' <i class=\"fa-solid fa-dice-d20\"></i>'\r\n            message += '</p>'\r\n        }\r\n    }\r\n\r\n    if (addData.length) {\r\n        const items = (await actor.createEmbeddedDocuments('Item', addData)) as ItemPF2e[]\r\n        for (const item of items) {\r\n            const uuid = item.uuid\r\n\r\n            if (item.type === 'feat') messages.feats.push({ uuid })\r\n            else if (item.type === 'consumable') messages.scrolls.push({ uuid })\r\n            // we populate the spellcasting entries with the spells\r\n            else if (item.type === 'spellcastingEntry') {\r\n                const slug = item.slug\r\n                const spells = items.filter(x => x.type === 'spell' && getFlag(x, 'parent') === slug) as SpellPF2e[]\r\n                for (const spell of spells) {\r\n                    const level = getFlag(spell, 'level')\r\n                    updateData.push({ _id: spell.id, 'system.location.value': item.id, 'system.location.heightenedLevel': level })\r\n                    messages.spells.push({ uuid: spell.uuid })\r\n                }\r\n            }\r\n\r\n            // we add a flag to the parent feat to have the cascade effect in the tab\r\n            const parentId = item.getFlag<string>('pf2e', 'grantedBy.id')\r\n            if (parentId) {\r\n                const slug = sluggify(item.name, { camel: 'dromedary' })\r\n                const path = `flags.pf2e.itemGrants.${slug}`\r\n                updateData.push({ _id: parentId, [path]: { id: item.id, onDelete: 'detach' } })\r\n            }\r\n        }\r\n    }\r\n\r\n    pushMessages('languages', messages.languages)\r\n    pushMessages('skills', messages.skills)\r\n    pushMessages('tome', messages.tome)\r\n    pushMessages('mindsmith', messages.mind)\r\n    pushMessages('resistances', messages.resistances)\r\n    pushMessages('feats', messages.feats)\r\n    pushMessages('spells', messages.spells)\r\n    pushMessages('scrolls', messages.scrolls)\r\n\r\n    if (updateData.length) await actor.updateEmbeddedDocuments('Item', updateData)\r\n\r\n    await setFlag(actor, 'saved', flags)\r\n\r\n    message = `${msg('changes')}<hr>${message}`\r\n    ChatMessage.create({ content: message, speaker: ChatMessage.getSpeaker({ actor }) })\r\n}\r\n\r\nasync function randomOptions<T extends string>(options: T[]) {\r\n    const roll = (await new Roll(`1d${options.length}`).evaluate({ async: true })).total\r\n    return options[roll - 1]\r\n}\r\n\r\nfunction createTemporaryLore(name: string, rank: number) {\r\n    const data: Partial<BaseItemSourcePF2e> = {\r\n        type: 'lore',\r\n        img: 'systems/pf2e/icons/default-icons/lore.svg',\r\n        name: name,\r\n        flags: {\r\n            [MODULE_ID]: { temporary: true },\r\n        },\r\n    }\r\n\r\n    setProperty(data, 'system.proficient.value', rank)\r\n\r\n    return data\r\n}\r\n\r\nasync function createTemporaryFeat(uuid: ItemUUID, parent: FeatPF2e) {\r\n    const feat = (await fromUuid<FeatPF2e>(uuid))?.toObject()\r\n    if (!feat) return\r\n\r\n    setProperty(feat, 'flags.pf2e.grantedBy', { id: parent.id, onDelete: 'cascade' })\r\n    setProperty(feat, `flags.${MODULE_ID}.temporary`, true)\r\n\r\n    return feat\r\n}\r\n\r\nfunction createLanguageRule(language: string) {\r\n    return {\r\n        key: 'ActiveEffectLike',\r\n        mode: 'add',\r\n        path: 'system.traits.languages.value',\r\n        value: language,\r\n        [MODULE_ID]: true,\r\n    } as const\r\n}\r\n\r\nfunction createSkillRule(skill: string, rank: number) {\r\n    return {\r\n        key: 'ActiveEffectLike',\r\n        mode: 'upgrade',\r\n        path: `system.skills.${skill}.rank`,\r\n        value: Number(rank),\r\n        [MODULE_ID]: true,\r\n    } as const\r\n}\r\n\r\nfunction createResistanceRule(type: string, value: number | string | 'half') {\r\n    if (value === 'half') value = 'max(1,floor(@actor.level/2))'\r\n    return {\r\n        key: 'Resistance',\r\n        type,\r\n        value,\r\n        [MODULE_ID]: true,\r\n    } as const\r\n}\r\n\r\nasync function createSpellcastingSpell(uuid: ItemUUID, level: OneToTen, entry: string) {\r\n    const spell = (await fromUuid<SpellPF2e>(uuid))?.toObject()\r\n    if (!spell) return\r\n\r\n    setProperty(spell, `flags.${MODULE_ID}`, { parent: entry, level })\r\n\r\n    return spell\r\n}\r\n\r\nfunction createSpellcastingEntry(name: string, slug: string, proficiency: string | undefined | null) {\r\n    const entry: Partial<BaseItemSourcePF2e> = {\r\n        type: 'spellcastingEntry',\r\n        img: 'systems/pf2e/icons/default-icons/spellcastingEntry.svg',\r\n        name,\r\n        flags: {\r\n            [MODULE_ID]: { temporary: true },\r\n        },\r\n    }\r\n\r\n    setProperty(entry, 'system', {\r\n        slug,\r\n        prepared: { value: 'innate' },\r\n        showSlotlessLevels: { value: false },\r\n        showUnpreparedSpells: { value: false },\r\n        proficiency: { value: 1, slug: proficiency },\r\n    })\r\n\r\n    return entry\r\n}\r\n","import { DailiesInterface } from '@apps/interface'\r\nimport { getCategoryUUIDS } from '@src/categories'\r\nimport { subLocalize } from '@utils/foundry/localize'\r\nimport { WEAPON_BASE_TYPES } from '@data/weapon'\r\n\r\nconst localize = subLocalize('dialog')\r\n\r\nexport async function onAlert(this: DailiesInterface, event: JQuery.ClickEvent) {\r\n    event.preventDefault()\r\n\r\n    const input = event.currentTarget.previousElementSibling as BaseTemplateField\r\n    const { type } = input.dataset\r\n\r\n    if (type === 'mindSmith') {\r\n        onWeaponAlert.call(this)\r\n    }\r\n}\r\n\r\nasync function onWeaponAlert(this: DailiesInterface) {\r\n    let content = localize('weapon.flavor')\r\n    content += '<hr />'\r\n\r\n    for (const key of ['0', '1', '2', '3']) {\r\n        const label = localize(`weapon.option.${key}`)\r\n        content += `<label><input type=\"radio\" name=\"type\" value=\"${key}\">${label}</label>`\r\n    }\r\n\r\n    await Dialog.wait(\r\n        {\r\n            title: localize('weapon.title'),\r\n            content,\r\n            buttons: {\r\n                yes: {\r\n                    icon: '<i class=\"fas fa-save\"></i>',\r\n                    label: localize('weapon.accept'),\r\n                    callback: onWeaponSelected.bind(this),\r\n                },\r\n                no: {\r\n                    icon: '<i class=\"fas fa-times\"></i>',\r\n                    label: localize('weapon.cancel'),\r\n                },\r\n            },\r\n            close: () => false,\r\n        },\r\n        {},\r\n        { id: 'pf2e-dailies-weapon', width: 600 }\r\n    )\r\n}\r\n\r\nasync function onWeaponSelected(this: DailiesInterface, html: JQuery) {\r\n    const selection = html.find('[name=type]:checked').val() as keyof typeof WEAPON_BASE_TYPES\r\n    if (!selection) return localize.warn('weapon.error.noSelection')\r\n\r\n    const uuid = getCategoryUUIDS('mindsmith')[1]\r\n    const weapon = (await fromUuid<WeaponPF2e>(uuid))?.toObject()\r\n    if (!weapon) return localize.warn('weapon.error.missing')\r\n\r\n    const stats = WEAPON_BASE_TYPES[selection]\r\n\r\n    setProperty(weapon, 'system.damage.die', stats.die)\r\n    setProperty(weapon, 'system.traits.value', stats.traits.slice())\r\n    setProperty(weapon, 'system.usage.value', stats.usage)\r\n\r\n    await this.actor.createEmbeddedDocuments('Item', [weapon])\r\n\r\n    this.render()\r\n}\r\n","export const LANGUAGE_LIST = [\r\n    'common',\r\n    'draconic',\r\n    'dwarven',\r\n    'elven',\r\n    'gnomish',\r\n    'goblin',\r\n    'halfling',\r\n    'jotun',\r\n    'orcish',\r\n    'sylvan',\r\n    'undercommon',\r\n    'ysoki',\r\n    'abyssal',\r\n    'adlet',\r\n    'aklo',\r\n    'akitonian',\r\n    'alghollthu',\r\n    'amurrun',\r\n    'anadi',\r\n    'ancient-osiriani',\r\n    'anugobu',\r\n    'arcadian',\r\n    'aquan',\r\n    'arboreal',\r\n    'auran',\r\n    'boggard',\r\n    'calda',\r\n    'caligni',\r\n    'celestial',\r\n    'cyclops',\r\n    'daemonic',\r\n    'destrachan',\r\n    'drooni',\r\n    'dziriak',\r\n    'ekujae',\r\n    'erutaki',\r\n    'formian',\r\n    'garundi',\r\n    'girtablilu',\r\n    'gnoll',\r\n    'goloma',\r\n    'grippli',\r\n    'hallit',\r\n    'hwan',\r\n    'iblydan',\r\n    'ignan',\r\n    'ikeshti',\r\n    'immolis',\r\n    'infernal',\r\n    'iruxi',\r\n    'jistkan',\r\n    'jyoti',\r\n    'kaava',\r\n    'kashrishi',\r\n    'kibwani',\r\n    'kitsune',\r\n    'kelish',\r\n    'lirgeni',\r\n    'mahwek',\r\n    'minaten',\r\n    'minkaian',\r\n    'mwangi',\r\n    'mzunu',\r\n    'nagaji',\r\n    'necril',\r\n    'ocotan',\r\n    'okaiyan',\r\n    'osiriani',\r\n    'protean',\r\n    'rasu',\r\n    'ratajin',\r\n    'razatlani',\r\n    'requian',\r\n    'russian',\r\n    'senzar',\r\n    'shadowtongue',\r\n    'shobhad',\r\n    'shisk',\r\n    'shoanti',\r\n    'shoony',\r\n    'skald',\r\n    'sphinx',\r\n    'strix',\r\n    'taldane',\r\n    'tekritanin',\r\n    'tengu',\r\n    'terran',\r\n    'thassilonian',\r\n    'tien',\r\n    'utopian',\r\n    'vanara',\r\n    'varisian',\r\n    'varki',\r\n    'vishkanyan',\r\n    'vudrani',\r\n    'wyrwood',\r\n    'xanmba',\r\n    'androffan',\r\n    'azlanti',\r\n    'grioth',\r\n    'kovintal',\r\n    'migo',\r\n    'munavri',\r\n    'samsaran',\r\n    'sasquatch',\r\n    'shae',\r\n    'yithian',\r\n    'druidic',\r\n] as const\r\n","import {\r\n    getFreePropertySlot,\r\n    runetoLabel,\r\n    WEAPON_DAMAGE_TYPES,\r\n    WEAPON_GREATER_RUNES,\r\n    WEAPON_RUNES,\r\n    WEAPON_TRAITS,\r\n} from '@data/weapon'\r\nimport { hasCategories, isCategory } from '@src/categories'\r\nimport { getFlag } from '@utils/foundry/flags'\r\nimport { localize } from '@utils/foundry/localize'\r\nimport { PROFICIENCY_RANKS } from '@utils/pf2e/actor'\r\nimport { LANGUAGE_LIST } from '@utils/pf2e/languages'\r\nimport { SKILL_LONG_FORMS } from '@utils/pf2e/skills'\r\nimport { capitalize } from '@utils/string'\r\n\r\nconst FOUR_ELEMENTS = ['air', 'earth', 'fire', 'water'] as const\r\nconst GANZI_RESISTANCES = ['acid', 'electricity', 'sonic'] as const\r\n\r\nconst sortOrder = new Proxy(\r\n    {\r\n        addedLanguage: 0,\r\n        trainedSkill: 1,\r\n        addedResistance: 2,\r\n        trainedLore: 3,\r\n    } as Partial<Record<CategoryType | symbol, number>>,\r\n    {\r\n        get(obj, prop) {\r\n            return prop in obj ? obj[prop as CategoryType] : 99\r\n        },\r\n    }\r\n) as Record<CategoryType, number>\r\n\r\nexport function getData(actor: CharacterPF2e) {\r\n    const actorLevel = actor.level\r\n    const flags = (getFlag(actor, 'saved') ?? {}) as SavedCategories\r\n    const categories = hasCategories(actor)\r\n    const templates: BaseCategoryTemplate[] = []\r\n\r\n    for (const entry of categories) {\r\n        if (isCategory(entry, 'scrollChain')) {\r\n            const { type, category, label, items } = entry\r\n            const slots: DropTemplate[] = []\r\n\r\n            const spellSlot = (level: OneToTen) => {\r\n                const { name = '', uuid = '' } = flags[category]?.[level - 1] ?? {}\r\n                slots.push({ type: 'drop', level, name, uuid, label: game.i18n.localize(`PF2E.SpellLevel${level}`) })\r\n            }\r\n\r\n            // first feat\r\n            spellSlot(1)\r\n            if (actorLevel >= 8) spellSlot(2)\r\n\r\n            // second feat\r\n            if (items[1]) {\r\n                spellSlot(3)\r\n                if (actorLevel >= 14) spellSlot(4)\r\n                if (actorLevel >= 16) spellSlot(5)\r\n            }\r\n\r\n            // third feat\r\n            if (items[2]) {\r\n                spellSlot(6)\r\n                if (actorLevel >= 20) spellSlot(7)\r\n            }\r\n\r\n            const template: ScrollChainTemplate = { type, category, label, rows: slots }\r\n            templates.push(template)\r\n        } else if (isCategory(entry, 'scrollSavant')) {\r\n            const { maxSlot, maxTradition } = getSpellcastingDetails(actor, 'arcane')\r\n            if (maxSlot < 4) continue\r\n\r\n            const { type, category, label } = entry\r\n            const slots: DropTemplate[] = []\r\n            const spellSlot = (index: number, level: number): DropTemplate => {\r\n                const { name, uuid } = flags[category]?.[index] ?? { name: '', uuid: '' }\r\n                return { type: 'drop', level, name, uuid, label: game.i18n.localize(`PF2E.SpellLevel${level}`) }\r\n            }\r\n\r\n            // legendary arcane\r\n            if (maxTradition >= 4 && maxSlot >= 6) slots.push(spellSlot(3, maxSlot - 5))\r\n\r\n            // master arcane\r\n            if (maxTradition >= 3 && maxSlot >= 5) slots.push(spellSlot(2, maxSlot - 4))\r\n\r\n            // no proficiency\r\n            slots.push(spellSlot(1, maxSlot - 3))\r\n            slots.push(spellSlot(0, maxSlot - 2))\r\n\r\n            const template: ScrollSavantTemplate = { type, category, label, rows: slots }\r\n            templates.push(template)\r\n        } else if (isCategory(entry, 'trainedSkill')) {\r\n            const options = SKILL_LONG_FORMS.filter(x => actor.skills[x]!.rank! < 1)\r\n            if (!options.length) continue\r\n\r\n            const { type, category, label } = entry\r\n            let { selected = '', input = true } = flags[category] ?? {}\r\n\r\n            if (selected && !input && !options.includes(selected as SkillLongForm)) {\r\n                selected = ''\r\n                input = true\r\n            }\r\n\r\n            const template: TrainedSkillTemplate = {\r\n                type,\r\n                category,\r\n                label,\r\n                rows: [{ type: 'combo', options, selected: input ? selected : capitalize(selected), input }],\r\n            }\r\n            templates.push(template)\r\n        } else if (isCategory(entry, 'thaumaturgeTome')) {\r\n            const { type, category, label, items } = entry\r\n            const slots: ThaumaturgeTomeTemplate['rows'] = []\r\n            const actorSkills = actor.skills as Record<SkillLongForm, { rank: OneToFour }>\r\n\r\n            const skillSlot = (index: number, rank: OneToFour, options: SkillLongForm[]) => {\r\n                let { selected = '', input = true } = flags[category]?.[index] ?? {}\r\n\r\n                if (selected && !input && !options.includes(selected as SkillLongForm)) {\r\n                    selected = ''\r\n                    input = true\r\n                }\r\n\r\n                slots.push({\r\n                    type: 'combo',\r\n                    label: PROFICIENCY_RANKS[rank],\r\n                    options,\r\n                    selected: input ? selected : capitalize(selected),\r\n                    rank,\r\n                    input,\r\n                })\r\n            }\r\n\r\n            const isTomeSelected = (index: number, option: 'adept' | 'paragon' = 'adept') => {\r\n                const item = items[index]\r\n                return item ? getRuleSelection(item, option) === 'tome' : false\r\n            }\r\n\r\n            // Implement Paragon\r\n            if (isTomeSelected(4, 'paragon')) {\r\n                const skills = SKILL_LONG_FORMS.filter(x => actorSkills[x].rank < 4)\r\n                if (!skills.length) continue\r\n\r\n                skillSlot(0, 4, skills)\r\n                skillSlot(1, 4, skills)\r\n            }\r\n            // Intense Implement or Second Adept or Implement Adept\r\n            else if (items[3] || isTomeSelected(2) || isTomeSelected(1)) {\r\n                const masters = SKILL_LONG_FORMS.filter(x => actorSkills[x].rank < 3)\r\n\r\n                if (actorLevel >= 9) {\r\n                    if (!masters.length) continue\r\n                    skillSlot(0, 3, masters)\r\n                    skillSlot(1, 3, masters)\r\n                } else {\r\n                    const experts = SKILL_LONG_FORMS.filter(x => actorSkills[x].rank < 2)\r\n                    if (!experts.length) continue\r\n                    skillSlot(0, 2, experts)\r\n                    if (masters.length) skillSlot(1, 3, masters)\r\n                }\r\n            } else {\r\n                if (actorLevel >= 5) {\r\n                    const experts = SKILL_LONG_FORMS.filter(x => actorSkills[x].rank < 2)\r\n                    if (!experts.length) continue\r\n\r\n                    skillSlot(0, 2, experts)\r\n                    skillSlot(1, 2, experts)\r\n                } else if (actorLevel >= 3) {\r\n                    const trained = SKILL_LONG_FORMS.filter(x => actorSkills[x].rank < 1)\r\n                    if (!trained.length) continue\r\n\r\n                    skillSlot(0, 1, trained)\r\n\r\n                    const experts = SKILL_LONG_FORMS.filter(x => actorSkills[x].rank < 2)\r\n                    if (experts.length) skillSlot(1, 2, experts)\r\n                } else {\r\n                    const trained = SKILL_LONG_FORMS.filter(x => actorSkills[x].rank < 1)\r\n                    if (!trained.length) continue\r\n\r\n                    skillSlot(0, 1, trained)\r\n                    skillSlot(1, 1, trained)\r\n                }\r\n            }\r\n            const template: ThaumaturgeTomeTemplate = {\r\n                type,\r\n                category,\r\n                label,\r\n                rows: slots,\r\n            }\r\n            templates.push(template)\r\n        } else if (isCategory(entry, 'trainedLore')) {\r\n            const { type, category, label } = entry\r\n            const selected = flags[category] ?? ''\r\n            const template: TrainedLoreTemplate = {\r\n                type,\r\n                category,\r\n                label,\r\n                rows: [{ type: 'input', selected, placeholder: game.i18n.localize('PF2E.NewPlaceholders.Lore') }],\r\n            }\r\n            templates.push(template)\r\n        } else if (isCategory(entry, 'addedLanguage')) {\r\n            const actorLanguages = actor.system.traits.languages.value\r\n            const options = LANGUAGE_LIST.filter(x => !actorLanguages.includes(x)).sort()\r\n            if (!options.length) continue\r\n\r\n            const { type, category, label } = entry\r\n            const selected = flags[category] ?? ''\r\n\r\n            const template: AddedLanguageTemplate = {\r\n                type,\r\n                category,\r\n                label,\r\n                rows: [{ type: 'select', options, selected }],\r\n            }\r\n            templates.push(template)\r\n        } else if (isCategory(entry, 'addedResistance')) {\r\n            const { type, category, label } = entry\r\n            const selected = flags[category] ?? ''\r\n            const template: AddedResistanceTemplate = {\r\n                type,\r\n                category,\r\n                label,\r\n                rows: [{ type: 'select', options: FOUR_ELEMENTS, selected }],\r\n            }\r\n            templates.push(template)\r\n        } else if (isCategory(entry, 'combatFlexibility')) {\r\n            const { type, category, label, items } = entry\r\n            const selected = flags[category] ?? []\r\n            // first feat\r\n            const slots: DropTemplate[] = [\r\n                {\r\n                    type: 'drop',\r\n                    label: game.i18n.localize(`PF2E.Level8`),\r\n                    name: selected[0]?.name ?? '',\r\n                    uuid: selected[0]?.uuid ?? '',\r\n                    level: 8,\r\n                },\r\n            ]\r\n            // second feat\r\n            if (items[1])\r\n                slots.push({\r\n                    type: 'drop',\r\n                    label: game.i18n.localize(`PF2E.Level14`),\r\n                    name: selected[1]?.name ?? '',\r\n                    uuid: selected[1]?.uuid ?? '',\r\n                    level: 14,\r\n                })\r\n            const template: CombatFlexibilityTemplate = { type, category, label, rows: slots }\r\n            templates.push(template)\r\n        } else if (isCategory(entry, 'tricksterAce')) {\r\n            const { type, category, label } = entry\r\n            const { name = '', uuid = '' } = flags[category] ?? {}\r\n            const template: TricksterAceTemplate = {\r\n                type,\r\n                category,\r\n                label,\r\n                rows: [{ type: 'drop', level: 4, name, uuid }],\r\n            }\r\n            templates.push(template)\r\n        } else if (isCategory(entry, 'ganziHeritage')) {\r\n            const { type, category, label } = entry\r\n            const template: GanziHeritageTemplate = {\r\n                type,\r\n                category,\r\n                label,\r\n                rows: [{ type: 'random', options: GANZI_RESISTANCES }],\r\n            }\r\n            templates.push(template)\r\n        } else if (isCategory(entry, 'mindSmith')) {\r\n            const { type, category, label, items } = entry\r\n\r\n            const template: MindSmithTemplate = {\r\n                type,\r\n                category,\r\n                label,\r\n                rows: [{ type: 'alert', message: 'Missing Mind Weapon' }],\r\n            }\r\n            templates.push(template)\r\n\r\n            // we missing the weapon\r\n            if (!items[1]) continue\r\n\r\n            template.rows[0] = {\r\n                type: 'select',\r\n                options: WEAPON_DAMAGE_TYPES,\r\n                selected: flags[category]?.damage ?? '',\r\n                subcategory: 'damage',\r\n                label,\r\n            }\r\n\r\n            // Malleable Mental Forge\r\n            if (items[2]) {\r\n                template.rows[1] = {\r\n                    type: 'select',\r\n                    options: WEAPON_TRAITS,\r\n                    selected: flags[category]?.trait ?? '',\r\n                    subcategory: 'trait',\r\n                    label: localize('label.mentalforge'),\r\n                }\r\n            }\r\n\r\n            // we don't have the next feats\r\n            if (!items[3] && !items[4]) continue\r\n\r\n            const weapon = items[1] as WeaponPF2e\r\n\r\n            // the weapon doesn't have any free property rune slot\r\n            if (!getFreePropertySlot(weapon)) continue\r\n\r\n            const runes = (items[4] ? WEAPON_GREATER_RUNES : WEAPON_RUNES) as readonly MindSmithWeaponAllRunes[]\r\n            const selected = flags[category]?.rune ?? ''\r\n\r\n            template.rows[2] = {\r\n                type: 'select',\r\n                options: runes.map(x => runetoLabel(x)),\r\n                selected: runetoLabel(selected && runes.includes(selected) ? selected : ''),\r\n                subcategory: 'rune',\r\n                label: localize('label.runicmind'),\r\n            }\r\n        }\r\n    }\r\n\r\n    const rows: BaseCategoryTemplate[] = []\r\n    const groups: BaseCategoryTemplate[] = []\r\n    for (const template of templates) {\r\n        if (template.rows.length > 1) groups.push(template)\r\n        else rows.push(template)\r\n    }\r\n\r\n    rows.sort((a, b) => sortOrder[a.type] - sortOrder[b.type])\r\n    groups.sort((a, b) => a.rows.length - b.rows.length)\r\n\r\n    return { rows, groups }\r\n}\r\n\r\nfunction getRuleSelection<T extends unknown>(item: ItemPF2e, option: string) {\r\n    const rules = item._source.system.rules as ChoiceSetSource[]\r\n    const rule = rules.find(rule => rule.key === 'ChoiceSet' && rule.rollOption === option)\r\n    return rule?.selection as T | undefined\r\n}\r\n\r\nfunction getSpellcastingDetails(actor: ActorPF2e, tradition: MagicTradition) {\r\n    let maxSlot = 0\r\n    let maxTradition = 0\r\n\r\n    for (const entry of actor.spellcasting) {\r\n        if ('pf2e-staves' in entry.flags) continue // we skip staff entries\r\n\r\n        const slots = entry.system.slots\r\n        for (const key in slots) {\r\n            const slot = slots[key as SlotKey]\r\n            if (slot.max) maxSlot = Math.max(maxSlot, Number(key.slice(4)))\r\n        }\r\n\r\n        if (entry.tradition === tradition) maxTradition = Math.max(maxTradition, entry.rank)\r\n    }\r\n\r\n    return { maxSlot: Math.clamped(maxSlot, 1, 10), maxTradition }\r\n}\r\n","export function sequenceArray<N extends number = number>(start: number, end: number) {\r\n    const levels: number[] = []\r\n\r\n    if (start <= end) {\r\n        for (let i = start; i <= end; i++) levels.push(i)\r\n    } else {\r\n        for (let i = start; i >= end; i--) levels.push(i)\r\n    }\r\n\r\n    return levels as N[]\r\n}\r\n","import { sequenceArray } from '@utils/utils'\r\n\r\nexport const CATEGORY_SEARCH = {\r\n    scrollChain: { category: ['spell'] } as InitialSpellFilters,\r\n    combatFlexibility: { feattype: ['class'], traits: ['fighter'] } as InitialFeatFilters,\r\n    scrollSavant: { category: ['spell'], traditions: ['arcane'] } as InitialSpellFilters,\r\n    tricksterAce: { category: ['cantrip', 'spell'] } as InitialSpellFilters,\r\n} as const\r\n\r\nexport function onSearch(event: JQuery.ClickEvent<any, any, SearchTemplateButton>) {\r\n    event.preventDefault()\r\n\r\n    const data = event.currentTarget.dataset\r\n    const level = Number(data.level)\r\n\r\n    switch (data.type) {\r\n        case 'scrollChain':\r\n            searchSpell({ ...CATEGORY_SEARCH.scrollChain, level: sequenceArray<OneToTen>(1, level) })\r\n            break\r\n        case 'combatFlexibility':\r\n            searchFeat({ ...CATEGORY_SEARCH.combatFlexibility, level: { min: 1, max: level } })\r\n            break\r\n        case 'scrollSavant':\r\n            searchSpell({ ...CATEGORY_SEARCH.scrollSavant, level: sequenceArray<OneToTen>(1, level) })\r\n            break\r\n        case 'tricksterAce':\r\n            searchSpell({ ...CATEGORY_SEARCH.tricksterAce, level: sequenceArray<OneToTen>(1, level) })\r\n            break\r\n    }\r\n}\r\n\r\nfunction searchSpell({ category = [], level = [], traditions = [] }: InitialSpellFilters = {}) {\r\n    const filter: InitialSpellFilters = {\r\n        category,\r\n        classes: [],\r\n        level,\r\n        rarity: [],\r\n        school: [],\r\n        source: [],\r\n        traditions,\r\n        traits: [],\r\n    }\r\n    game.pf2e.compendiumBrowser.openTab('spell', filter)\r\n}\r\n\r\nfunction searchFeat({ feattype = [], level = {}, traits = [] }: InitialFeatFilters = {}) {\r\n    const filter: InitialFeatFilters = {\r\n        feattype,\r\n        skills: [],\r\n        rarity: [],\r\n        source: [],\r\n        traits,\r\n        level,\r\n    }\r\n    game.pf2e.compendiumBrowser.openTab('feat', filter)\r\n}\r\n","import { subLocalize } from '@utils/foundry/localize'\r\nimport { CATEGORY_SEARCH } from './search'\r\n\r\nconst localize = subLocalize('interface.error.drop')\r\n\r\nexport async function dropped(event: ElementDragEvent) {\r\n    let target = $(event.target)\r\n    if (target.is('label')) target = target.next()\r\n\r\n    const categoryType = target.attr('data-type') as CategoryType | undefined\r\n    if (!categoryType) return\r\n\r\n    try {\r\n        const dataString = event.dataTransfer?.getData('text/plain')\r\n        const typeError = () => localize.warn('wrongDataType')\r\n\r\n        const data: { type: string; uuid: string } = JSON.parse(dataString)\r\n        if (!data || data.type !== 'Item' || typeof data.uuid !== 'string') return typeError()\r\n\r\n        const item = await fromUuid<ItemPF2e>(data.uuid)\r\n        if (!item) return typeError()\r\n\r\n        switch (categoryType) {\r\n            case 'scrollChain':\r\n                droppedSpell(target, item, CATEGORY_SEARCH.scrollChain)\r\n                break\r\n            case 'combatFlexibility':\r\n                droppedFeat(target, item, CATEGORY_SEARCH.combatFlexibility)\r\n                break\r\n            case 'scrollSavant':\r\n                droppedSpell(target, item, CATEGORY_SEARCH.scrollSavant)\r\n                break\r\n            case 'tricksterAce':\r\n                droppedSpell(target, item, CATEGORY_SEARCH.tricksterAce, tricksterAceFilter)\r\n                break\r\n        }\r\n    } catch (error) {}\r\n}\r\n\r\nfunction tricksterAceFilter(item: SpellPF2e) {\r\n    const castTime = item.system.time.value\r\n\r\n    if (castTime.includes('hour') || (castTime.includes('min') && parseInt(castTime) > 10)) {\r\n        localize.warn('wrongSpellTime', { time: '10 min' })\r\n        return false\r\n    }\r\n\r\n    return true\r\n}\r\n\r\nfunction droppedSpell(\r\n    target: JQuery,\r\n    item: ItemPF2e,\r\n    { category = [], traditions = [] }: InitialSpellFilters = {},\r\n    filter?: (item: SpellPF2e) => boolean\r\n) {\r\n    if (!item.isOfType('spell')) return localize.warn('wrongType', { type: 'spell' })\r\n\r\n    if (item.isCantrip && !category.includes('cantrip')) return localize.warn('cannotBe', { type: 'spell', not: 'cantrip' })\r\n    if (item.isRitual && !category.includes('ritual')) return localize.warn('cannotBe', { type: 'spell', not: 'ritual' })\r\n    if (item.isFocusSpell && !category.includes('focus')) return localize.warn('cannotBe', { type: 'spell', not: 'focus' })\r\n\r\n    if (traditions.length) {\r\n        const itemTraditions = item.system.traditions.value\r\n        for (const tradition of traditions) {\r\n            if (!itemTraditions.includes(tradition))\r\n                return localize.warn('wrongTrait', { type: 'spell', trait: tradition, category: 'tradition' })\r\n        }\r\n    }\r\n\r\n    if (item.level > Number(target.attr('data-level'))) return localize.warn('wrongLevel', { type: 'spell' })\r\n\r\n    if (filter && !filter(item)) return\r\n\r\n    droppedItem(target, item)\r\n}\r\n\r\nfunction droppedFeat(target: JQuery, item: ItemPF2e, { feattype = [], traits = [] }: InitialFeatFilters) {\r\n    if (!item.isOfType('feat') || item.isFeature) return localize.warn('wrongType', { type: 'feat' })\r\n    if (!feattype.includes(item.featType)) return localize.warn('cannotBe', { type: 'feat', not: item.featType })\r\n\r\n    if (traits.length) {\r\n        const itemTraits = item.system.traits.value\r\n        for (const trait of traits) {\r\n            if (!itemTraits.includes(trait)) return localize.warn('wrongTrait', { type: 'feat', trait, category: 'trait' })\r\n        }\r\n    }\r\n\r\n    if (item.level > Number(target.attr('data-level'))) return localize.warn('wrongLevel', { type: 'feat' })\r\n\r\n    droppedItem(target, item)\r\n}\r\n\r\nfunction droppedItem(target: JQuery, item: ItemPF2e) {\r\n    target.val(item.name)\r\n    target.attr('value', item.name)\r\n    target.attr('data-uuid', item.uuid)\r\n    target.nextAll('[data-action=\"clear\"]').first().removeClass('disabled')\r\n}\r\n","import { subLocalize } from '@utils/foundry/localize'\r\nimport { templatePath } from '@utils/foundry/path'\r\nimport { PROFICIENCY_RANKS } from '@utils/pf2e/actor'\r\nimport { SKILL_LONG_FORMS } from '@utils/pf2e/skills'\r\nimport { capitalize } from '@utils/string'\r\nimport { accept } from './interface/accept'\r\nimport { onAlert } from './interface/alert'\r\nimport { getData } from './interface/data'\r\nimport { dropped } from './interface/drop'\r\nimport { onSearch } from './interface/search'\r\n\r\nconst localize = subLocalize('interface')\r\n\r\nexport class DailiesInterface extends Application {\r\n    private _actor: CharacterPF2e\r\n    private _randomInterval?: NodeJS.Timer\r\n\r\n    constructor(actor: CharacterPF2e, options?: Partial<ApplicationOptions>) {\r\n        super(options)\r\n        this._actor = actor\r\n    }\r\n\r\n    static get defaultOptions() {\r\n        return mergeObject(super.defaultOptions, {\r\n            id: 'pf2e-dailies-interface',\r\n            title: localize('title'),\r\n            template: templatePath('interface.hbs'),\r\n            height: 'auto',\r\n            submitOnClose: false,\r\n            submitOnChange: false,\r\n            dragDrop: [\r\n                {\r\n                    dropSelector: '[data-droppable=\"true\"]',\r\n                },\r\n            ],\r\n        })\r\n    }\r\n\r\n    get actor() {\r\n        return this._actor\r\n    }\r\n\r\n    getData(options?: Partial<FormApplicationOptions> | undefined) {\r\n        return mergeObject(super.getData(options), {\r\n            i18n: localize,\r\n            ...getData(this._actor),\r\n        })\r\n    }\r\n\r\n    render(force?: boolean | undefined, options?: RenderOptions | undefined): this | Promise<this> {\r\n        if (this._randomInterval) clearInterval(this._randomInterval)\r\n\r\n        if (this.element.find('select.random')) {\r\n            this._randomInterval = setInterval(() => {\r\n                const randoms = this.element.find<HTMLSelectElement>('select.random')\r\n                randoms.each((_, select) => {\r\n                    select.selectedIndex = (select.selectedIndex + 1) % select.options.length\r\n                })\r\n            }, 2000)\r\n        }\r\n\r\n        return super.render(force, options)\r\n    }\r\n\r\n    close(options?: ({ force?: boolean | undefined } & Record<string, unknown>) | undefined): Promise<void> {\r\n        if (this._randomInterval) clearInterval(this._randomInterval)\r\n        return super.close(options)\r\n    }\r\n\r\n    activateListeners(html: JQuery<HTMLElement>): void {\r\n        super.activateListeners(html)\r\n\r\n        html.find<HTMLAnchorElement>('[data-action=alert]').on('click', onAlert.bind(this))\r\n\r\n        html.find<HTMLSelectElement>('.combo select').on('change', this.#onComboSelectChange.bind(this))\r\n        html.find<ComboTemplateField>('.combo input').on('change', this.#onComboInputChange.bind(this))\r\n\r\n        html.find<SearchTemplateButton>('[data-action=search]').on('click', onSearch)\r\n\r\n        html.find<HTMLAnchorElement>('[data-action=clear]').on('click', this.#onClear.bind(this))\r\n        html.find<HTMLButtonElement>('[data-action=accept]').on('click', this.#onAccept.bind(this))\r\n        html.find<HTMLButtonElement>('[data-action=cancel]').on('click', this.#onCancel.bind(this))\r\n    }\r\n\r\n    protected async _onDrop(event: ElementDragEvent) {\r\n        dropped(event)\r\n    }\r\n\r\n    #onComboSelectChange(event: JQuery.ChangeEvent) {\r\n        const select = event.currentTarget\r\n        const input = select.nextElementSibling as HTMLInputElement\r\n        input.dataset.input = 'false'\r\n        input.value = capitalize(select.value)\r\n    }\r\n\r\n    #onComboInputChange(event: JQuery.ChangeEvent<any, any, ComboTemplateField>) {\r\n        const input = event.currentTarget\r\n        const select = input.previousElementSibling as HTMLSelectElement\r\n        const value = input.value.toLowerCase()\r\n        const type = input.dataset.type\r\n\r\n        // TODO original should be conditional on type if more are to come\r\n        const original = SKILL_LONG_FORMS as string[]\r\n        const options = Array.from(select.options).map(x => x.value)\r\n\r\n        if (options.includes(value)) {\r\n            select.value = value\r\n            input.value = capitalize(value)\r\n            input.dataset.input = 'false'\r\n        } else if (original.includes(value)) {\r\n            if (type === 'trainedSkill') {\r\n                const rank = Number(input.dataset.rank || '1')\r\n                localize.warn('error.input.proficiency', { rank: PROFICIENCY_RANKS[rank], proficiency: value })\r\n            }\r\n\r\n            select.value = ''\r\n            input.value = ''\r\n            input.dataset.input = 'true'\r\n        } else {\r\n            select.value = ''\r\n            input.dataset.input = 'true'\r\n        }\r\n    }\r\n\r\n    #lock() {\r\n        this.element.addClass('disabled')\r\n    }\r\n\r\n    #validate() {\r\n        const warns: string[] = []\r\n        const emptyInputs = this.element.find('input').filter((_, input) => !input.value)\r\n        const errorInputs = this.element.find('input.alert')\r\n\r\n        if (emptyInputs.length) warns.push('error.empty')\r\n        if (errorInputs.length) warns.push('error.unattended')\r\n\r\n        warns.forEach(x => localize.warn(x))\r\n\r\n        return !warns.length\r\n    }\r\n\r\n    async #onAccept(event: JQuery.ClickEvent) {\r\n        event.preventDefault()\r\n\r\n        if (!this.#validate()) return\r\n\r\n        this.#lock()\r\n\r\n        try {\r\n            await accept(this.element, this._actor)\r\n        } catch (error) {\r\n            localize.error('error.unexpected')\r\n            console.error(error)\r\n        }\r\n\r\n        this.close()\r\n    }\r\n\r\n    #onClear(event: JQuery.ClickEvent<any, any, HTMLAnchorElement>) {\r\n        event.preventDefault()\r\n        const target = $(event.currentTarget)\r\n        const input = target.prevAll('input').first()\r\n        input.val('')\r\n        input.attr('value', '')\r\n        input.attr('data-uuid', '')\r\n        target.addClass('disabled')\r\n    }\r\n\r\n    #onCancel(event: JQuery.ClickEvent) {\r\n        event.preventDefault()\r\n        this.close()\r\n    }\r\n}\r\n","import { setModuleID } from '@utils/module'\r\nimport { wrapRestForTheNight } from './rest'\r\nimport { renderCharacterSheetPF2e } from './sheet'\r\n\r\nsetModuleID('pf2e-dailies')\r\n\r\nHooks.once('ready', () => {\r\n    wrapRestForTheNight()\r\n})\r\n\r\nHooks.on('renderCharacterSheetPF2e', renderCharacterSheetPF2e)\r\n","import { getFlag, setFlag } from '@utils/foundry/flags'\r\nimport { sluggify } from '@utils/pf2e/utils'\r\nimport { MODULE_ID } from '@utils/module'\r\nimport { getCategoryUUIDS, isRuleItem } from './categories'\r\nimport { findItemWithSourceId } from '@utils/foundry/item'\r\nimport { WEAPON_TRAITS } from './data/weapon'\r\n\r\nexport function wrapRestForTheNight() {\r\n    const original = game.pf2e.actions.restForTheNight\r\n    game.pf2e.actions.restForTheNight = async (options: ActionDefaultOptions) => {\r\n        const result = await original(options)\r\n        if (result.length && options.actors) afterRest(options.actors)\r\n        return result\r\n    }\r\n}\r\n\r\nasync function afterRest(actors: ActorPF2e | ActorPF2e[]) {\r\n    actors = Array.isArray(actors) ? actors : [actors]\r\n\r\n    const characters = actors.filter(x => x.isOfType('character')) as CharacterPF2e[]\r\n    for (const actor of characters) {\r\n        const update: EmbeddedDocumentUpdateData<ItemPF2e>[] = []\r\n        const remove: string[] = []\r\n        const itemTypes = actor.itemTypes\r\n\r\n        const cleanRuleItem = (item: ItemPF2e) => {\r\n            const rules = deepClone(item._source.system.rules)\r\n\r\n            let modified = false\r\n            for (let i = rules.length - 1; i >= 0; i--) {\r\n                if (!(MODULE_ID in rules[i])) continue\r\n                rules.splice(i, 1)\r\n                modified = true\r\n            }\r\n\r\n            if (modified) update.push({ _id: item.id, 'system.rules': rules })\r\n        }\r\n\r\n        for (const item of itemTypes.feat) {\r\n            if (isRuleItem(item)) cleanRuleItem(item)\r\n\r\n            if (getFlag(item, 'temporary')) {\r\n                const parentId = item.getFlag<string>('pf2e', 'grantedBy.id')\r\n                if (parentId) {\r\n                    const slug = sluggify(item.name, { camel: 'dromedary' })\r\n                    const path = `flags.pf2e.itemGrants.-=${slug}`\r\n                    update.push({ _id: parentId, [path]: true })\r\n                }\r\n                remove.push(item.id)\r\n            }\r\n        }\r\n\r\n        for (const item of itemTypes.lore) {\r\n            if (getFlag(item, 'temporary')) remove.push(item.id)\r\n        }\r\n\r\n        for (const item of itemTypes.equipment) {\r\n            if (isRuleItem(item)) cleanRuleItem(item)\r\n        }\r\n\r\n        for (const item of itemTypes.heritage) {\r\n            if (isRuleItem(item)) cleanRuleItem(item)\r\n        }\r\n\r\n        for (const item of itemTypes.spellcastingEntry) {\r\n            if (getFlag(item, 'temporary')) remove.push(item.id)\r\n        }\r\n\r\n        const mindWeaponUUID = getCategoryUUIDS('mindsmith')[1]\r\n        const mindWeapon = findItemWithSourceId(actor, mindWeaponUUID, ['weapon'])\r\n        if (mindWeapon) {\r\n            let traits = mindWeapon._source.system.traits?.value ?? []\r\n            traits = traits.filter(x => !WEAPON_TRAITS.includes(x as MindSmithWeaponTrait))\r\n            update.push({ _id: mindWeapon.id, 'system.traits.value': traits })\r\n\r\n            const runeProperty = getFlag<RunePropertyKey | ''>(actor, 'weapon.runeProperty')\r\n            if (runeProperty) {\r\n                update.push({ _id: mindWeapon.id, [`system.${runeProperty}.value`]: null })\r\n            }\r\n        }\r\n\r\n        setFlag(actor, 'weapon.runeProperty', '')\r\n        if (update.length) actor.updateEmbeddedDocuments('Item', update)\r\n        if (remove.length) actor.deleteEmbeddedDocuments('Item', remove)\r\n    }\r\n}\r\n","import { DailiesInterface } from '@apps/interface'\r\nimport { localize } from '@utils/foundry/localize'\r\nimport { hasAnyCategory } from './categories'\r\n\r\nexport function renderCharacterSheetPF2e(sheet: CharacterSheetPF2e, html: JQuery) {\r\n    const actor = sheet.actor\r\n    if (!actor.isOwner || !hasAnyCategory(actor)) return\r\n\r\n    const small = html.find('aside .sidebar .hitpoints .hp-small')\r\n    small\r\n        .append(`<a class=\"roll-icon dailies\" title=\"${localize('sheet.title')}\"><i class=\"fas fa-mug-saucer\"></i></a>`)\r\n        .find('.dailies')\r\n        .on('click', () => new DailiesInterface(actor).render(true))\r\n\r\n    // TODO remove with next system update\r\n    small\r\n        .find('[data-action=rest]')\r\n        .off('click')\r\n        .on('click', event => game.pf2e.actions.restForTheNight({ event, actors: actor }))\r\n}\r\n"],"names":["getFlag","doc","key","fallback","setFlag","value","getSourceId","hasSourceId","sourceId","includesSourceId","list","includes","wordCharacter","String","raw","nonWordCharacter","nonWordCharacterRE","RegExp","wordBoundary","nonWordBoundary","lowerCaseLetter","upperCaseLetter","lowerCaseThenUpperCaseRE","nonWordCharacterHyphenOrSpaceRE","upperOrWordBoundariedLowerRE","sluggify","text","camel","console","warn","replace","toLowerCase","trim","dromedary","charAt","toUpperCase","slice","part","index","Error","getItemSourceIdCondition","Array","isArray","item","getItems","actor","itemTypes","flatMap","type","items","findItemWithSourceId","find","notify","str","arg1","arg2","arg3","data","undefined","permanent","ui","notifications","localize","args","game","i18n","format","hasLocalization","has","subLocalize","subKey","fn","Object","defineProperties","enumerable","configurable","info","error","RULE_TYPES","CATEGORIES","category","uuids","UUIDS","EQUIP_UUID","FEATS_UUID","HERITAGES_UUID","RULES_UUIDS","FLATTENED","FEATS","EQUIP","HERITAGES","RULES","push","map","uuid","firstUUID","Map","getCategoryUUIDS","isRuleItem","isCategory","object","WEAPON_GROUPS","slashing","piercing","bludgeoning","WEAPON_DAMAGE_TYPES","keys","WEAPON_BASE_TYPES","die","traits","usage","WEAPON_TRAITS","WEAPON_RUNES","WEAPON_GREATER_RUNES","RUNE_PROPERTY_KEYS","getFreePropertySlot","weapon","potency","system","potencyRune","i","property","runetoLabel","rune","templatePath","path","filter","x","join","PROFICIENCY_RANKS","SKILL_DICTIONARY","acr","arc","ath","cra","dec","dip","itm","med","nat","occ","prf","rel","soc","ste","sur","thi","SKILL_LONG_FORMS","values","capitalize","chatUUID","name","Set","scrolls","async","createSpellScroll","level","temp","spell","fromUuid","toObject","scrollUUID","scrollCompendiumIds","getScrollCompendiumUUID","scroll","location","heightenedLevel","temporary","traditions","flags","core","description","msg","randomOptions","options","Roll","length","evaluate","total","createTemporaryLore","rank","img","setProperty","createTemporaryFeat","parent","feat","id","onDelete","createSkillRule","skill","mode","Number","createResistanceRule","createSpellcastingSpell","entry","createSpellcastingEntry","slug","proficiency","prepared","showSlotlessLevels","showUnpreparedSpells","onAlert","event","preventDefault","input","currentTarget","previousElementSibling","dataset","onWeaponAlert","call","this","content","Dialog","wait","title","buttons","yes","icon","label","callback","onWeaponSelected","bind","no","close","width","html","selection","val","stats","createEmbeddedDocuments","render","LANGUAGE_LIST","FOUR_ELEMENTS","GANZI_RESISTANCES","sortOrder","Proxy","addedLanguage","trainedSkill","addedResistance","trainedLore","get","obj","prop","getData","actorLevel","categories","isOfType","isInvested","hasCategories","templates","slots","spellSlot","template","rows","maxSlot","maxTradition","getSpellcastingDetails","skills","selected","actorSkills","skillSlot","isTomeSelected","option","getRuleSelection","masters","experts","trained","placeholder","actorLanguages","languages","sort","message","damage","subcategory","trait","runes","groups","a","b","_source","rules","rule","rollOption","tradition","spellcasting","max","Math","clamped","sequenceArray","start","end","levels","CATEGORY_SEARCH","scrollChain","combatFlexibility","feattype","scrollSavant","tricksterAce","onSearch","searchSpell","rarity","source","pf2e","compendiumBrowser","openTab","searchFeat","min","classes","school","tricksterAceFilter","castTime","time","parseInt","droppedSpell","target","isCantrip","not","isRitual","isFocusSpell","itemTraditions","attr","droppedItem","nextAll","first","removeClass","DailiesInterface","Application","_actor","_randomInterval","constructor","super","defaultOptions","mergeObject","height","submitOnClose","submitOnChange","dragDrop","dropSelector","force","clearInterval","element","setInterval","each","_","select","selectedIndex","activateListeners","on","$","is","next","categoryType","dataString","dataTransfer","typeError","JSON","parse","isFeature","featType","itemTraits","droppedFeat","dropped","nextElementSibling","original","from","addClass","warns","emptyInputs","errorInputs","forEach","fields","toArray","ruleItems","some","field","filterItemsWithSourceId","getRuleItems","addData","updateData","rulesToAdd","getRules","existing","deepClone","splice","set","messages","tome","resistances","feats","spells","mind","parentUUID","lore","entrySlug","classDC","class","isInput","ruleItem","toSave","_id","propertySlot","random","pushMessages","parentId","updateEmbeddedDocuments","ChatMessage","create","speaker","getSpeaker","accept","prevAll","Hooks","once","actions","restForTheNight","result","actors","characters","update","remove","cleanRuleItem","modified","equipment","heritage","spellcastingEntry","mindWeapon","runeProperty","deleteEmbeddedDocuments","afterRest","wrapRestForTheNight","sheet","isOwner","hasAnyCategory","small","append","off"],"sourceRoot":""}