{"version":3,"file":"main.js","mappings":"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ACH,EAAG,mBACH,EAAG,mBACH,EAAG,mBACH,EAAG,mBACH,EAAG,mBACH,GAAI,oBC9CKa,EAAgB,CACzB,SACA,WACA,UACA,QACA,UACA,SACA,WACA,QACA,SACA,SACA,cACA,QACA,UACA,QACA,OACA,YACA,aACA,UACA,QACA,mBACA,UACA,WACA,QACA,WACA,QACA,UACA,QACA,UACA,YACA,UACA,WACA,aACA,SACA,UACA,SACA,UACA,UACA,UACA,aACA,QACA,SACA,UACA,SACA,OACA,UACA,QACA,UACA,UACA,WACA,QACA,UACA,QACA,QACA,YACA,UACA,UACA,SACA,UACA,SACA,UACA,WACA,SACA,QACA,SACA,SACA,SACA,UACA,WACA,UACA,OACA,UACA,YACA,UACA,UACA,SACA,eACA,UACA,QACA,UACA,SACA,QACA,SACA,QACA,UACA,aACA,QACA,SACA,eACA,OACA,UACA,SACA,WACA,QACA,aACA,UACA,UACA,SACA,YACA,UACA,SACA,WACA,OACA,UACA,WACA,YACA,OACA,UACA,WClGE,ENEC,SAAqBC,GACxB,MAAMC,EAAK,IAAIxD,IAAuBD,EAAS,GAAGwD,KAAUvD,EAAK,KAAMA,EAAK,IAoB5E,OAlBApC,OAAO6F,iBAAiBD,EAAI,CACxBE,KAAM,CACFnB,MAAO,IAAIvC,IDAhB,YAAiBA,GACpB,MAAOX,EAAKC,EAAMC,GAAQS,EAC1BZ,EAAOC,EAAK,UAAWC,EAAMC,EACjC,CCH4CmE,CAAK,GAAGH,KAAUvD,EAAK,KAAMA,EAAK,GAAIA,EAAK,IAC3E2D,YAAY,EACZC,cAAc,GAElBC,KAAM,CACFtB,MAAO,IAAIvC,IDAhB,YAAiBA,GACpB,MAAOX,EAAKC,EAAMC,GAAQS,EAC1BZ,EAAOC,EAAK,OAAQC,EAAMC,EAC9B,CCH4CsE,CAAK,GAAGN,KAAUvD,EAAK,KAAMA,EAAK,GAAIA,EAAK,IAC3E2D,YAAY,EACZC,cAAc,GAElBE,MAAO,CACHvB,MAAO,IAAIvC,IDAhB,YAAkBA,GACrB,MAAOX,EAAKC,EAAMC,GAAQS,EAC1BZ,EAAOC,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","sources":["webpack:///../../../../foundryVTT-projects/@utils/module.ts","webpack:///./src/items.ts","webpack:///../../../../foundryVTT-projects/@utils/foundry/notification.ts","webpack:///../../../../foundryVTT-projects/@utils/foundry/localize.ts","webpack:///../../../../foundryVTT-projects/@utils/foundry/path.ts","webpack:///../../../../foundryVTT-projects/@utils/foundry/uuid.ts","webpack:///../../../../foundryVTT-projects/@utils/pf2e/skills.ts","webpack:///../../../../foundryVTT-projects/@utils/pf2e/spell.ts","webpack:///../../../../foundryVTT-projects/@utils/pf2e/languages.ts","webpack:///./src/apps/interface.ts","webpack:///../../../../foundryVTT-projects/@utils/foundry/flags.ts","webpack:///./src/rules.ts","webpack:///./src/main.ts","webpack:///./src/rest.ts","webpack:///./src/sheet.ts"],"sourcesContent":["export let MODULE_ID = ''\r\n\r\nexport function setModuleID(id: string) {\r\n    if (!MODULE_ID) MODULE_ID = id\r\n}\r\n","export const SCROLL_CATEGORIES = ['esoterica', 'trickster'] as const\r\nexport const SKILL_CATEGORIES = ['longevity', 'ageless', 'memories', 'studies'] as const\r\nexport const LANGUAGE_CATEGORIES = ['linguistics', 'borts'] as const\r\nexport const RULE_CATEGORIES = [...SKILL_CATEGORIES, ...LANGUAGE_CATEGORIES] as const\r\n\r\nconst CATEGORIES: Record<Category, ItemUUID[]> = {\r\n    esoterica: [\r\n        'Compendium.pf2e.feats-srd.OqObuRB8oVSAEKFR',\r\n        'Compendium.pf2e.feats-srd.nWd7m0yRcIEVUy7O',\r\n        'Compendium.pf2e.feats-srd.LHjPTV5vP3MOsPPJ',\r\n    ],\r\n    trickster: [\r\n        'Compendium.pf2e.feats-srd.ROAUR1GhC19Pjk9C',\r\n        'Compendium.pf2e.feats-srd.UrOj9TROtn8nuxPf',\r\n        'Compendium.pf2e.feats-srd.lIg5Gzz7W70jfbk1',\r\n    ],\r\n    longevity: ['Compendium.pf2e.feats-srd.WoLh16gyDp8y9WOZ'],\r\n    ageless: ['Compendium.pf2e.feats-srd.wylnETwIz32Au46y'],\r\n    memories: ['Compendium.pf2e.feats-srd.ptEOt3lqjxUnAW62'],\r\n    studies: ['Compendium.pf2e.feats-srd.9bgl6qYWKHzqWZj0'],\r\n    linguistics: ['Compendium.pf2e.feats-srd.eCWQU16hRLfN1KaX'],\r\n    borts: ['Compendium.pf2e.equipment-srd.iS7hAQMAaThHYE8g'],\r\n}\r\n\r\nexport const flattenedUUIDS = (() => {\r\n    const uuids: Map<ItemUUID, { category: Category; index: number }> = new Map()\r\n    for (const [category, entries] of Object.entries(CATEGORIES)) {\r\n        for (let i = 0; i < entries.length; i++) {\r\n            const uuid = entries[i]\r\n            uuids.set(uuid, { category: category as Category, index: i })\r\n        }\r\n    }\r\n    return uuids\r\n})()\r\n\r\nconst UUIDS = Array.from(flattenedUUIDS.keys())\r\nconst RULE_UUIDS = RULE_CATEGORIES.map(category => CATEGORIES[category][0])\r\n\r\nexport function getAllCategories(actor: CharacterPF2e) {\r\n    const items = {} as Record<Category, (ItemPF2e | undefined)[]>\r\n    for (const item of actor.items) {\r\n        const sourceId = item.getFlag('core', 'sourceId') as ItemUUID\r\n        const entry = flattenedUUIDS.get(sourceId)\r\n        if (entry) {\r\n            items[entry.category] ??= []\r\n            items[entry.category][entry.index] = item\r\n        }\r\n    }\r\n    return items\r\n}\r\n\r\nexport function getItem(actor: CharacterPF2e, category: Category, index = 0) {\r\n    const uuid = CATEGORIES[category][index]\r\n    if (!uuid) return\r\n    return actor.items.find(x => x.getFlag('core', 'sourceId') === uuid)\r\n}\r\n\r\nexport function getRuleItems(actor: CharacterPF2e): ItemPF2e[] {\r\n    return actor.items\r\n        .filter(x => RULE_UUIDS.includes(x.getFlag('core', 'sourceId') as ItemUUID))\r\n        .filter(x => !x.isOfType('equipment') || x.isInvested)\r\n}\r\n\r\nexport function hasAnyItem(actor: CharacterPF2e) {\r\n    return !!actor.items.find(x => UUIDS.includes(x.getFlag('core', 'sourceId') as ItemUUID))\r\n}\r\n\r\nexport function isSkillCategory(category: string): category is SkillCategory {\r\n    return SKILL_CATEGORIES.includes(category as SkillCategory)\r\n}\r\n\r\nexport function isLanguageCategory(category: string): category is LanguageCategory {\r\n    return LANGUAGE_CATEGORIES.includes(category as LanguageCategory)\r\n}\r\n\r\nexport function isScrollCategory(category: string): category is ScrollCategory {\r\n    return SCROLL_CATEGORIES.includes(category as ScrollCategory)\r\n}\r\n","import { localize } from '@utils/foundry/localize'\r\n\r\nexport type NotifyArgs = [str: string, arg1?: boolean | Record<string, string>, arg2?: boolean]\r\n\r\nfunction notify(\r\n    str: string,\r\n    arg1?: 'warning' | 'info' | 'error' | boolean | Record<string, string>,\r\n    arg2?: boolean | Record<string, string>,\r\n    arg3?: boolean\r\n) {\r\n    const type = typeof arg1 === 'string' ? arg1 : 'info'\r\n    const data = typeof arg1 === 'object' ? arg1 : typeof arg2 === 'object' ? arg2 : undefined\r\n    const permanent = typeof arg1 === 'boolean' ? arg1 : typeof arg2 === 'boolean' ? arg2 : arg3 ?? false\r\n\r\n    ui.notifications.notify(localize(str, data), type, { permanent })\r\n}\r\n\r\nexport function warn(...args: NotifyArgs) {\r\n    const [str, arg1, arg2] = args\r\n    notify(str, 'warning', arg1, arg2)\r\n}\r\n\r\nexport function info(...args: NotifyArgs) {\r\n    const [str, arg1, arg2] = args\r\n    notify(str, 'info', arg1, arg2)\r\n}\r\n\r\nexport function error(...args: NotifyArgs) {\r\n    const [str, arg1, arg2] = args\r\n    notify(str, 'error', arg1, arg2)\r\n}\r\n","import { MODULE_ID } from '@utils/module'\r\nimport { warn, NotifyArgs, info, error } from '@utils/foundry/notification'\r\n\r\nexport type LocalizeArgs = [key: string, data?: Record<string, string | number>]\r\n\r\nexport function localize(...args: LocalizeArgs) {\r\n    let [key, data] = args\r\n    key = `${MODULE_ID}.${key}`\r\n    if (data) return game.i18n.format(key, data)\r\n    return game.i18n.localize(key)\r\n}\r\n\r\nexport function subLocalize(subKey: string) {\r\n    const fn = (...args: LocalizeArgs) => localize(`${subKey}.${args[0]}`, args[1])\r\n\r\n    Object.defineProperties(fn, {\r\n        warn: {\r\n            value: (...args: NotifyArgs) => warn(`${subKey}.${args[0]}`, args[1], args[2]),\r\n            enumerable: false,\r\n            configurable: false,\r\n        },\r\n        info: {\r\n            value: (...args: NotifyArgs) => info(`${subKey}.${args[0]}`, args[1], args[2]),\r\n            enumerable: false,\r\n            configurable: false,\r\n        },\r\n        error: {\r\n            value: (...args: NotifyArgs) => error(`${subKey}.${args[0]}`, args[1], args[2]),\r\n            enumerable: false,\r\n            configurable: false,\r\n        },\r\n    })\r\n\r\n    return fn as ((...args: LocalizeArgs) => string) & {\r\n        warn: (...args: NotifyArgs) => void\r\n        info: (...args: NotifyArgs) => void\r\n        error: (...args: NotifyArgs) => void\r\n    }\r\n}\r\n","import { MODULE_ID } from '@utils/module'\r\n\r\nexport function getSettingLocalizationPath(...path: string[]) {\r\n    return `${MODULE_ID}.settings.${path.join('.')}`\r\n}\r\n\r\nexport function flagsUpdatePath(...path: string[]) {\r\n    return `flags.${MODULE_ID}.${path.join('/')}`\r\n}\r\n\r\nexport function templatePath(...path: string[]) {\r\n    path = path.filter(x => typeof x === 'string')\r\n    return `modules/${MODULE_ID}/templates/${path.join('/')}`\r\n}\r\n\r\nexport function imagePath(...path: string[]) {\r\n    return `modules/${MODULE_ID}/images/${path.join('/')}`\r\n}\r\n","export function chatUUID(uuid: string, name?: string) {\r\n    if (name) return `@UUID[${uuid}]{${name}}`\r\n    return `@UUID[${uuid}]`\r\n}\r\n\r\nexport function fakeChatUUID(name: string) {\r\n    return `<span style=\"background: #DDD;\r\n    padding: 1px 4px;\r\n    border: 1px solid var(--color-border-dark-tertiary);\r\n    border-radius: 2px;\r\n    white-space: nowrap;\r\n    word-break: break-all;\">${name}</span>`\r\n}\r\n","export const SKILL_DICTIONARY = {\r\n    acr: 'acrobatics',\r\n    arc: 'arcana',\r\n    ath: 'athletics',\r\n    cra: 'crafting',\r\n    dec: 'deception',\r\n    dip: 'diplomacy',\r\n    itm: 'intimidation',\r\n    med: 'medicine',\r\n    nat: 'nature',\r\n    occ: 'occultism',\r\n    prf: 'performance',\r\n    rel: 'religion',\r\n    soc: 'society',\r\n    ste: 'stealth',\r\n    sur: 'survival',\r\n    thi: 'thievery',\r\n} as const\r\n\r\nexport const SKILL_ABBREVIATIONS = Object.keys(SKILL_DICTIONARY) as (keyof typeof SKILL_DICTIONARY)[]\r\n\r\nexport const SKILL_LONG_FORMS = Object.values(SKILL_DICTIONARY)\r\n","import { chatUUID } from '@utils/foundry/uuid'\r\n\r\nexport const MAGIC_TRADITIONS = new Set(['arcane', 'divine', 'occult', 'primal'] as const)\r\n\r\nexport const SPELL_COMPONENTS = ['focus', 'material', 'somatic', 'verbal'] as const\r\n\r\nconst scrolls: (ConsumablePF2e | null)[] = []\r\nexport async function createSpellScroll(uuid: ItemUUID, level: OneToTen | false, temp = false) {\r\n    const spell = (await fromUuid<SpellPF2e>(uuid))?.toObject()\r\n    if (!spell) return null\r\n\r\n    if (level === false) level = spell.system.level.value\r\n\r\n    const scrollUUID = getScrollCompendiumUUID(level)\r\n    scrolls[level] ??= await fromUuid<ConsumablePF2e>(scrollUUID)\r\n\r\n    const scroll = scrolls[level]?.toObject()\r\n    if (!scroll) return null\r\n\r\n    spell.system.location.heightenedLevel = level\r\n\r\n    scroll.name = `Scroll of ${spell.name} (Level ${level})`\r\n    scroll.system.temporary = temp\r\n    scroll.system.spell = spell\r\n    scroll.system.traits.value.push(...spell.system.traditions.value)\r\n\r\n    const sourceId = spell.flags.core?.sourceId\r\n    if (sourceId) scroll.system.description.value = `${chatUUID(sourceId)}\\n<hr />${scroll.system.description.value}`\r\n\r\n    return scroll\r\n}\r\n\r\nfunction getScrollCompendiumUUID(level: OneToTen): ItemUUID {\r\n    return `Compendium.pf2e.equipment-srd.${scrollCompendiumIds[level]}`\r\n}\r\n\r\nconst scrollCompendiumIds: Record<number, string> = {\r\n    1: 'RjuupS9xyXDLgyIr', // Compendium.pf2e.equipment-srd.RjuupS9xyXDLgyIr\r\n    2: 'Y7UD64foDbDMV9sx',\r\n    3: 'ZmefGBXGJF3CFDbn',\r\n    4: 'QSQZJ5BC3DeHv153',\r\n    5: 'tjLvRWklAylFhBHQ',\r\n    6: '4sGIy77COooxhQuC',\r\n    7: 'fomEZZ4MxVVK3uVu',\r\n    8: 'iPki3yuoucnj7bIt',\r\n    9: 'cFHomF3tty8Wi1e5',\r\n    10: 'o1XIHJ4MJyroAHfF',\r\n}\r\n","export const LANGUAGE_LIST = [\r\n    'common',\r\n    'draconic',\r\n    'dwarven',\r\n    'elven',\r\n    'gnomish',\r\n    'goblin',\r\n    'halfling',\r\n    'jotun',\r\n    'orcish',\r\n    'sylvan',\r\n    'undercommon',\r\n    'ysoki',\r\n    'abyssal',\r\n    'adlet',\r\n    'aklo',\r\n    'akitonian',\r\n    'alghollthu',\r\n    'amurrun',\r\n    'anadi',\r\n    'ancient-osiriani',\r\n    'anugobu',\r\n    'arcadian',\r\n    'aquan',\r\n    'arboreal',\r\n    'auran',\r\n    'boggard',\r\n    'calda',\r\n    'caligni',\r\n    'celestial',\r\n    'cyclops',\r\n    'daemonic',\r\n    'destrachan',\r\n    'drooni',\r\n    'dziriak',\r\n    'ekujae',\r\n    'erutaki',\r\n    'formian',\r\n    'garundi',\r\n    'girtablilu',\r\n    'gnoll',\r\n    'goloma',\r\n    'grippli',\r\n    'hallit',\r\n    'hwan',\r\n    'iblydan',\r\n    'ignan',\r\n    'ikeshti',\r\n    'immolis',\r\n    'infernal',\r\n    'iruxi',\r\n    'jistkan',\r\n    'jyoti',\r\n    'kaava',\r\n    'kashrishi',\r\n    'kibwani',\r\n    'kitsune',\r\n    'kelish',\r\n    'lirgeni',\r\n    'mahwek',\r\n    'minaten',\r\n    'minkaian',\r\n    'mwangi',\r\n    'mzunu',\r\n    'nagaji',\r\n    'necril',\r\n    'ocotan',\r\n    'okaiyan',\r\n    'osiriani',\r\n    'protean',\r\n    'rasu',\r\n    'ratajin',\r\n    'razatlani',\r\n    'requian',\r\n    'russian',\r\n    'senzar',\r\n    'shadowtongue',\r\n    'shobhad',\r\n    'shisk',\r\n    'shoanti',\r\n    'shoony',\r\n    'skald',\r\n    'sphinx',\r\n    'strix',\r\n    'taldane',\r\n    'tekritanin',\r\n    'tengu',\r\n    'terran',\r\n    'thassilonian',\r\n    'tien',\r\n    'utopian',\r\n    'vanara',\r\n    'varisian',\r\n    'varki',\r\n    'vishkanyan',\r\n    'vudrani',\r\n    'wyrwood',\r\n    'xanmba',\r\n    'androffan',\r\n    'azlanti',\r\n    'grioth',\r\n    'kovintal',\r\n    'migo',\r\n    'munavri',\r\n    'samsaran',\r\n    'sasquatch',\r\n    'shae',\r\n    'yithian',\r\n    'druidic',\r\n] as const\r\n","import { flattenedUUIDS, getAllCategories, getRuleItems, isLanguageCategory, isScrollCategory, isSkillCategory } from '@src/items'\r\nimport { createLanguageRule, createTrainedSkillRule } from '@src/rules'\r\nimport { getFlag, setFlag } from '@utils/foundry/flags'\r\nimport { subLocalize } from '@utils/foundry/localize'\r\nimport { templatePath } from '@utils/foundry/path'\r\nimport { chatUUID } from '@utils/foundry/uuid'\r\nimport { SKILL_LONG_FORMS } from '@utils/pf2e/skills'\r\nimport { createSpellScroll } from '@utils/pf2e/spell'\r\nimport { LANGUAGE_LIST } from '@utils/pf2e/languages'\r\n\r\nconst localize = subLocalize('interface')\r\n\r\nexport class DailiesInterface extends Application {\r\n    private _actor: CharacterPF2e\r\n\r\n    constructor(actor: CharacterPF2e, options?: Partial<ApplicationOptions>) {\r\n        super(options)\r\n        this._actor = actor\r\n    }\r\n\r\n    static get defaultOptions() {\r\n        return mergeObject(super.defaultOptions, {\r\n            title: localize('title'),\r\n            template: templatePath('interface.hbs'),\r\n            height: 'auto',\r\n            submitOnClose: false,\r\n            submitOnChange: false,\r\n            dragDrop: [\r\n                {\r\n                    dropSelector: '[name=\"spell\"]',\r\n                },\r\n            ],\r\n        })\r\n    }\r\n\r\n    getData(options?: Partial<FormApplicationOptions> | undefined) {\r\n        const actor = this._actor\r\n        const level = actor.level\r\n        const flags = getFlag<Partial<SavedFlags>>(actor, 'saved') ?? {}\r\n        const categories = getAllCategories(actor)\r\n        const skills = SKILL_LONG_FORMS.filter(x => actor.skills[x]!.rank! < 1).map(x => ({ skill: x }))\r\n        const actorLanguages = actor.system.traits.languages.value\r\n        const languages = LANGUAGE_LIST.filter(x => !actorLanguages.includes(x))\r\n            .sort()\r\n            .map(x => ({ language: x }))\r\n\r\n        const skillItems: TemplateSkill[] = []\r\n        const languageItems: TemplateLanguage[] = []\r\n        const scrollItems: TemplateScroll[] = []\r\n\r\n        for (const category in categories) {\r\n            const items = categories[category as Category]\r\n            if (!items[0]) continue\r\n\r\n            const pushItem = (item: ItemPF2e, list: (TemplateLanguage | TemplateSkill)[]) => {\r\n                if (item.isOfType('equipment') && !item.isInvested) return\r\n                list.push({\r\n                    category: category as RuleCategory,\r\n                    name: item.name,\r\n                    selected: flags[category as RuleCategory] ?? '',\r\n                })\r\n            }\r\n\r\n            if (isSkillCategory(category)) pushItem(items[0], skillItems)\r\n            if (isLanguageCategory(category)) pushItem(items[0], languageItems)\r\n\r\n            if (isScrollCategory(category)) {\r\n                const slots: TemplateScrollSlot[] = []\r\n\r\n                const spellSlot = (spellLevel: number): TemplateScrollSlot => {\r\n                    const { name, uuid } = flags[category]?.[spellLevel - 1] ?? { name: '', uuid: '' }\r\n                    return { spellLevel, name, uuid }\r\n                }\r\n\r\n                slots.push(spellSlot(1))\r\n                if (level >= 8) slots.push(spellSlot(2))\r\n\r\n                if (items[1]) {\r\n                    slots.push(spellSlot(3))\r\n                    if (level >= 14) slots.push(spellSlot(4))\r\n                    if (level >= 16) slots.push(spellSlot(5))\r\n                }\r\n\r\n                if (items[2]) {\r\n                    slots.push(spellSlot(6))\r\n                    if (level >= 20) slots.push(spellSlot(7))\r\n                }\r\n\r\n                scrollItems.push({\r\n                    category,\r\n                    name: items[0].name,\r\n                    slots,\r\n                })\r\n            }\r\n        }\r\n\r\n        return mergeObject(super.getData(options), {\r\n            i18n: localize,\r\n            skillItems,\r\n            skills,\r\n            scrollItems,\r\n            languages,\r\n            languageItems,\r\n        })\r\n    }\r\n\r\n    activateListeners(html: JQuery<HTMLElement>): void {\r\n        super.activateListeners(html)\r\n\r\n        html.find<HTMLAnchorElement>('[data-type=spell] [data-action=search]').on('click', this.#onSpellSearch.bind(this))\r\n        html.find<HTMLAnchorElement>('[data-action=clear]').on('click', this.#onClear.bind(this))\r\n        html.find<HTMLButtonElement>('[data-action=accept]').on('click', this.#onAccept.bind(this))\r\n        html.find<HTMLButtonElement>('[data-action=cancel]').on('click', this.#onCancel.bind(this))\r\n    }\r\n\r\n    protected async _onDrop(event: ElementDragEvent) {\r\n        const dataString = event.dataTransfer?.getData('text/plain')\r\n\r\n        try {\r\n            const input = $(event.target)\r\n            const typeError = () => localize.warn('spells.error.wrongType')\r\n\r\n            const data: { type: string; uuid: string } = JSON.parse(dataString)\r\n            if (!data || data.type !== 'Item' || typeof data.uuid !== 'string') return typeError()\r\n\r\n            const item = await fromUuid<ItemPF2e>(data.uuid)\r\n            if (!item?.isOfType('spell') || item.isCantrip || item.isRitual) return typeError()\r\n\r\n            if (item.level > Number(input.attr('data-level'))) return localize.warn('spells.error.wrongLevel')\r\n\r\n            input.attr('value', item.name)\r\n            input.attr('data-uuid', item.uuid)\r\n            input.nextAll('[data-action=\"clear\"]').first().removeClass('disabled')\r\n        } catch {}\r\n    }\r\n\r\n    #lock() {\r\n        this.element.find('button').attr('disabled', 'true')\r\n        this.element.find('a').addClass('disabled')\r\n    }\r\n\r\n    #validate() {\r\n        const warns: string[] = []\r\n        if (this.element.find('input[value=\"\"]').length) warns.push('error.empty')\r\n        warns.forEach(x => localize.warn(x))\r\n        return !warns.length\r\n    }\r\n\r\n    async #onAccept(event: JQuery.ClickEvent) {\r\n        event.preventDefault()\r\n\r\n        if (!this.#validate()) return\r\n\r\n        this.#lock()\r\n\r\n        const actor = this._actor\r\n        const ruleItems = getRuleItems(actor)\r\n        const flags = {} as SavedFlags\r\n        const add: BaseItemSourcePF2e[] = []\r\n        const skills: ChoiceObject[] = []\r\n        const languages: ChoiceObject[] = []\r\n        let message = ''\r\n\r\n        for (const item of ruleItems) {\r\n            const uuid = item.getFlag('core', 'sourceId') as ItemUUID\r\n            const category = flattenedUUIDS.get(uuid)!.category as RuleCategory\r\n            const rules = deepClone(item._source.system.rules)\r\n            const selected = this.element.find(`[name=${category}]`).val() as SkillLongForm | Language\r\n            const ruleIndex = rules.findIndex(x => 'pf2e-dailies' in x)\r\n\r\n            if (ruleIndex >= 0) rules.splice(ruleIndex, 1)\r\n\r\n            const value = {\r\n                uuid: item.uuid,\r\n                choice: selected,\r\n                update: { _id: item.id, 'system.rules': rules },\r\n            }\r\n\r\n            if (isSkillCategory(category)) {\r\n                rules.push(createTrainedSkillRule(selected as SkillLongForm))\r\n                skills.push(value)\r\n            } else if (isLanguageCategory(category)) {\r\n                rules.push(createLanguageRule(selected as Language))\r\n                languages.push(value)\r\n            }\r\n\r\n            flags[category] = selected\r\n        }\r\n\r\n        const groups = this.element.find('.window-content .groups .group').toArray()\r\n        for (const el of groups) {\r\n            const group = $(el)\r\n            const category = group.attr('data-category') as ScrollCategory\r\n            const spells = group.find<HTMLInputElement>('[name=\"spell\"]').toArray()\r\n\r\n            for (let i = 0; i < spells.length; i++) {\r\n                const input = $(spells[i])\r\n                const uuid = input.attr('data-uuid') as ItemUUID\r\n                const level = Number(input.attr('data-level')) as OneToTen\r\n                const name = input.attr('value') as string\r\n\r\n                if (uuid) {\r\n                    const scroll = await createSpellScroll(uuid, level, true)\r\n                    if (scroll) add.push(scroll)\r\n                }\r\n\r\n                flags[category] ??= []\r\n                flags[category][i] = { name, uuid }\r\n            }\r\n        }\r\n\r\n        const updateData: EmbeddedDocumentUpdateData<ItemPF2e>[] = []\r\n\r\n        const pushChoices = (category: string, choices: ChoiceObject[], separator = false) => {\r\n            if (!choices.length) return\r\n\r\n            if (separator && message) message += '<hr />'\r\n\r\n            const title = localize(`message.${category}`)\r\n            message += `<p><strong>${title}</strong></p>`\r\n\r\n            for (const entry of choices) {\r\n                message += `<p>${chatUUID(entry.uuid)} <span style=\"text-transform: capitalize;\">${entry.choice}</span></p>`\r\n                updateData.push(entry.update)\r\n            }\r\n        }\r\n\r\n        pushChoices('skills', skills)\r\n        pushChoices('languages', languages, true)\r\n\r\n        if (updateData.length) await actor.updateEmbeddedDocuments('Item', updateData)\r\n\r\n        if (add.length) {\r\n            if (message) message += '<hr />'\r\n            message += `<p><strong>${localize(`message.items`)}</strong></p>`\r\n            const items = (await actor.createEmbeddedDocuments('Item', add)) as ItemPF2e[]\r\n            items.map(x => (message += `<p>${chatUUID(x.uuid)}</p>`))\r\n        }\r\n\r\n        await setFlag(actor, 'saved', flags)\r\n\r\n        message = `${localize('message.changes')}<hr>${message}`\r\n        ChatMessage.create({ content: message, speaker: ChatMessage.getSpeaker({ actor }) })\r\n\r\n        this.close()\r\n    }\r\n\r\n    #onSpellSearch(event: JQuery.ClickEvent<any, any, HTMLAnchorElement>) {\r\n        event.preventDefault()\r\n\r\n        const level = Number(event.currentTarget.dataset.level)\r\n        const levels: number[] = []\r\n\r\n        for (let i = 0; i < level; i++) {\r\n            levels[i] = i + 1\r\n        }\r\n\r\n        const filter: InitialSpellFilters = {\r\n            category: ['spell'],\r\n            classes: [],\r\n            level: levels,\r\n            rarity: [],\r\n            school: [],\r\n            source: [],\r\n            traditions: [],\r\n            traits: [],\r\n        }\r\n\r\n        game.pf2e.compendiumBrowser.openTab('spell', filter)\r\n    }\r\n\r\n    #onClear(event: JQuery.ClickEvent<any, any, HTMLAnchorElement>) {\r\n        event.preventDefault()\r\n        const target = $(event.currentTarget)\r\n        const input = target.prevAll('[name=\"spell\"]').first()\r\n        input.attr('value', '')\r\n        input.attr('data-uuid', '')\r\n        target.addClass('disabled')\r\n    }\r\n\r\n    #onCancel(event: JQuery.ClickEvent) {\r\n        event.preventDefault()\r\n        this.close()\r\n    }\r\n}\r\n","import { MODULE_ID } from '@utils/module'\r\n\r\nexport function hasModuleFlag(doc: foundry.abstract.Document) {\r\n    return getProperty(doc, `flags.${MODULE_ID}`) !== undefined\r\n}\r\n\r\nexport function getFlag<T extends unknown>(doc: foundry.abstract.Document, key: string): T | undefined\r\nexport function getFlag<T extends unknown>(doc: foundry.abstract.Document, key: string, fallback: T): T\r\nexport function getFlag<T extends unknown>(doc: foundry.abstract.Document, key: string, fallback?: T): T | undefined {\r\n    return (doc.getFlag(MODULE_ID, key) as T | undefined) ?? fallback\r\n}\r\n\r\n/**\r\n * @template {foundry.Document} T\r\n * @param {T} doc\r\n * @param {string} key\r\n * @param {any} value\r\n * @returns T\r\n */\r\nexport function setFlag(doc: foundry.abstract.Document, key: string, value: unknown) {\r\n    return doc.setFlag(MODULE_ID, key, value)\r\n}\r\n","import { MODULE_ID } from '@utils/module'\r\n\r\nexport function createTrainedSkillRule(skill: SkillLongForm) {\r\n    return {\r\n        key: 'ActiveEffectLike',\r\n        mode: 'upgrade',\r\n        path: `system.skills.${skill}.rank`,\r\n        value: 1,\r\n        [MODULE_ID]: true,\r\n    } as const\r\n}\r\n\r\nexport function createLanguageRule(language: Language) {\r\n    return {\r\n        key: 'ActiveEffectLike',\r\n        mode: 'add',\r\n        path: 'system.traits.languages.value',\r\n        value: language,\r\n        [MODULE_ID]: true,\r\n    } as const\r\n}\r\n","import { setModuleID } from '@utils/module'\r\nimport { wrapRestForTheNight } from './rest'\r\nimport { renderCharacterSheetPF2e } from './sheet'\r\n\r\nsetModuleID('pf2e-dailies')\r\n\r\nHooks.once('ready', () => {\r\n    wrapRestForTheNight()\r\n})\r\n\r\nHooks.on('renderCharacterSheetPF2e', renderCharacterSheetPF2e)\r\n\r\n/**\r\nBort's Blessing\r\nQuick Study (Loremaster Archetype)\r\nFighter's combat flexibility\r\n */\r\n","import { getRuleItems } from './items'\r\n\r\nexport function wrapRestForTheNight() {\r\n    const original = game.pf2e.actions.restForTheNight\r\n    game.pf2e.actions.restForTheNight = async (options: ActionDefaultOptions) => {\r\n        const result = await original(options)\r\n        if (result.length && options.actors) afterRest(options.actors)\r\n        return result\r\n    }\r\n}\r\n\r\nfunction afterRest(actors: ActorPF2e | ActorPF2e[]) {\r\n    actors = Array.isArray(actors) ? actors : [actors]\r\n\r\n    const characters = actors.filter(x => x.isOfType('character')) as CharacterPF2e[]\r\n    for (const actor of characters) {\r\n        const update: EmbeddedDocumentUpdateData<ItemPF2e>[] = []\r\n        const ruleItems = getRuleItems(actor)\r\n\r\n        for (const item of ruleItems) {\r\n            const rules = deepClone(item._source.system.rules)\r\n            const ruleIndex = rules.findIndex(x => 'pf2e-dailies' in x)\r\n            if (ruleIndex >= 0) {\r\n                rules.splice(ruleIndex, 1)\r\n                update.push({ _id: item.id, 'system.rules': rules })\r\n            }\r\n        }\r\n\r\n        if (update.length) actor.updateEmbeddedDocuments('Item', update)\r\n    }\r\n}\r\n","import { DailiesInterface } from '@apps/interface'\r\nimport { localize } from '@utils/foundry/localize'\r\nimport { hasAnyItem } from './items'\r\n\r\nexport function renderCharacterSheetPF2e(sheet: CharacterSheetPF2e, html: JQuery) {\r\n    const actor = sheet.actor\r\n    if (!hasAnyItem(actor)) return\r\n\r\n    const small = html.find('aside .sidebar .hitpoints .hp-small')\r\n    small\r\n        .append(`<a class=\"roll-icon dailies\" title=\"${localize('sheet.title')}\"><i class=\"fas fa-mug-saucer\"></i></a>`)\r\n        .find('.dailies')\r\n        .on('click', () => new DailiesInterface(actor).render(true, { id: `pf2e-dailies-interface-${actor.id}` }))\r\n\r\n    // TODO remove with next system update\r\n    small\r\n        .find('[data-action=rest]')\r\n        .off('click')\r\n        .on('click', event => game.pf2e.actions.restForTheNight({ event, actors: actor }))\r\n}\r\n"],"names":["SCROLL_CATEGORIES","SKILL_CATEGORIES","LANGUAGE_CATEGORIES","RULE_CATEGORIES","CATEGORIES","esoterica","trickster","longevity","ageless","memories","studies","linguistics","borts","flattenedUUIDS","uuids","Map","category","entries","Object","i","length","uuid","set","index","UUIDS","Array","from","keys","RULE_UUIDS","map","getRuleItems","actor","items","filter","x","includes","getFlag","isOfType","isInvested","isSkillCategory","isLanguageCategory","isScrollCategory","notify","str","arg1","arg2","arg3","type","data","undefined","permanent","ui","notifications","localize","args","key","game","i18n","format","templatePath","path","join","chatUUID","name","SKILL_DICTIONARY","acr","arc","ath","cra","dec","dip","itm","med","nat","occ","prf","rel","soc","ste","sur","thi","SKILL_LONG_FORMS","values","scrolls","Set","async","createSpellScroll","level","temp","spell","fromUuid","toObject","system","value","scrollUUID","scrollCompendiumIds","getScrollCompendiumUUID","scroll","location","heightenedLevel","temporary","traits","push","traditions","sourceId","flags","core","description","LANGUAGE_LIST","subKey","fn","defineProperties","warn","enumerable","configurable","info","error","subLocalize","DailiesInterface","Application","_actor","constructor","options","super","this","defaultOptions","mergeObject","title","template","height","submitOnClose","submitOnChange","dragDrop","dropSelector","getData","fallback","categories","item","entry","get","getAllCategories","skills","rank","skill","actorLanguages","languages","sort","language","skillItems","languageItems","scrollItems","pushItem","list","selected","slots","spellSlot","spellLevel","activateListeners","html","find","on","bind","event","dataString","dataTransfer","input","$","target","typeError","JSON","parse","isCantrip","isRitual","Number","attr","nextAll","first","removeClass","element","addClass","warns","forEach","preventDefault","ruleItems","add","message","rules","deepClone","_source","val","ruleIndex","findIndex","splice","choice","update","_id","id","mode","groups","toArray","el","group","spells","updateData","pushChoices","choices","separator","doc","updateEmbeddedDocuments","createEmbeddedDocuments","setFlag","ChatMessage","create","content","speaker","getSpeaker","close","currentTarget","dataset","levels","classes","rarity","school","source","pf2e","compendiumBrowser","openTab","prevAll","Hooks","once","original","actions","restForTheNight","result","actors","characters","isArray","afterRest","wrapRestForTheNight","sheet","hasAnyItem","small","append","render","off"],"sourceRoot":""}