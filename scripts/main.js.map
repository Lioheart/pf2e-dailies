{
  "version": 3,
  "sources": ["../src/module.js", "../src/data/spell.js", "../src/data/ace.js", "../src/data/blade.js", "../src/data/chain.js", "../src/data/feat.js", "../src/data/flexibility.js", "../src/data/language.js", "../src/data/mind.js", "../src/data/resistance.js", "../src/data/root.js", "../src/data/savant.js", "../src/data/skill.js", "../src/data/tome.js", "../src/dailies.js", "../src/data/familiar.js", "../src/data/rations.js", "../src/pf2e/utils.js", "../src/pf2e/predicate.js", "../src/apps/interface/data.js", "../src/pf2e/skills.js", "../src/pf2e/sluggify.js", "../src/apps/interface/shared.js", "../src/apps/interface/drop.js", "../src/apps/interface/process.js", "../src/apps/interface.js", "../src/chat.js", "../src/pf2e/spell.js", "../src/api.js", "../src/actor.js", "../src/apps/custom/flexibility.js", "../src/apps/custom/mind.js", "../src/apps/custom/savant.js", "../src/apps/custom/tome.js", "../src/apps/custom.js", "../src/rest.js", "../src/main.js"],
  "sourcesContent": ["export const MODULE_ID = 'pf2e-dailies'\r\n\r\nexport const AsyncFunction = async function () {}.constructor\r\n\r\nexport function getSetting(key) {\r\n    return game.settings.get(MODULE_ID, key)\r\n}\r\n\r\nexport function setSetting(key, value) {\r\n    return game.settings.set(MODULE_ID, key, value)\r\n}\r\n\r\nfunction getSettingLocalizationPath(...path) {\r\n    return `${MODULE_ID}.settings.${path.join('.')}`\r\n}\r\n\r\nexport function registerSetting(options) {\r\n    const name = options.name\r\n    options.scope = options.scope ?? 'world'\r\n    options.config = options.config ?? false\r\n    if (options.config) {\r\n        options.name = getSettingLocalizationPath(name, 'name')\r\n        options.hint = getSettingLocalizationPath(name, 'hint')\r\n    }\r\n    if (Array.isArray(options.choices)) {\r\n        options.choices = options.choices.reduce((choices, choice) => {\r\n            choices[choice] = getSettingLocalizationPath(name, 'choices', choice)\r\n            return choices\r\n        }, {})\r\n    }\r\n    game.settings.register(MODULE_ID, name, options)\r\n}\r\n\r\nexport function registerSettingMenu(options) {\r\n    const name = options.name\r\n    options.name = getSettingLocalizationPath('menus', name, 'name')\r\n    options.label = getSettingLocalizationPath('menus', name, 'label')\r\n    options.hint = getSettingLocalizationPath('menus', name, 'hint')\r\n    options.restricted = options.restricted ?? true\r\n    options.icon = options.icon ?? 'fas fa-cogs'\r\n    game.settings.registerMenu(MODULE_ID, name, options)\r\n}\r\n\r\nexport function templatePath(...path) {\r\n    path = path.filter(x => typeof x === 'string')\r\n    return `modules/${MODULE_ID}/templates/${path.join('/')}`\r\n}\r\n\r\nexport function getFlag(doc, key, fallback) {\r\n    return doc.getFlag(MODULE_ID, key) ?? fallback\r\n}\r\n\r\nexport function setFlag(doc, key, value) {\r\n    return doc.setFlag(MODULE_ID, key, value)\r\n}\r\n\r\nexport function localize(...args) {\r\n    let [key, data] = args\r\n    key = `${MODULE_ID}.${key}`\r\n    if (data) return game.i18n.format(key, data)\r\n    return game.i18n.localize(key)\r\n}\r\n\r\nexport function hasLocalization(key) {\r\n    return game.i18n.has(`${MODULE_ID}.${key}`, false)\r\n}\r\n\r\nexport function localizePath(key) {\r\n    return `${MODULE_ID}.${key}`\r\n}\r\n\r\nexport function subLocalize(subKey) {\r\n    const fn = (...args) => localize(`${subKey}.${args[0]}`, args[1])\r\n\r\n    Object.defineProperties(fn, {\r\n        warn: {\r\n            value: (...args) => warn(`${subKey}.${args[0]}`, args[1], args[2]),\r\n            enumerable: false,\r\n            configurable: false,\r\n        },\r\n        info: {\r\n            value: (...args) => info(`${subKey}.${args[0]}`, args[1], args[2]),\r\n            enumerable: false,\r\n            configurable: false,\r\n        },\r\n        error: {\r\n            value: (...args) => error(`${subKey}.${args[0]}`, args[1], args[2]),\r\n            enumerable: false,\r\n            configurable: false,\r\n        },\r\n        has: {\r\n            value: key => hasLocalization(`${subKey}.${key}`),\r\n            enumerable: false,\r\n            configurable: false,\r\n        },\r\n        path: {\r\n            value: key => localizePath(`${subKey}.${key}`),\r\n            enumerable: false,\r\n            configurable: false,\r\n        },\r\n        template: {\r\n            value: (key, { hash }) => fn(key, hash),\r\n            enumerable: false,\r\n            configurable: false,\r\n        },\r\n    })\r\n\r\n    return fn\r\n}\r\n\r\nexport function getChatMessageClass() {\r\n    return CONFIG.ChatMessage.documentClass\r\n}\r\n\r\nfunction notify(str, arg1, arg2, arg3) {\r\n    const type = typeof arg1 === 'string' ? arg1 : 'info'\r\n    const data = typeof arg1 === 'object' ? arg1 : typeof arg2 === 'object' ? arg2 : undefined\r\n    const permanent = typeof arg1 === 'boolean' ? arg1 : typeof arg2 === 'boolean' ? arg2 : arg3 ?? false\r\n\r\n    ui.notifications.notify(localize(str, data), type, { permanent })\r\n}\r\n\r\nexport function warn(...args) {\r\n    const [str, arg1, arg2] = args\r\n    notify(str, 'warning', arg1, arg2)\r\n}\r\n\r\nexport function info(...args) {\r\n    const [str, arg1, arg2] = args\r\n    notify(str, 'info', arg1, arg2)\r\n}\r\n\r\nexport function error(...args) {\r\n    const [str, arg1, arg2] = args\r\n    notify(str, 'error', arg1, arg2)\r\n}\r\n\r\nexport function getSourceId(doc) {\r\n    return doc.getFlag('core', 'sourceId')\r\n}\r\n\r\nexport function includesSourceId(doc, list) {\r\n    const sourceId = getSourceId(doc)\r\n    return sourceId ? list.includes(sourceId) : false\r\n}\r\n\r\nfunction getItemSourceIdCondition(sourceId) {\r\n    return Array.isArray(sourceId) ? item => includesSourceId(item, sourceId) : item => getSourceId(item) === sourceId\r\n}\r\n\r\nexport function getItems(actor, itemTypes) {\r\n    return itemTypes ? itemTypes.flatMap(type => actor.itemTypes[type]) : actor.items\r\n}\r\n\r\nexport function findItemWithSourceId(actor, sourceId, itemTypes) {\r\n    return getItems(actor, itemTypes).find(getItemSourceIdCondition(sourceId))\r\n}\r\n\r\nexport function sequenceArray(start, end) {\r\n    const levels = []\r\n\r\n    if (start <= end) {\r\n        for (let i = start; i <= end; i++) levels.push(i)\r\n    } else {\r\n        for (let i = start; i >= end; i--) levels.push(i)\r\n    }\r\n\r\n    return levels\r\n}\r\n\r\nexport function capitalize(str) {\r\n    if (!str) return ''\r\n    return str[0].toUpperCase() + str.slice(1)\r\n}\r\n\r\nexport function chatUUID(uuid, name) {\r\n    if (name) return `@UUID[${uuid}]{${name}}`\r\n    return `@UUID[${uuid}]`\r\n}\r\n\r\nexport function fakeChatUUID(name) {\r\n    return `<span style=\"background: #DDD;\r\n    padding: 1px 4px;\r\n    border: 1px solid var(--color-border-dark-tertiary);\r\n    border-radius: 2px;\r\n    white-space: nowrap;\r\n    word-break: break-all;\">${name}</span>`\r\n}\r\n", "export function createSpellDaily(key, uuid, filter = {}, level, label) {\r\n    const daily = {\r\n        key,\r\n        label,\r\n        item: {\r\n            uuid,\r\n        },\r\n        rows: [\r\n            {\r\n                type: 'drop',\r\n                slug: 'spell',\r\n                filter: {\r\n                    type: 'spell',\r\n                    search: filter,\r\n                },\r\n            },\r\n        ],\r\n        process: async ({ addSpell, utils, fields, messages }) => {\r\n            const uuid = fields.spell.uuid\r\n            const source = await utils.createSpellSource(uuid)\r\n            const label = `${source.name} (Level ${level || source.system.level.value})`\r\n            addSpell(source, level)\r\n            messages.add('spells', { uuid, label })\r\n        },\r\n    }\r\n    return daily\r\n}\r\n", "import { localizePath } from '../module'\r\nimport { createSpellDaily } from './spell'\r\n\r\nexport function tricksterAce() {\r\n    const daily = createSpellDaily(\r\n        'ace',\r\n        'Compendium.pf2e.feats-srd.Item.POrE3ZgBRdBL9MsW',\r\n        {\r\n            category: ['cantrip', 'spell'],\r\n            level: 4,\r\n        },\r\n        4\r\n    )\r\n\r\n    const row = daily.rows[0]\r\n    row.filter.drop = item => {\r\n        const castTime = item.system.time.value\r\n        if (castTime.includes('hour') || (castTime.includes('min') && parseInt(castTime) > 10)) {\r\n            return { error: localizePath('interface.error.drop.wrongSpellTime'), data: { time: '10 min' } }\r\n        }\r\n        return true\r\n    }\r\n\r\n    return daily\r\n}\r\n", "import { localize } from '../module'\r\n\r\nexport const bladeAlly = {\r\n    key: 'blade',\r\n    item: {\r\n        uuid: 'Compendium.pf2e.classfeatures.Item.EtltLdiy9kNfHU0c', // Blade Ally\r\n    },\r\n    children: [\r\n        {\r\n            slug: 'good',\r\n            uuid: 'Compendium.pf2e.classfeatures.Item.nxZYP3KGfTSkaW6J', // The Tenets of Good\r\n        },\r\n        {\r\n            slug: 'evil',\r\n            uuid: 'Compendium.pf2e.classfeatures.Item.JiY2ZB4FkK8RJm4T', // The Tenets of Evil\r\n        },\r\n        {\r\n            slug: 'liberator',\r\n            uuid: 'Compendium.pf2e.classfeatures.Item.FCoMFUsth4xB4veC', // Liberator\r\n        },\r\n        {\r\n            slug: 'paladin',\r\n            uuid: 'Compendium.pf2e.classfeatures.Item.peEXunfbSD8WcMFk', // Paladin\r\n        },\r\n        {\r\n            slug: 'antipaladin',\r\n            uuid: 'Compendium.pf2e.classfeatures.Item.EQ6DVIQHAUXUhY6Y', // Antipaladin\r\n        },\r\n        {\r\n            slug: 'tyrant',\r\n            uuid: 'Compendium.pf2e.classfeatures.Item.HiIvez0TqESbleB5', // Tyrant\r\n        },\r\n        {\r\n            slug: 'spirit',\r\n            uuid: 'Compendium.pf2e.feats-srd.Item.h5ksUZlrVGBjq6p4', // Radiant Blade Spirit\r\n        },\r\n        {\r\n            slug: 'master',\r\n            uuid: 'Compendium.pf2e.feats-srd.Item.jYEMVfrXJLpXS6aC', // Radiant Blade Master\r\n        },\r\n    ],\r\n    rows: [\r\n        {\r\n            type: 'select',\r\n            slug: 'weapon',\r\n            label: () => localize('label.blade.weapon'),\r\n            options: ({ actor }) => {\r\n                return actor.itemTypes.weapon\r\n                    .filter(weapon => !weapon.isAlchemical)\r\n                    .map(weapon => ({ value: weapon.id, label: weapon.name }))\r\n            },\r\n        },\r\n        {\r\n            type: 'select',\r\n            slug: 'rune',\r\n            label: () => localize('label.blade.rune'),\r\n            options: ({ children }) => {\r\n                const runes = ['returning', 'shifting']\r\n\r\n                const { antipaladin, evil, good, liberator, master, paladin, spirit, tyrant } = children\r\n\r\n                if (spirit) {\r\n                    runes.push('flaming')\r\n                    if (good) runes.push('holy')\r\n                    if (evil) runes.push('unholy')\r\n                    if (liberator || antipaladin) runes.push('anarchic')\r\n                    if (paladin || tyrant) runes.push('axiomatic')\r\n                }\r\n\r\n                if (good) runes.push('disrupting', 'ghost-touch')\r\n                if (master) runes.push('greater-disrupting', 'keen')\r\n                if (evil) runes.push('fearsome')\r\n\r\n                return runes.map(value => ({\r\n                    value,\r\n                    label: localizeRune(value),\r\n                }))\r\n            },\r\n            condition: ({ actor }) => actor.itemTypes.weapon.filter(weapon => !weapon.isAlchemical).length,\r\n        },\r\n    ],\r\n    process: async ({ actor, fields, addRule, messages }) => {\r\n        const weaponId = fields.weapon.value\r\n        const rune = fields.rune.value\r\n\r\n        const weapon = actor.items.get(weaponId)\r\n        if (!weapon) return\r\n\r\n        addRule(\r\n            {\r\n                definition: [`item:id:${weaponId}`],\r\n                key: 'AdjustStrike',\r\n                mode: 'add',\r\n                property: 'property-runes',\r\n                value: rune,\r\n            },\r\n            weapon\r\n        )\r\n\r\n        addRule(\r\n            {\r\n                key: 'CriticalSpecialization',\r\n                predicate: [\r\n                    {\r\n                        or: [`item:category:${weapon.category}`, `item:id:${weaponId}`],\r\n                    },\r\n                ],\r\n            },\r\n            weapon\r\n        )\r\n\r\n        const name = weapon.name !== weapon._source.name ? `... ${weapon._source.name}` : weapon.name\r\n\r\n        messages.addGroup('blade')\r\n        messages.add('blade', {\r\n            uuid: weapon.uuid,\r\n            label: name,\r\n            selected: localizeRune(rune),\r\n        })\r\n    },\r\n}\r\n\r\nfunction localizeRune(value) {\r\n    const slugged = value.replace(/-\\w/, match => match[1].toUpperCase())\r\n    return game.i18n.localize(`PF2E.WeaponPropertyRune.${slugged}.Name`)\r\n}\r\n", "const rows = ['first', 'second', 'third', 'fourth', 'fifth', 'sixth', 'seventh']\r\n\r\nexport function createScrollChain(key, uuids, label) {\r\n    const daily = {\r\n        key,\r\n        label,\r\n        item: {\r\n            uuid: uuids[0],\r\n        },\r\n        children: [\r\n            {\r\n                slug: 'expert',\r\n                uuid: uuids[1],\r\n            },\r\n            {\r\n                slug: 'master',\r\n                uuid: uuids[2],\r\n            },\r\n        ],\r\n        rows: [\r\n            createRow('first', 1), //\r\n            createRow('second', 2, 8),\r\n            createRow('third', 3, undefined, 'expert'), //\r\n            createRow('fourth', 4, 14, 'expert'),\r\n            createRow('fifth', 5, 16, 'expert'),\r\n            createRow('sixth', 6, undefined, 'master'), //\r\n            createRow('seventh', 7, 20, 'master'),\r\n        ],\r\n        process: async ({ utils, fields, addItem, messages }) => {\r\n            for (const field of Object.values(fields)) {\r\n                const uuid = field.uuid\r\n                const level = rows.indexOf(field.row) + 1\r\n                const source = await utils.createSpellScrollSource({ uuid, level })\r\n                addItem(source)\r\n                messages.add('scrolls', { uuid, label: source.name })\r\n            }\r\n        },\r\n    }\r\n    return daily\r\n}\r\n\r\nfunction createRow(slug, level, minActorLevel, child) {\r\n    const row = {\r\n        type: 'drop',\r\n        slug,\r\n        label: `PF2E.SpellLevel${level}`,\r\n        filter: {\r\n            type: 'spell',\r\n            search: {\r\n                category: ['spell'],\r\n                level,\r\n            },\r\n        },\r\n    }\r\n    if (minActorLevel) row.condition = ({ actor }) => actor.level >= minActorLevel\r\n    if (child) row.childPredicate = [child]\r\n    return row\r\n}\r\n", "export function createFeatDaily(key, uuid, filter = {}, label) {\r\n    const daily = {\r\n        key,\r\n        label,\r\n        item: {\r\n            uuid,\r\n        },\r\n        rows: [\r\n            {\r\n                type: 'drop',\r\n                slug: 'feat',\r\n                filter: {\r\n                    type: 'feat',\r\n                    search: filter,\r\n                },\r\n            },\r\n        ],\r\n        process: async ({ utils, fields, addFeat, messages }) => {\r\n            const uuid = fields.feat.uuid\r\n            const source = await utils.createFeatSource(uuid)\r\n            addFeat(source)\r\n            messages.add('feats', { uuid })\r\n        },\r\n    }\r\n    return daily\r\n}\r\n", "export const combatFlexibility = {\r\n    key: 'flexibility',\r\n    item: {\r\n        uuid: 'Compendium.pf2e.classfeatures.Item.8g6HzARbhfcgilP8', // Combat Flexibility\r\n    },\r\n    children: [\r\n        {\r\n            slug: 'improved',\r\n            uuid: 'Compendium.pf2e.classfeatures.Item.W2rwudMNcAxs8VoX', // Improved Flexibility\r\n        },\r\n    ],\r\n    rows: [\r\n        createRow('flexibility', 8), //\r\n        createRow('improved', 14, 'improved'),\r\n    ],\r\n    process: async ({ utils, fields, addFeat, messages, children }) => {\r\n        const uuid = fields.flexibility.uuid\r\n        const source = await utils.createFeatSource(uuid)\r\n        addFeat(source)\r\n        messages.add('feats', { uuid })\r\n\r\n        if (children.improved) {\r\n            const uuid = fields.improved.uuid\r\n            const source = await utils.createFeatSource(uuid)\r\n            addFeat(source, children.improved)\r\n            messages.add('feats', { uuid })\r\n        }\r\n    },\r\n}\r\n\r\nfunction createRow(slug, level, child) {\r\n    const row = {\r\n        type: 'drop',\r\n        label: `PF2E.Level${level}`,\r\n        slug,\r\n        filter: {\r\n            type: 'feat',\r\n            search: {\r\n                category: ['class'],\r\n                traits: ['fighter'],\r\n                level,\r\n            },\r\n        },\r\n    }\r\n    if (child) row.childPredicate = [child]\r\n    return row\r\n}\r\n", "export function createLanguageDaily(key, uuid, label) {\r\n    return {\r\n        key,\r\n        label,\r\n        item: {\r\n            uuid,\r\n        },\r\n        rows: [\r\n            {\r\n                type: 'select',\r\n                slug: 'language',\r\n                options: ({ actor, utils }) => {\r\n                    const actorLanguages = actor.system.traits.languages.value\r\n                    return utils.languageNames.filter(x => !actorLanguages.includes(x)).sort()\r\n                },\r\n                labelizer: ({ utils }) => utils.languageLabel,\r\n            },\r\n        ],\r\n        process: ({ addRule, utils, fields, messages }) => {\r\n            const value = fields.language.value\r\n            const source = utils.createLanguageRuleElement({ language: value })\r\n            addRule(source)\r\n            messages.add('languages', { uuid, selected: utils.languageLabel(value), label })\r\n        },\r\n    }\r\n}\r\n", "import { MODULE_ID, getFlag, localize, subLocalize } from '../module'\r\n\r\nconst MIND_WEAPON_UUID = 'Compendium.pf2e-dailies.equipment.Item.VpmEozw21aRxX15P'\r\n\r\nconst WEAPON_BASE_TYPES = {\r\n    0: { die: 'd4', traits: ['finesse', 'agile'], usage: 'held-in-one-hand' },\r\n    1: { die: 'd6', traits: ['finesse'], usage: 'held-in-one-hand' },\r\n    2: { die: 'd8', traits: [], usage: 'held-in-one-hand' },\r\n    3: { die: 'd10', traits: ['reach'], usage: 'held-in-two-hands' },\r\n}\r\n\r\nconst WEAPON_GROUPS = {\r\n    slashing: 'sword',\r\n    piercing: 'spear',\r\n    bludgeoning: 'club',\r\n}\r\n\r\nconst WEAPON_TRAITS = ['grapple', 'nonlethal', 'shove', 'trip', 'modular']\r\n\r\nconst WEAPON_DAMAGE_TYPES = Object.keys(WEAPON_GROUPS)\r\n\r\nconst WEAPON_RUNES = ['corrosive', 'disrupting', 'flaming', 'frost', 'shock', 'thundering']\r\n\r\nconst WEAPON_GREATER_RUNES = [\r\n    'anarchic',\r\n    'axiomatic',\r\n    'greaterCorrosive',\r\n    'greaterDisrupting',\r\n    'greaterFlaming',\r\n    'greaterFrost',\r\n    'greaterShock',\r\n    'greaterThundering',\r\n    'holy',\r\n    'unholy',\r\n]\r\n\r\nexport const mindSmith = {\r\n    key: 'mindsmith',\r\n    item: {\r\n        uuid: 'Compendium.pf2e.feats-srd.Item.juikoiIA0Jy8PboY', // Mind Smith Dedication\r\n    },\r\n    children: [\r\n        {\r\n            slug: 'weapon',\r\n            uuid: MIND_WEAPON_UUID, // Mind Weapon\r\n        },\r\n        {\r\n            slug: 'mental',\r\n            uuid: 'Compendium.pf2e.feats-srd.Item.PccekOihIbRWdDky', // Malleable Mental Forge\r\n        },\r\n        {\r\n            slug: 'runic',\r\n            uuid: 'Compendium.pf2e.feats-srd.Item.2uQbQgz1AbjzcFSp', // Runic Mind Smithing\r\n        },\r\n        {\r\n            slug: 'advanced',\r\n            uuid: 'Compendium.pf2e.feats-srd.Item.fgnfXwFcn9jZlXGD', // Advanced Runic Mind Smithing\r\n        },\r\n    ],\r\n    rows: [\r\n        {\r\n            type: 'alert',\r\n            slug: 'alert',\r\n            message: () => localize('interface.alert.weapon'),\r\n            fix,\r\n            childPredicate: [{ not: 'weapon' }],\r\n        },\r\n        {\r\n            type: 'select',\r\n            slug: 'smith',\r\n            label: () => localize('label.mindsmith'),\r\n            options: WEAPON_DAMAGE_TYPES,\r\n            labelizer: ({ utils }) => utils.damageLabel,\r\n            childPredicate: ['weapon'],\r\n        },\r\n        {\r\n            type: 'select',\r\n            slug: 'mental',\r\n            label: () => localize('label.mentalforge'),\r\n            options: WEAPON_TRAITS,\r\n            labelizer: ({ utils }) => utils.weaponTraitLabel,\r\n            childPredicate: ['weapon', 'mental'],\r\n        },\r\n        {\r\n            type: 'select',\r\n            slug: 'runic',\r\n            label: () => localize('label.runicmind'),\r\n            options: WEAPON_RUNES,\r\n            labelizer: ({ utils }) => utils.weaponPropertyRunesLabel,\r\n            childPredicate: ['weapon', 'runic', { not: 'advanced' }],\r\n            condition: ({ children, utils }) => utils.hasFreePropertySlot(children.weapon),\r\n        },\r\n        {\r\n            type: 'select',\r\n            slug: 'advanced',\r\n            label: () => localize('label.runicmind'),\r\n            options: WEAPON_GREATER_RUNES,\r\n            labelizer: ({ utils }) => utils.weaponPropertyRunesLabel,\r\n            childPredicate: ['weapon', 'advanced'],\r\n            condition: ({ children, utils }) => utils.hasFreePropertySlot(children.weapon),\r\n        },\r\n    ],\r\n    process: ({ children, updateItem, fields, messages, item, utils }) => {\r\n        const weapon = children.weapon\r\n        if (!weapon) return\r\n\r\n        messages.addGroup('mindsmith')\r\n\r\n        const selected = fields.smith.value\r\n        updateItem({ _id: weapon.id, 'system.damage.damageType': selected, 'system.group': WEAPON_GROUPS[selected] })\r\n        messages.add('mindsmith', { selected: utils.damageLabel(selected), uuid: item.uuid, label: 'mindsmith' })\r\n\r\n        if (children.mental) {\r\n            const selected = fields.mental.value\r\n            const traits = deepClone(weapon._source.system.traits?.value ?? [])\r\n            if (!traits.includes(selected)) traits.push(selected)\r\n            updateItem({ _id: weapon.id, 'system.traits.value': traits })\r\n            messages.add('mindsmith', {\r\n                selected: utils.weaponTraitLabel(selected),\r\n                uuid: children.mental.uuid,\r\n                label: 'mentalforge',\r\n            })\r\n        }\r\n\r\n        if ((children.advanced || children.runic) && utils.hasFreePropertySlot(weapon)) {\r\n            const child = children.advanced ?? children.runic\r\n            const freeSlot = utils.getFreePropertyRuneSlot(weapon)\r\n            const field = fields.advanced ?? fields.runic\r\n            const selected = field.value\r\n\r\n            if (freeSlot && !weapon.system.runes.property.includes(selected)) {\r\n                updateItem({ _id: weapon.id, [`system.${freeSlot}.value`]: selected, [`flags.${MODULE_ID}.runeSlot`]: freeSlot })\r\n                messages.add('mindsmith', {\r\n                    selected: utils.weaponPropertyRunesLabel(selected),\r\n                    uuid: child.uuid,\r\n                    label: 'runicmind',\r\n                })\r\n            }\r\n        }\r\n    },\r\n    rest: ({ item, sourceId, updateItem }) => {\r\n        if (sourceId !== MIND_WEAPON_UUID) return\r\n\r\n        let traits = item._source.system.traits?.value ?? []\r\n        traits = traits.filter(trait => !WEAPON_TRAITS.includes(trait))\r\n        updateItem({ _id: item.id, 'system.traits.value': traits })\r\n\r\n        const runeSlot = getFlag(item, 'runeSlot')\r\n        if (runeSlot) {\r\n            updateItem({ _id: item.id, [`system.${runeSlot}.value`]: null, [`flags.${MODULE_ID}.-=runeSlot`]: true })\r\n        }\r\n    },\r\n}\r\n\r\nasync function fix({ actor }) {\r\n    const localize = subLocalize('dialog.weapon')\r\n\r\n    let content = localize('flavor')\r\n\r\n    for (const key of ['0', '1', '2', '3']) {\r\n        const label = localize(`option.${key}`)\r\n        content += `<label><input type=\"radio\" name=\"type\" value=\"${key}\">${label}</label>`\r\n    }\r\n\r\n    const weapon = await Dialog.wait(\r\n        {\r\n            title: localize('title'),\r\n            content,\r\n            buttons: {\r\n                yes: {\r\n                    icon: '<i class=\"fas fa-save\"></i>',\r\n                    label: localize('accept'),\r\n                    callback: onWeaponSelected,\r\n                },\r\n                no: {\r\n                    icon: '<i class=\"fas fa-times\"></i>',\r\n                    label: localize('cancel'),\r\n                    callback: () => null,\r\n                },\r\n            },\r\n            close: () => null,\r\n        },\r\n        {},\r\n        { id: 'pf2e-dailies-weapon', width: 600 }\r\n    )\r\n\r\n    if (weapon) {\r\n        await actor.createEmbeddedDocuments('Item', [weapon])\r\n        return true\r\n    }\r\n\r\n    return false\r\n}\r\n\r\nasync function onWeaponSelected(html) {\r\n    const localize = subLocalize('dialog.weapon')\r\n\r\n    const selection = html.find('[name=type]:checked').val()\r\n    if (!selection) {\r\n        localize.warn('error.noSelection')\r\n        return\r\n    }\r\n\r\n    const weapon = (await fromUuid(MIND_WEAPON_UUID))?.toObject()\r\n    if (!weapon) {\r\n        localize.warn('error.missing')\r\n        return\r\n    }\r\n\r\n    const stats = WEAPON_BASE_TYPES[selection]\r\n\r\n    setProperty(weapon, 'system.damage.die', stats.die)\r\n    setProperty(weapon, 'system.traits.value', stats.traits.slice())\r\n    setProperty(weapon, 'system.usage.value', stats.usage)\r\n\r\n    return weapon\r\n}\r\n", "export function createResistancelDaily(key, uuid, resistances, resistance, label, random) {\r\n    const daily = {\r\n        key,\r\n        label,\r\n        item: {\r\n            uuid,\r\n        },\r\n        rows: [\r\n            {\r\n                type: random ? 'random' : 'select',\r\n                slug: 'resistance',\r\n                options: resistances,\r\n                labelizer: ({ utils }) => utils.resistanceLabel,\r\n            },\r\n        ],\r\n        process: async ({ utils, fields, actor, addRule, messages }) => {\r\n            const type = random ? await utils.randomOption(resistances) : fields.resistance.value\r\n            const value =\r\n                typeof resistance === 'number' ? resistance : resistance === 'half' ? utils.halfLevelValue(actor) : actor.level\r\n            const rule = utils.createResistanceRuleElement({ type, value })\r\n            addRule(rule)\r\n            messages.add('resistances', { uuid, selected: utils.resistanceLabel(type, value), label, random })\r\n        },\r\n    }\r\n    return daily\r\n}\r\n", "const effectUUID = 'Compendium.pf2e.feat-effects.Item.jO7wMhnjT7yoAtQg'\r\n\r\nexport const rootMagic = {\r\n    key: 'root',\r\n    item: {\r\n        uuid: 'Compendium.pf2e.feats-srd.Item.22P7IFyhrF7Fbw8B',\r\n    },\r\n    rows: [\r\n        {\r\n            type: 'select',\r\n            slug: 'target',\r\n            options: ({ actor, utils }) => {\r\n                const actors = utils.getPlayersActors(actor)\r\n                return actors.map(a => ({ value: a.id, label: a.name }))\r\n            },\r\n        },\r\n    ],\r\n    process: ({ fields, messages }) => {\r\n        const actorId = fields.target.value\r\n        const actor = game.actors.get(actorId)\r\n        if (!actor) return\r\n        messages.addGroup('root')\r\n        messages.add('root', { uuid: effectUUID, selected: actor.name })\r\n    },\r\n}\r\n", "export const scrollSavant = {\r\n    key: 'savant',\r\n    item: {\r\n        uuid: 'Compendium.pf2e.feats-srd.Item.u5DBg0LrBUKP0JsJ', // Scroll Savant\r\n    },\r\n    prepare: ({ actor }) => {\r\n        const { maxSlot, maxTradition } = getSpellcastingTraditionDetails(actor, 'arcane')\r\n\r\n        const custom = {\r\n            first: { level: maxSlot - 2, condition: true },\r\n            second: { level: maxSlot - 3, condition: true },\r\n            third: { level: maxSlot - 4, condition: maxTradition >= 3 && maxSlot >= 5 },\r\n            fourth: { level: maxSlot - 5, condition: maxTradition >= 4 && maxSlot >= 6 },\r\n        }\r\n\r\n        return custom\r\n    },\r\n    rows: ['first', 'second', 'third', 'fourth'].map(rowName => {\r\n        const row = {\r\n            type: 'drop',\r\n            slug: rowName,\r\n            label: ({ custom }) => `PF2E.SpellLevel${custom[rowName].level}`,\r\n            filter: {\r\n                type: 'spell',\r\n                search: ({ custom }) => ({\r\n                    category: ['spell'],\r\n                    traditions: ['arcane'],\r\n                    level: custom[rowName].level,\r\n                }),\r\n            },\r\n            condition: ({ custom }) => custom[rowName].condition,\r\n        }\r\n        return row\r\n    }),\r\n    process: async ({ utils, fields, custom, addItem, messages }) => {\r\n        for (const field of Object.values(fields)) {\r\n            const uuid = field.uuid\r\n            const source = await utils.createSpellScrollSource({ uuid, level: custom[field.row].level })\r\n            addItem(source)\r\n            messages.add('scrolls', { uuid, label: source.name })\r\n        }\r\n    },\r\n}\r\n\r\nfunction getSpellcastingTraditionDetails(actor, tradition) {\r\n    let maxSlot = 1\r\n    let maxTradition = 0\r\n\r\n    for (const entry of actor.spellcasting.regular) {\r\n        if (entry.flags && 'pf2e-staves' in entry.flags) continue // we skip staff entries\r\n\r\n        const slots = entry.system.slots\r\n        for (const key in slots) {\r\n            const slot = slots[key]\r\n            if (slot.max) maxSlot = Math.max(maxSlot, Number(key.slice(4)))\r\n        }\r\n\r\n        if (entry.tradition === tradition) maxTradition = Math.max(maxTradition, entry.rank)\r\n    }\r\n\r\n    return { maxSlot: Math.min(maxSlot, 10), maxTradition }\r\n}\r\n", "export function createTrainedSkillDaily(key, uuid, label) {\r\n    const daily = {\r\n        key,\r\n        label,\r\n        item: {\r\n            uuid,\r\n        },\r\n        rows: [\r\n            {\r\n                type: 'combo',\r\n                slug: 'skill',\r\n                options: ({ actor, utils }) => {\r\n                    const actorSkills = actor.skills\r\n                    return utils.skillNames.filter(x => actorSkills[x].rank < 1)\r\n                },\r\n                labelizer: ({ utils }) => utils.skillLabel,\r\n            },\r\n        ],\r\n        process: ({ fields, addItem, addRule, utils, messages }) => {\r\n            let value = fields.skill.value\r\n\r\n            if (fields.skill.input === 'true') {\r\n                const source = utils.createLoreSource({ name: value, rank: 1 })\r\n                addItem(source)\r\n            } else {\r\n                const source = utils.createSkillRuleElement({ skill: value, value: 1 })\r\n                value = utils.skillLabel(value)\r\n                addRule(source)\r\n            }\r\n\r\n            messages.add('skills', { uuid, selected: value, label })\r\n        },\r\n    }\r\n    return daily\r\n}\r\n\r\nexport function createTrainedLoreDaily(key, uuid, label) {\r\n    const daily = {\r\n        key,\r\n        label,\r\n        item: {\r\n            uuid,\r\n        },\r\n        rows: [\r\n            {\r\n                type: 'input',\r\n                slug: 'skill',\r\n            },\r\n        ],\r\n        process: ({ addItem, utils, fields, messages }) => {\r\n            const value = fields.skill.value\r\n            const source = utils.createLoreSource({ name: value, rank: 1 })\r\n            addItem(source)\r\n            messages.add('skills', { uuid, selected: value, label })\r\n        },\r\n    }\r\n    return daily\r\n}\r\n", "export const thaumaturgeTome = {\r\n    key: 'tome',\r\n    item: {\r\n        uuid: 'Compendium.pf2e.classfeatures.Item.MyN1cQgE0HsLF20e', // Tome\r\n    },\r\n    children: [\r\n        {\r\n            slug: 'adept',\r\n            uuid: 'Compendium.pf2e.classfeatures.Item.Obm4ItMIIr0whYeO', // Implement Adept\r\n            condition: createChildCondition('adept'),\r\n        },\r\n        {\r\n            slug: 'second',\r\n            uuid: 'Compendium.pf2e.classfeatures.Item.ZEUxZ4Ta1kDPHiq5', // Second Adept\r\n            condition: createChildCondition('adept'),\r\n        },\r\n        {\r\n            slug: 'intense',\r\n            uuid: 'Compendium.pf2e.feats-srd.Item.yRRM1dsY6jakEMaC', // Intense Implement\r\n        },\r\n        {\r\n            slug: 'paragon',\r\n            uuid: 'Compendium.pf2e.classfeatures.Item.QEtgbY8N2V4wTbsI', // Implement Paragon\r\n            condition: createChildCondition('paragon'),\r\n        },\r\n    ],\r\n    prepare: ({ utils, actor, children }) => {\r\n        const skillNames = utils.skillNames\r\n        const actorLevel = actor.level\r\n        const actorSkills = actor.skills\r\n\r\n        const custom = {\r\n            first: { options: [], rank: 1 },\r\n            second: { options: [], rank: 1 },\r\n        }\r\n\r\n        // Implement Paragon\r\n        if (children.paragon) {\r\n            const skills = skillNames.filter(x => actorSkills[x].rank < 4)\r\n            custom.first = { rank: 4, options: skills }\r\n            custom.second = { rank: 4, options: skills }\r\n        }\r\n        // Intense Implement or Second Adept or Implement Adept\r\n        else if (children.intense || children.adept || children.second) {\r\n            const masters = skillNames.filter(x => actorSkills[x].rank < 3)\r\n\r\n            if (actorLevel >= 9) {\r\n                custom.first = { rank: 3, options: masters }\r\n                custom.second = { rank: 3, options: masters }\r\n            } else {\r\n                const experts = skillNames.filter(x => actorSkills[x].rank < 2)\r\n                custom.first = { rank: 2, options: experts }\r\n                custom.second = { rank: 3, options: masters }\r\n            }\r\n        }\r\n        // Tome\r\n        else {\r\n            if (actorLevel >= 5) {\r\n                const experts = skillNames.filter(x => actorSkills[x].rank < 2)\r\n                custom.first = { rank: 2, options: experts }\r\n                custom.second = { rank: 2, options: experts }\r\n            } else if (actorLevel >= 3) {\r\n                const trained = skillNames.filter(x => actorSkills[x].rank < 1)\r\n                const experts = skillNames.filter(x => actorSkills[x].rank < 2)\r\n                custom.first = { rank: 1, options: trained }\r\n                custom.second = { rank: 2, options: experts }\r\n            } else {\r\n                const trained = skillNames.filter(x => actorSkills[x].rank < 1)\r\n                custom.first = { rank: 1, options: trained }\r\n                custom.second = { rank: 1, options: trained }\r\n            }\r\n        }\r\n\r\n        return custom\r\n    },\r\n    rows: ['first', 'second'].map(rowName => {\r\n        const row = {\r\n            type: 'combo',\r\n            slug: rowName,\r\n            label: ({ custom, utils }) => utils.proficiencyLabel(custom[rowName].rank),\r\n            options: ({ custom }) => custom[rowName].options,\r\n            labelizer: ({ utils }) => utils.skillLabel,\r\n        }\r\n        return row\r\n    }),\r\n    process: ({ custom, fields, utils, messages, addItem, addRule }) => {\r\n        messages.addGroup('tome', 65)\r\n\r\n        for (const rowName of ['first', 'second']) {\r\n            const rank = custom[rowName].rank\r\n            let value = fields[rowName].value\r\n\r\n            if (fields[rowName].input === 'true') {\r\n                const source = utils.createLoreSource({ name: value, rank })\r\n                addItem(source)\r\n            } else {\r\n                const source = utils.createSkillRuleElement({ skill: value, value: rank })\r\n                value = utils.skillLabel(value)\r\n                addRule(source)\r\n            }\r\n\r\n            messages.add('tome', { label: utils.proficiencyLabel(rank), selected: value })\r\n        }\r\n    },\r\n}\r\n\r\nfunction createChildCondition(option) {\r\n    return function ({ item, utils }) {\r\n        return utils.getChoiSetRuleSelection(item, option) === 'tome'\r\n    }\r\n}\r\n", "import { utils } from './api'\r\nimport { tricksterAce } from './data/ace'\r\nimport { bladeAlly } from './data/blade'\r\nimport { createScrollChain } from './data/chain'\r\nimport { createFeatDaily } from './data/feat'\r\nimport { combatFlexibility } from './data/flexibility'\r\nimport { createLanguageDaily } from './data/language'\r\nimport { mindSmith } from './data/mind'\r\nimport { createResistancelDaily } from './data/resistance'\r\nimport { rootMagic } from './data/root'\r\nimport { scrollSavant } from './data/savant'\r\nimport { createTrainedLoreDaily, createTrainedSkillDaily } from './data/skill'\r\nimport { thaumaturgeTome } from './data/tome'\r\nimport { AsyncFunction, error, getSetting, getSourceId, warn } from './module'\r\n\r\nconst DEPRECATED_CUSTOM_DAILIES = ['root-magic']\r\n\r\nexport const BUILTINS_DAILIES = [\r\n    thaumaturgeTome,\r\n    createTrainedSkillDaily('longevity', 'Compendium.pf2e.feats-srd.Item.WoLh16gyDp8y9WOZ'), // Ancestral Longevity\r\n    createTrainedSkillDaily('ageless', 'Compendium.pf2e.feats-srd.Item.wylnETwIz32Au46y'), // Ageless Spirit\r\n    createTrainedSkillDaily('memories', 'Compendium.pf2e.feats-srd.Item.ptEOt3lqjxUnAW62'), // Ancient Memories\r\n    createTrainedSkillDaily('studies', 'Compendium.pf2e.feats-srd.Item.9bgl6qYWKHzqWZj0'), // Flexible Studies\r\n    createTrainedLoreDaily('study', 'Compendium.pf2e.feats-srd.Item.aLJsBBZzlUK3G8MW'), // Quick Study\r\n    createLanguageDaily('linguistics', 'Compendium.pf2e.feats-srd.Item.eCWQU16hRLfN1KaX'), // Ancestral Linguistics\r\n    createLanguageDaily('borts', 'Compendium.pf2e.equipment-srd.Item.iS7hAQMAaThHYE8g'), // Bort's Blessing\r\n    createResistancelDaily(\r\n        'elementalist',\r\n        'Compendium.pf2e.feats-srd.Item.tx9pkrpmtqe4FnvS',\r\n        ['air', 'earth', 'fire', 'water'],\r\n        'half',\r\n        'elementalist'\r\n    ), // Elementalist Dedication\r\n    createResistancelDaily(\r\n        'ganzi',\r\n        'Compendium.pf2e.heritages.Item.3reGfXH0S82hM7Gp',\r\n        ['acid', 'electricity', 'sonic'],\r\n        'half',\r\n        'ganzi',\r\n        true\r\n    ), // Ganzi\r\n    createFeatDaily('metamagical', 'Compendium.pf2e.classfeatures.Item.89zWKD2CN7nRu2xp', {\r\n        category: ['class'],\r\n        traits: { selected: ['metamagic', 'wizard'], conjunction: 'and' },\r\n        level: 'half',\r\n    }), // Metamagical Experimentation\r\n    combatFlexibility,\r\n    scrollSavant,\r\n    createScrollChain('esoterica', [\r\n        'Compendium.pf2e.feats-srd.Item.OqObuRB8oVSAEKFR', // Scroll Esoterica\r\n        'Compendium.pf2e.feats-srd.Item.nWd7m0yRcIEVUy7O', // Elaborate Scroll Esoterica\r\n        'Compendium.pf2e.feats-srd.Item.LHjPTV5vP3MOsPPJ', // Grand Scroll Esoterica\r\n    ]),\r\n    createScrollChain('trickster', [\r\n        'Compendium.pf2e.feats-srd.Item.ROAUR1GhC19Pjk9C', // Basic Scroll Cache\r\n        'Compendium.pf2e.feats-srd.Item.UrOj9TROtn8nuxPf', // Expert Scroll Cache\r\n        'Compendium.pf2e.feats-srd.Item.lIg5Gzz7W70jfbk1', // Master Scroll Cache\r\n    ]),\r\n    tricksterAce(),\r\n    mindSmith,\r\n    bladeAlly,\r\n    rootMagic,\r\n]\r\n\r\nconst BUILTINS_UUIDS = prepareDailies(BUILTINS_DAILIES, 'dailies')\r\nconst UUIDS = new Map()\r\n\r\nexport function prepareDailies(dailies, prefix) {\r\n    const uuids = new Map()\r\n\r\n    for (const original of dailies) {\r\n        const daily = deepClone(original)\r\n\r\n        try {\r\n            const keyWithPrefix = `${prefix}.${daily.key}`\r\n\r\n            uuids.set(daily.item.uuid, { daily, condition: daily.item.condition })\r\n\r\n            daily.key = keyWithPrefix\r\n\r\n            if (daily.children) {\r\n                for (let i = 0; i < daily.children.length; i++) {\r\n                    const { uuid, condition } = daily.children[i]\r\n                    uuids.set(uuid, { daily, index: i, condition })\r\n                }\r\n            }\r\n        } catch (err) {\r\n            error('error.unexpected')\r\n            console.error(err)\r\n            console.error(`The error occured during data gathering of ${prefix}.${daily.key}`)\r\n        }\r\n    }\r\n\r\n    return uuids\r\n}\r\n\r\nexport let CUSTOM_DAILIES = []\r\n\r\nexport async function parseCustomDailies() {\r\n    UUIDS.clear()\r\n\r\n    CUSTOM_DAILIES = []\r\n\r\n    const customs = getSetting('customDailies')\r\n    for (const { key, code } of customs) {\r\n        try {\r\n            const fn = new AsyncFunction(code)\r\n            const daily = await fn()\r\n            if (!checkCustomDaily(daily, true)) continue\r\n            CUSTOM_DAILIES.push(daily)\r\n        } catch (err) {\r\n            error('error.unexpected')\r\n            console.error(err)\r\n            console.error(`The error occured during call of custom function for ${key}`)\r\n        }\r\n    }\r\n\r\n    for (const [uuid, daily] of BUILTINS_UUIDS.entries()) {\r\n        UUIDS.set(uuid, daily)\r\n    }\r\n\r\n    const CUSTOM_UUIDS = prepareDailies(CUSTOM_DAILIES, 'custom')\r\n    for (const [uuid, daily] of CUSTOM_UUIDS.entries()) {\r\n        UUIDS.set(uuid, daily)\r\n    }\r\n}\r\n\r\nexport function checkCustomDaily(daily, warning = false) {\r\n    if (!DEPRECATED_CUSTOM_DAILIES.includes(daily.key)) return true\r\n    if (warning && game.user.isGM) warn('deprecated.custom.key', { name: daily.label.trim() || daily.key }, true)\r\n    return false\r\n}\r\n\r\nexport function getDailies(actor) {\r\n    const dailies = {}\r\n\r\n    for (const item of actor.items) {\r\n        const sourceId = getSourceId(item)\r\n        if (!sourceId || (item.isOfType('physical') && item.isInvested === false)) continue\r\n\r\n        const entry = UUIDS.get(sourceId)\r\n        if (!entry) continue\r\n\r\n        const { daily, index, condition } = entry\r\n        try {\r\n            if (typeof condition === 'function' && !condition({ actor, item, utils })) continue\r\n\r\n            dailies[daily.key] ??= deepClone(daily)\r\n\r\n            if (index === undefined) dailies[daily.key].item = item\r\n            else dailies[daily.key].children[index].item = item\r\n        } catch (err) {\r\n            error('error.unexpected')\r\n            console.error(err)\r\n            console.error(`The error occured during data gathering of ${daily.key}`)\r\n        }\r\n    }\r\n\r\n    return Object.values(dailies).filter(daily => daily.item && daily.item instanceof Item)\r\n}\r\n\r\nexport function getDailyFromSourceId(sourceId) {\r\n    return UUIDS.get(sourceId)?.daily\r\n}\r\n", "export function getFamiliarPack() {\r\n    return game.packs.get('pf2e.familiar-abilities')\r\n}\r\n\r\nexport function familiarUUID(id) {\r\n    return `Compendium.pf2e.familiar-abilities.Item.${id}`\r\n}\r\n", "import { findItemWithSourceId } from '../module'\r\n\r\nconst RATION_UUID = 'Compendium.pf2e.equipment-srd.Item.L9ZV076913otGtiB'\r\n\r\nexport function getRations(actor) {\r\n    return findItemWithSourceId(actor, RATION_UUID)\r\n}\r\n", "export function ErrorPF2e(message) {\r\n    return Error(`PF2e System | ${message}`)\r\n}\r\n\r\nexport function isObject(value) {\r\n    return typeof value === 'object' && value !== null\r\n}\r\n", "import { isObject } from './utils'\r\n\r\nexport class PredicatePF2e extends Array {\r\n    constructor(...statements) {\r\n        super(...(Array.isArray(statements[0]) ? statements[0] : statements))\r\n        this.isValid = PredicatePF2e.isValid(this)\r\n    }\r\n\r\n    /** Structurally validate the predicates */\r\n    static isValid(statements) {\r\n        return this.isArray(statements)\r\n    }\r\n\r\n    /** Is this an array of predicatation statements? */\r\n    static isArray(statements) {\r\n        return super.isArray(statements) && statements.every(s => StatementValidator.isStatement(s))\r\n    }\r\n\r\n    /** Test if the given predicate passes for the given list of options. */\r\n    static test(predicate = [], options) {\r\n        return predicate instanceof PredicatePF2e ? predicate.test(options) : new PredicatePF2e(...predicate).test(options)\r\n    }\r\n\r\n    /** Test this predicate against a domain of discourse */\r\n    test(options) {\r\n        if (this.length === 0) {\r\n            return true\r\n        } else if (!this.isValid) {\r\n            console.warn('PF2e System | The provided predicate set is malformed.')\r\n            return false\r\n        }\r\n\r\n        const domain = options instanceof Set ? options : new Set(options)\r\n        return this.every(s => this.#isTrue(s, domain))\r\n    }\r\n\r\n    toObject() {\r\n        return deepClone([...this])\r\n    }\r\n\r\n    clone() {\r\n        return new PredicatePF2e(this.toObject())\r\n    }\r\n\r\n    /** Is the provided statement true? */\r\n    #isTrue(statement, domain) {\r\n        return (\r\n            (typeof statement === 'string' && domain.has(statement)) ||\r\n            (StatementValidator.isBinaryOp(statement) && this.#testBinaryOp(statement, domain)) ||\r\n            (StatementValidator.isCompound(statement) && this.#testCompound(statement, domain))\r\n        )\r\n    }\r\n\r\n    #testBinaryOp(statement, domain) {\r\n        if ('eq' in statement) {\r\n            return domain.has(`${statement.eq[0]}:${statement.eq[1]}`)\r\n        } else {\r\n            const operator = Object.keys(statement)[0]\r\n\r\n            // Allow for tests of partial statements against numeric values\r\n            // E.g., `{ \"gt\": [\"actor:level\", 5] }` would match against \"actor:level:6\" and \"actor:level:7\"\r\n            const [left, right] = Object.values(statement)[0]\r\n            const domainArray = Array.from(domain)\r\n            const getValues = operand => {\r\n                const maybeNumber = Number(operand)\r\n                if (!Number.isNaN(maybeNumber)) return [maybeNumber]\r\n                const pattern = new RegExp(String.raw`^${operand}:([^:]+)$`)\r\n                const values = domainArray.map(s => Number(pattern.exec(s)?.[1] || NaN)).filter(v => !Number.isNaN(v))\r\n                return values.length > 0 ? values : [NaN]\r\n            }\r\n            const leftValues = getValues(left)\r\n            const rightValues = getValues(right)\r\n\r\n            switch (operator) {\r\n                case 'gt':\r\n                    return leftValues.some(l => rightValues.every(r => l > r))\r\n                case 'gte':\r\n                    return leftValues.some(l => rightValues.every(r => l >= r))\r\n                case 'lt':\r\n                    return leftValues.some(l => rightValues.every(r => l < r))\r\n                case 'lte':\r\n                    return leftValues.some(l => rightValues.every(r => l <= r))\r\n                default:\r\n                    console.warn('PF2e System | Malformed binary operation encountered')\r\n                    return false\r\n            }\r\n        }\r\n    }\r\n\r\n    /** Is the provided compound statement true? */\r\n    #testCompound(statement, domain) {\r\n        return (\r\n            ('and' in statement && statement.and.every(subProp => this.#isTrue(subProp, domain))) ||\r\n            ('nand' in statement && !statement.nand.every(subProp => this.#isTrue(subProp, domain))) ||\r\n            ('or' in statement && statement.or.some(subProp => this.#isTrue(subProp, domain))) ||\r\n            ('xor' in statement && statement.xor.filter(subProp => this.#isTrue(subProp, domain)).length === 1) ||\r\n            ('nor' in statement && !statement.nor.some(subProp => this.#isTrue(subProp, domain))) ||\r\n            ('not' in statement && !this.#isTrue(statement.not, domain)) ||\r\n            ('if' in statement && !(this.#isTrue(statement.if, domain) && !this.#isTrue(statement.then, domain)))\r\n        )\r\n    }\r\n}\r\n\r\nclass StatementValidator {\r\n    static isStatement(statement) {\r\n        return statement instanceof Object\r\n            ? this.isCompound(statement) || this.isBinaryOp(statement)\r\n            : typeof statement === 'string'\r\n            ? this.isAtomic(statement)\r\n            : false\r\n    }\r\n\r\n    static isAtomic(statement) {\r\n        return (typeof statement === 'string' && statement.length > 0) || this.isBinaryOp(statement)\r\n    }\r\n\r\n    static #binaryOperators = new Set(['eq', 'gt', 'gte', 'lt', 'lte'])\r\n\r\n    static isBinaryOp(statement) {\r\n        if (!isObject(statement)) return false\r\n        const entries = Object.entries(statement)\r\n        if (entries.length > 1) return false\r\n        const [operator, operands] = entries[0]\r\n        return (\r\n            this.#binaryOperators.has(operator) &&\r\n            Array.isArray(operands) &&\r\n            operands.length === 2 &&\r\n            typeof operands[0] === 'string' &&\r\n            ['string', 'number'].includes(typeof operands[1])\r\n        )\r\n    }\r\n\r\n    static isCompound(statement) {\r\n        return (\r\n            isObject(statement) &&\r\n            (this.isAnd(statement) ||\r\n                this.isOr(statement) ||\r\n                this.isNand(statement) ||\r\n                this.isXor(statement) ||\r\n                this.isNor(statement) ||\r\n                this.isNot(statement) ||\r\n                this.isIf(statement))\r\n        )\r\n    }\r\n\r\n    static isAnd(statement) {\r\n        return (\r\n            Object.keys(statement).length === 1 &&\r\n            Array.isArray(statement.and) &&\r\n            statement.and.every(subProp => this.isStatement(subProp))\r\n        )\r\n    }\r\n\r\n    static isNand(statement) {\r\n        return (\r\n            Object.keys(statement).length === 1 &&\r\n            Array.isArray(statement.nand) &&\r\n            statement.nand.every(subProp => this.isStatement(subProp))\r\n        )\r\n    }\r\n\r\n    static isOr(statement) {\r\n        return (\r\n            Object.keys(statement).length === 1 &&\r\n            Array.isArray(statement.or) &&\r\n            statement.or.every(subProp => this.isStatement(subProp))\r\n        )\r\n    }\r\n\r\n    static isXor(statement) {\r\n        return (\r\n            Object.keys(statement).length === 1 &&\r\n            Array.isArray(statement.xor) &&\r\n            statement.xor.every(subProp => this.isStatement(subProp))\r\n        )\r\n    }\r\n\r\n    static isNor(statement) {\r\n        return (\r\n            Object.keys(statement).length === 1 &&\r\n            Array.isArray(statement.nor) &&\r\n            statement.nor.every(subProp => this.isStatement(subProp))\r\n        )\r\n    }\r\n\r\n    static isNot(statement) {\r\n        return Object.keys(statement).length === 1 && !!statement.not && this.isStatement(statement.not)\r\n    }\r\n\r\n    static isIf(statement) {\r\n        return Object.keys(statement).length === 2 && this.isStatement(statement.if) && this.isStatement(statement.then)\r\n    }\r\n}\r\n", "import { utils } from '../../api'\r\nimport { capitalize, getFlag, hasLocalization, localize } from '../../module'\r\nimport { PredicatePF2e } from '../../pf2e/predicate'\r\n\r\nconst templateOrders = {\r\n    select: 100,\r\n    combo: 80,\r\n    random: 60,\r\n    alert: 40,\r\n    input: 20,\r\n    drop: 0,\r\n}\r\n\r\nexport async function getTemplate({ children = [], key, item, prepare, label, rows = [] }) {\r\n    const actor = this.actor\r\n    const saved = (this.saved[key] = getFlag(actor, key) ?? {})\r\n    const rowsObj = (this.rows[key] = {})\r\n    const childrenObj = (this.children[key] = children.reduce((children, { slug, item }) => {\r\n        children[slug] = item\r\n        return children\r\n    }, {}))\r\n\r\n    const prepareArgs = {\r\n        actor,\r\n        item,\r\n        children: childrenObj,\r\n        utils,\r\n    }\r\n\r\n    const custom = (this.custom[key] = (prepare && (await prepare(prepareArgs))) || {})\r\n\r\n    const dailyArgs = (this.dailyArgs[key] = {\r\n        ...prepareArgs,\r\n        custom,\r\n    })\r\n\r\n    let groupLabel = await getProcessedValue(label, dailyArgs)\r\n    const labeled = groupLabel ? `label.${groupLabel}` : key.startsWith('dailies.') ? `label.${key.slice(8)}` : undefined\r\n    if (labeled && hasLocalization(labeled)) groupLabel = localize(labeled)\r\n\r\n    const predicates = (this.predicate[key] = children.filter(child => child.item).map(child => child.slug))\r\n\r\n    const template = {\r\n        label: groupLabel ? game.i18n.localize(groupLabel) : item.name,\r\n        rows: [],\r\n    }\r\n\r\n    for (const row of rows) {\r\n        rowsObj[row.slug] = row\r\n\r\n        const { type, slug, childPredicate = [], condition, label, save } = row\r\n\r\n        if (childPredicate.length && !PredicatePF2e.test(childPredicate, predicates)) continue\r\n        if (condition && !(await condition(dailyArgs))) continue\r\n\r\n        const savedRow = save === false || type === 'random' ? undefined : saved[slug]\r\n        const rowLabel = await getProcessedValue(label, dailyArgs)\r\n        const value =\r\n            savedRow === undefined\r\n                ? ''\r\n                : typeof savedRow !== 'object'\r\n                ? savedRow\r\n                : 'name' in savedRow\r\n                ? savedRow.name\r\n                : savedRow.selected\r\n\r\n        const rowTemplate = {\r\n            label: rowLabel ? game.i18n.localize(rowLabel) : '',\r\n            value,\r\n            order: templateOrders[type],\r\n            data: {\r\n                type,\r\n                daily: key,\r\n                row: slug,\r\n            },\r\n        }\r\n\r\n        if (isComboRow(row) || isSelectRow(row) || isRandomRow(row)) {\r\n            const tmp = (await getProcessedValue(row.options, dailyArgs)) ?? []\r\n            if (type !== 'combo' && !tmp.length) continue\r\n\r\n            const labelize = (typeof row.labelizer === 'function' && row.labelizer(dailyArgs)) || (value => capitalize(value))\r\n            rowTemplate.options = tmp.map(value => (typeof value === 'string' ? { value, label: labelize(value) } : value))\r\n\r\n            if (isComboRow(row)) {\r\n                rowTemplate.selected = rowTemplate.value\r\n                rowTemplate.data.input = savedRow?.input ?? true\r\n\r\n                if (!rowTemplate.data.input && tmp.includes(rowTemplate.selected)) {\r\n                    rowTemplate.value = labelize(rowTemplate.selected)\r\n                }\r\n            }\r\n        } else if (isDropRow(row)) {\r\n            rowTemplate.data.uuid = savedRow?.uuid ?? ''\r\n        } else if (isAlerRow(row)) {\r\n            rowTemplate.value = typeof row.message === 'function' ? await row.message(dailyArgs) : row.message\r\n        }\r\n\r\n        template.rows.push(rowTemplate)\r\n    }\r\n\r\n    return template\r\n}\r\n\r\nasync function getProcessedValue(obj, args) {\r\n    if (typeof obj === 'function') return await obj(args)\r\n    return obj\r\n}\r\n\r\nfunction isComboRow(row) {\r\n    return row.type === 'combo'\r\n}\r\n\r\nfunction isSelectRow(row) {\r\n    return row.type === 'select'\r\n}\r\n\r\nfunction isRandomRow(row) {\r\n    return row.type === 'random'\r\n}\r\n\r\nfunction isDropRow(row) {\r\n    return row.type === 'drop'\r\n}\r\n\r\nfunction isAlerRow(row) {\r\n    return row.type === 'alert'\r\n}\r\n", "export function getTranslatedSkills() {\r\n    return Object.entries(CONFIG.PF2E.skillList).reduce((result, [key, value]) => {\r\n        return {\r\n            ...result,\r\n            [key]: game.i18n.localize(value).toLocaleLowerCase(game.i18n.lang),\r\n        }\r\n    }, {})\r\n}\r\n", "import { ErrorPF2e } from './utils'\r\n\r\nconst wordCharacter = String.raw`[\\p{Alphabetic}\\p{Mark}\\p{Decimal_Number}\\p{Join_Control}]`\r\nconst nonWordCharacter = String.raw`[^\\p{Alphabetic}\\p{Mark}\\p{Decimal_Number}\\p{Join_Control}]`\r\nconst nonWordCharacterRE = new RegExp(nonWordCharacter, 'gu')\r\n\r\nconst wordBoundary = String.raw`(?:${wordCharacter})(?=${nonWordCharacter})|(?:${nonWordCharacter})(?=${wordCharacter})`\r\nconst nonWordBoundary = String.raw`(?:${wordCharacter})(?=${wordCharacter})`\r\nconst lowerCaseLetter = String.raw`\\p{Lowercase_Letter}`\r\nconst upperCaseLetter = String.raw`\\p{Uppercase_Letter}`\r\nconst lowerCaseThenUpperCaseRE = new RegExp(`(${lowerCaseLetter})(${upperCaseLetter}${nonWordBoundary})`, 'gu')\r\n\r\nconst nonWordCharacterHyphenOrSpaceRE = /[^-\\p{White_Space}\\p{Alphabetic}\\p{Mark}\\p{Decimal_Number}\\p{Join_Control}]/gu\r\nconst upperOrWordBoundariedLowerRE = new RegExp(`${upperCaseLetter}|(?:${wordBoundary})${lowerCaseLetter}`, 'gu')\r\n\r\nexport function sluggify(text, { camel = null } = {}) {\r\n    // Sanity check\r\n    if (typeof text !== 'string') {\r\n        console.warn('Non-string argument passed to `sluggify`')\r\n        return ''\r\n    }\r\n\r\n    switch (camel) {\r\n        case null:\r\n            return text\r\n                .replace(lowerCaseThenUpperCaseRE, '$1-$2')\r\n                .toLowerCase()\r\n                .replace(/['\u2019]/g, '')\r\n                .replace(nonWordCharacterRE, ' ')\r\n                .trim()\r\n                .replace(/[-\\s]+/g, '-')\r\n        case 'bactrian': {\r\n            const dromedary = sluggify(text, { camel: 'dromedary' })\r\n            return dromedary.charAt(0).toUpperCase() + dromedary.slice(1)\r\n        }\r\n        case 'dromedary':\r\n            return text\r\n                .replace(nonWordCharacterHyphenOrSpaceRE, '')\r\n                .replace(/[-_]+/g, ' ')\r\n                .replace(upperOrWordBoundariedLowerRE, (part, index) => (index === 0 ? part.toLowerCase() : part.toUpperCase()))\r\n                .replace(/\\s+/g, '')\r\n        default:\r\n            throw ErrorPF2e(\"I don't think that's a real camel.\")\r\n    }\r\n}\r\n", "import { sequenceArray } from '../../module'\r\n\r\nexport function getSimplifiableValue(actor, value, fallback) {\r\n    if (value === undefined) return fallback\r\n    if (typeof value === 'number') return value\r\n    if (value === 'level') return actor.level\r\n    if (value === 'half') return Math.max(1, Math.floor(actor.level / 2))\r\n    const numbered = Number(value)\r\n    return isNaN(numbered) ? fallback : numbered\r\n}\r\n\r\nexport async function parseFilter(filter) {\r\n    return {\r\n        type: filter.type,\r\n        search: await (filter.type === 'feat'\r\n            ? parseFeatFilter(this.actor, filter.search)\r\n            : parseSpellFilter(this.actor, filter.search)),\r\n        drop: filter.drop,\r\n    }\r\n}\r\n\r\nfunction checkFilter(selected, checkbox) {\r\n    if (!selected?.length) return\r\n\r\n    checkbox.selected = selected\r\n    checkbox.isExpanded = true\r\n    selected.forEach(x => (checkbox.options[x].selected = true))\r\n}\r\n\r\nfunction setTraits(searchTraits, dataTraits) {\r\n    const traits = getFilterTraits(searchTraits)\r\n    if (traits?.selected.length) {\r\n        dataTraits.conjunction = traits.conjunction\r\n        dataTraits.selected = traits.selected\r\n    }\r\n}\r\n\r\nexport function getFilterTraits(traits) {\r\n    if (!traits) return\r\n\r\n    const selected = Array.isArray(traits) ? traits : traits.selected\r\n    if (!selected?.length) return\r\n\r\n    return {\r\n        selected: selected.map(x => (typeof x === 'string' ? { value: x } : x)),\r\n        conjunction: (!Array.isArray(traits) && traits.conjunction) || 'and',\r\n    }\r\n}\r\n\r\nasync function parseSpellFilter(actor, search) {\r\n    const data = await game.pf2e.compendiumBrowser.tabs.spell.getFilterData()\r\n\r\n    checkFilter(search.category, data.checkboxes.category)\r\n    checkFilter(search.school, data.checkboxes.school)\r\n    checkFilter(search.traditions, data.checkboxes.traditions)\r\n    checkFilter(search.rarity, data.checkboxes.rarity)\r\n    checkFilter(search.source, data.checkboxes.source)\r\n\r\n    setTraits(search.traits, data.multiselects.traits)\r\n\r\n    const level = getSpellFilterLevel(actor, search.level)\r\n    if (level?.length) checkFilter(level, data.checkboxes.level)\r\n\r\n    return data\r\n}\r\n\r\nasync function parseFeatFilter(actor, search) {\r\n    const data = await game.pf2e.compendiumBrowser.tabs.feat.getFilterData()\r\n\r\n    checkFilter(search.category, data.checkboxes.category)\r\n    checkFilter(search.skills, data.checkboxes.skills)\r\n    checkFilter(search.rarity, data.checkboxes.rarity)\r\n    checkFilter(search.source, data.checkboxes.source)\r\n\r\n    setTraits(search.traits, data.multiselects.traits)\r\n\r\n    const level = getFeatFilterLevel(actor, search.level)\r\n    if (level) {\r\n        data.sliders.level.values.min = level.min\r\n        data.sliders.level.values.max = level.max\r\n        data.sliders.level.isExpanded = true\r\n    }\r\n\r\n    return data\r\n}\r\n\r\nexport function getSpellFilterLevel(actor, level) {\r\n    if (Array.isArray(level)) return level\r\n\r\n    const simplified = getSimplifiableValue(actor, level)\r\n    if (simplified) return sequenceArray(1, simplified)\r\n}\r\n\r\nexport function getFeatFilterLevel(actor, level) {\r\n    if (level === undefined) return\r\n\r\n    if (typeof level === 'object') {\r\n        return {\r\n            min: getSimplifiableValue(actor, level.min, 0),\r\n            max: getSimplifiableValue(actor, level.min, 20),\r\n        }\r\n    } else {\r\n        return { min: 0, max: getSimplifiableValue(actor, level, 20) }\r\n    }\r\n}\r\n", "import { subLocalize } from '../../module'\r\nimport { getTranslatedSkills } from '../../pf2e/skills'\r\nimport { sluggify } from '../../pf2e/sluggify'\r\nimport { getFeatFilterLevel, getFilterTraits, getSpellFilterLevel } from './shared'\r\n\r\nconst localize = subLocalize('interface.error.drop')\r\n\r\nexport async function onDropFeat(item, target, filter) {\r\n    if (!item.isOfType('feat')) return localize('notFeat')\r\n\r\n    const { search, drop } = filter\r\n\r\n    if (search.category?.length && !search.category.includes(item.category)) {\r\n        return localize.warn('wrongType', { types: localizeAll('featCategories', search.category) })\r\n    }\r\n\r\n    if (search.traits) {\r\n        const traits = getFilterTraits(search.traits)\r\n\r\n        if (traits?.selected.length) {\r\n            const testFn = traits.conjunction === 'or' ? 'some' : 'every'\r\n            const test = traits.selected[testFn](trait => Number(trait.not ?? false) - Number(item.traits.has(trait.value)))\r\n            if (!test) return localize.warn('wrongTraits')\r\n        }\r\n    }\r\n\r\n    if (search.skills?.length) {\r\n        const translatedSkills = getTranslatedSkills()\r\n        const prerequisites = item.system.prerequisites.value.map(prerequisite => prerequisite.value.toLocaleLowerCase())\r\n        const test = search.skills.some(skill =>\r\n            prerequisites.some(prerequisite => prerequisite.includes(skill) || prerequisite.includes(translatedSkills[skill]))\r\n        )\r\n        if (!test) return localize.warn('wrongSkill', { skills: localizeAll('skillList', search.skills) })\r\n    }\r\n\r\n    if (search.rarity?.length && !search.rarity.includes(item.system.traits.rarity)) {\r\n        return localize.warn('wrongRarity', { rarities: localizeAll('rarityTraits', search.rarity) })\r\n    }\r\n\r\n    if (search.source?.length && !search.source.includes(sluggify(item.system.source.value))) {\r\n        return localize.warn('wrongSource', { sources: search.source.join(', ') })\r\n    }\r\n\r\n    const level = getFeatFilterLevel(this.actor, search.level)\r\n    if (level) {\r\n        const itemLevel = item.level\r\n        if (itemLevel < level.min) return localize.warn('wrongLevelLow', { level: `min: ${level.min}` })\r\n        else if (itemLevel > level.max) return localize.warn('wrongLevelHigh', { level: `max: ${level.max}` })\r\n    }\r\n\r\n    if (drop) {\r\n        const args = this.dailyArgs[target.dataset.daily]\r\n        if (args) {\r\n            const result = await drop(item, args)\r\n            if (typeof result === 'object') {\r\n                if (result.data) return game.i18n.format(result.error, result.data)\r\n                else return game.i18n.localize(result.error)\r\n            } else if (result === false) {\r\n                return localize.warn('wrongCustom')\r\n            }\r\n        }\r\n    }\r\n\r\n    onDropItem(item, target)\r\n}\r\n\r\nexport async function onDropSpell(item, target, filter) {\r\n    if (!item.isOfType('spell')) return localize('notSpell')\r\n\r\n    const { search, drop } = filter\r\n\r\n    if (search.category?.length) {\r\n        const categories = search.category\r\n            .map(x => game.i18n.localize(x === 'cantrip' ? 'PF2E.SpellCantripLabel' : CONFIG.PF2E.spellCategories[x]))\r\n            .join(', ')\r\n\r\n        if (\r\n            (item.isCantrip && !search.category.includes('cantrip')) ||\r\n            (item.isFocusSpell && !search.category.includes('focus')) ||\r\n            (item.isRitual && !search.category.includes('ritual')) ||\r\n            (!item.isCantrip && !item.isFocusSpell && !item.isRitual && !search.category.includes('spell'))\r\n        ) {\r\n            return localize.warn('wrongCategory', { categories })\r\n        }\r\n    }\r\n\r\n    if (search.traits) {\r\n        const traits = getFilterTraits(search.traits)\r\n\r\n        if (traits?.selected.length) {\r\n            const testFn = traits.conjunction === 'or' ? 'some' : 'every'\r\n            const test = traits.selected[testFn](trait => Number(trait.not ?? false) - Number(item.traits.has(trait.value)))\r\n            if (!test) return localize.warn('wrongTraits')\r\n        }\r\n    }\r\n\r\n    if (search.traditions?.length) {\r\n        if (!search.traditions.some(tradition => item.traditions.has(tradition))) {\r\n            return localize.warn('wrongTradition', { traditions: localizeAll('magicTraditions', search.traditions) })\r\n        }\r\n    }\r\n\r\n    const level = getSpellFilterLevel(this.actor, search.level)\r\n    if (level?.length && !level.includes(item.level)) {\r\n        return localize.warn('wrongLevel', { levels: level.join(', ') })\r\n    }\r\n\r\n    if (search.school?.length && !search.school.includes(item.school)) {\r\n        return localize.warn('wrongSchool', { schools: localizeAll('magicSchools', search.school) })\r\n    }\r\n\r\n    if (search.rarity?.length && !search.rarity.includes(item.system.traits.rarity)) {\r\n        return localize.warn('wrongRarity', { rarities: localizeAll('rarityTraits', search.rarity) })\r\n    }\r\n\r\n    if (search.source?.length && !search.source.includes(sluggify(item.system.source.value))) {\r\n        return localize.warn('wrongSource', { sources: search.source.join(', ') })\r\n    }\r\n\r\n    if (drop) {\r\n        const args = this.dailyArgs[target.dataset.daily]\r\n        if (args) {\r\n            const result = await drop(item, args)\r\n            if (typeof result === 'object') {\r\n                if (result.data) return ui.notifications.warn(game.i18n.format(result.error, result.data))\r\n                else return ui.notifications.warn(game.i18n.localize(result.error))\r\n            } else if (result === false) {\r\n                return localize.warn('wrongCustom')\r\n            }\r\n        }\r\n    }\r\n\r\n    onDropItem(item, target)\r\n}\r\n\r\nfunction localizeAll(config, list) {\r\n    const localized = list.map(key => game.i18n.localize(CONFIG.PF2E[config][key]))\r\n    return localized.join(', ')\r\n}\r\n\r\nexport function onDropItem(item, target) {\r\n    target.value = item.name\r\n    target.dataset.uuid = item.uuid\r\n    target.nextElementSibling.nextElementSibling.classList.remove('disabled')\r\n}\r\n", "import { familiarUUID, getFamiliarPack } from '../../data/familiar'\r\nimport { getRations } from '../../data/rations'\r\nimport { MODULE_ID, chatUUID, error, fakeChatUUID, getFlag, hasLocalization, localize, subLocalize } from '../../module'\r\nimport { sluggify } from '../../pf2e/sluggify'\r\n\r\nexport async function processData() {\r\n    const actor = this.actor\r\n    const dailies = this.dailies\r\n    const fields = getFields.call(this)\r\n    const addItems = []\r\n    const addRules = new Map()\r\n    const updateItems = []\r\n    const flags = {}\r\n    const msg = subLocalize('message')\r\n\r\n    let addedSpells = false\r\n    let message = ''\r\n\r\n    const getRules = item => {\r\n        const id = item.id\r\n        const existing = addRules.get(id)\r\n        if (existing) return existing\r\n\r\n        const rules = deepClone(item._source.system.rules)\r\n\r\n        for (let i = rules.length - 1; i >= 0; i--) {\r\n            if (MODULE_ID in rules[i]) rules.splice(i, 1)\r\n        }\r\n\r\n        addRules.set(id, rules)\r\n        return rules\r\n    }\r\n\r\n    const messages = {\r\n        languages: { order: 80, messages: [] },\r\n        skills: { order: 70, messages: [] },\r\n        resistances: { order: 60, messages: [] },\r\n        feats: { order: 50, messages: [] },\r\n        spells: { order: 40, messages: [] },\r\n        scrolls: { order: 30, messages: [] },\r\n    }\r\n\r\n    const messageObj = {\r\n        add: (group, options) => {\r\n            messages[group] ??= { order: 0, messages: [] }\r\n            messages[group].messages.push(options)\r\n        },\r\n        addGroup: (group, order = 1, label) => {\r\n            messages[group] ??= { label, order, messages: [] }\r\n        },\r\n    }\r\n\r\n    if (actor.familiar && fields['dailies.familiar']) {\r\n        const familiar = actor.familiar\r\n        const pack = getFamiliarPack()\r\n        const abilities = []\r\n\r\n        // we remove old abilities\r\n        const ids = familiar.itemTypes.action.map(item => item.id)\r\n        if (ids.length) familiar.deleteEmbeddedDocuments('Item', ids)\r\n\r\n        messageObj.addGroup('familiar', 20)\r\n\r\n        for (const field of Object.values(fields['dailies.familiar'])) {\r\n            const value = field.value\r\n            const isCustom = value.includes('.')\r\n            const item = await (isCustom ? fromUuid(value) : pack.getDocument(value))\r\n            if (!item || !item.isOfType('action')) continue\r\n\r\n            const source = item.toObject()\r\n            if (source) {\r\n                abilities.push(source)\r\n                messageObj.add('familiar', { uuid: isCustom ? value : familiarUUID(value) })\r\n            }\r\n        }\r\n\r\n        if (abilities.length) familiar.createEmbeddedDocuments('Item', abilities)\r\n    }\r\n\r\n    if (fields['dailies.rations']?.rations.value === 'true') {\r\n        const rations = getRations(actor)\r\n\r\n        if (rations?.uses.value) {\r\n            const quantity = rations.quantity\r\n            const { value, max } = rations.uses\r\n\r\n            if (value <= 1) {\r\n                if (quantity <= 1) {\r\n                    rations.delete()\r\n                } else {\r\n                    updateItems.push({\r\n                        _id: rations.id,\r\n                        'system.quantity': Math.max(rations.quantity - 1, 0),\r\n                        'system.charges.value': max,\r\n                    })\r\n                }\r\n            } else {\r\n                updateItems.push({\r\n                    _id: rations.id,\r\n                    'system.charges.value': Math.max(value - 1, 0),\r\n                })\r\n            }\r\n\r\n            const remaining = (quantity - 1) * max + value\r\n            const name = remaining <= 1 ? fakeChatUUID(rations.name) : chatUUID(rations.uuid)\r\n\r\n            if (remaining <= 1) message += msg('rations.last', { name })\r\n            else if (remaining <= 3) message += msg('rations.almost', { name, nb: remaining - 1 })\r\n            else message += msg('rations.used', { name, nb: remaining - 1 })\r\n        }\r\n    }\r\n\r\n    for (const { item, key, process } of dailies) {\r\n        if (!fields[key]) continue\r\n\r\n        const dailyArgs = this.dailyArgs[key]\r\n\r\n        try {\r\n            await process({\r\n                ...dailyArgs,\r\n                fields: fields[key],\r\n                messages: messageObj,\r\n                addItem: source => addItems.push(source),\r\n                updateItem: data => updateItems.push(data),\r\n                addRule: (source, parent) => {\r\n                    source[MODULE_ID] = true\r\n                    getRules(parent ?? item).push(source)\r\n                },\r\n                addFeat: (source, parent) => {\r\n                    parent ??= item\r\n                    if (parent.isOfType('feat')) {\r\n                        const parentId = parent.id\r\n                        setProperty(source, 'flags.pf2e.grantedBy', { id: parentId, onDelete: 'cascade' })\r\n                        setProperty(source, `flags.${MODULE_ID}.grantedBy`, parentId)\r\n                    }\r\n                    addItems.push(source)\r\n                },\r\n                addSpell: (source, level) => {\r\n                    setProperty(source, `flags.${MODULE_ID}.entry`, { level: level })\r\n                    addItems.push(source)\r\n                    addedSpells = true\r\n                },\r\n            })\r\n        } catch (err) {\r\n            error('error.unexpected')\r\n            console.error(err)\r\n            console.error(`The error occured during processing of ${key}`)\r\n        }\r\n    }\r\n\r\n    for (const [key, rowFields] of Object.entries(fields)) {\r\n        const rows = this.rows[key]\r\n        if (!rows) continue\r\n\r\n        for (const { row, type, input, value, uuid } of Object.values(rowFields)) {\r\n            if (type === 'random' || rows[row]?.save === false) continue\r\n\r\n            const flag = (flags[key] ??= {})\r\n\r\n            if (type === 'combo') {\r\n                flag[row] = { input: input === 'true', selected: value }\r\n            } else if (type === 'drop') {\r\n                flag[row] = { uuid: uuid, name: value }\r\n            } else {\r\n                flag[row] = value\r\n            }\r\n        }\r\n    }\r\n\r\n    for (const [id, rules] of addRules) {\r\n        updateItems.push({ _id: id, 'system.rules': rules })\r\n    }\r\n\r\n    if (addedSpells) {\r\n        const entry = {\r\n            type: 'spellcastingEntry',\r\n            name: localize('spellEntry.name'),\r\n            system: {\r\n                prepared: { value: 'innate' },\r\n                showSlotlessLevels: { value: false },\r\n                showUnpreparedSpells: { value: false },\r\n                proficiency: { value: 1, slug: actor.classDC?.slug || actor.class?.slug || undefined },\r\n            },\r\n        }\r\n        addItems.push(entry)\r\n    }\r\n\r\n    for (const source of addItems) {\r\n        const alreadyTemp = getProperty(source, 'system.temporary') === true\r\n        if (!alreadyTemp) setProperty(source, `flags.${MODULE_ID}.temporary`, true)\r\n    }\r\n\r\n    if (addItems.length) {\r\n        const items = await actor.createEmbeddedDocuments('Item', addItems)\r\n\r\n        for (const item of items) {\r\n            if (item.isOfType('feat')) {\r\n                // we add itemGrants flag to the parent feat to have the cascade effect in the tab\r\n                const parentId = getFlag(item, 'grantedBy')\r\n                if (parentId) {\r\n                    const slug = sluggify(item.name, { camel: 'dromedary' })\r\n                    const path = `flags.pf2e.itemGrants.${slug}`\r\n                    updateItems.push({ _id: parentId, [path]: { id: item.id, onDelete: 'detach' } })\r\n                }\r\n            } else if (item.isOfType('spellcastingEntry')) {\r\n                // we add all the newly created spells with 'addSpell' to this spellcasting entry\r\n                const spells = items.filter(item => item.isOfType('spell') && getFlag(item, 'entry'))\r\n                for (const spell of spells) {\r\n                    const { level } = getFlag(spell, 'entry')\r\n                    const data = { _id: spell.id, 'system.location.value': item.id }\r\n                    if (level !== undefined) data['system.location.heightenedLevel'] = level\r\n                    updateItems.push(data)\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    await actor.update({ [`flags.${MODULE_ID}`]: { ...expandObject(flags), rested: false } })\r\n\r\n    if (updateItems.length) await actor.updateEmbeddedDocuments('Item', updateItems)\r\n\r\n    message = parseMessages(messages, message)\r\n    message = message ? `${msg('changes')}<hr />${message}` : msg('noChanges')\r\n    ChatMessage.create({ content: message, speaker: ChatMessage.getSpeaker({ actor }) })\r\n}\r\n\r\nfunction parseMessages(messages, message) {\r\n    const msg = subLocalize('message')\r\n\r\n    const messageList = Object.entries(messages).map(([type, options]) => {\r\n        options.label ??= msg.has(type) ? msg(type) : msg('gained', { type })\r\n        return options\r\n    })\r\n    messageList.sort((a, b) => b.order - a.order)\r\n\r\n    for (const { label, messages } of messageList) {\r\n        if (!messages.length) continue\r\n\r\n        if (message) message += '<hr />'\r\n\r\n        if (label) message += `<p><strong>${label}</strong></p>`\r\n\r\n        for (let { uuid, selected, label, random } of messages) {\r\n            const key = `label.${label}`\r\n            label = label && hasLocalization(key) ? localize(key) : label || ''\r\n\r\n            message += '<p>'\r\n            message += uuid ? `${chatUUID(uuid, label)}` : `<strong>${label}</strong>`\r\n            if (selected) message += ` <span>${selected}</span>`\r\n            if (random) message += ' <i class=\"fa-solid fa-dice-d20\"></i>'\r\n            message += '</p>'\r\n        }\r\n    }\r\n\r\n    return message\r\n}\r\n\r\nfunction getFields() {\r\n    const elements = this.element.find('.window-content .content').find('input:not(.alert), select[data-type]').toArray()\r\n\r\n    const fields = {}\r\n\r\n    for (const element of elements) {\r\n        const field = {\r\n            ...element.dataset,\r\n            value: element.value,\r\n        }\r\n\r\n        if (field.type === 'combo' && field.input === 'false') {\r\n            const select = element.previousElementSibling\r\n            field.value = select.value\r\n        }\r\n\r\n        fields[field.daily] ??= {}\r\n        fields[field.daily][field.row] = field\r\n    }\r\n\r\n    return fields\r\n}\r\n", "import { getDailies } from '../dailies'\r\nimport { getFamiliarPack } from '../data/familiar'\r\nimport { getRations } from '../data/rations'\r\nimport { getFlag, getSetting, subLocalize, templatePath } from '../module'\r\nimport { getTemplate } from './interface/data'\r\nimport { onDropFeat, onDropItem, onDropSpell } from './interface/drop'\r\nimport { processData } from './interface/process'\r\nimport { parseFilter } from './interface/shared'\r\n\r\nconst localize = subLocalize('interface')\r\n\r\nexport class DailiesInterface extends Application {\r\n    constructor(actor, options) {\r\n        super(options)\r\n        this._actor = actor\r\n        this._dailies = []\r\n        this._dailyArgs = {}\r\n        this._saved = {}\r\n        this._children = {}\r\n        this._custom = {}\r\n        this._predicate = {}\r\n        this._rows = {}\r\n    }\r\n\r\n    static get defaultOptions() {\r\n        return mergeObject(super.defaultOptions, {\r\n            id: 'pf2e-dailies-interface',\r\n            template: templatePath('interface.hbs'),\r\n            height: 'auto',\r\n            width: 400,\r\n            submitOnClose: false,\r\n            submitOnChange: false,\r\n            dragDrop: [\r\n                {\r\n                    dropSelector: '[data-droppable=\"true\"]',\r\n                },\r\n            ],\r\n        })\r\n    }\r\n\r\n    get actor() {\r\n        return this._actor\r\n    }\r\n\r\n    get dailies() {\r\n        return this._dailies\r\n    }\r\n\r\n    get dailyArgs() {\r\n        return this._dailyArgs\r\n    }\r\n\r\n    get saved() {\r\n        return this._saved\r\n    }\r\n\r\n    get children() {\r\n        return this._children\r\n    }\r\n\r\n    get custom() {\r\n        return this._custom\r\n    }\r\n\r\n    get predicate() {\r\n        return this._predicate\r\n    }\r\n\r\n    get rows() {\r\n        return this._rows\r\n    }\r\n\r\n    async getData(options) {\r\n        const templates = []\r\n        const actor = this._actor\r\n        this._dailies = getDailies(actor)\r\n\r\n        if (actor.familiar) {\r\n            const type = 'dailies.familiar'\r\n            const localize = subLocalize('label')\r\n            const nbAbilityies = actor.attributes.familiarAbilities.value\r\n            const pack = getFamiliarPack()\r\n            const flags = getFlag(actor, type) ?? {}\r\n\r\n            const template = {\r\n                label: localize('familiar'),\r\n                rows: [],\r\n            }\r\n\r\n            const options = pack.index.map(({ _id, name }) => ({ value: _id, label: name }))\r\n\r\n            const customUUIDS = getSetting('familiar').split(',')\r\n            for (let uuid of customUUIDS) {\r\n                uuid = uuid.trim()\r\n                const item = await fromUuid(uuid)\r\n                if (item && item.isOfType('action')) options.push({ value: uuid, label: item.name })\r\n            }\r\n\r\n            options.sort((a, b) => a.label.localeCompare(b.label))\r\n\r\n            for (let index = 0; index < nbAbilityies; index++) {\r\n                template.rows.push({\r\n                    label: localize('ability', { nb: index + 1 }),\r\n                    value: flags[`${index}`] ?? '',\r\n                    order: 100,\r\n                    options,\r\n                    data: {\r\n                        type: 'select',\r\n                        daily: type,\r\n                        row: index.toString(),\r\n                    },\r\n                })\r\n            }\r\n\r\n            if (template.rows.length) {\r\n                this._rows[type] = template.rows.reduce((rows, { data }) => {\r\n                    rows[data.row] = { save: true }\r\n                    return rows\r\n                }, {})\r\n                templates.push(template)\r\n            }\r\n        }\r\n\r\n        const rations = getRations(actor)\r\n        if (rations?.uses.value) {\r\n            const type = 'dailies.rations'\r\n            const row = 'rations'\r\n            const { value, max } = rations.uses\r\n            const quantity = rations.quantity\r\n            const remaining = (quantity - 1) * max + value\r\n            const last = remaining <= 1\r\n\r\n            const options = [\r\n                {\r\n                    value: 'false',\r\n                    label: localize('rations.no'),\r\n                },\r\n                {\r\n                    value: 'true',\r\n                    label: last ? localize('rations.last') : localize('rations.yes', { nb: remaining }),\r\n                },\r\n            ]\r\n\r\n            templates.push({\r\n                label: rations.name,\r\n                rows: [\r\n                    {\r\n                        label: '',\r\n                        order: 200,\r\n                        value: 'false',\r\n                        options,\r\n                        data: {\r\n                            type: 'select',\r\n                            daily: type,\r\n                            row: row,\r\n                        },\r\n                    },\r\n                ],\r\n            })\r\n\r\n            this._rows[type] = { [row]: { save: false } }\r\n        }\r\n\r\n        for (const daily of this._dailies) {\r\n            try {\r\n                const template = await getTemplate.call(this, daily)\r\n                templates.push(template)\r\n            } catch (error) {\r\n                localize.error('error.unexpected')\r\n                console.error(error)\r\n                console.error(`The error occured during templating of ${daily.key}`)\r\n            }\r\n        }\r\n\r\n        const rows = []\r\n        const groups = []\r\n        for (const template of templates) {\r\n            if (template.rows.length > 1) groups.push(template)\r\n            else if (template.rows.length) rows.push(template)\r\n        }\r\n\r\n        rows.sort((a, b) => b.rows[0].order - a.rows[0].order)\r\n        groups.sort((a, b) => a.rows.length - b.rows.length)\r\n\r\n        return mergeObject(super.getData(options), {\r\n            i18n: localize,\r\n            dump: ({ value, placeholder, data }) => {\r\n                let msg = ''\r\n                if (value) msg += ` value=\"${value}\"`\r\n                if (placeholder) msg += ` placeholder=\"${placeholder}\"`\r\n                Object.entries(data).forEach(([key, value]) => (msg += ` data-${key}=\"${value}\"`))\r\n                if (msg) msg += ' '\r\n                return msg\r\n            },\r\n            rows,\r\n            groups,\r\n            hasDailies: rows.length || groups.length,\r\n        })\r\n    }\r\n\r\n    render(force, options) {\r\n        if (this._randomInterval) clearInterval(this._randomInterval)\r\n\r\n        if (this.element.find('select.random')) {\r\n            this._randomInterval = setInterval(() => {\r\n                const randoms = this.element.find('select.random')\r\n                randoms.each((_, select) => {\r\n                    select.selectedIndex = (select.selectedIndex + 1) % select.options.length\r\n                })\r\n            }, 2000)\r\n        }\r\n\r\n        return super.render(force, options)\r\n    }\r\n\r\n    close(options) {\r\n        if (this._randomInterval) clearInterval(this._randomInterval)\r\n        return super.close(options)\r\n    }\r\n\r\n    activateListeners(html) {\r\n        super.activateListeners(html)\r\n\r\n        html.find('[data-action=clear]').on('click', this.#onClear.bind(this))\r\n        html.find('[data-action=accept]').on('click', this.#onAccept.bind(this))\r\n        html.find('[data-action=cancel]').on('click', this.#onCancel.bind(this))\r\n\r\n        html.find('.combo select').on('change', this.#onComboSelectChange.bind(this))\r\n        html.find('.combo input').on('change', this.#onComboInputChange.bind(this))\r\n\r\n        html.find('[data-action=search]').on('click', this.#onSearch.bind(this))\r\n\r\n        html.find('[data-action=alert]').on('click', this.#onAlert.bind(this))\r\n    }\r\n\r\n    _canDragDrop(selector) {\r\n        return true\r\n    }\r\n\r\n    async _onDrop(event) {\r\n        const localize = subLocalize('interface.error.drop')\r\n        let target = event.target\r\n        if (target instanceof HTMLLabelElement) target = target.nextElementSibling\r\n\r\n        try {\r\n            const dataString = event.dataTransfer?.getData('text/plain')\r\n            const data = JSON.parse(dataString)\r\n\r\n            if (!data || data.type !== 'Item' || typeof data.uuid !== 'string') return localize.warn('wrongDataType')\r\n\r\n            const item = await fromUuid(data.uuid)\r\n            if (!item) return localize.warn('wrongDataType')\r\n\r\n            const filter = await this.#getfilterFromElement(target)\r\n            if (!filter) return onDropItem(item, target)\r\n\r\n            if (filter.type === 'feat') onDropFeat.call(this, item, target, filter)\r\n            else if (filter.type === 'spell') onDropSpell.call(this, item, target, filter)\r\n            else onDropItem(item, target)\r\n        } catch (error) {\r\n            localize.error('error.unexpected')\r\n            console.error(error)\r\n            console.error(`The error occured during _onDrop`)\r\n        }\r\n    }\r\n\r\n    async #onAlert(event) {\r\n        event.preventDefault()\r\n        this.#lock()\r\n\r\n        const data = event.currentTarget.dataset\r\n        const row = this.rows[data.daily][data.row]\r\n        const args = this.dailyArgs[data.daily]\r\n\r\n        let fixed\r\n        try {\r\n            fixed = await row.fix(args)\r\n        } catch (error) {\r\n            localize.error('error.unexpected')\r\n            console.error(error)\r\n            console.error(`The error occured during an alert fix of '${data.daily}'`)\r\n        }\r\n\r\n        this.#unlock()\r\n        if (fixed) this.render()\r\n    }\r\n\r\n    async #onSearch(event) {\r\n        event.preventDefault()\r\n        const filter = await this.#getfilterFromElement(event.currentTarget, true)\r\n        if (filter) game.pf2e.compendiumBrowser.openTab(filter.type, filter.search)\r\n        else game.pf2e.compendiumBrowser.render(true)\r\n    }\r\n\r\n    async #getfilterFromElement(element, parsed) {\r\n        const { daily, row } = element.dataset\r\n        const filter = this.rows[daily]?.[row]?.filter\r\n        const args = this.dailyArgs[daily]\r\n\r\n        if (!args || !filter) return\r\n\r\n        if (typeof filter.search === 'function') filter.search = await filter.search(args)\r\n\r\n        if (!parsed) return filter\r\n\r\n        return parseFilter.call(this, filter)\r\n    }\r\n\r\n    #onComboSelectChange(event) {\r\n        const select = event.currentTarget\r\n        const input = select.nextElementSibling\r\n        input.dataset.input = 'false'\r\n        input.value = select.options[select.selectedIndex].text\r\n    }\r\n\r\n    #onComboInputChange(event) {\r\n        const input = event.currentTarget\r\n        const select = input.previousElementSibling\r\n        const value = input.value.toLowerCase()\r\n        const options = Array.from(select.options).map(x => x.value)\r\n\r\n        const index = options.indexOf(value)\r\n        if (index !== -1) {\r\n            select.value = value\r\n            input.value = select.options[index].text\r\n            input.dataset.input = 'false'\r\n        } else {\r\n            select.value = ''\r\n            input.dataset.input = 'true'\r\n        }\r\n    }\r\n\r\n    #lock() {\r\n        this.element.addClass('disabled')\r\n    }\r\n\r\n    #unlock() {\r\n        this.element.removeClass('disabled')\r\n    }\r\n\r\n    #validate() {\r\n        const warns = []\r\n        const emptyInputs = this.element.find('input').filter((_, input) => !input.value)\r\n        const alertInputs = this.element.find('input.alert')\r\n\r\n        if (emptyInputs.length) warns.push('error.empty')\r\n        if (alertInputs.length) warns.push('error.unattended')\r\n\r\n        warns.forEach(x => localize.warn(x))\r\n\r\n        return !warns.length\r\n    }\r\n\r\n    async #onAccept(event) {\r\n        event.preventDefault()\r\n        if (!this.#validate()) return\r\n        this.#lock()\r\n        await processData.call(this)\r\n        this.close()\r\n    }\r\n\r\n    #onClear(event) {\r\n        event.preventDefault()\r\n        const target = $(event.currentTarget)\r\n        const input = target.prevAll('input').first()\r\n        input.val('')\r\n        input.attr('value', '')\r\n        input.attr('data-uuid', '')\r\n        target.addClass('disabled')\r\n    }\r\n\r\n    #onCancel(event) {\r\n        event.preventDefault()\r\n        this.close()\r\n    }\r\n}\r\n", "import { openDailiesInterface } from './api'\r\nimport { MODULE_ID, getChatMessageClass, getFlag, localize } from './module'\r\n\r\nexport function renderChatMessage(message, html) {\r\n    const flag = getFlag(message, 'isWatch')\r\n    if (!flag) return\r\n    html.find('.message-content button').on('click', () => openDailiesInterface())\r\n}\r\n\r\nexport function createWatchChatMessage() {\r\n    let content = `<div>${localize('message.dailiesRequest.content')}</div>`\r\n    content += `<button type=\"button\" style=\"margin-top: 8px;\">${localize('message.dailiesRequest.button')}</button>`\r\n    getChatMessageClass().create({ content, flags: { [MODULE_ID]: { isWatch: true } } })\r\n}\r\n", "import { chatUUID } from '../module'\r\n\r\nconst scrollCompendiumIds = {\r\n    1: 'RjuupS9xyXDLgyIr', // Compendium.pf2e.equipment-srd.Item.RjuupS9xyXDLgyIr\r\n    2: 'Y7UD64foDbDMV9sx',\r\n    3: 'ZmefGBXGJF3CFDbn',\r\n    4: 'QSQZJ5BC3DeHv153',\r\n    5: 'tjLvRWklAylFhBHQ',\r\n    6: '4sGIy77COooxhQuC',\r\n    7: 'fomEZZ4MxVVK3uVu',\r\n    8: 'iPki3yuoucnj7bIt',\r\n    9: 'cFHomF3tty8Wi1e5',\r\n    10: 'o1XIHJ4MJyroAHfF',\r\n}\r\n\r\nconst scrolls = []\r\n\r\nexport async function createSpellScroll(uuid, level, temp = false) {\r\n    const spell = (await fromUuid(uuid))?.toObject()\r\n    if (!spell) return null\r\n\r\n    if (level === false) level = spell.system.level.value\r\n\r\n    const scrollUUID = getScrollCompendiumUUID(level)\r\n    scrolls[level] ??= await fromUuid(scrollUUID)\r\n\r\n    const scroll = scrolls[level]?.toObject()\r\n    if (!scroll) return null\r\n\r\n    spell.system.location.heightenedLevel = level\r\n\r\n    scroll.name = `Scroll of ${spell.name} (Level ${level})`\r\n    scroll.system.temporary = temp\r\n    scroll.system.spell = spell\r\n    scroll.system.traits.value.push(...spell.system.traditions.value)\r\n\r\n    const sourceId = spell.flags.core?.sourceId\r\n    if (sourceId) scroll.system.description.value = `${chatUUID(sourceId)}\\n<hr />${scroll.system.description.value}`\r\n\r\n    return scroll\r\n}\r\n\r\nfunction getScrollCompendiumUUID(level) {\r\n    return `Compendium.pf2e.equipment-srd.Item.${scrollCompendiumIds[level]}`\r\n}\r\n", "import { DailiesInterface } from './apps/interface'\r\nimport { createWatchChatMessage } from './chat'\r\nimport { capitalize, getFlag, getSetting, localize, sequenceArray, warn } from './module'\r\nimport { createSpellScroll } from './pf2e/spell'\r\n\r\nconst halfLevelString = 'max(1,floor(@actor.level/2))'\r\n\r\nexport const utils = {\r\n    // Skills\r\n    get skillNames() {\r\n        return Object.keys(CONFIG.PF2E.skillList).slice()\r\n    },\r\n    skillLabel: skill => {\r\n        return game.i18n.localize(CONFIG.PF2E.skillList[skill])\r\n    },\r\n    createSkillRuleElement: ({ skill, value, mode = 'upgrade', predicate }) => {\r\n        const rule = {\r\n            key: 'ActiveEffectLike',\r\n            mode,\r\n            path: `system.skills.${skill}.rank`,\r\n            value,\r\n        }\r\n        if (predicate && predicate.length) rule.predicate = predicate\r\n        return rule\r\n    },\r\n    createLoreSource: ({ name, rank }) => {\r\n        const data = {\r\n            type: 'lore',\r\n            img: 'systems/pf2e/icons/default-icons/lore.svg',\r\n            name,\r\n            system: { proficient: { value: rank } },\r\n        }\r\n        return data\r\n    },\r\n    // Languages\r\n    get languageNames() {\r\n        return Object.keys(CONFIG.PF2E.languages).slice()\r\n    },\r\n    languageLabel: language => {\r\n        return game.i18n.localize(CONFIG.PF2E.languages[language])\r\n    },\r\n    createLanguageRuleElement: ({ language, mode = 'add', predicate }) => {\r\n        const rule = {\r\n            key: 'ActiveEffectLike',\r\n            mode,\r\n            path: 'system.traits.languages.value',\r\n            value: language,\r\n        }\r\n        if (predicate && predicate.length) rule.predicate = predicate\r\n        return rule\r\n    },\r\n    // resistances\r\n    resistanceLabel: (resistance, value) => {\r\n        let str = game.i18n.localize(`PF2E.Trait${capitalize(resistance)}`)\r\n        if (value) str += ` ${value}`\r\n        return str\r\n    },\r\n    createResistanceRuleElement: ({ type, value, predicate }) => {\r\n        if (value === 'half') value = halfLevelString\r\n        const rule = {\r\n            key: 'Resistance',\r\n            type,\r\n            value,\r\n        }\r\n        if (predicate && predicate.length) rule.predicate = predicate\r\n        return rule\r\n    },\r\n    // feats\r\n    createFeatSource: async uuid => {\r\n        const source = (await fromUuid(uuid))?.toObject()\r\n        if (!source) throw new Error(`An error occured while trying to create a feat source with uuid: ${uuid}`)\r\n        return source\r\n    },\r\n    // spells\r\n    createSpellScrollSource: async ({ uuid, level }) => {\r\n        const source = await createSpellScroll(uuid, level ?? false, true)\r\n        if (!source) throw new Error(`An error occured while trying to create a spell scroll source with uuid: ${uuid}`)\r\n        return source\r\n    },\r\n    createSpellSource: async uuid => {\r\n        const source = (await fromUuid(uuid))?.toObject()\r\n        if (!source) throw new Error(`An error occured while trying to create a spell source with uuid: ${uuid}`)\r\n        return source\r\n    },\r\n    // Rule Elements\r\n    get halfLevelString() {\r\n        return halfLevelString\r\n    },\r\n    getChoiSetRuleSelection: (item, option) => {\r\n        const rules = item._source.system.rules\r\n        const rule = rules.find(rule => rule.key === 'ChoiceSet' && rule.rollOption === option)\r\n        return rule?.selection\r\n    },\r\n    //\r\n    proficiencyLabel: rank => {\r\n        return game.i18n.localize(CONFIG.PF2E.proficiencyLevels[rank])\r\n    },\r\n    randomOption: async options => {\r\n        const roll = (await new Roll(`1d${options.length}`).evaluate({ async: true })).total\r\n        const result = options[roll - 1]\r\n        if (typeof result === 'string') return result\r\n        return result.value\r\n    },\r\n    halfLevelValue: actor => Math.max(1, Math.floor(actor.level / 2)),\r\n    sequenceArray,\r\n    // equipment\r\n    damageLabel: damage => {\r\n        return game.i18n.localize(CONFIG.PF2E.weaponDamage[damage])\r\n    },\r\n    weaponTraitLabel: trait => {\r\n        return game.i18n.localize(CONFIG.PF2E.weaponTraits[trait])\r\n    },\r\n    weaponPropertyRunesLabel: rune => {\r\n        return game.i18n.localize(CONFIG.PF2E.weaponPropertyRunes[rune])\r\n    },\r\n    hasFreePropertySlot: item => {\r\n        const potency = item.system.runes.potency\r\n        return potency > 0 && item.system.runes.property.length < potency\r\n    },\r\n    getFreePropertyRuneSlot: item => {\r\n        const potency = item.system.potencyRune.value\r\n        if (potency === null) return null\r\n\r\n        for (let i = 0; i < potency; i++) {\r\n            const property = RUNE_PROPERTY_KEYS[i]\r\n            if (!item.system[property].value) return property\r\n        }\r\n\r\n        return null\r\n    },\r\n    // actor\r\n    getPlayersActors: (member, ...types) => {\r\n        if (!types.length) types = ['creature']\r\n\r\n        let actors = game.actors\r\n\r\n        if (member) {\r\n            const members = getSetting('members') ? Array.from(member.parties ?? []).flatMap(p => p.members) : null\r\n\r\n            if (members) actors = members\r\n            else actors = actors.filter(a => a.hasPlayerOwner)\r\n\r\n            if (member instanceof Actor) actors = actors.filter(a => a !== member)\r\n        } else actors = actors.filter(a => a.hasPlayerOwner)\r\n\r\n        return actors.filter(a => a.isOfType(...types))\r\n    },\r\n}\r\n\r\nexport function openDailiesInterface(actor) {\r\n    if (!actor || !actor.isOfType('character') || !actor.isOwner) {\r\n        const controlled = canvas.tokens.controlled\r\n        actor = controlled.find(token => token.actor?.isOfType('character') && token.actor.isOwner)?.actor\r\n        if (!actor) actor = game.user.character\r\n    }\r\n\r\n    if (!actor || !actor.isOfType('character') || !actor.isOwner) return warn('error.noCharacterSelected')\r\n\r\n    if (getFlag(actor, 'rested') !== true) return warn('error.unrested')\r\n\r\n    new DailiesInterface(actor, { title: localize('interface.title', { name: actor.name }) }).render(true)\r\n}\r\n\r\nexport function requestDailies() {\r\n    if (!game.user.isGM) return warn('error.notGM')\r\n    createWatchChatMessage()\r\n}\r\n", "import { openDailiesInterface } from './api'\r\nimport { localize } from './module'\r\n\r\nexport async function onPerformDailyCrafting() {\r\n    const entries = (await this.getCraftingEntries()).filter(e => e.isDailyPrep)\r\n    const alchemicalEntries = entries.filter(e => e.isAlchemical)\r\n    const reagentCost = alchemicalEntries.reduce((sum, entry) => sum + entry.reagentCost, 0)\r\n    const reagentValue = (this.system.resources.crafting.infusedReagents.value || 0) - reagentCost\r\n\r\n    if (reagentValue < 0) {\r\n        ui.notifications.warn(game.i18n.localize('PF2E.CraftingTab.Alerts.MissingReagents'))\r\n        return\r\n    } else {\r\n        await this.update({ 'system.resources.crafting.infusedReagents.value': reagentValue })\r\n    }\r\n\r\n    for (const entry of entries) {\r\n        for (const formula of entry.preparedCraftingFormulas) {\r\n            const itemSource = formula.item.toObject()\r\n            itemSource.system.quantity = formula.quantity\r\n            itemSource.system.temporary = true\r\n            itemSource.system.size = this.ancestry?.size === 'tiny' ? 'tiny' : 'med'\r\n\r\n            if (\r\n                entry.isAlchemical &&\r\n                (itemSource.type === 'consumable' || itemSource.type === 'weapon' || itemSource.type === 'equipment')\r\n            ) {\r\n                itemSource.system.traits.value.push('infused')\r\n            }\r\n\r\n            await this.addToInventory(itemSource)\r\n        }\r\n    }\r\n}\r\n\r\nexport function renderCharacterSheetPF2e(sheet, html) {\r\n    const actor = sheet.actor\r\n    if (!actor.isOwner) return\r\n\r\n    const small = html.find('aside .sidebar .hitpoints .hp-small')\r\n    small\r\n        .append(`<a class=\"roll-icon dailies\" data-tooltip=\"${localize('sheet.title')}\"><i class=\"fas fa-mug-saucer\"></i></a>`)\r\n        .find('.dailies')\r\n        .on('click', () => openDailiesInterface(actor))\r\n}\r\n", "export const flexibility = [\r\n    \"/** @typedef {'flexibility' | 'improved'} FlexibilityRow */\",\r\n    \"/** @typedef {'improved'} FlexibilityChild */\",\r\n    '/** @typedef {[FlexibilityRow, {}, FlexibilityChild]} FlexibilityGenerics */',\r\n    '',\r\n    '/**',\r\n    ' * @param {FlexibilityRow} slug',\r\n    ' * @param {number} level',\r\n    ' * @param {FlexibilityChild} [child]',\r\n    ' */',\r\n    'function createRow(slug, level, child) {',\r\n    '    /** @type {DailyRowDrop<FlexibilityGenerics>} */',\r\n    '    const row = {',\r\n    \"        type: 'drop',\",\r\n    '        label: `PF2E.Level${level}`,',\r\n    '        slug,',\r\n    '        filter: {',\r\n    \"            type: 'feat',\",\r\n    '            search: {',\r\n    \"                category: ['class'],\",\r\n    '                traits: {',\r\n    \"                    values: ['fighter'],\",\r\n    '                },',\r\n    '                level,',\r\n    '            },',\r\n    '        },',\r\n    '    }',\r\n    '    if (child) row.childPredicate = [child]',\r\n    '    return row',\r\n    '}',\r\n    '',\r\n    '/** @type {Daily<FlexibilityGenerics>} */',\r\n    'const combatFlexibility = {',\r\n    \"    key: 'flexibility',\",\r\n    '    item: {',\r\n    \"        uuid: 'Compendium.pf2e.classfeatures.Item.8g6HzARbhfcgilP8', // Combat Flexibility\",\r\n    '    },',\r\n    '    children: [',\r\n    '        {',\r\n    \"            slug: 'improved',\",\r\n    \"            uuid: 'Compendium.pf2e.classfeatures.Item.W2rwudMNcAxs8VoX', // Improved Flexibility\",\r\n    '        },',\r\n    '    ],',\r\n    '    rows: [',\r\n    \"        createRow('flexibility', 8), //\",\r\n    \"        createRow('improved', 14, 'improved'),\",\r\n    '    ],',\r\n    '    process: async ({ utils, fields, addFeat, messages, children }) => {',\r\n    '        const uuid = fields.flexibility.uuid',\r\n    '        const source = await utils.createFeatSource(uuid)',\r\n    '        addFeat(source)',\r\n    \"        messages.add('feats', { uuid })\",\r\n    '',\r\n    '        if (children.improved) {',\r\n    '            const uuid = fields.improved.uuid',\r\n    '            const source = await utils.createFeatSource(uuid)',\r\n    '            addFeat(source, children.improved)',\r\n    \"            messages.add('feats', { uuid })\",\r\n    '        }',\r\n    '    },',\r\n    '}',\r\n    '',\r\n    'return combatFlexibility',\r\n].join('\\n')\r\n", "export const mind = [\r\n    \"/** @typedef {'alert' | 'smith' | 'mental' | 'runic' | 'advanced'} MindRow */\",\r\n    \"/** @typedef {'weapon' | 'mental' | 'runic' | 'advanced'} MindChild */\",\r\n    '/** @typedef {[MindRow, {}, MindChild]} MindGenerics */',\r\n    '',\r\n    \"const MIND_WEAPON_UUID = 'Compendium.pf2e-dailies.equipment.Item.VpmEozw21aRxX15P'\",\r\n    '',\r\n    'const WEAPON_BASE_TYPES = {',\r\n    \"    0: { die: 'd4', traits: ['finesse', 'agile'], usage: 'held-in-one-hand' },\",\r\n    \"    1: { die: 'd6', traits: ['finesse'], usage: 'held-in-one-hand' },\",\r\n    \"    2: { die: 'd8', traits: [], usage: 'held-in-one-hand' },\",\r\n    \"    3: { die: 'd10', traits: ['reach'], usage: 'held-in-two-hands' },\",\r\n    '}',\r\n    '',\r\n    'const WEAPON_GROUPS = /** @type {Record<WeaponDamage, string>} */ {',\r\n    \"    slashing: 'sword',\",\r\n    \"    piercing: 'spear',\",\r\n    \"    bludgeoning: 'club',\",\r\n    '}',\r\n    '',\r\n    \"const WEAPON_TRAITS = ['grapple', 'nonlethal', 'shove', 'trip', 'modular']\",\r\n    '',\r\n    'const WEAPON_DAMAGE_TYPES = Object.keys(WEAPON_GROUPS)',\r\n    '',\r\n    \"const WEAPON_RUNES = ['corrosive', 'disrupting', 'flaming', 'frost', 'shock', 'thundering']\",\r\n    '',\r\n    'const WEAPON_GREATER_RUNES = [',\r\n    \"    'anarchic',\",\r\n    \"    'axiomatic',\",\r\n    \"    'greaterCorrosive',\",\r\n    \"    'greaterDisrupting',\",\r\n    \"    'greaterFlaming',\",\r\n    \"    'greaterFrost',\",\r\n    \"    'greaterShock',\",\r\n    \"    'greaterThundering',\",\r\n    \"    'holy',\",\r\n    \"    'unholy',\",\r\n    ']',\r\n    '',\r\n    '/** @type {Daily<MindGenerics>} */',\r\n    'const mindSmith = {',\r\n    \"    key: 'mindsmith',\",\r\n    '    item: {',\r\n    \"        uuid: 'Compendium.pf2e.feats-srd.Item.juikoiIA0Jy8PboY', // Mind Smith Dedication\",\r\n    '    },',\r\n    '    children: [',\r\n    '        {',\r\n    \"            slug: 'weapon',\",\r\n    '            uuid: MIND_WEAPON_UUID, // Mind Weapon',\r\n    '        },',\r\n    '        {',\r\n    \"            slug: 'mental',\",\r\n    \"            uuid: 'Compendium.pf2e.feats-srd.Item.PccekOihIbRWdDky', // Malleable Mental Forge\",\r\n    '        },',\r\n    '        {',\r\n    \"            slug: 'runic',\",\r\n    \"            uuid: 'Compendium.pf2e.feats-srd.Item.2uQbQgz1AbjzcFSp', // Runic Mind Smithing\",\r\n    '        },',\r\n    '        {',\r\n    \"            slug: 'advanced',\",\r\n    \"            uuid: 'Compendium.pf2e.feats-srd.Item.fgnfXwFcn9jZlXGD', // Advanced Runic Mind Smithing\",\r\n    '        },',\r\n    '    ],',\r\n    '    rows: [',\r\n    '        {',\r\n    \"            type: 'alert',\",\r\n    \"            slug: 'alert',\",\r\n    \"            message: 'Missing Mind Weapon',\",\r\n    '            fix,',\r\n    \"            childPredicate: [{ not: 'weapon' }],\",\r\n    '        },',\r\n    '        {',\r\n    \"            type: 'select',\",\r\n    \"            slug: 'smith',\",\r\n    \"            label: 'Mind Smith',\",\r\n    '            options: WEAPON_DAMAGE_TYPES,',\r\n    '            labelizer: ({ utils }) => utils.damageLabel,',\r\n    \"            childPredicate: ['weapon'],\",\r\n    '        },',\r\n    '        {',\r\n    \"            type: 'select',\",\r\n    \"            slug: 'mental',\",\r\n    \"            label: 'Mental Forge',\",\r\n    '            options: WEAPON_TRAITS,',\r\n    '            labelizer: ({ utils }) => utils.weaponTraitLabel,',\r\n    \"            childPredicate: ['weapon', 'mental'],\",\r\n    '        },',\r\n    '        {',\r\n    \"            type: 'select',\",\r\n    \"            slug: 'runic',\",\r\n    \"            label: 'Runic Smithing',\",\r\n    '            options: WEAPON_RUNES,',\r\n    '            labelizer: ({ utils }) => utils.weaponPropertyRunesLabel,',\r\n    \"            childPredicate: ['weapon', 'runic', { not: 'advanced' }],\",\r\n    '            condition: ({ children, utils }) => utils.hasFreePropertySlot(children.weapon),',\r\n    '        },',\r\n    '        {',\r\n    \"            type: 'select',\",\r\n    \"            slug: 'advanced',\",\r\n    \"            label: 'Runic Smithing',\",\r\n    '            options: WEAPON_GREATER_RUNES,',\r\n    '            labelizer: ({ utils }) => utils.weaponPropertyRunesLabel,',\r\n    \"            childPredicate: ['weapon', 'advanced'],\",\r\n    '            condition: ({ children, utils }) => utils.hasFreePropertySlot(children.weapon),',\r\n    '        },',\r\n    '    ],',\r\n    '    process: ({ children, updateItem, fields, messages, item, utils }) => {',\r\n    '        const weapon = children.weapon',\r\n    '        if (!weapon) return',\r\n    '',\r\n    \"        messages.addGroup('mindsmith')\",\r\n    '',\r\n    '        const selected = /** @type {WeaponDamage} */ fields.smith.value',\r\n    \"        updateItem({ _id: weapon.id, 'system.damage.damageType': selected, 'system.group': WEAPON_GROUPS[selected] })\",\r\n    \"        messages.add('mindsmith', { selected: utils.damageLabel(selected), uuid: item.uuid, label: 'mindsmith' })\",\r\n    '',\r\n    '        if (children.mental) {',\r\n    '            const selected = fields.mental.value',\r\n    '            const traits = deepClone(weapon._source.system.traits?.value ?? [])',\r\n    '            if (!traits.includes(selected)) traits.push(selected)',\r\n    \"            updateItem({ _id: weapon.id, 'system.traits.value': traits })\",\r\n    \"            messages.add('mindsmith', {\",\r\n    '                selected: utils.weaponTraitLabel(selected),',\r\n    '                uuid: children.mental.uuid,',\r\n    \"                label: 'mentalforge',\",\r\n    '            })',\r\n    '        }',\r\n    '',\r\n    '        if ((children.advanced || children.runic) && utils.hasFreePropertySlot(weapon)) {',\r\n    '            const child = children.advanced ?? children.runic',\r\n    '            const freeSlot = utils.getFreePropertyRuneSlot(weapon)',\r\n    '            const field = fields.advanced ?? fields.runic',\r\n    '            const selected = field.value',\r\n    '',\r\n    '            if (!weapon.system.runes.property.includes(selected)) {',\r\n    '                updateItem({ _id: weapon.id, [`system.${freeSlot}.value`]: selected, [`flags.world.runeSlot`]: freeSlot })',\r\n    \"                messages.add('mindsmith', {\",\r\n    '                    selected: utils.weaponPropertyRunesLabel(selected),',\r\n    '                    uuid: child.uuid,',\r\n    \"                    label: 'runicmind',\",\r\n    '                })',\r\n    '            }',\r\n    '        }',\r\n    '    },',\r\n    '    rest: ({ item, sourceId, updateItem }) => {',\r\n    '        if (sourceId !== MIND_WEAPON_UUID) return',\r\n    '',\r\n    '        let traits = item._source.system.traits?.value ?? []',\r\n    '        traits = traits.filter(trait => !WEAPON_TRAITS.includes(trait))',\r\n    \"        updateItem({ _id: item.id, 'system.traits.value': traits })\",\r\n    '',\r\n    \"        const runeSlot = item.getFlag('world', 'runeSlot')\",\r\n    '        if (runeSlot) {',\r\n    '            updateItem({ _id: item.id, [`system.${runeSlot}.value`]: null, [`flags.world.-=runeSlot`]: true })',\r\n    '        }',\r\n    '    },',\r\n    '}',\r\n    '',\r\n    'const OPTIONS = {',\r\n    \"    0: 'A one-handed weapon that deals <strong>1d4</strong> damage and has the <strong>agile</strong> and <strong>finesse</strong> traits',\",\r\n    \"    1: 'A one-handed weapon that deals <strong>1d6</strong> damage and has the <strong>finesse</strong> trait',\",\r\n    \"    2: 'A one-handed weapon that deals <strong>1d8</strong> damage',\",\r\n    \"    3: 'A two-handed weapon that deals <strong>1d10</strong> damage and has the <strong>reach</strong> trait',\",\r\n    '}',\r\n    '',\r\n    '/** * @param {DailyValueArgs<MindGenerics>} args */',\r\n    'async function fix({ actor }) {',\r\n    '    let content =',\r\n    \"        `<p>This character doesn't have a mind weapon in their inventory.</p><p>Please select one of the following options to create one.</p>`\",\r\n    '',\r\n    '    for (const [key, label] of Object.entries(OPTIONS)) {',\r\n    \"        content += `<label><input type='radio' name='type' value='${key}'>${label}</label>`\",\r\n    '    }',\r\n    '',\r\n    '    const weapon = await Dialog.wait(',\r\n    '        {',\r\n    \"            title: 'Mind Weapon',\",\r\n    '            content,',\r\n    '            buttons: {',\r\n    '                yes: {',\r\n    \"                    icon: `<i class='fas fa-save'></i>`,\",\r\n    \"                    label: 'Accept',\",\r\n    '                    callback: onWeaponSelected,',\r\n    '                },',\r\n    '                no: {',\r\n    \"                    icon: `<i class='fas fa-times'></i>`,\",\r\n    \"                    label: 'Cancel',\",\r\n    '                    callback: () => null,',\r\n    '                },',\r\n    '            },',\r\n    '            close: () => null,',\r\n    '        },',\r\n    '        {},',\r\n    \"        { id: 'pf2e-dailies-weapon', width: 600 }\",\r\n    '    )',\r\n    '',\r\n    '    if (weapon) {',\r\n    \"        await actor.createEmbeddedDocuments('Item', [weapon])\",\r\n    '        return true',\r\n    '    }',\r\n    '',\r\n    '    return false',\r\n    '}',\r\n    '',\r\n    '/** @params {JQuery} html */',\r\n    'async function onWeaponSelected(html) {',\r\n    \"    const selection = html.find('[name=type]:checked').val()\",\r\n    '    if (!selection) {',\r\n    \"        ui.notifications.warn('You must select one weapon base type.')\",\r\n    '        return',\r\n    '    }',\r\n    '',\r\n    '    const weapon = (await fromUuid(MIND_WEAPON_UUID))?.toObject()',\r\n    '    if (!weapon) {',\r\n    \"        ui.notifications.warn(`The weapon couldn't be found in the compendium.`)\",\r\n    '        return',\r\n    '    }',\r\n    '',\r\n    '    const stats = WEAPON_BASE_TYPES[selection]',\r\n    '',\r\n    \"    setProperty(weapon, 'system.damage.die', stats.die)\",\r\n    \"    setProperty(weapon, 'system.traits.value', stats.traits.slice())\",\r\n    \"    setProperty(weapon, 'system.usage.value', stats.usage)\",\r\n    '',\r\n    '    return weapon',\r\n    '}',\r\n    '',\r\n    'return mindSmith',\r\n].join('\\n')\r\n", "export const savant = [\r\n    \"/** @typedef {'first' | 'second' | 'third' | 'fourth'} SavantRow */\",\r\n    '/** @typedef {Record<SavantRow, { level: number; condition: boolean }>} SavantCustom */',\r\n    \"/** @typedef {[SavantRow, SavantCustom, '']} SavantGenerics */\",\r\n    '',\r\n    \"const ROWS = /** @type {const} */ (['first', 'second', 'third', 'fourth'])\",\r\n    '',\r\n    '/**',\r\n    ' * @param {CharacterPF2e} actor',\r\n    ' * @param {MagicTradition} tradition',\r\n    ' */',\r\n    'function getSpellcastingTraditionDetails(actor, tradition) {',\r\n    '    let maxSlot = 1',\r\n    '    let maxTradition = 0',\r\n    '',\r\n    '    for (const entry of actor.spellcasting.regular) {',\r\n    \"        if ('pf2e-staves' in entry.flags) continue // we skip staff entries\",\r\n    '',\r\n    '        const slots = entry.system.slots',\r\n    '        for (const key in slots) {',\r\n    '            const slot = slots[key]',\r\n    '            if (slot.max) maxSlot = Math.max(maxSlot, Number(key.slice(4)))',\r\n    '        }',\r\n    '',\r\n    '        if (entry.tradition === tradition) maxTradition = Math.max(maxTradition, entry.rank)',\r\n    '    }',\r\n    '',\r\n    '    return { maxSlot: Math.min(maxSlot, 10), maxTradition }',\r\n    '}',\r\n    '',\r\n    '/** @type {Daily<SavantGenerics>} */',\r\n    'const scrollSavant = {',\r\n    \"    key: 'savant',\",\r\n    '    item: {',\r\n    \"        uuid: 'Compendium.pf2e.feats-srd.Item.u5DBg0LrBUKP0JsJ', // Scroll Savant\",\r\n    '    },',\r\n    '    prepare: ({ actor }) => {',\r\n    \"        const { maxSlot, maxTradition } = getSpellcastingTraditionDetails(actor, 'arcane')\",\r\n    '        return {',\r\n    '            first: { level: maxSlot - 2, condition: true },',\r\n    '            second: { level: maxSlot - 3, condition: true },',\r\n    '            third: { level: maxSlot - 4, condition: maxTradition >= 3 && maxSlot >= 5 },',\r\n    '            fourth: { level: maxSlot - 5, condition: maxTradition >= 4 && maxSlot >= 6 },',\r\n    '        }',\r\n    '    },',\r\n    '    rows: ROWS.map(rowName => {',\r\n    '        /** @type {DailyRowDrop<SavantGenerics>} */',\r\n    '        const row = {',\r\n    \"            type: 'drop',\",\r\n    '            slug: rowName,',\r\n    '            label: ({ custom }) => `PF2E.SpellLevel${custom[rowName].level}`,',\r\n    '            filter: {',\r\n    \"                type: 'spell',\",\r\n    '                search: ({ custom }) => ({',\r\n    \"                    category: ['spell'],\",\r\n    \"                    traditions: ['arcane'],\",\r\n    '                    level: custom[rowName].level,',\r\n    '                }),',\r\n    '            },',\r\n    '            condition: ({ custom }) => custom[rowName].condition,',\r\n    '        }',\r\n    '        return row',\r\n    '    }),',\r\n    '    process: async ({ utils, fields, custom, addItem, messages }) => {',\r\n    '        for (const field of Object.values(fields)) {',\r\n    '            const uuid = field.uuid',\r\n    '            const source = await utils.createSpellScrollSource({ uuid, level: custom[field.row].level })',\r\n    '            addItem(source)',\r\n    \"            messages.add('scrolls', { uuid, label: source.name })\",\r\n    '        }',\r\n    '    },',\r\n    '}',\r\n    '',\r\n    'return scrollSavant',\r\n].join('\\n')\r\n", "export const tome = [\r\n    '/** @typedef {typeof ROWS[number]} TomeRow */',\r\n    \"/** @typedef {'adept' | 'second' | 'intense' | 'paragon'} TomeChild */\",\r\n    '/** @typedef {Record<TomeRow, { rank: OneToFour; options: string[] }>} TomeCustom */',\r\n    '/** @typedef {[TomeRow, TomeCustom, TomeChild]} TomeGenerics */',\r\n    '',\r\n    \"const ROWS = /** @type {const} */ (['first', 'second'])\",\r\n    '',\r\n    \"/** @param {'adept' | 'paragon'} option */\",\r\n    'function createChildCondition(option) {',\r\n    '    /** @type { BaseDailyConditionFunction<TomeGenerics>} */',\r\n    '    const condition = ({ item, utils }) => {',\r\n    \"        return utils.getChoiSetRuleSelection(item, option) === 'tome'\",\r\n    '    }',\r\n    '    return condition',\r\n    '}',\r\n    '',\r\n    '/** @type {Daily<TomeGenerics>} */',\r\n    'const thaumaturgeTome = {',\r\n    \"    key: 'tome',\",\r\n    '    item: {',\r\n    \"        uuid: 'Compendium.pf2e.classfeatures.Item.MyN1cQgE0HsLF20e', // Tome\",\r\n    '    },',\r\n    '    children: [',\r\n    '        {',\r\n    \"            slug: 'adept',\",\r\n    \"            uuid: 'Compendium.pf2e.classfeatures.Item.Obm4ItMIIr0whYeO', // Implement Adept\",\r\n    \"            condition: createChildCondition('adept'),\",\r\n    '        },',\r\n    '        {',\r\n    \"            slug: 'second',\",\r\n    \"            uuid: 'Compendium.pf2e.classfeatures.Item.ZEUxZ4Ta1kDPHiq5', // Second Adept\",\r\n    \"            condition: createChildCondition('adept'),\",\r\n    '        },',\r\n    '        {',\r\n    \"            slug: 'intense',\",\r\n    \"            uuid: 'Compendium.pf2e.feats-srd.Item.yRRM1dsY6jakEMaC', // Intense Implement\",\r\n    '        },',\r\n    '        {',\r\n    \"            slug: 'paragon',\",\r\n    \"            uuid: 'Compendium.pf2e.classfeatures.Item.QEtgbY8N2V4wTbsI', // Implement Paragon\",\r\n    \"            condition: createChildCondition('paragon'),\",\r\n    '        },',\r\n    '    ],',\r\n    '    prepare: ({ utils, actor, children }) => {',\r\n    '        const skillNames = utils.skillNames',\r\n    '        const actorLevel = actor.level',\r\n    '        const actorSkills = /** @type {Record<SkillLongForm, { rank: ZeroToFour }>} */ (actor.skills)',\r\n    '',\r\n    '        /** @type {TomeCustom} */',\r\n    '        const custom = {',\r\n    '            first: { options: [], rank: 1 },',\r\n    '            second: { options: [], rank: 1 },',\r\n    '        }',\r\n    '',\r\n    '        // Implement Paragon',\r\n    '        if (children.paragon) {',\r\n    '            const skills = skillNames.filter(x => actorSkills[x].rank < 4)',\r\n    '            custom.first = { rank: 4, options: skills }',\r\n    '            custom.second = { rank: 4, options: skills }',\r\n    '        }',\r\n    '        // Intense Implement or Second Adept or Implement Adept',\r\n    '        else if (children.intense || children.adept || children.second) {',\r\n    '            const masters = skillNames.filter(x => actorSkills[x].rank < 3)',\r\n    '',\r\n    '            if (actorLevel >= 9) {',\r\n    '                custom.first = { rank: 3, options: masters }',\r\n    '                custom.second = { rank: 3, options: masters }',\r\n    '            } else {',\r\n    '                const experts = skillNames.filter(x => actorSkills[x].rank < 2)',\r\n    '                custom.first = { rank: 2, options: experts }',\r\n    '                custom.second = { rank: 3, options: masters }',\r\n    '            }',\r\n    '        }',\r\n    '        // Tome',\r\n    '        else {',\r\n    '            if (actorLevel >= 5) {',\r\n    '                const experts = skillNames.filter(x => actorSkills[x].rank < 2)',\r\n    '                custom.first = { rank: 2, options: experts }',\r\n    '                custom.second = { rank: 2, options: experts }',\r\n    '            } else if (actorLevel >= 3) {',\r\n    '                const trained = skillNames.filter(x => actorSkills[x].rank < 1)',\r\n    '                const experts = skillNames.filter(x => actorSkills[x].rank < 2)',\r\n    '                custom.first = { rank: 1, options: trained }',\r\n    '                custom.second = { rank: 2, options: experts }',\r\n    '            } else {',\r\n    '                const trained = skillNames.filter(x => actorSkills[x].rank < 1)',\r\n    '                custom.first = { rank: 1, options: trained }',\r\n    '                custom.second = { rank: 1, options: trained }',\r\n    '            }',\r\n    '        }',\r\n    '',\r\n    '        return custom',\r\n    '    },',\r\n    '    rows: ROWS.map(rowName => {',\r\n    '        /** @type {DailyRowCombo<TomeGenerics>} */',\r\n    '        const row = {',\r\n    \"            type: 'combo',\",\r\n    '            slug: rowName,',\r\n    '            label: ({ custom, utils }) => utils.proficiencyLabel(custom[rowName].rank),',\r\n    '            options: ({ custom }) => custom[rowName].options,',\r\n    '            labelizer: ({ utils }) => utils.skillLabel,',\r\n    '        }',\r\n    '        return row',\r\n    '    }),',\r\n    '    process: ({ custom, fields, utils, messages, addItem, addRule }) => {',\r\n    \"        messages.addGroup('tome', 65)\",\r\n    '',\r\n    '        for (const rowName of ROWS) {',\r\n    '            const rank = custom[rowName].rank',\r\n    '            let value = fields[rowName].value',\r\n    '',\r\n    \"            if (fields[rowName].input === 'true') {\",\r\n    '                const source = utils.createLoreSource({ name: value, rank })',\r\n    '                addItem(source)',\r\n    '            } else {',\r\n    '                const source = utils.createSkillRuleElement({ skill: value, value: rank })',\r\n    '                value = utils.skillLabel(value)',\r\n    '                addRule(source)',\r\n    '            }',\r\n    '',\r\n    \"            messages.add('tome', { label: utils.proficiencyLabel(rank), selected: value })\",\r\n    '        }',\r\n    '    },',\r\n    '}',\r\n    '',\r\n    'return thaumaturgeTome',\r\n].join('\\n')\r\n", "import { createFeatDaily } from '../data/feat'\r\nimport { createLanguageDaily } from '../data/language'\r\nimport { createResistancelDaily } from '../data/resistance'\r\nimport { createTrainedLoreDaily, createTrainedSkillDaily } from '../data/skill'\r\nimport { createSpellDaily } from '../data/spell'\r\nimport { EXT_VERSION } from '../main'\r\nimport { AsyncFunction, error, getSetting, setSetting, subLocalize, templatePath, warn } from '../module'\r\nimport { flexibility } from './custom/flexibility'\r\nimport { mind } from './custom/mind'\r\nimport { savant } from './custom/savant'\r\nimport { tome } from './custom/tome'\r\n\r\nconst localize = subLocalize('customs')\r\n\r\nconst TEMPLATES = ['default', 'trainedSkill', 'trainedLore', 'language', 'resistance', 'feat', 'spell']\r\nconst EXAMPLES = ['flexibility', 'savant', 'tome', 'mind']\r\n\r\nexport class DailyCustoms extends FormApplication {\r\n    static get defaultOptions() {\r\n        return mergeObject(super.defaultOptions, {\r\n            id: 'pf2e-dailies-customs',\r\n            title: localize('title'),\r\n            template: templatePath('customs.hbs'),\r\n            submitOnChange: false,\r\n            submitOnClose: false,\r\n            closeOnSubmit: false,\r\n            scrollY: ['.left .list'],\r\n        })\r\n    }\r\n\r\n    async _updateObject(event, formData) {}\r\n\r\n    async getData(options) {\r\n        const customs = getSetting('customDailies')\r\n        const code = customs.find(custom => custom.key === this._selectedDaily)?.code\r\n        const template = this._selectedTemplate\r\n        const extension = game.modules.get('pf2e-dailies-ext')\r\n        const newVersion = extension?.active && isNewerVersion(EXT_VERSION, extension.version) ? { version: EXT_VERSION } : ''\r\n\r\n        return mergeObject(super.getData(options), {\r\n            i18n: localize,\r\n            template,\r\n            templates: TEMPLATES,\r\n            daily: this._selectedDaily,\r\n            code,\r\n            customs,\r\n            examples: EXAMPLES,\r\n            isExample: EXAMPLES.includes(template),\r\n            monaco: extension?.active,\r\n            newVersion,\r\n        })\r\n    }\r\n\r\n    activateListeners(html) {\r\n        super.activateListeners(html)\r\n\r\n        this._monaco?.dispose()\r\n\r\n        const monaco = game.modules.get('pf2e-dailies-ext')?.api\r\n        const area = html.find('.code')[0]\r\n        if (monaco && area) {\r\n            const element = html.find('.monaco .placeholder')[0]\r\n            this._monaco = monaco.createEditor(element, area.value)\r\n            this._monaco.onDidChangeModelContent(debounce(() => (area.value = this._monaco.getValue()), 200))\r\n        } else {\r\n            this._monaco = null\r\n        }\r\n\r\n        html.find('[data-action=select-template]').on('change', this.#onSelectTemplate.bind(this))\r\n        html.find('[data-action=create-template]').on('click', this.#onCreateTemplate.bind(this))\r\n        html.find('[data-action=create-daily]').on('click', this.#onCreateDaily.bind(this))\r\n\r\n        html.find('.row[data-key]').on('click', this.#onSelectDaily.bind(this))\r\n        html.find('[data-action=delete-daily]').on('click', this.#onDeleteDaily.bind(this))\r\n\r\n        html.find('[data-action=save-code]').on('click', this.#onSaveCode.bind(this))\r\n    }\r\n\r\n    get code() {\r\n        const element = this.form.querySelector('.window-content .code')\r\n        return element?.value\r\n    }\r\n\r\n    async #onSaveCode(event) {\r\n        event.preventDefault()\r\n\r\n        const code = this.code\r\n        const selected = this._selectedDaily\r\n\r\n        if (!selected || !code) return\r\n\r\n        const customs = getSetting('customDailies')\r\n        const stipped = customs.filter(custom => custom.key !== selected)\r\n\r\n        try {\r\n            const fn = new AsyncFunction(code)\r\n            const daily = await fn()\r\n            const key = daily.key\r\n\r\n            if (typeof key !== 'string') return warn('invalidKey')\r\n            if (stipped.find(custom => custom.key === key)) return warn('duplicate')\r\n\r\n            const index = customs.findIndex(custom => custom.key === selected)\r\n            if (index < 0) return\r\n\r\n            customs.splice(index, 1, { key, code })\r\n            await setSetting('customDailies', customs)\r\n\r\n            localize.info('saved', { daily: key })\r\n            this._selectedDaily = key\r\n            this.render()\r\n        } catch (err) {\r\n            error('error.unexpected')\r\n            console.error(err)\r\n            console.error(`The error occured while testing the custom daily ${selected}`)\r\n        }\r\n    }\r\n\r\n    async #onDeleteDaily(event) {\r\n        event.preventDefault()\r\n        event.stopPropagation()\r\n\r\n        const remove = await Dialog.confirm({\r\n            title: localize('delete.title'),\r\n            content: localize('delete.content'),\r\n        })\r\n\r\n        if (!remove) return\r\n\r\n        const key = event.currentTarget.dataset.key\r\n        const customs = getSetting('customDailies').filter(custom => custom.key !== key)\r\n\r\n        await setSetting('customDailies', customs)\r\n        localize.info('deleted', { daily: key })\r\n        this.#onCreateDaily()\r\n    }\r\n\r\n    #onCreateDaily() {\r\n        this._selectedDaily = ''\r\n        this._selectedTemplate = 'default'\r\n        this.render()\r\n    }\r\n\r\n    #onSelectDaily(event) {\r\n        event.preventDefault()\r\n\r\n        this._selectedDaily = event.currentTarget.dataset.key\r\n        this.render()\r\n    }\r\n\r\n    async #onCreateTemplate(event) {\r\n        event.preventDefault()\r\n        const template = this._selectedTemplate\r\n\r\n        const customs = getSetting('customDailies')\r\n        const formData = new FormData(this.form)\r\n        const data = Object.fromEntries(formData)\r\n        const isExample = EXAMPLES.includes(template)\r\n        let { key, uuid, label } = data\r\n\r\n        if (isExample) {\r\n            key = template\r\n        } else if (!key || !uuid) {\r\n            return localize.warn('template.noEmpty')\r\n        }\r\n\r\n        if (customs.find(custom => custom.key === key)) return warn('error.duplicate')\r\n\r\n        let code\r\n\r\n        if (template === 'trainedSkill') {\r\n            const daily = createTrainedSkillDaily(key, uuid, label)\r\n            code = this.#stringifyDaily(daily, { key, uuid, label }, 'SkillGenerics')\r\n        } else if (template === 'trainedLore') {\r\n            const daily = createTrainedLoreDaily(key, uuid, label)\r\n            code = this.#stringifyDaily(daily, { key, uuid, label }, 'SkillGenerics')\r\n        } else if (template === 'language') {\r\n            const daily = createLanguageDaily(key, uuid, label)\r\n            code = this.#stringifyDaily(daily, { key, uuid, label }, 'LanguageGenerics')\r\n        } else if (template === 'resistance') {\r\n            const resistance = simplyfiable(data.resistance)\r\n            const resistances = splitList(data.resistances)\r\n\r\n            if (resistance === '' || !resistances.length) return localize.warn('template.noEmpty')\r\n            if (typeof resistance === 'number' && resistance < 1) return localize.warn('template.badResistance')\r\n\r\n            const daily = createResistancelDaily(key, uuid, resistances, resistance, label)\r\n            code = this.#stringifyDaily(daily, { key, uuid, label, resistance, resistances }, 'ResistanceGenerics')\r\n        } else if (template === 'feat') {\r\n            const traits = splitList(data.traits)\r\n            const filter = {\r\n                category: splitList(data.category),\r\n                level: simplyfiable(data.level) || { min: 0, max: 20 },\r\n            }\r\n            if (traits.length) filter.traits = traits\r\n            const daily = createFeatDaily(key, uuid, filter, label)\r\n            code = this.#stringifyDaily(daily, { key, uuid, label }, 'FeatGenerics')\r\n        } else if (template === 'spell') {\r\n            const level = Number(data.level) || undefined\r\n            const traits = splitList(data.traits)\r\n            let levels = data.levels.split(',').map(x => x.trim())\r\n            if (levels.length === 1) {\r\n                levels = simplyfiable(levels[0])\r\n            } else {\r\n                levels = levels\r\n                    .filter(x => x)\r\n                    .map(x => Number(x))\r\n                    .filter(x => !isNaN(x))\r\n            }\r\n            const filter = {\r\n                category: splitList(data.category),\r\n                traditions: splitList(data.traditions),\r\n                level: levels || [],\r\n            }\r\n            if (traits.length) filter.traits = traits\r\n            const daily = createSpellDaily(key, uuid, filter, level, label)\r\n            code = this.#stringifyDaily(daily, { key, uuid, label, level }, 'SpellGenerics')\r\n        } else if (template === 'tome') {\r\n            code = tome\r\n        } else if (template === 'flexibility') {\r\n            code = flexibility\r\n        } else if (template === 'savant') {\r\n            code = savant\r\n        } else if (template === 'mind') {\r\n            code = mind\r\n        } else {\r\n            const daily = { key, label, item: { uuid }, rows: [], process: () => {} }\r\n            code = this.#stringifyDaily(daily, { key, uuid, label })\r\n        }\r\n\r\n        customs.push({ key, code })\r\n        await setSetting('customDailies', customs)\r\n\r\n        this._selectedDaily = key\r\n        this.render()\r\n    }\r\n\r\n    #stringifyDaily(daily, args, type) {\r\n        const placeholder = '____PLACEHOLDER____'\r\n        const fns = []\r\n\r\n        let str = JSON.stringify(\r\n            daily,\r\n            (_, value) => {\r\n                if (typeof value === 'function') {\r\n                    fns.push(value)\r\n                    return placeholder\r\n                }\r\n                return value\r\n            },\r\n            4\r\n        )\r\n\r\n        str = str.replace(new RegExp('\"' + placeholder + '\"', 'g'), () => {\r\n            const fn = fns.shift()?.toString()\r\n            return fn?.replace(/( {5,})/g, match => match.slice(4)) ?? ''\r\n        })\r\n\r\n        let strArgs = ''\r\n        for (const [key, value] of Object.entries(args)) {\r\n            if (typeof value === 'string') strArgs += `const ${key} = '${value}';\\n`\r\n            else if (typeof value === 'object') strArgs += `const ${key} = ${JSON.stringify(value)};\\n`\r\n            else strArgs += `const ${key} = ${value};\\n`\r\n        }\r\n\r\n        const typing = type ? `Daily<${type}>` : 'Daily'\r\n        return `${strArgs}\\n/** @type {${typing}} */\\nconst daily = ${str};\\n\\nreturn daily;`\r\n    }\r\n\r\n    #onSelectTemplate(event) {\r\n        event.preventDefault()\r\n\r\n        this._selectedDaily = ''\r\n        this._selectedTemplate = event.currentTarget.value\r\n\r\n        this.render()\r\n    }\r\n}\r\n\r\nfunction splitList(list) {\r\n    return list\r\n        .split(',')\r\n        .map(x => x.trim())\r\n        .filter(x => x)\r\n}\r\n\r\nfunction simplyfiable(value) {\r\n    if (typeof value === 'number') return value\r\n    value = value.trim()\r\n    if (value === 'level' || value === 'half') return value\r\n    const numbered = Number(value)\r\n    return isNaN(numbered) ? '' : numbered\r\n}\r\n", "import { getDailyFromSourceId } from './dailies'\r\nimport { MODULE_ID, getFlag, getSourceId, setFlag } from './module'\r\nimport { sluggify } from './pf2e/sluggify'\r\n\r\nexport async function restForTheNight(actor) {\r\n    const update = []\r\n    const remove = []\r\n\r\n    for (const item of actor.items) {\r\n        if (getFlag(item, 'temporary')) {\r\n            remove.push(item.id)\r\n\r\n            // we remove the itemGrants flag from the parent feat\r\n            if (item.isOfType('feat')) {\r\n                const parentId = getFlag(item, 'grantedBy')\r\n                if (parentId) {\r\n                    const slug = sluggify(item.name, { camel: 'dromedary' })\r\n                    const path = `flags.pf2e.itemGrants.-=${slug}`\r\n                    update.push({ _id: parentId, [path]: true })\r\n                }\r\n            }\r\n\r\n            // we don't need to do more work because the item is being deleted\r\n            continue\r\n        }\r\n\r\n        const sourceId = getSourceId(item)\r\n\r\n        // We run the daily rest function if it exists\r\n        if (sourceId) {\r\n            const daily = getDailyFromSourceId(sourceId)\r\n            if (daily?.rest) {\r\n                await daily.rest({ item, sourceId, updateItem: data => update.push(data) })\r\n            }\r\n        }\r\n\r\n        // we clean temporary rule elements\r\n        const rules = deepClone(item._source.system.rules)\r\n        let modifiedRules = false\r\n        for (let i = rules.length - 1; i >= 0; i--) {\r\n            if (MODULE_ID in rules[i]) {\r\n                rules.splice(i, 1)\r\n                modifiedRules = true\r\n            }\r\n        }\r\n        if (modifiedRules) update.push({ _id: item.id, 'system.rules': rules })\r\n    }\r\n\r\n    if (update.length) await actor.updateEmbeddedDocuments('Item', update)\r\n    if (remove.length) await actor.deleteEmbeddedDocuments('Item', remove)\r\n\r\n    await setFlag(actor, 'rested', true)\r\n}\r\n", "import { onPerformDailyCrafting, renderCharacterSheetPF2e } from './actor'\r\nimport { openDailiesInterface, requestDailies, utils } from './api'\r\nimport { DailyCustoms } from './apps/custom'\r\nimport { renderChatMessage } from './chat'\r\nimport { BUILTINS_DAILIES, CUSTOM_DAILIES, checkCustomDaily, parseCustomDailies, prepareDailies } from './dailies'\r\nimport { MODULE_ID, getSetting, registerSetting, registerSettingMenu, warn } from './module'\r\nimport { restForTheNight } from './rest'\r\n\r\nexport const EXT_VERSION = '1.3.0'\r\n\r\nconst DAILY_CRAFTING = 'CONFIG.PF2E.Actor.documentClasses.character.prototype.performDailyCrafting'\r\n\r\nHooks.once('setup', () => {\r\n    registerSetting({\r\n        name: 'customDailies',\r\n        type: Array,\r\n        default: [],\r\n        onChange: parseCustomDailies,\r\n    })\r\n\r\n    registerSetting({\r\n        name: 'familiar',\r\n        type: String,\r\n        default: '',\r\n        config: true,\r\n    })\r\n\r\n    registerSetting({\r\n        name: 'watch',\r\n        type: Boolean,\r\n        default: false,\r\n        config: true,\r\n        onChange: enableWatchHook,\r\n    })\r\n\r\n    registerSetting({\r\n        name: 'members',\r\n        type: Boolean,\r\n        default: true,\r\n        config: true,\r\n        scope: 'user',\r\n    })\r\n\r\n    registerSettingMenu({\r\n        name: 'customs',\r\n        type: DailyCustoms,\r\n    })\r\n\r\n    game.modules.get(MODULE_ID).api = {\r\n        openDailiesInterface: actor => openDailiesInterface(actor),\r\n        requestDailies,\r\n        getBuiltinDailies: () => deepClone(BUILTINS_DAILIES),\r\n        getCustomDailies: () => deepClone(CUSTOM_DAILIES),\r\n        prepareDailies,\r\n        checkCustomDaily,\r\n        getUtils: () => deepClone(utils),\r\n    }\r\n\r\n    if (getSetting('watch')) enableWatchHook(true)\r\n})\r\n\r\nHooks.once('ready', async () => {\r\n    await parseCustomDailies()\r\n\r\n    if (!game.modules.get('lib-wrapper')?.active && game.user.isGM) {\r\n        warn('error.noLibwrapper', true)\r\n        return\r\n    }\r\n\r\n    libWrapper.register(MODULE_ID, DAILY_CRAFTING, onPerformDailyCrafting, 'OVERRIDE')\r\n})\r\n\r\nHooks.on('pf2e.restForTheNight', restForTheNight)\r\n\r\nHooks.on('renderCharacterSheetPF2e', renderCharacterSheetPF2e)\r\n\r\nfunction enableWatchHook(enabled) {\r\n    Hooks[enabled ? 'on' : 'off']('renderChatMessage', renderChatMessage)\r\n}\r\n"],
  "mappings": "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",
  "names": ["utils", "uuid", "label", "utils", "utils", "uuid", "createRow", "utils", "uuid", "source", "utils", "utils", "selected", "localize", "utils", "utils", "utils", "utils", "utils", "rows", "children", "item", "label", "value", "localize", "rows", "item", "messages", "label", "localize", "options", "rows", "error", "value", "rule", "localize"]
}
