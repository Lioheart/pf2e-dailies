{"version":3,"file":"main.js","mappings":"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","sources":["webpack:///../../../../foundryVTT-projects/@utils/module.ts","webpack:///../../../../foundryVTT-projects/@utils/foundry/flags.ts","webpack:///../../../../foundryVTT-projects/@utils/pf2e/utils.ts","webpack:///../../../../foundryVTT-projects/@utils/foundry/item.ts","webpack:///./src/categories.ts","webpack:///../../../../foundryVTT-projects/@utils/foundry/notification.ts","webpack:///../../../../foundryVTT-projects/@utils/foundry/localize.ts","webpack:///../../../../foundryVTT-projects/@utils/foundry/path.ts","webpack:///../../../../foundryVTT-projects/@utils/foundry/uuid.ts","webpack:///../../../../foundryVTT-projects/@utils/pf2e/languages.ts","webpack:///../../../../foundryVTT-projects/@utils/pf2e/skills.ts","webpack:///../../../../foundryVTT-projects/@utils/pf2e/spell.ts","webpack:///../../../../foundryVTT-projects/@utils/utils.ts","webpack:///./src/utils.ts","webpack:///./src/apps/interface.ts","webpack:///./src/rules.ts","webpack:///./src/main.ts","webpack:///./src/rest.ts","webpack:///./src/sheet.ts"],"sourcesContent":["export let MODULE_ID = ''\r\n\r\nexport function setModuleID(id: string) {\r\n    if (!MODULE_ID) MODULE_ID = id\r\n}\r\n","import { MODULE_ID } from '@utils/module'\r\n\r\nexport function hasModuleFlag(doc: foundry.abstract.Document) {\r\n    return getProperty(doc, `flags.${MODULE_ID}`) !== undefined\r\n}\r\n\r\nexport function getFlag<T extends unknown>(doc: foundry.abstract.Document, key: string): T | undefined\r\nexport function getFlag<T extends unknown>(doc: foundry.abstract.Document, key: string, fallback: T): T\r\nexport function getFlag<T extends unknown>(doc: foundry.abstract.Document, key: string, fallback?: T): T | undefined {\r\n    return (doc.getFlag(MODULE_ID, key) as T | undefined) ?? fallback\r\n}\r\n\r\n/**\r\n * @template {foundry.Document} T\r\n * @param {T} doc\r\n * @param {string} key\r\n * @param {any} value\r\n * @returns T\r\n */\r\nexport function setFlag(doc: foundry.abstract.Document, key: string, value: unknown) {\r\n    return doc.setFlag(MODULE_ID, key, value)\r\n}\r\n\r\nexport function getSourceId<T extends DocumentUUID>(doc: ClientDocument) {\r\n    return doc.getFlag('core', 'sourceId') as T | undefined\r\n}\r\n\r\nexport function hasSourceId(doc: ClientDocument, sourceId: DocumentUUID) {\r\n    return getSourceId(doc) === sourceId\r\n}\r\n\r\nexport function includesSourceId(doc: ClientDocument, list: DocumentUUID[]) {\r\n    const sourceId = getSourceId(doc)\r\n    return sourceId ? list.includes(sourceId) : false\r\n}\r\n","const wordCharacter = String.raw`[\\p{Alphabetic}\\p{Mark}\\p{Decimal_Number}\\p{Join_Control}]`\r\nconst nonWordCharacter = String.raw`[^\\p{Alphabetic}\\p{Mark}\\p{Decimal_Number}\\p{Join_Control}]`\r\nconst nonWordCharacterRE = new RegExp(nonWordCharacter, 'gu')\r\n\r\nconst wordBoundary = String.raw`(?:${wordCharacter})(?=${nonWordCharacter})|(?:${nonWordCharacter})(?=${wordCharacter})`\r\nconst nonWordBoundary = String.raw`(?:${wordCharacter})(?=${wordCharacter})`\r\nconst lowerCaseLetter = String.raw`\\p{Lowercase_Letter}`\r\nconst upperCaseLetter = String.raw`\\p{Uppercase_Letter}`\r\nconst lowerCaseThenUpperCaseRE = new RegExp(`(${lowerCaseLetter})(${upperCaseLetter}${nonWordBoundary})`, 'gu')\r\n\r\nconst nonWordCharacterHyphenOrSpaceRE = /[^-\\p{White_Space}\\p{Alphabetic}\\p{Mark}\\p{Decimal_Number}\\p{Join_Control}]/gu\r\nconst upperOrWordBoundariedLowerRE = new RegExp(`${upperCaseLetter}|(?:${wordBoundary})${lowerCaseLetter}`, 'gu')\r\n\r\n/** Check if an element is present in the provided set. Especially useful for checking against literal sets */\r\nexport function setHasElement<T extends Set<unknown>>(set: T, value: unknown): value is SetElement<T> {\r\n    return set.has(value)\r\n}\r\n\r\n/**\r\n * The system's sluggification algorithm for labels and other terms.\r\n * @param text The text to sluggify\r\n * @param [options.camel=null] The sluggification style to use\r\n */\r\nexport function sluggify(text: string, { camel = null }: { camel?: 'dromedary' | 'bactrian' | null } = {}): string {\r\n    // Sanity check\r\n    if (typeof text !== 'string') {\r\n        console.warn('Non-string argument passed to `sluggify`')\r\n        return ''\r\n    }\r\n\r\n    switch (camel) {\r\n        case null:\r\n            return text\r\n                .replace(lowerCaseThenUpperCaseRE, '$1-$2')\r\n                .toLowerCase()\r\n                .replace(/['’]/g, '')\r\n                .replace(nonWordCharacterRE, ' ')\r\n                .trim()\r\n                .replace(/[-\\s]+/g, '-')\r\n        case 'bactrian': {\r\n            const dromedary = sluggify(text, { camel: 'dromedary' })\r\n            return dromedary.charAt(0).toUpperCase() + dromedary.slice(1)\r\n        }\r\n        case 'dromedary':\r\n            return text\r\n                .replace(nonWordCharacterHyphenOrSpaceRE, '')\r\n                .replace(/[-_]+/g, ' ')\r\n                .replace(upperOrWordBoundariedLowerRE, (part, index) => (index === 0 ? part.toLowerCase() : part.toUpperCase()))\r\n                .replace(/\\s+/g, '')\r\n        default:\r\n            throw ErrorPF2e(\"I don't think that's a real camel.\")\r\n    }\r\n}\r\n\r\nexport function ErrorPF2e(message: string): Error {\r\n    return Error(`PF2e System | ${message}`)\r\n}\r\n","import { getSourceId, includesSourceId } from '@utils/foundry/flags'\r\n\r\ntype ActorItemTypes<A extends Actor> = (keyof A['itemTypes'])[]\r\n\r\nfunction getItemSourceIdCondition(sourceId: ItemUUID | ItemUUID[]) {\r\n    return Array.isArray(sourceId)\r\n        ? (item: Item) => includesSourceId(item, sourceId)\r\n        : (item: Item) => getSourceId(item) === sourceId\r\n}\r\n\r\nfunction getItems<A extends Actor, I extends Item = CollectionValue<A['items']>>(actor: A, itemTypes?: ActorItemTypes<A>) {\r\n    return (itemTypes ? itemTypes.flatMap(type => actor.itemTypes[type as string]) : actor.items) as Embedded<I>[]\r\n}\r\n\r\nexport function findItemWithSourceId<A extends Actor, I extends Item = CollectionValue<A['items']>>(\r\n    actor: A,\r\n    sourceId: ItemUUID,\r\n    itemTypes?: ActorItemTypes<A>\r\n) {\r\n    return getItems<A, I>(actor, itemTypes).find(getItemSourceIdCondition(sourceId))\r\n}\r\n\r\nexport function hasItemWithSourceId<A extends Actor, I extends Item = CollectionValue<A['items']>>(\r\n    actor: A,\r\n    sourceId: ItemUUID | ItemUUID[],\r\n    itemTypes?: ActorItemTypes<A>\r\n) {\r\n    return getItems<A, I>(actor, itemTypes).some(getItemSourceIdCondition(sourceId))\r\n}\r\n\r\nexport function filterItemsWithSourceId<A extends Actor, I extends Item = CollectionValue<A['items']>>(\r\n    actor: A,\r\n    sourceId: ItemUUID | ItemUUID[],\r\n    itemTypes?: ActorItemTypes<A>\r\n) {\r\n    return getItems<A, I>(actor, itemTypes).filter(getItemSourceIdCondition(sourceId))\r\n}\r\n","import { getSourceId, includesSourceId } from '@utils/foundry/flags'\r\nimport { filterItemsWithSourceId } from '@utils/foundry/item'\r\n\r\nexport const RULE_TYPES = ['addedLanguage', 'trainedSkill'] as const\r\n\r\nexport const CATEGORY_SEARCH = {\r\n    scrollChain: { category: ['spell'] } as InitialSpellFilters,\r\n    combatFlexibility: { feattype: ['class'], traits: ['fighter'] } as InitialFeatFilters,\r\n    scrollSavant: { category: ['spell'], traditions: ['arcane'] } as InitialSpellFilters,\r\n} as const\r\n\r\nexport const CATEGORIES = [\r\n    // TrainedSkill\r\n    {\r\n        type: 'trainedSkill',\r\n        category: 'ageless',\r\n        label: '',\r\n        uuids: ['Compendium.pf2e.feats-srd.wylnETwIz32Au46y'],\r\n    },\r\n    {\r\n        type: 'trainedSkill',\r\n        category: 'longevity',\r\n        label: '',\r\n        uuids: ['Compendium.pf2e.feats-srd.WoLh16gyDp8y9WOZ'],\r\n    },\r\n    {\r\n        type: 'trainedSkill',\r\n        category: 'memories',\r\n        label: '',\r\n        uuids: ['Compendium.pf2e.feats-srd.ptEOt3lqjxUnAW62'],\r\n    },\r\n    {\r\n        type: 'trainedSkill',\r\n        category: 'studies',\r\n        label: '',\r\n        uuids: ['Compendium.pf2e.feats-srd.9bgl6qYWKHzqWZj0'],\r\n    },\r\n    // AddedLanguage\r\n    {\r\n        type: 'addedLanguage',\r\n        category: 'linguistics',\r\n        label: '',\r\n        uuids: ['Compendium.pf2e.feats-srd.eCWQU16hRLfN1KaX'],\r\n    },\r\n    {\r\n        type: 'addedLanguage',\r\n        category: 'borts',\r\n        label: '',\r\n        uuids: ['Compendium.pf2e.equipment-srd.iS7hAQMAaThHYE8g'],\r\n    },\r\n    // CombatFlexibility\r\n    {\r\n        type: 'combatFlexibility',\r\n        category: 'flexibility',\r\n        label: '',\r\n        uuids: ['Compendium.pf2e.classfeatures.8g6HzARbhfcgilP8', 'Compendium.pf2e.classfeatures.W2rwudMNcAxs8VoX'],\r\n    },\r\n    // ScrollSavant\r\n    {\r\n        type: 'scrollSavant',\r\n        category: 'savant',\r\n        label: '',\r\n        uuids: ['Compendium.pf2e.feats-srd.u5DBg0LrBUKP0JsJ'],\r\n    },\r\n    // ScrollChain\r\n    {\r\n        type: 'scrollChain',\r\n        category: 'esoterica',\r\n        label: '',\r\n        uuids: [\r\n            'Compendium.pf2e.feats-srd.OqObuRB8oVSAEKFR',\r\n            'Compendium.pf2e.feats-srd.nWd7m0yRcIEVUy7O',\r\n            'Compendium.pf2e.feats-srd.LHjPTV5vP3MOsPPJ',\r\n        ],\r\n    },\r\n    {\r\n        type: 'scrollChain',\r\n        category: 'trickster',\r\n        label: 'Scroll Trickster',\r\n        uuids: [\r\n            'Compendium.pf2e.feats-srd.ROAUR1GhC19Pjk9C',\r\n            'Compendium.pf2e.feats-srd.UrOj9TROtn8nuxPf',\r\n            'Compendium.pf2e.feats-srd.lIg5Gzz7W70jfbk1',\r\n        ],\r\n    },\r\n] as const\r\n\r\ntype UuidsType = [ItemUUID, Omit<Category, 'uuids'> & { index: number }]\r\nconst [UUIDS, EQUIP_UUID, FEATS_UUID, RULES_UUIDS, FLATTENED] = (() => {\r\n    const UUIDS: UuidsType[] = []\r\n    const FLATTENED = {} as Record<CategoryName, ItemUUID[]>\r\n    const FEATS: ItemUUID[] = []\r\n    const EQUIP: ItemUUID[] = []\r\n    const RULES: ItemUUID[] = []\r\n\r\n    for (const { type, category, label, uuids } of CATEGORIES) {\r\n        FLATTENED[category] ??= []\r\n        FLATTENED[category].push(...uuids)\r\n        UUIDS.push(...uuids.map((uuid, index) => [uuid, { type, category, label, index }] as UuidsType))\r\n        if (RULE_TYPES.includes(type as typeof RULE_TYPES[number])) RULES.push(...uuids)\r\n        if (uuids[0].includes('equipment-srd')) EQUIP.push(uuids[0])\r\n        else FEATS.push(uuids[0])\r\n    }\r\n\r\n    return [new Map(UUIDS), EQUIP, FEATS, RULES, FLATTENED]\r\n})()\r\n\r\nexport function hasAnyCategory(actor: CharacterPF2e) {\r\n    return (\r\n        actor.itemTypes.feat.some(item => includesSourceId(item, FEATS_UUID)) ||\r\n        actor.itemTypes.equipment.some(item => includesSourceId(item, EQUIP_UUID) && item.isInvested)\r\n    )\r\n}\r\n\r\nexport function getCategoryUUIDS(category: CategoryName) {\r\n    return FLATTENED[category]\r\n}\r\n\r\nexport function getRuleItems(actor: CharacterPF2e) {\r\n    return filterItemsWithSourceId(actor, RULES_UUIDS, ['feat', 'equipment'])\r\n}\r\n\r\nexport function isRuleItem(item: ItemPF2e) {\r\n    return includesSourceId(item, RULES_UUIDS)\r\n}\r\n\r\nexport function hasCategories(actor: CharacterPF2e) {\r\n    const categories = {} as Record<CategoryName, Omit<ReturnedCategory, 'items'> & { items: (undefined | true)[] }>\r\n    const items = [...actor.itemTypes.feat, ...actor.itemTypes.equipment]\r\n    for (const item of items) {\r\n        const sourceId = getSourceId<ItemUUID>(item)\r\n        if (!sourceId || (item.isOfType('equipment') && !item.isInvested)) continue\r\n\r\n        const entry = UUIDS.get(sourceId)\r\n        if (!entry) continue\r\n\r\n        const { category, index, type, label } = entry\r\n        categories[category] ??= { category, type, label, items: [] }\r\n        categories[category].items[index] = true\r\n        if (!index && !label) categories[category].label = item.name\r\n    }\r\n    return Object.values(categories).filter(x => x.items[0]) as ReturnedCategory[]\r\n}\r\n\r\nexport function isScrollChainRecord(record: ReturnedCategory): record is ReturnedCategory<ScrollChain> {\r\n    return record.type === 'scrollChain'\r\n}\r\n\r\nexport function isTrainedSkill(record: ReturnedCategory): record is ReturnedCategory<TrainedSkill> {\r\n    return record.type === 'trainedSkill'\r\n}\r\n\r\nexport function isAddedLanguage(record: ReturnedCategory): record is ReturnedCategory<AddedLanguage> {\r\n    return record.type === 'addedLanguage'\r\n}\r\n\r\nexport function isCombatFlexibility(record: ReturnedCategory): record is ReturnedCategory<CombatFlexibility> {\r\n    return record.type === 'combatFlexibility'\r\n}\r\n\r\nexport function isScrollSavant(record: ReturnedCategory): record is ReturnedCategory<ScrollSavant> {\r\n    return record.type === 'scrollSavant'\r\n}\r\n","import { localize } from '@utils/foundry/localize'\r\n\r\nexport type NotifyArgs = [str: string, arg1?: boolean | Record<string, string>, arg2?: boolean]\r\n\r\nfunction notify(\r\n    str: string,\r\n    arg1?: 'warning' | 'info' | 'error' | boolean | Record<string, string>,\r\n    arg2?: boolean | Record<string, string>,\r\n    arg3?: boolean\r\n) {\r\n    const type = typeof arg1 === 'string' ? arg1 : 'info'\r\n    const data = typeof arg1 === 'object' ? arg1 : typeof arg2 === 'object' ? arg2 : undefined\r\n    const permanent = typeof arg1 === 'boolean' ? arg1 : typeof arg2 === 'boolean' ? arg2 : arg3 ?? false\r\n\r\n    ui.notifications.notify(localize(str, data), type, { permanent })\r\n}\r\n\r\nexport function warn(...args: NotifyArgs) {\r\n    const [str, arg1, arg2] = args\r\n    notify(str, 'warning', arg1, arg2)\r\n}\r\n\r\nexport function info(...args: NotifyArgs) {\r\n    const [str, arg1, arg2] = args\r\n    notify(str, 'info', arg1, arg2)\r\n}\r\n\r\nexport function error(...args: NotifyArgs) {\r\n    const [str, arg1, arg2] = args\r\n    notify(str, 'error', arg1, arg2)\r\n}\r\n","import { MODULE_ID } from '@utils/module'\r\nimport { warn, NotifyArgs, info, error } from '@utils/foundry/notification'\r\n\r\nexport type LocalizeArgs = [key: string, data?: Record<string, string | number>]\r\n\r\nexport function localize(...args: LocalizeArgs) {\r\n    let [key, data] = args\r\n    key = `${MODULE_ID}.${key}`\r\n    if (data) return game.i18n.format(key, data)\r\n    return game.i18n.localize(key)\r\n}\r\n\r\nexport function subLocalize(subKey: string) {\r\n    const fn = (...args: LocalizeArgs) => localize(`${subKey}.${args[0]}`, args[1])\r\n\r\n    Object.defineProperties(fn, {\r\n        warn: {\r\n            value: (...args: NotifyArgs) => warn(`${subKey}.${args[0]}`, args[1], args[2]),\r\n            enumerable: false,\r\n            configurable: false,\r\n        },\r\n        info: {\r\n            value: (...args: NotifyArgs) => info(`${subKey}.${args[0]}`, args[1], args[2]),\r\n            enumerable: false,\r\n            configurable: false,\r\n        },\r\n        error: {\r\n            value: (...args: NotifyArgs) => error(`${subKey}.${args[0]}`, args[1], args[2]),\r\n            enumerable: false,\r\n            configurable: false,\r\n        },\r\n    })\r\n\r\n    return fn as ((...args: LocalizeArgs) => string) & {\r\n        warn: (...args: NotifyArgs) => void\r\n        info: (...args: NotifyArgs) => void\r\n        error: (...args: NotifyArgs) => void\r\n    }\r\n}\r\n","import { MODULE_ID } from '@utils/module'\r\n\r\nexport function getSettingLocalizationPath(...path: string[]) {\r\n    return `${MODULE_ID}.settings.${path.join('.')}`\r\n}\r\n\r\nexport function flagsUpdatePath(...path: string[]) {\r\n    return `flags.${MODULE_ID}.${path.join('/')}`\r\n}\r\n\r\nexport function templatePath(...path: string[]) {\r\n    path = path.filter(x => typeof x === 'string')\r\n    return `modules/${MODULE_ID}/templates/${path.join('/')}`\r\n}\r\n\r\nexport function imagePath(...path: string[]) {\r\n    return `modules/${MODULE_ID}/images/${path.join('/')}`\r\n}\r\n","export function chatUUID(uuid: string, name?: string) {\r\n    if (name) return `@UUID[${uuid}]{${name}}`\r\n    return `@UUID[${uuid}]`\r\n}\r\n\r\nexport function fakeChatUUID(name: string) {\r\n    return `<span style=\"background: #DDD;\r\n    padding: 1px 4px;\r\n    border: 1px solid var(--color-border-dark-tertiary);\r\n    border-radius: 2px;\r\n    white-space: nowrap;\r\n    word-break: break-all;\">${name}</span>`\r\n}\r\n","export const LANGUAGE_LIST = [\r\n    'common',\r\n    'draconic',\r\n    'dwarven',\r\n    'elven',\r\n    'gnomish',\r\n    'goblin',\r\n    'halfling',\r\n    'jotun',\r\n    'orcish',\r\n    'sylvan',\r\n    'undercommon',\r\n    'ysoki',\r\n    'abyssal',\r\n    'adlet',\r\n    'aklo',\r\n    'akitonian',\r\n    'alghollthu',\r\n    'amurrun',\r\n    'anadi',\r\n    'ancient-osiriani',\r\n    'anugobu',\r\n    'arcadian',\r\n    'aquan',\r\n    'arboreal',\r\n    'auran',\r\n    'boggard',\r\n    'calda',\r\n    'caligni',\r\n    'celestial',\r\n    'cyclops',\r\n    'daemonic',\r\n    'destrachan',\r\n    'drooni',\r\n    'dziriak',\r\n    'ekujae',\r\n    'erutaki',\r\n    'formian',\r\n    'garundi',\r\n    'girtablilu',\r\n    'gnoll',\r\n    'goloma',\r\n    'grippli',\r\n    'hallit',\r\n    'hwan',\r\n    'iblydan',\r\n    'ignan',\r\n    'ikeshti',\r\n    'immolis',\r\n    'infernal',\r\n    'iruxi',\r\n    'jistkan',\r\n    'jyoti',\r\n    'kaava',\r\n    'kashrishi',\r\n    'kibwani',\r\n    'kitsune',\r\n    'kelish',\r\n    'lirgeni',\r\n    'mahwek',\r\n    'minaten',\r\n    'minkaian',\r\n    'mwangi',\r\n    'mzunu',\r\n    'nagaji',\r\n    'necril',\r\n    'ocotan',\r\n    'okaiyan',\r\n    'osiriani',\r\n    'protean',\r\n    'rasu',\r\n    'ratajin',\r\n    'razatlani',\r\n    'requian',\r\n    'russian',\r\n    'senzar',\r\n    'shadowtongue',\r\n    'shobhad',\r\n    'shisk',\r\n    'shoanti',\r\n    'shoony',\r\n    'skald',\r\n    'sphinx',\r\n    'strix',\r\n    'taldane',\r\n    'tekritanin',\r\n    'tengu',\r\n    'terran',\r\n    'thassilonian',\r\n    'tien',\r\n    'utopian',\r\n    'vanara',\r\n    'varisian',\r\n    'varki',\r\n    'vishkanyan',\r\n    'vudrani',\r\n    'wyrwood',\r\n    'xanmba',\r\n    'androffan',\r\n    'azlanti',\r\n    'grioth',\r\n    'kovintal',\r\n    'migo',\r\n    'munavri',\r\n    'samsaran',\r\n    'sasquatch',\r\n    'shae',\r\n    'yithian',\r\n    'druidic',\r\n] as const\r\n","export const SKILL_DICTIONARY = {\r\n    acr: 'acrobatics',\r\n    arc: 'arcana',\r\n    ath: 'athletics',\r\n    cra: 'crafting',\r\n    dec: 'deception',\r\n    dip: 'diplomacy',\r\n    itm: 'intimidation',\r\n    med: 'medicine',\r\n    nat: 'nature',\r\n    occ: 'occultism',\r\n    prf: 'performance',\r\n    rel: 'religion',\r\n    soc: 'society',\r\n    ste: 'stealth',\r\n    sur: 'survival',\r\n    thi: 'thievery',\r\n} as const\r\n\r\nexport const SKILL_ABBREVIATIONS = Object.keys(SKILL_DICTIONARY) as (keyof typeof SKILL_DICTIONARY)[]\r\n\r\nexport const SKILL_LONG_FORMS = Object.values(SKILL_DICTIONARY)\r\n","import { chatUUID } from '@utils/foundry/uuid'\r\n\r\nexport const MAGIC_TRADITIONS = new Set(['arcane', 'divine', 'occult', 'primal'] as const)\r\n\r\nexport const SPELL_COMPONENTS = ['focus', 'material', 'somatic', 'verbal'] as const\r\n\r\nconst scrolls: (ConsumablePF2e | null)[] = []\r\nexport async function createSpellScroll(uuid: ItemUUID, level: OneToTen | false, temp = false) {\r\n    const spell = (await fromUuid<SpellPF2e>(uuid))?.toObject()\r\n    if (!spell) return null\r\n\r\n    if (level === false) level = spell.system.level.value\r\n\r\n    const scrollUUID = getScrollCompendiumUUID(level)\r\n    scrolls[level] ??= await fromUuid<ConsumablePF2e>(scrollUUID)\r\n\r\n    const scroll = scrolls[level]?.toObject()\r\n    if (!scroll) return null\r\n\r\n    spell.system.location.heightenedLevel = level\r\n\r\n    scroll.name = `Scroll of ${spell.name} (Level ${level})`\r\n    scroll.system.temporary = temp\r\n    scroll.system.spell = spell\r\n    scroll.system.traits.value.push(...spell.system.traditions.value)\r\n\r\n    const sourceId = spell.flags.core?.sourceId\r\n    if (sourceId) scroll.system.description.value = `${chatUUID(sourceId)}\\n<hr />${scroll.system.description.value}`\r\n\r\n    return scroll\r\n}\r\n\r\nfunction getScrollCompendiumUUID(level: OneToTen): ItemUUID {\r\n    return `Compendium.pf2e.equipment-srd.${scrollCompendiumIds[level]}`\r\n}\r\n\r\nconst scrollCompendiumIds: Record<number, string> = {\r\n    1: 'RjuupS9xyXDLgyIr', // Compendium.pf2e.equipment-srd.RjuupS9xyXDLgyIr\r\n    2: 'Y7UD64foDbDMV9sx',\r\n    3: 'ZmefGBXGJF3CFDbn',\r\n    4: 'QSQZJ5BC3DeHv153',\r\n    5: 'tjLvRWklAylFhBHQ',\r\n    6: '4sGIy77COooxhQuC',\r\n    7: 'fomEZZ4MxVVK3uVu',\r\n    8: 'iPki3yuoucnj7bIt',\r\n    9: 'cFHomF3tty8Wi1e5',\r\n    10: 'o1XIHJ4MJyroAHfF',\r\n}\r\n","export function sequenceArray<N extends number = number>(start: number, end: number) {\r\n    const levels: number[] = []\r\n\r\n    if (start <= end) {\r\n        for (let i = start; i <= end; i++) levels.push(i)\r\n    } else {\r\n        for (let i = start; i >= end; i--) levels.push(i)\r\n    }\r\n\r\n    return levels as N[]\r\n}\r\n","import { MODULE_ID } from '@utils/module'\r\n\r\nexport async function createFeat(uuid: ItemUUID, parent: FeatPF2e) {\r\n    const feat = ((await fromUuid(uuid)) as FeatPF2e | null)?.toObject()\r\n    if (!feat) return\r\n\r\n    setProperty(feat, 'flags.pf2e.grantedBy', { id: parent.id, onDelete: 'cascade' })\r\n    setProperty(feat, `flags.${MODULE_ID}.temporary`, true)\r\n    return feat\r\n}\r\n\r\nexport function getSpellcastingDetails(actor: ActorPF2e, tradition: MagicTradition) {\r\n    let maxSlot = 0\r\n    let maxTradition = 0\r\n    for (const entry of actor.spellcasting) {\r\n        if (entry.flags['pf2e-staves']) continue // we skip staff entries\r\n\r\n        const slots = entry.system.slots\r\n        for (const key in slots) {\r\n            const slot = slots[key as SlotKey]\r\n            if (slot.max) maxSlot = Math.max(maxSlot, Number(key.slice(4)))\r\n        }\r\n\r\n        if (entry.tradition === tradition) maxTradition = Math.max(maxTradition, entry.rank)\r\n    }\r\n    return { maxSlot: Math.clamped(maxSlot, 1, 10), maxTradition }\r\n}\r\n","import {\r\n    CATEGORY_SEARCH,\r\n    getCategoryUUIDS,\r\n    getRuleItems,\r\n    hasCategories,\r\n    isAddedLanguage,\r\n    isCombatFlexibility,\r\n    isScrollChainRecord,\r\n    isScrollSavant,\r\n    isTrainedSkill,\r\n    RULE_TYPES,\r\n} from '@src/categories'\r\nimport { createLanguageRule, createTrainedSkillRule } from '@src/rules'\r\nimport { getFlag, hasSourceId, setFlag } from '@utils/foundry/flags'\r\nimport { subLocalize } from '@utils/foundry/localize'\r\nimport { templatePath } from '@utils/foundry/path'\r\nimport { chatUUID } from '@utils/foundry/uuid'\r\nimport { LANGUAGE_LIST } from '@utils/pf2e/languages'\r\nimport { SKILL_LONG_FORMS } from '@utils/pf2e/skills'\r\nimport { createSpellScroll } from '@utils/pf2e/spell'\r\nimport { sequenceArray } from '@utils/utils'\r\nimport { sluggify } from '@utils/pf2e/utils'\r\nimport { createFeat, getSpellcastingDetails } from '@src/utils'\r\nimport { findItemWithSourceId } from '@utils/foundry/item'\r\n\r\nconst localize = subLocalize('interface')\r\n\r\nexport class DailiesInterface extends Application {\r\n    private _actor: CharacterPF2e\r\n\r\n    constructor(actor: CharacterPF2e, options?: Partial<ApplicationOptions>) {\r\n        super(options)\r\n        this._actor = actor\r\n    }\r\n\r\n    static get defaultOptions() {\r\n        return mergeObject(super.defaultOptions, {\r\n            title: localize('title'),\r\n            template: templatePath('interface.hbs'),\r\n            height: 'auto',\r\n            submitOnClose: false,\r\n            submitOnChange: false,\r\n            dragDrop: [\r\n                {\r\n                    dropSelector: '[data-droppable=\"true\"]',\r\n                },\r\n            ],\r\n        })\r\n    }\r\n\r\n    getData(options?: Partial<FormApplicationOptions> | undefined) {\r\n        const actor = this._actor\r\n        const level = actor.level\r\n        const flags = (getFlag(actor, 'saved') ?? {}) as SavedCategories\r\n        const categories = hasCategories(actor)\r\n        const templates: BaseCategoryTemplate[] = []\r\n        const actorLanguages = actor.system.traits.languages.value\r\n        const skills = SKILL_LONG_FORMS.filter(x => actor.skills[x]!.rank! < 1).map(x => ({ key: x }))\r\n        const languages = LANGUAGE_LIST.filter(x => !actorLanguages.includes(x))\r\n            .sort()\r\n            .map(x => ({ key: x }))\r\n\r\n        for (const entry of categories) {\r\n            if (isScrollChainRecord(entry)) {\r\n                const { type, category, label, items } = entry\r\n                const slots: DropTemplate[] = []\r\n                const spellSlot = (level: OneToTen): DropTemplate => {\r\n                    const { name, uuid } = flags[category]?.[level - 1] ?? { name: '', uuid: '' }\r\n                    return { type: 'drop', level, name, uuid, label: game.i18n.localize(`PF2E.SpellLevel${level}`) }\r\n                }\r\n\r\n                // first feat\r\n                slots.push(spellSlot(1))\r\n                if (level >= 8) slots.push(spellSlot(2))\r\n\r\n                // second feat\r\n                if (items[1]) {\r\n                    slots.push(spellSlot(3))\r\n                    if (level >= 14) slots.push(spellSlot(4))\r\n                    if (level >= 16) slots.push(spellSlot(5))\r\n                }\r\n\r\n                // third feat\r\n                if (items[2]) {\r\n                    slots.push(spellSlot(6))\r\n                    if (level >= 20) slots.push(spellSlot(7))\r\n                }\r\n\r\n                const template: ScrollChainTemplate = { type, category, label, rows: slots }\r\n                templates.push(template)\r\n            } else if (isScrollSavant(entry)) {\r\n                const { maxSlot, maxTradition } = getSpellcastingDetails(actor, 'arcane')\r\n                if (maxSlot < 3) continue\r\n\r\n                const { type, category, label } = entry\r\n                const slots: DropTemplate[] = []\r\n                const spellSlot = (index: number, level: number): DropTemplate => {\r\n                    const { name, uuid } = flags[category]?.[index] ?? { name: '', uuid: '' }\r\n                    return { type: 'drop', level, name, uuid, label: game.i18n.localize(`PF2E.SpellLevel${level}`) }\r\n                }\r\n\r\n                // legendary arcane\r\n                if (maxTradition >= 4 && maxSlot >= 6) slots.push(spellSlot(3, maxSlot - 5))\r\n\r\n                // master arcane\r\n                if (maxTradition >= 3 && maxSlot >= 5) slots.push(spellSlot(2, maxSlot - 4))\r\n\r\n                // no proficiency\r\n                if (maxSlot >= 4) slots.push(spellSlot(1, maxSlot - 3))\r\n                slots.push(spellSlot(0, maxSlot - 2))\r\n\r\n                const template: ScrollSavantTemplate = { type, category, label, rows: slots }\r\n                templates.push(template)\r\n            } else if (isTrainedSkill(entry)) {\r\n                const { type, category, label } = entry\r\n                const selected = flags[category] ?? ''\r\n                const template: TrainedSkillTemplate = {\r\n                    type,\r\n                    category,\r\n                    label,\r\n                    rows: [{ type: 'select', options: skills, selected }],\r\n                }\r\n                templates.push(template)\r\n            } else if (isAddedLanguage(entry)) {\r\n                const { type, category, label } = entry\r\n                const selected = flags[category] ?? ''\r\n                const template: AddedLanguageTemplate = {\r\n                    type,\r\n                    category,\r\n                    label,\r\n                    rows: [{ type: 'select', options: languages, selected }],\r\n                }\r\n                templates.push(template)\r\n            } else if (isCombatFlexibility(entry)) {\r\n                const { type, category, label, items } = entry\r\n                const selected = flags[category] ?? []\r\n                // first feat\r\n                const slots: DropTemplate[] = [\r\n                    {\r\n                        type: 'drop',\r\n                        label: game.i18n.localize(`PF2E.Level8`),\r\n                        name: selected[0]?.name ?? '',\r\n                        uuid: selected[0]?.uuid ?? '',\r\n                        level: 8,\r\n                    },\r\n                ]\r\n                // second feat\r\n                if (items[1])\r\n                    slots.push({\r\n                        type: 'drop',\r\n                        label: game.i18n.localize(`PF2E.Level14`),\r\n                        name: selected[1]?.name ?? '',\r\n                        uuid: selected[1]?.uuid ?? '',\r\n                        level: 14,\r\n                    })\r\n                const template: CombatFlexibilityTemplate = { type, category, label, rows: slots }\r\n                templates.push(template)\r\n            }\r\n        }\r\n\r\n        const rows: BaseCategoryTemplate[] = []\r\n        const groups: BaseCategoryTemplate[] = []\r\n        for (const template of templates) {\r\n            if (template.rows.length > 1) groups.push(template)\r\n            else rows.push(template)\r\n        }\r\n\r\n        rows.sort((a, b) => a.type.localeCompare(b.type))\r\n        groups.sort((a, b) => a.rows.length - b.rows.length)\r\n\r\n        return mergeObject(super.getData(options), {\r\n            i18n: localize,\r\n            groups,\r\n            rows,\r\n        })\r\n    }\r\n\r\n    activateListeners(html: JQuery<HTMLElement>): void {\r\n        super.activateListeners(html)\r\n\r\n        html.find<SearchTemplateButton>('[data-action=search]').on('click', this.#onSearch.bind(this))\r\n        html.find<HTMLAnchorElement>('[data-action=clear]').on('click', this.#onClear.bind(this))\r\n        html.find<HTMLButtonElement>('[data-action=accept]').on('click', this.#onAccept.bind(this))\r\n        html.find<HTMLButtonElement>('[data-action=cancel]').on('click', this.#onCancel.bind(this))\r\n    }\r\n\r\n    protected async _onDrop(event: ElementDragEvent) {\r\n        let target = $(event.target)\r\n        if (target.is('label')) target = target.next()\r\n\r\n        const categoryType = target.attr('data-type') as CategoryType | undefined\r\n        if (!categoryType) return\r\n\r\n        try {\r\n            const dataString = event.dataTransfer?.getData('text/plain')\r\n            const typeError = () => localize.warn('error.drop.wrongDataType')\r\n\r\n            const data: { type: string; uuid: string } = JSON.parse(dataString)\r\n            if (!data || data.type !== 'Item' || typeof data.uuid !== 'string') return typeError()\r\n\r\n            const item = await fromUuid<ItemPF2e>(data.uuid)\r\n            if (!item) return typeError()\r\n\r\n            switch (categoryType) {\r\n                case 'scrollChain':\r\n                    this.#onDropSpell(target, item, CATEGORY_SEARCH.scrollChain)\r\n                    break\r\n                case 'combatFlexibility':\r\n                    this.#onDropFeat(target, item, CATEGORY_SEARCH.combatFlexibility)\r\n                    break\r\n                case 'scrollSavant':\r\n                    this.#onDropSpell(target, item, CATEGORY_SEARCH.scrollSavant)\r\n                    break\r\n            }\r\n        } catch (error) {}\r\n    }\r\n\r\n    #onDropSpell(target: JQuery, item: ItemPF2e, { category = [], traditions = [] }: InitialSpellFilters = {}) {\r\n        if (!item.isOfType('spell')) return localize.warn('error.drop.wrongType', { type: 'spell' })\r\n\r\n        if (item.isCantrip && !category.includes('cantrip'))\r\n            return localize.warn('error.drop.cannotBe', { type: 'spell', not: 'cantrip' })\r\n        if (item.isRitual && !category.includes('ritual'))\r\n            return localize.warn('error.drop.cannotBe', { type: 'spell', not: 'ritual' })\r\n        if (item.isFocusSpell && !category.includes('focus'))\r\n            return localize.warn('error.drop.cannotBe', { type: 'spell', not: 'focus' })\r\n\r\n        if (traditions.length) {\r\n            const itemTraditions = item.system.traditions.value\r\n            for (const tradition of traditions) {\r\n                if (!itemTraditions.includes(tradition))\r\n                    return localize.warn('error.drop.wrongTrait', { type: 'spell', trait: tradition, category: 'tradition' })\r\n            }\r\n        }\r\n\r\n        if (item.level > Number(target.attr('data-level'))) return localize.warn('error.drop.wrongLevel', { type: 'spell' })\r\n\r\n        this.#dropItem(target, item)\r\n    }\r\n\r\n    #onDropFeat(target: JQuery, item: ItemPF2e, { feattype = [], traits = [] }: InitialFeatFilters) {\r\n        if (!item.isOfType('feat') || item.isFeature) return localize.warn('error.drop.wrongType', { type: 'feat' })\r\n        if (!feattype.includes(item.featType)) return localize.warn('error.drop.cannotBe', { type: 'feat', not: item.featType })\r\n\r\n        if (traits.length) {\r\n            const itemTraits = item.system.traits.value\r\n            for (const trait of traits) {\r\n                if (!itemTraits.includes(trait))\r\n                    return localize.warn('error.drop.wrongTrait', { type: 'feat', trait, category: 'trait' })\r\n            }\r\n        }\r\n\r\n        if (item.level > Number(target.attr('data-level'))) return localize.warn('error.drop.wrongLevel', { type: 'feat' })\r\n\r\n        this.#dropItem(target, item)\r\n    }\r\n\r\n    #dropItem(target: JQuery, item: ItemPF2e) {\r\n        target.attr('value', item.name)\r\n        target.attr('data-uuid', item.uuid)\r\n        target.nextAll('[data-action=\"clear\"]').first().removeClass('disabled')\r\n    }\r\n\r\n    #lock() {\r\n        this.element.find('button').attr('disabled', 'true')\r\n        this.element.find('a').addClass('disabled')\r\n    }\r\n\r\n    #validate() {\r\n        const warns: string[] = []\r\n        if (this.element.find('input[value=\"\"]').length) warns.push('error.empty')\r\n        warns.forEach(x => localize.warn(x))\r\n        return !warns.length\r\n    }\r\n\r\n    async #onAccept(event: JQuery.ClickEvent) {\r\n        event.preventDefault()\r\n        if (!this.#validate()) return\r\n\r\n        this.#lock()\r\n\r\n        let message = ''\r\n        const actor = this._actor\r\n        const flags = {} as SavedCategories\r\n        const itemsToAdd: BaseItemSourcePF2e[] = []\r\n        const selectedLanguages: SelectedObject[] = []\r\n        const selectedSkills: SelectedObject[] = []\r\n        const fields = this.element.find('.window-content .content').find('input, select').toArray() as TemplateField[]\r\n        const ruleItems = fields.some(field => RULE_TYPES.includes(field.dataset.type as RulesName)) ? getRuleItems(actor) : []\r\n\r\n        for (const field of fields) {\r\n            const type = field.dataset.type\r\n\r\n            if (type === 'scrollChain' || type === 'scrollSavant') {\r\n                const { uuid, category } = field.dataset\r\n                const level = Number(field.dataset.level) as OneToTen\r\n                const name = field.value\r\n\r\n                if (uuid) {\r\n                    const scroll = await createSpellScroll(uuid, level, true)\r\n                    if (scroll) itemsToAdd.push(scroll)\r\n                }\r\n\r\n                flags[category] ??= []\r\n                flags[category]!.push({ name, uuid })\r\n            } else if (type === 'combatFlexibility') {\r\n                const { category, uuid, level } = field.dataset\r\n                const name = field.value\r\n                const index = level === '8' ? 0 : 1\r\n                const parentUUID = getCategoryUUIDS(category)[index]\r\n\r\n                if (parentUUID) {\r\n                    const parent = findItemWithSourceId(actor, parentUUID) as FeatPF2e\r\n                    const feat = await createFeat(uuid, parent)\r\n                    if (feat) itemsToAdd.push(feat)\r\n                }\r\n\r\n                flags[category] ??= []\r\n                flags[category]!.push({ name, uuid })\r\n            } else {\r\n                const category = field.dataset.category\r\n                const uuid = getCategoryUUIDS(category)[0]\r\n                const ruleItem = ruleItems.find(item => hasSourceId(item, uuid))\r\n                if (!ruleItem) continue\r\n\r\n                const rules = deepClone(ruleItem._source.system.rules)\r\n                for (let i = rules.length - 1; i >= 0; i--) {\r\n                    const rule = rules[i]\r\n                    if ('pf2e-dailies' in rule) rules.splice(i, 1)\r\n                }\r\n\r\n                const selected = field.value\r\n                const obj = {\r\n                    uuid,\r\n                    selected,\r\n                    update: { _id: ruleItem.id, 'system.rules': rules },\r\n                }\r\n\r\n                if (type === 'addedLanguage') {\r\n                    rules.push(createLanguageRule(selected as Language))\r\n                    selectedLanguages.push(obj)\r\n                } else {\r\n                    rules.push(createTrainedSkillRule(selected as SkillLongForm))\r\n                    selectedSkills.push(obj)\r\n                }\r\n\r\n                // @ts-ignore\r\n                flags[category] = selected\r\n            }\r\n        }\r\n\r\n        const updateData: EmbeddedDocumentUpdateData<ItemPF2e>[] = []\r\n        const pushUpdate = (type: 'skills' | 'languages', choices: SelectedObject[]) => {\r\n            if (!choices.length) return\r\n\r\n            if (message) message += '<hr />'\r\n\r\n            const title = localize(`message.${type}`)\r\n            message += `<p><strong>${title}</strong></p>`\r\n\r\n            for (const { uuid, selected, update } of choices) {\r\n                message += `<p>${chatUUID(uuid)} <span style=\"text-transform: capitalize;\">${selected}</span></p>`\r\n                updateData.push(update)\r\n            }\r\n        }\r\n\r\n        pushUpdate('languages', selectedLanguages)\r\n        pushUpdate('skills', selectedSkills)\r\n\r\n        let featsMessage = ''\r\n        let equipmentMessage = ''\r\n        if (itemsToAdd.length) {\r\n            const items = (await actor.createEmbeddedDocuments('Item', itemsToAdd)) as ItemPF2e[]\r\n            for (const item of items) {\r\n                const msg = `<p>${chatUUID(item.uuid)}</p>`\r\n                if (item.isOfType('feat')) featsMessage += msg\r\n                else equipmentMessage += msg\r\n\r\n                const parentId = item.getFlag<string>('pf2e', 'grantedBy.id')\r\n                if (parentId) {\r\n                    const slug = sluggify(item.name, { camel: 'dromedary' })\r\n                    const path = `flags.pf2e.itemGrants.${slug}`\r\n                    updateData.push({ _id: parentId, [path]: { id: item.id, onDelete: 'detach' } })\r\n                }\r\n            }\r\n        }\r\n\r\n        if (featsMessage) {\r\n            if (message) message += '<hr />'\r\n            message += `<p><strong>${localize(`message.feats`)}</strong></p>`\r\n            message += featsMessage\r\n        }\r\n\r\n        if (equipmentMessage) {\r\n            if (message) message += '<hr />'\r\n            message += `<p><strong>${localize(`message.items`)}</strong></p>`\r\n            message += equipmentMessage\r\n        }\r\n\r\n        if (updateData.length) await actor.updateEmbeddedDocuments('Item', updateData)\r\n\r\n        await setFlag(actor, 'saved', flags)\r\n\r\n        message = `${localize('message.changes')}<hr>${message}`\r\n        ChatMessage.create({ content: message, speaker: ChatMessage.getSpeaker({ actor }) })\r\n\r\n        this.close()\r\n    }\r\n\r\n    #onSearch(event: JQuery.ClickEvent<any, any, SearchTemplateButton>) {\r\n        event.preventDefault()\r\n\r\n        const data = event.currentTarget.dataset\r\n        const level = Number(data.level)\r\n\r\n        switch (data.type) {\r\n            case 'scrollChain':\r\n                this.#onSpellSearch({\r\n                    ...CATEGORY_SEARCH.scrollChain,\r\n                    level: sequenceArray<OneToTen>(1, level),\r\n                })\r\n                break\r\n            case 'combatFlexibility':\r\n                this.#onFeatSearch({\r\n                    ...CATEGORY_SEARCH.combatFlexibility,\r\n                    level: { min: 1, max: level },\r\n                })\r\n                break\r\n            case 'scrollSavant':\r\n                this.#onSpellSearch({\r\n                    ...CATEGORY_SEARCH.scrollSavant,\r\n                    level: sequenceArray<OneToTen>(1, level),\r\n                })\r\n                break\r\n        }\r\n    }\r\n\r\n    #onSpellSearch({ category = [], level = [], traditions = [] }: InitialSpellFilters = {}) {\r\n        const filter: InitialSpellFilters = {\r\n            category,\r\n            classes: [],\r\n            level,\r\n            rarity: [],\r\n            school: [],\r\n            source: [],\r\n            traditions,\r\n            traits: [],\r\n        }\r\n        game.pf2e.compendiumBrowser.openTab('spell', filter)\r\n    }\r\n\r\n    #onFeatSearch({ feattype = [], level = {}, traits = [] }: InitialFeatFilters = {}) {\r\n        const filter: InitialFeatFilters = {\r\n            feattype,\r\n            skills: [],\r\n            rarity: [],\r\n            source: [],\r\n            traits,\r\n            level,\r\n        }\r\n        game.pf2e.compendiumBrowser.openTab('feat', filter)\r\n    }\r\n\r\n    #onClear(event: JQuery.ClickEvent<any, any, HTMLAnchorElement>) {\r\n        event.preventDefault()\r\n        const target = $(event.currentTarget)\r\n        const input = target.prevAll('input').first()\r\n        input.attr('value', '')\r\n        input.attr('data-uuid', '')\r\n        target.addClass('disabled')\r\n    }\r\n\r\n    #onCancel(event: JQuery.ClickEvent) {\r\n        event.preventDefault()\r\n        this.close()\r\n    }\r\n}\r\n","import { MODULE_ID } from '@utils/module'\r\n\r\nexport function createTrainedSkillRule(skill: SkillLongForm) {\r\n    return {\r\n        key: 'ActiveEffectLike',\r\n        mode: 'upgrade',\r\n        path: `system.skills.${skill}.rank`,\r\n        value: 1,\r\n        [MODULE_ID]: true,\r\n    } as const\r\n}\r\n\r\nexport function createLanguageRule(language: Language) {\r\n    return {\r\n        key: 'ActiveEffectLike',\r\n        mode: 'add',\r\n        path: 'system.traits.languages.value',\r\n        value: language,\r\n        [MODULE_ID]: true,\r\n    } as const\r\n}\r\n\r\n// {\r\n//     \"key\": \"GrantItem\",\r\n//     \"uuid\": \"Compendium.pf2e.feats-srd.5FyvwI24mnROzh61\",\r\n//     \"flag\": \"combatAssessment\"\r\n//   }\r\n\r\n/**\r\n * flags.pf2e.itemGrants.combatAssessment = {id: feat.id, onDelete: 'detach'}\r\n */\r\n\r\n/**\r\n * flags.pf2e.grantedBy = {id: parent.id, onDelete: \"cascade\"}\r\n */\r\n","import { setModuleID } from '@utils/module'\r\nimport { wrapRestForTheNight } from './rest'\r\nimport { renderCharacterSheetPF2e } from './sheet'\r\n\r\nsetModuleID('pf2e-dailies')\r\n\r\nHooks.once('ready', () => {\r\n    wrapRestForTheNight()\r\n})\r\n\r\nHooks.on('renderCharacterSheetPF2e', renderCharacterSheetPF2e)\r\n\r\n/**\r\n * Scroll Savant\r\n * Quick Study (Loremaster Archetype)\r\n */\r\n","import { getFlag } from '@utils/foundry/flags'\r\nimport { sluggify } from '@utils/pf2e/utils'\r\nimport { getRuleItems, isRuleItem } from './categories'\r\n\r\nexport function wrapRestForTheNight() {\r\n    const original = game.pf2e.actions.restForTheNight\r\n    game.pf2e.actions.restForTheNight = async (options: ActionDefaultOptions) => {\r\n        const result = await original(options)\r\n        if (result.length && options.actors) afterRest(options.actors)\r\n        return result\r\n    }\r\n}\r\n\r\nasync function afterRest(actors: ActorPF2e | ActorPF2e[]) {\r\n    actors = Array.isArray(actors) ? actors : [actors]\r\n\r\n    const characters = actors.filter(x => x.isOfType('character')) as CharacterPF2e[]\r\n    for (const actor of characters) {\r\n        const update: EmbeddedDocumentUpdateData<ItemPF2e>[] = []\r\n        const remove: string[] = []\r\n\r\n        const cleanRuleItem = (item: ItemPF2e) => {\r\n            const rules = deepClone(item._source.system.rules)\r\n            const ruleIndex = rules.findIndex(x => 'pf2e-dailies' in x)\r\n            if (ruleIndex >= 0) {\r\n                rules.splice(ruleIndex, 1)\r\n                update.push({ _id: item.id, 'system.rules': rules })\r\n            }\r\n        }\r\n\r\n        for (const item of actor.itemTypes.feat) {\r\n            if (isRuleItem(item)) cleanRuleItem(item)\r\n\r\n            if (getFlag(item, 'temporary')) {\r\n                const parentId = item.getFlag<string>('pf2e', 'grantedBy.id')\r\n                if (parentId) {\r\n                    const slug = sluggify(item.name, { camel: 'dromedary' })\r\n                    const path = `flags.pf2e.itemGrants.-=${slug}`\r\n                    update.push({ _id: parentId, [path]: true })\r\n                }\r\n                remove.push(item.id)\r\n            }\r\n        }\r\n\r\n        for (const item of actor.itemTypes.equipment) {\r\n            if (isRuleItem(item)) cleanRuleItem(item)\r\n        }\r\n\r\n        if (update.length) actor.updateEmbeddedDocuments('Item', update)\r\n        if (remove.length) actor.deleteEmbeddedDocuments('Item', remove)\r\n    }\r\n}\r\n","import { DailiesInterface } from '@apps/interface'\r\nimport { localize } from '@utils/foundry/localize'\r\nimport { hasAnyCategory } from './categories'\r\n\r\nexport function renderCharacterSheetPF2e(sheet: CharacterSheetPF2e, html: JQuery) {\r\n    const actor = sheet.actor\r\n    if (!hasAnyCategory(actor)) return\r\n\r\n    const small = html.find('aside .sidebar .hitpoints .hp-small')\r\n    small\r\n        .append(`<a class=\"roll-icon dailies\" title=\"${localize('sheet.title')}\"><i class=\"fas fa-mug-saucer\"></i></a>`)\r\n        .find('.dailies')\r\n        .on('click', () => new DailiesInterface(actor).render(true, { id: `pf2e-dailies-interface-${actor.id}` }))\r\n\r\n    // TODO remove with next system update\r\n    small\r\n        .find('[data-action=rest]')\r\n        .off('click')\r\n        .on('click', event => game.pf2e.actions.restForTheNight({ event, actors: actor }))\r\n}\r\n"],"names":["getFlag","doc","key","fallback","getSourceId","includesSourceId","list","sourceId","includes","wordCharacter","String","raw","nonWordCharacter","nonWordCharacterRE","RegExp","wordBoundary","nonWordBoundary","lowerCaseLetter","upperCaseLetter","lowerCaseThenUpperCaseRE","nonWordCharacterHyphenOrSpaceRE","upperOrWordBoundariedLowerRE","sluggify","text","camel","console","warn","replace","toLowerCase","trim","dromedary","charAt","toUpperCase","slice","part","index","Error","getItemSourceIdCondition","Array","isArray","item","getItems","actor","itemTypes","flatMap","type","items","findItemWithSourceId","find","RULE_TYPES","CATEGORY_SEARCH","category","feattype","traits","traditions","CATEGORIES","label","uuids","UUIDS","EQUIP_UUID","FEATS_UUID","RULES_UUIDS","FLATTENED","FEATS","EQUIP","RULES","push","map","uuid","Map","getCategoryUUIDS","isRuleItem","isTrainedSkill","record","isAddedLanguage","isCombatFlexibility","notify","str","arg1","arg2","arg3","data","undefined","permanent","ui","notifications","localize","args","game","i18n","format","templatePath","path","filter","x","join","chatUUID","name","LANGUAGE_LIST","SKILL_DICTIONARY","acr","arc","ath","cra","dec","dip","itm","med","nat","occ","prf","rel","soc","ste","sur","thi","SKILL_LONG_FORMS","Object","keys","values","scrolls","Set","async","createSpellScroll","level","temp","spell","fromUuid","toObject","system","value","scrollUUID","scrollCompendiumIds","getScrollCompendiumUUID","scroll","location","heightenedLevel","temporary","flags","core","description","sequenceArray","start","end","levels","i","createFeat","parent","feat","setProperty","id","onDelete","getSpellcastingDetails","tradition","maxSlot","maxTradition","entry","spellcasting","slots","max","Math","Number","rank","clamped","subKey","fn","defineProperties","enumerable","configurable","info","error","subLocalize","DailiesInterface","Application","_actor","constructor","options","super","this","defaultOptions","mergeObject","title","template","height","submitOnClose","submitOnChange","dragDrop","dropSelector","getData","categories","equipment","isOfType","isInvested","get","hasCategories","templates","actorLanguages","languages","skills","sort","spellSlot","rows","selected","groups","length","a","b","localeCompare","activateListeners","html","on","bind","event","target","$","is","next","categoryType","attr","dataString","dataTransfer","typeError","JSON","parse","isCantrip","not","isRitual","isFocusSpell","itemTraditions","trait","isFeature","featType","itemTraits","nextAll","first","removeClass","element","addClass","warns","forEach","preventDefault","message","itemsToAdd","selectedLanguages","selectedSkills","fields","toArray","ruleItems","some","field","dataset","filterItemsWithSourceId","getRuleItems","parentUUID","ruleItem","hasSourceId","rules","deepClone","_source","splice","obj","update","_id","mode","updateData","pushUpdate","choices","featsMessage","equipmentMessage","createEmbeddedDocuments","msg","parentId","updateEmbeddedDocuments","setFlag","ChatMessage","create","content","speaker","getSpeaker","close","currentTarget","min","classes","rarity","school","source","pf2e","compendiumBrowser","openTab","input","prevAll","Hooks","once","original","actions","restForTheNight","result","actors","characters","remove","cleanRuleItem","ruleIndex","findIndex","deleteEmbeddedDocuments","afterRest","wrapRestForTheNight","sheet","hasAnyCategory","small","append","render","off"],"sourceRoot":""}