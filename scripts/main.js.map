{"version":3,"file":"main.js","mappings":"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","sources":["webpack:///../../../../foundryVTT-projects/@utils/module.ts","webpack:///../../../../foundryVTT-projects/@utils/foundry/flags.ts","webpack:///../../../../foundryVTT-projects/@utils/foundry/item.ts","webpack:///./src/categories.ts","webpack:///../../../../foundryVTT-projects/@utils/foundry/notification.ts","webpack:///../../../../foundryVTT-projects/@utils/foundry/localize.ts","webpack:///../../../../foundryVTT-projects/@utils/foundry/path.ts","webpack:///../../../../foundryVTT-projects/@utils/foundry/uuid.ts","webpack:///../../../../foundryVTT-projects/@utils/pf2e/languages.ts","webpack:///../../../../foundryVTT-projects/@utils/pf2e/skills.ts","webpack:///../../../../foundryVTT-projects/@utils/pf2e/spell.ts","webpack:///./src/apps/interface.ts","webpack:///./src/rules.ts","webpack:///./src/main.ts","webpack:///./src/rest.ts","webpack:///./src/sheet.ts"],"sourcesContent":["export let MODULE_ID = ''\r\n\r\nexport function setModuleID(id: string) {\r\n    if (!MODULE_ID) MODULE_ID = id\r\n}\r\n","import { MODULE_ID } from '@utils/module'\r\n\r\nexport function hasModuleFlag(doc: foundry.abstract.Document) {\r\n    return getProperty(doc, `flags.${MODULE_ID}`) !== undefined\r\n}\r\n\r\nexport function getFlag<T extends unknown>(doc: foundry.abstract.Document, key: string): T | undefined\r\nexport function getFlag<T extends unknown>(doc: foundry.abstract.Document, key: string, fallback: T): T\r\nexport function getFlag<T extends unknown>(doc: foundry.abstract.Document, key: string, fallback?: T): T | undefined {\r\n    return (doc.getFlag(MODULE_ID, key) as T | undefined) ?? fallback\r\n}\r\n\r\n/**\r\n * @template {foundry.Document} T\r\n * @param {T} doc\r\n * @param {string} key\r\n * @param {any} value\r\n * @returns T\r\n */\r\nexport function setFlag(doc: foundry.abstract.Document, key: string, value: unknown) {\r\n    return doc.setFlag(MODULE_ID, key, value)\r\n}\r\n\r\nexport function getSourceId<T extends DocumentUUID>(doc: ClientDocument) {\r\n    return doc.getFlag('core', 'sourceId') as T | undefined\r\n}\r\n\r\nexport function hasSourceId(doc: ClientDocument, sourceId: DocumentUUID) {\r\n    return getSourceId(doc) === sourceId\r\n}\r\n\r\nexport function includesSourceId(doc: ClientDocument, list: DocumentUUID[]) {\r\n    const sourceId = getSourceId(doc)\r\n    return sourceId ? list.includes(sourceId) : false\r\n}\r\n","import { getSourceId, includesSourceId } from '@utils/foundry/flags'\r\n\r\ntype ActorItemTypes<A extends Actor> = (keyof A['itemTypes'])[]\r\n\r\nfunction getItemSourceIdCondition(sourceId: ItemUUID | ItemUUID[]) {\r\n    return Array.isArray(sourceId)\r\n        ? (item: Item) => includesSourceId(item, sourceId)\r\n        : (item: Item) => getSourceId(item) === sourceId\r\n}\r\n\r\nfunction getItems<A extends Actor, I extends Item = CollectionValue<A['items']>>(actor: A, itemTypes?: ActorItemTypes<A>) {\r\n    return (itemTypes ? itemTypes.flatMap(type => actor.itemTypes[type as string]) : actor.items) as Embedded<I>[]\r\n}\r\n\r\nexport function findItemWithSourceId<A extends Actor, I extends Item = CollectionValue<A['items']>>(\r\n    actor: A,\r\n    sourceId: ItemUUID,\r\n    itemTypes?: ActorItemTypes<A>\r\n) {\r\n    return getItems<A, I>(actor, itemTypes).find(getItemSourceIdCondition(sourceId))\r\n}\r\n\r\nexport function hasItemWithSourceId<A extends Actor, I extends Item = CollectionValue<A['items']>>(\r\n    actor: A,\r\n    sourceId: ItemUUID | ItemUUID[],\r\n    itemTypes?: ActorItemTypes<A>\r\n) {\r\n    return getItems<A, I>(actor, itemTypes).some(getItemSourceIdCondition(sourceId))\r\n}\r\n\r\nexport function filterItemsWithSourceId<A extends Actor, I extends Item = CollectionValue<A['items']>>(\r\n    actor: A,\r\n    sourceId: ItemUUID | ItemUUID[],\r\n    itemTypes?: ActorItemTypes<A>\r\n) {\r\n    return getItems<A, I>(actor, itemTypes).filter(getItemSourceIdCondition(sourceId))\r\n}\r\n","import { getSourceId, includesSourceId } from '@utils/foundry/flags'\r\nimport { filterItemsWithSourceId, hasItemWithSourceId } from '@utils/foundry/item'\r\n\r\nexport const CATEGORY_TYPES = ['trainedSkill', 'addedLanguage', 'scrollChain'] as const\r\n\r\nexport const TRAINED_SKILL_NAMES = ['ageless', 'longevity', 'memories', 'studies'] as const\r\nexport const ADDED_LANGUAGE_NAMES = ['linguistics', 'borts'] as const\r\nexport const SCROLL_CHAIN_NAMES = ['esoterica', 'trickster'] as const\r\n\r\nexport const RULE_NAMES = [...TRAINED_SKILL_NAMES, ...ADDED_LANGUAGE_NAMES] as const\r\n\r\nconst CATEGORIES: Category[] = [\r\n    // TrainedSkill\r\n    {\r\n        type: 'trainedSkill',\r\n        category: 'ageless',\r\n        uuids: ['Compendium.pf2e.feats-srd.wylnETwIz32Au46y'],\r\n    },\r\n    {\r\n        type: 'trainedSkill',\r\n        category: 'longevity',\r\n        uuids: ['Compendium.pf2e.feats-srd.WoLh16gyDp8y9WOZ'],\r\n    },\r\n    {\r\n        type: 'trainedSkill',\r\n        category: 'memories',\r\n        uuids: ['Compendium.pf2e.feats-srd.ptEOt3lqjxUnAW62'],\r\n    },\r\n    {\r\n        type: 'trainedSkill',\r\n        category: 'studies',\r\n        uuids: ['Compendium.pf2e.feats-srd.9bgl6qYWKHzqWZj0'],\r\n    },\r\n    // AddedLanguage\r\n    {\r\n        type: 'addedLanguage',\r\n        category: 'linguistics',\r\n        uuids: ['Compendium.pf2e.feats-srd.eCWQU16hRLfN1KaX'],\r\n    },\r\n    {\r\n        type: 'addedLanguage',\r\n        category: 'borts',\r\n        uuids: ['Compendium.pf2e.equipment-srd.iS7hAQMAaThHYE8g'],\r\n        isItem: true,\r\n    },\r\n    // ScrollChain\r\n    {\r\n        type: 'scrollChain',\r\n        category: 'esoterica',\r\n        uuids: [\r\n            'Compendium.pf2e.feats-srd.OqObuRB8oVSAEKFR',\r\n            'Compendium.pf2e.feats-srd.nWd7m0yRcIEVUy7O',\r\n            'Compendium.pf2e.feats-srd.LHjPTV5vP3MOsPPJ',\r\n        ],\r\n    },\r\n    {\r\n        type: 'scrollChain',\r\n        category: 'trickster',\r\n        label: 'Scroll Trickster',\r\n        uuids: [\r\n            'Compendium.pf2e.feats-srd.ROAUR1GhC19Pjk9C',\r\n            'Compendium.pf2e.feats-srd.UrOj9TROtn8nuxPf',\r\n            'Compendium.pf2e.feats-srd.lIg5Gzz7W70jfbk1',\r\n        ],\r\n    },\r\n]\r\n\r\nconst [UUIDS, EQUIP_UUID, FEATS_UUID, RULES_UUIDS, FLATTENED] = (() => {\r\n    const UUIDS: Map<ItemUUID, Omit<Category, 'uuids'> & { index: number; isItem: boolean }> = new Map()\r\n    const FEATS: ItemUUID[] = []\r\n    const EQUIP: ItemUUID[] = []\r\n    const RULES: ItemUUID[] = []\r\n    const FLATTENED = {} as Record<CategoryName, [ItemUUID, ...ItemUUID[]]>\r\n\r\n    for (const { type, category, label, uuids, isItem = false } of CATEGORIES) {\r\n        FLATTENED[category] ??= [] as unknown as [ItemUUID, ...ItemUUID[]]\r\n\r\n        uuids.forEach((uuid, index) => {\r\n            FLATTENED[category].push(uuid)\r\n            UUIDS.set(uuid, { type, category, label, index, isItem })\r\n        })\r\n\r\n        if (RULE_NAMES.includes(category as RuleName)) RULES.push(...uuids)\r\n\r\n        if (isItem) EQUIP.push(uuids[0])\r\n        else FEATS.push(uuids[0])\r\n    }\r\n\r\n    return [UUIDS, EQUIP, FEATS, RULES, FLATTENED]\r\n})()\r\n\r\nexport function getCategoryUUIDS(category: CategoryName) {\r\n    return FLATTENED[category]\r\n}\r\n\r\nexport function getRuleItems(actor: CharacterPF2e) {\r\n    return filterItemsWithSourceId(actor, RULES_UUIDS, ['feat', 'equipment'])\r\n}\r\n\r\nexport function hasAnyCategory(actor: CharacterPF2e) {\r\n    return (\r\n        hasItemWithSourceId(actor, FEATS_UUID, ['feat']) ||\r\n        actor.itemTypes.equipment.some(item => includesSourceId(item, EQUIP_UUID) && item.isInvested)\r\n    )\r\n}\r\n\r\nexport function hasCategories(actor: CharacterPF2e) {\r\n    const categories: Partial<\r\n        Record<CategoryName, Omit<Required<Category>, 'uuids' | 'isItem'> & { items: (undefined | true)[] }>\r\n    > = {}\r\n\r\n    const items = [...actor.itemTypes.feat, ...actor.itemTypes.equipment]\r\n    for (const item of items) {\r\n        const sourceId = getSourceId<ItemUUID>(item)\r\n        if (!sourceId || (item.isOfType('equipment') && !item.isInvested)) continue\r\n\r\n        const entry = UUIDS.get(sourceId)\r\n        if (!entry) continue\r\n\r\n        const { category, index, type, label = '' } = entry\r\n\r\n        categories[category] ??= { category, type, label, items: [] }\r\n        categories[category]!.items[index] = true\r\n\r\n        if (index === 0 && !label) categories[category]!.label = item.name\r\n    }\r\n\r\n    return Object.values(categories).filter(x => x.items[0]) as ReturnedCategory[]\r\n}\r\n\r\nexport function isScrollChainRecord(record: ReturnedCategory): record is ReturnedCategory<ScrollChain> {\r\n    return record.type === 'scrollChain'\r\n}\r\n\r\nexport function isTrainedSkill(record: ReturnedCategory): record is ReturnedCategory<TrainedSkill> {\r\n    return record.type === 'trainedSkill'\r\n}\r\n\r\nexport function isAddedLanguage(record: ReturnedCategory): record is ReturnedCategory<AddedLanguage> {\r\n    return record.type === 'addedLanguage'\r\n}\r\n","import { localize } from '@utils/foundry/localize'\r\n\r\nexport type NotifyArgs = [str: string, arg1?: boolean | Record<string, string>, arg2?: boolean]\r\n\r\nfunction notify(\r\n    str: string,\r\n    arg1?: 'warning' | 'info' | 'error' | boolean | Record<string, string>,\r\n    arg2?: boolean | Record<string, string>,\r\n    arg3?: boolean\r\n) {\r\n    const type = typeof arg1 === 'string' ? arg1 : 'info'\r\n    const data = typeof arg1 === 'object' ? arg1 : typeof arg2 === 'object' ? arg2 : undefined\r\n    const permanent = typeof arg1 === 'boolean' ? arg1 : typeof arg2 === 'boolean' ? arg2 : arg3 ?? false\r\n\r\n    ui.notifications.notify(localize(str, data), type, { permanent })\r\n}\r\n\r\nexport function warn(...args: NotifyArgs) {\r\n    const [str, arg1, arg2] = args\r\n    notify(str, 'warning', arg1, arg2)\r\n}\r\n\r\nexport function info(...args: NotifyArgs) {\r\n    const [str, arg1, arg2] = args\r\n    notify(str, 'info', arg1, arg2)\r\n}\r\n\r\nexport function error(...args: NotifyArgs) {\r\n    const [str, arg1, arg2] = args\r\n    notify(str, 'error', arg1, arg2)\r\n}\r\n","import { MODULE_ID } from '@utils/module'\r\nimport { warn, NotifyArgs, info, error } from '@utils/foundry/notification'\r\n\r\nexport type LocalizeArgs = [key: string, data?: Record<string, string | number>]\r\n\r\nexport function localize(...args: LocalizeArgs) {\r\n    let [key, data] = args\r\n    key = `${MODULE_ID}.${key}`\r\n    if (data) return game.i18n.format(key, data)\r\n    return game.i18n.localize(key)\r\n}\r\n\r\nexport function subLocalize(subKey: string) {\r\n    const fn = (...args: LocalizeArgs) => localize(`${subKey}.${args[0]}`, args[1])\r\n\r\n    Object.defineProperties(fn, {\r\n        warn: {\r\n            value: (...args: NotifyArgs) => warn(`${subKey}.${args[0]}`, args[1], args[2]),\r\n            enumerable: false,\r\n            configurable: false,\r\n        },\r\n        info: {\r\n            value: (...args: NotifyArgs) => info(`${subKey}.${args[0]}`, args[1], args[2]),\r\n            enumerable: false,\r\n            configurable: false,\r\n        },\r\n        error: {\r\n            value: (...args: NotifyArgs) => error(`${subKey}.${args[0]}`, args[1], args[2]),\r\n            enumerable: false,\r\n            configurable: false,\r\n        },\r\n    })\r\n\r\n    return fn as ((...args: LocalizeArgs) => string) & {\r\n        warn: (...args: NotifyArgs) => void\r\n        info: (...args: NotifyArgs) => void\r\n        error: (...args: NotifyArgs) => void\r\n    }\r\n}\r\n","import { MODULE_ID } from '@utils/module'\r\n\r\nexport function getSettingLocalizationPath(...path: string[]) {\r\n    return `${MODULE_ID}.settings.${path.join('.')}`\r\n}\r\n\r\nexport function flagsUpdatePath(...path: string[]) {\r\n    return `flags.${MODULE_ID}.${path.join('/')}`\r\n}\r\n\r\nexport function templatePath(...path: string[]) {\r\n    path = path.filter(x => typeof x === 'string')\r\n    return `modules/${MODULE_ID}/templates/${path.join('/')}`\r\n}\r\n\r\nexport function imagePath(...path: string[]) {\r\n    return `modules/${MODULE_ID}/images/${path.join('/')}`\r\n}\r\n","export function chatUUID(uuid: string, name?: string) {\r\n    if (name) return `@UUID[${uuid}]{${name}}`\r\n    return `@UUID[${uuid}]`\r\n}\r\n\r\nexport function fakeChatUUID(name: string) {\r\n    return `<span style=\"background: #DDD;\r\n    padding: 1px 4px;\r\n    border: 1px solid var(--color-border-dark-tertiary);\r\n    border-radius: 2px;\r\n    white-space: nowrap;\r\n    word-break: break-all;\">${name}</span>`\r\n}\r\n","export const LANGUAGE_LIST = [\r\n    'common',\r\n    'draconic',\r\n    'dwarven',\r\n    'elven',\r\n    'gnomish',\r\n    'goblin',\r\n    'halfling',\r\n    'jotun',\r\n    'orcish',\r\n    'sylvan',\r\n    'undercommon',\r\n    'ysoki',\r\n    'abyssal',\r\n    'adlet',\r\n    'aklo',\r\n    'akitonian',\r\n    'alghollthu',\r\n    'amurrun',\r\n    'anadi',\r\n    'ancient-osiriani',\r\n    'anugobu',\r\n    'arcadian',\r\n    'aquan',\r\n    'arboreal',\r\n    'auran',\r\n    'boggard',\r\n    'calda',\r\n    'caligni',\r\n    'celestial',\r\n    'cyclops',\r\n    'daemonic',\r\n    'destrachan',\r\n    'drooni',\r\n    'dziriak',\r\n    'ekujae',\r\n    'erutaki',\r\n    'formian',\r\n    'garundi',\r\n    'girtablilu',\r\n    'gnoll',\r\n    'goloma',\r\n    'grippli',\r\n    'hallit',\r\n    'hwan',\r\n    'iblydan',\r\n    'ignan',\r\n    'ikeshti',\r\n    'immolis',\r\n    'infernal',\r\n    'iruxi',\r\n    'jistkan',\r\n    'jyoti',\r\n    'kaava',\r\n    'kashrishi',\r\n    'kibwani',\r\n    'kitsune',\r\n    'kelish',\r\n    'lirgeni',\r\n    'mahwek',\r\n    'minaten',\r\n    'minkaian',\r\n    'mwangi',\r\n    'mzunu',\r\n    'nagaji',\r\n    'necril',\r\n    'ocotan',\r\n    'okaiyan',\r\n    'osiriani',\r\n    'protean',\r\n    'rasu',\r\n    'ratajin',\r\n    'razatlani',\r\n    'requian',\r\n    'russian',\r\n    'senzar',\r\n    'shadowtongue',\r\n    'shobhad',\r\n    'shisk',\r\n    'shoanti',\r\n    'shoony',\r\n    'skald',\r\n    'sphinx',\r\n    'strix',\r\n    'taldane',\r\n    'tekritanin',\r\n    'tengu',\r\n    'terran',\r\n    'thassilonian',\r\n    'tien',\r\n    'utopian',\r\n    'vanara',\r\n    'varisian',\r\n    'varki',\r\n    'vishkanyan',\r\n    'vudrani',\r\n    'wyrwood',\r\n    'xanmba',\r\n    'androffan',\r\n    'azlanti',\r\n    'grioth',\r\n    'kovintal',\r\n    'migo',\r\n    'munavri',\r\n    'samsaran',\r\n    'sasquatch',\r\n    'shae',\r\n    'yithian',\r\n    'druidic',\r\n] as const\r\n","export const SKILL_DICTIONARY = {\r\n    acr: 'acrobatics',\r\n    arc: 'arcana',\r\n    ath: 'athletics',\r\n    cra: 'crafting',\r\n    dec: 'deception',\r\n    dip: 'diplomacy',\r\n    itm: 'intimidation',\r\n    med: 'medicine',\r\n    nat: 'nature',\r\n    occ: 'occultism',\r\n    prf: 'performance',\r\n    rel: 'religion',\r\n    soc: 'society',\r\n    ste: 'stealth',\r\n    sur: 'survival',\r\n    thi: 'thievery',\r\n} as const\r\n\r\nexport const SKILL_ABBREVIATIONS = Object.keys(SKILL_DICTIONARY) as (keyof typeof SKILL_DICTIONARY)[]\r\n\r\nexport const SKILL_LONG_FORMS = Object.values(SKILL_DICTIONARY)\r\n","import { chatUUID } from '@utils/foundry/uuid'\r\n\r\nexport const MAGIC_TRADITIONS = new Set(['arcane', 'divine', 'occult', 'primal'] as const)\r\n\r\nexport const SPELL_COMPONENTS = ['focus', 'material', 'somatic', 'verbal'] as const\r\n\r\nconst scrolls: (ConsumablePF2e | null)[] = []\r\nexport async function createSpellScroll(uuid: ItemUUID, level: OneToTen | false, temp = false) {\r\n    const spell = (await fromUuid<SpellPF2e>(uuid))?.toObject()\r\n    if (!spell) return null\r\n\r\n    if (level === false) level = spell.system.level.value\r\n\r\n    const scrollUUID = getScrollCompendiumUUID(level)\r\n    scrolls[level] ??= await fromUuid<ConsumablePF2e>(scrollUUID)\r\n\r\n    const scroll = scrolls[level]?.toObject()\r\n    if (!scroll) return null\r\n\r\n    spell.system.location.heightenedLevel = level\r\n\r\n    scroll.name = `Scroll of ${spell.name} (Level ${level})`\r\n    scroll.system.temporary = temp\r\n    scroll.system.spell = spell\r\n    scroll.system.traits.value.push(...spell.system.traditions.value)\r\n\r\n    const sourceId = spell.flags.core?.sourceId\r\n    if (sourceId) scroll.system.description.value = `${chatUUID(sourceId)}\\n<hr />${scroll.system.description.value}`\r\n\r\n    return scroll\r\n}\r\n\r\nfunction getScrollCompendiumUUID(level: OneToTen): ItemUUID {\r\n    return `Compendium.pf2e.equipment-srd.${scrollCompendiumIds[level]}`\r\n}\r\n\r\nconst scrollCompendiumIds: Record<number, string> = {\r\n    1: 'RjuupS9xyXDLgyIr', // Compendium.pf2e.equipment-srd.RjuupS9xyXDLgyIr\r\n    2: 'Y7UD64foDbDMV9sx',\r\n    3: 'ZmefGBXGJF3CFDbn',\r\n    4: 'QSQZJ5BC3DeHv153',\r\n    5: 'tjLvRWklAylFhBHQ',\r\n    6: '4sGIy77COooxhQuC',\r\n    7: 'fomEZZ4MxVVK3uVu',\r\n    8: 'iPki3yuoucnj7bIt',\r\n    9: 'cFHomF3tty8Wi1e5',\r\n    10: 'o1XIHJ4MJyroAHfF',\r\n}\r\n","import {\r\n    getCategoryUUIDS,\r\n    getRuleItems,\r\n    hasCategories,\r\n    isAddedLanguage,\r\n    isScrollChainRecord,\r\n    isTrainedSkill,\r\n    RULE_NAMES,\r\n} from '@src/categories'\r\nimport { createLanguageRule, createTrainedSkillRule } from '@src/rules'\r\nimport { getFlag, hasSourceId, setFlag } from '@utils/foundry/flags'\r\nimport { subLocalize } from '@utils/foundry/localize'\r\nimport { templatePath } from '@utils/foundry/path'\r\nimport { chatUUID } from '@utils/foundry/uuid'\r\nimport { LANGUAGE_LIST } from '@utils/pf2e/languages'\r\nimport { SKILL_LONG_FORMS } from '@utils/pf2e/skills'\r\nimport { createSpellScroll } from '@utils/pf2e/spell'\r\n\r\nconst localize = subLocalize('interface')\r\n\r\nexport class DailiesInterface extends Application {\r\n    private _actor: CharacterPF2e\r\n\r\n    constructor(actor: CharacterPF2e, options?: Partial<ApplicationOptions>) {\r\n        super(options)\r\n        this._actor = actor\r\n    }\r\n\r\n    static get defaultOptions() {\r\n        return mergeObject(super.defaultOptions, {\r\n            title: localize('title'),\r\n            template: templatePath('interface.hbs'),\r\n            height: 'auto',\r\n            submitOnClose: false,\r\n            submitOnChange: false,\r\n            dragDrop: [\r\n                {\r\n                    dropSelector: '[data-droppable=\"true\"]',\r\n                },\r\n            ],\r\n        })\r\n    }\r\n\r\n    getData(options?: Partial<FormApplicationOptions> | undefined) {\r\n        const actor = this._actor\r\n        const level = actor.level\r\n        const flags = (getFlag(actor, 'saved') ?? {}) as SavedCategories\r\n        const categories = hasCategories(actor)\r\n        const rows: RowTemplate[] = []\r\n        const groups: GroupTemplate[] = []\r\n\r\n        for (const entry of categories) {\r\n            if (isScrollChainRecord(entry)) {\r\n                const { type, category, label, items } = entry\r\n                const slots: ScrollChainTemplateSlot[] = []\r\n\r\n                const spellSlot = (spellLevel: number): ScrollChainTemplateSlot => {\r\n                    const { name, uuid } = flags[category]?.[spellLevel - 1] ?? { name: '', uuid: '' }\r\n                    return { spellLevel, name, uuid }\r\n                }\r\n\r\n                // first feat\r\n                slots.push(spellSlot(1))\r\n                if (level >= 8) slots.push(spellSlot(2))\r\n\r\n                // second feat\r\n                if (items[1]) {\r\n                    slots.push(spellSlot(3))\r\n                    if (level >= 14) slots.push(spellSlot(4))\r\n                    if (level >= 16) slots.push(spellSlot(5))\r\n                }\r\n\r\n                // third feat\r\n                if (items[2]) {\r\n                    slots.push(spellSlot(6))\r\n                    if (level >= 20) slots.push(spellSlot(7))\r\n                }\r\n\r\n                const template: ScrollChainTemplate = { type, category, label, rows: slots }\r\n                groups.push(template)\r\n            } else if (isTrainedSkill(entry)) {\r\n                const { type, category, label } = entry\r\n                const selected = flags[category] ?? ''\r\n                const skills = SKILL_LONG_FORMS.filter(x => actor.skills[x]!.rank! < 1).map(x => ({ skill: x }))\r\n                const template: TrainedSkillTemplate = { type, category, label, skills, selected }\r\n                rows.push(template)\r\n            } else if (isAddedLanguage(entry)) {\r\n                const { type, category, label } = entry\r\n                const selected = flags[category] ?? ''\r\n                const actorLanguages = actor.system.traits.languages.value\r\n                const languages = LANGUAGE_LIST.filter(x => !actorLanguages.includes(x))\r\n                    .sort()\r\n                    .map(x => ({ language: x }))\r\n                const template: AddedLanguageTemplate = { type, category, label, languages, selected }\r\n                rows.push(template)\r\n            }\r\n        }\r\n\r\n        rows.sort((a, b) => a.type.localeCompare(b.type))\r\n        groups.sort((a, b) => a.rows.length - b.rows.length)\r\n\r\n        return mergeObject(super.getData(options), {\r\n            i18n: localize,\r\n            groups,\r\n            rows,\r\n        })\r\n    }\r\n\r\n    activateListeners(html: JQuery<HTMLElement>): void {\r\n        super.activateListeners(html)\r\n\r\n        html.find<HTMLAnchorElement>('[data-action=searchSpell]').on('click', this.#onSpellSearch.bind(this))\r\n        html.find<HTMLAnchorElement>('[data-action=clear]').on('click', this.#onClear.bind(this))\r\n        html.find<HTMLButtonElement>('[data-action=accept]').on('click', this.#onAccept.bind(this))\r\n        html.find<HTMLButtonElement>('[data-action=cancel]').on('click', this.#onCancel.bind(this))\r\n    }\r\n\r\n    protected async _onDrop(event: ElementDragEvent) {\r\n        let target = $(event.target)\r\n        if (target.is('label')) target = target.next()\r\n\r\n        const categoryType = target.attr('data-type') as CategoryType | undefined\r\n        if (!categoryType) return\r\n\r\n        try {\r\n            const dataString = event.dataTransfer?.getData('text/plain')\r\n            const typeError = () => localize.warn('error.drop.wrongType')\r\n\r\n            const data: { type: string; uuid: string } = JSON.parse(dataString)\r\n            if (!data || data.type !== 'Item' || typeof data.uuid !== 'string') return typeError()\r\n\r\n            const item = await fromUuid<ItemPF2e>(data.uuid)\r\n            if (!item) return typeError()\r\n\r\n            switch (categoryType) {\r\n                case 'scrollChain':\r\n                    this.#onDropSpell(target, item)\r\n                    break\r\n            }\r\n        } catch (error) {}\r\n    }\r\n\r\n    #onDropSpell(target: JQuery, item: ItemPF2e) {\r\n        if (!item.isOfType('spell') || item.isCantrip || item.isRitual) return localize.warn('error.drop.spell.wrongType')\r\n        if (item.level > Number(target.attr('data-level'))) return localize.warn('error.drop.spell.wrongLevel')\r\n\r\n        target.attr('value', item.name)\r\n        target.attr('data-uuid', item.uuid)\r\n        target.nextAll('[data-action=\"clear\"]').first().removeClass('disabled')\r\n    }\r\n\r\n    #lock() {\r\n        this.element.find('button').attr('disabled', 'true')\r\n        this.element.find('a').addClass('disabled')\r\n    }\r\n\r\n    #validate() {\r\n        const warns: string[] = []\r\n        if (this.element.find('input[value=\"\"]').length) warns.push('error.empty')\r\n        warns.forEach(x => localize.warn(x))\r\n        return !warns.length\r\n    }\r\n\r\n    async #onAccept(event: JQuery.ClickEvent) {\r\n        event.preventDefault()\r\n        if (!this.#validate()) return\r\n\r\n        this.#lock()\r\n\r\n        let message = ''\r\n        const actor = this._actor\r\n        const flags = {} as SavedCategories\r\n        const itemsToAdd: BaseItemSourcePF2e[] = []\r\n        const selectedLanguages: SelectedObject[] = []\r\n        const selectedSkills: SelectedObject[] = []\r\n\r\n        const fields = this.element.find('.window-content .content').find('input, select').toArray() as Array<\r\n            HTMLElement & TemplateFields\r\n        >\r\n\r\n        const ruleItems = (() => {\r\n            const hasRuleCategories = fields.some(field => {\r\n                const category = field.dataset.category as CategoryName\r\n                return RULE_NAMES.includes(category as RuleName)\r\n            })\r\n            return hasRuleCategories ? getRuleItems(actor) : []\r\n        })()\r\n\r\n        for (const field of fields) {\r\n            const type = field.dataset.type\r\n\r\n            if (type === 'scrollChain') {\r\n                const uuid = field.dataset.uuid\r\n                const level = Number(field.dataset.level) as OneToTen\r\n                const category = field.dataset.category\r\n                const name = field.value\r\n\r\n                if (uuid) {\r\n                    const scroll = await createSpellScroll(uuid, level, true)\r\n                    if (scroll) itemsToAdd.push(scroll)\r\n                }\r\n\r\n                flags[category] ??= []\r\n                flags[category]![level - 1] = { name, uuid }\r\n            } else if (type === 'addedLanguage' || type === 'trainedSkill') {\r\n                const category = field.dataset.category\r\n                const uuid = getCategoryUUIDS(category)[0]\r\n                const item = ruleItems.find(item => hasSourceId(item, uuid))\r\n\r\n                if (!item) continue\r\n\r\n                const rules = deepClone(item._source.system.rules)\r\n                const ruleIndex = rules.findIndex(rule => 'pf2e-dailies' in rule)\r\n                const selected = field.value\r\n\r\n                if (ruleIndex >= 0) rules.splice(ruleIndex, 1)\r\n\r\n                const obj: SelectedObject = {\r\n                    uuid,\r\n                    selected,\r\n                    update: { _id: item.id, 'system.rules': rules },\r\n                }\r\n\r\n                if (type === 'addedLanguage') {\r\n                    rules.push(createLanguageRule(selected as Language))\r\n                    selectedLanguages.push(obj)\r\n                } else {\r\n                    rules.push(createTrainedSkillRule(selected as SkillLongForm))\r\n                    selectedSkills.push(obj)\r\n                }\r\n\r\n                // @ts-ignore\r\n                flags[category] = selected\r\n            }\r\n        }\r\n\r\n        const updateData: EmbeddedDocumentUpdateData<ItemPF2e>[] = []\r\n        const pushSelection = (type: 'skills' | 'languages', choices: SelectedObject[], separator = false) => {\r\n            if (!choices.length) return\r\n\r\n            if (separator && message) message += '<hr />'\r\n\r\n            const title = localize(`message.${type}`)\r\n            message += `<p><strong>${title}</strong></p>`\r\n\r\n            for (const { uuid, selected, update } of choices) {\r\n                message += `<p>${chatUUID(uuid)} <span style=\"text-transform: capitalize;\">${selected}</span></p>`\r\n                updateData.push(update)\r\n            }\r\n        }\r\n\r\n        pushSelection('languages', selectedLanguages)\r\n        pushSelection('skills', selectedSkills, true)\r\n\r\n        if (updateData.length) await actor.updateEmbeddedDocuments('Item', updateData)\r\n\r\n        if (itemsToAdd.length) {\r\n            if (message) message += '<hr />'\r\n            message += `<p><strong>${localize(`message.items`)}</strong></p>`\r\n            const items = (await actor.createEmbeddedDocuments('Item', itemsToAdd)) as ItemPF2e[]\r\n            items.map(x => (message += `<p>${chatUUID(x.uuid)}</p>`))\r\n        }\r\n\r\n        await setFlag(actor, 'saved', flags)\r\n\r\n        message = `${localize('message.changes')}<hr>${message}`\r\n        ChatMessage.create({ content: message, speaker: ChatMessage.getSpeaker({ actor }) })\r\n\r\n        this.close()\r\n    }\r\n\r\n    #onSpellSearch(event: JQuery.ClickEvent<any, any, HTMLAnchorElement>) {\r\n        event.preventDefault()\r\n\r\n        const level = Number(event.currentTarget.dataset.level)\r\n        const levels: number[] = []\r\n\r\n        for (let i = 0; i < level; i++) {\r\n            levels[i] = i + 1\r\n        }\r\n\r\n        const filter: InitialSpellFilters = {\r\n            category: ['spell'],\r\n            classes: [],\r\n            level: levels,\r\n            rarity: [],\r\n            school: [],\r\n            source: [],\r\n            traditions: [],\r\n            traits: [],\r\n        }\r\n\r\n        console.log(filter)\r\n\r\n        game.pf2e.compendiumBrowser.openTab('spell', filter)\r\n    }\r\n\r\n    #onClear(event: JQuery.ClickEvent<any, any, HTMLAnchorElement>) {\r\n        event.preventDefault()\r\n        const target = $(event.currentTarget)\r\n        const input = target.prevAll('input').first()\r\n        input.attr('value', '')\r\n        input.attr('data-uuid', '')\r\n        target.addClass('disabled')\r\n    }\r\n\r\n    #onCancel(event: JQuery.ClickEvent) {\r\n        event.preventDefault()\r\n        this.close()\r\n    }\r\n}\r\n","import { MODULE_ID } from '@utils/module'\r\n\r\nexport function createTrainedSkillRule(skill: SkillLongForm) {\r\n    return {\r\n        key: 'ActiveEffectLike',\r\n        mode: 'upgrade',\r\n        path: `system.skills.${skill}.rank`,\r\n        value: 1,\r\n        [MODULE_ID]: true,\r\n    } as const\r\n}\r\n\r\nexport function createLanguageRule(language: Language) {\r\n    return {\r\n        key: 'ActiveEffectLike',\r\n        mode: 'add',\r\n        path: 'system.traits.languages.value',\r\n        value: language,\r\n        [MODULE_ID]: true,\r\n    } as const\r\n}\r\n","import { setModuleID } from '@utils/module'\r\nimport { wrapRestForTheNight } from './rest'\r\nimport { renderCharacterSheetPF2e } from './sheet'\r\n\r\nsetModuleID('pf2e-dailies')\r\n\r\nHooks.once('ready', () => {\r\n    wrapRestForTheNight()\r\n})\r\n\r\nHooks.on('renderCharacterSheetPF2e', renderCharacterSheetPF2e)\r\n\r\n/**\r\nQuick Study (Loremaster Archetype)\r\nFighter's combat flexibility\r\n */\r\n","import { getRuleItems } from './categories'\r\n\r\nexport function wrapRestForTheNight() {\r\n    const original = game.pf2e.actions.restForTheNight\r\n    game.pf2e.actions.restForTheNight = async (options: ActionDefaultOptions) => {\r\n        const result = await original(options)\r\n        if (result.length && options.actors) afterRest(options.actors)\r\n        return result\r\n    }\r\n}\r\n\r\nfunction afterRest(actors: ActorPF2e | ActorPF2e[]) {\r\n    actors = Array.isArray(actors) ? actors : [actors]\r\n\r\n    const characters = actors.filter(x => x.isOfType('character')) as CharacterPF2e[]\r\n    for (const actor of characters) {\r\n        const update: EmbeddedDocumentUpdateData<ItemPF2e>[] = []\r\n        const ruleItems = getRuleItems(actor)\r\n\r\n        for (const item of ruleItems) {\r\n            const rules = deepClone(item._source.system.rules)\r\n            const ruleIndex = rules.findIndex(x => 'pf2e-dailies' in x)\r\n\r\n            if (ruleIndex >= 0) {\r\n                rules.splice(ruleIndex, 1)\r\n                update.push({ _id: item.id, 'system.rules': rules })\r\n            }\r\n        }\r\n\r\n        if (update.length) actor.updateEmbeddedDocuments('Item', update)\r\n    }\r\n}\r\n","import { DailiesInterface } from '@apps/interface'\r\nimport { localize } from '@utils/foundry/localize'\r\nimport { hasAnyCategory } from './categories'\r\n\r\nexport function renderCharacterSheetPF2e(sheet: CharacterSheetPF2e, html: JQuery) {\r\n    const actor = sheet.actor\r\n    if (!hasAnyCategory(actor)) return\r\n\r\n    const small = html.find('aside .sidebar .hitpoints .hp-small')\r\n    small\r\n        .append(`<a class=\"roll-icon dailies\" title=\"${localize('sheet.title')}\"><i class=\"fas fa-mug-saucer\"></i></a>`)\r\n        .find('.dailies')\r\n        .on('click', () => new DailiesInterface(actor).render(true, { id: `pf2e-dailies-interface-${actor.id}` }))\r\n\r\n    // TODO remove with next system update\r\n    small\r\n        .find('[data-action=rest]')\r\n        .off('click')\r\n        .on('click', event => game.pf2e.actions.restForTheNight({ event, actors: actor }))\r\n}\r\n"],"names":["getSourceId","doc","getFlag","includesSourceId","list","sourceId","includes","getItemSourceIdCondition","Array","isArray","item","getItems","actor","itemTypes","flatMap","type","items","RULE_NAMES","CATEGORIES","category","uuids","isItem","label","UUIDS","EQUIP_UUID","FEATS_UUID","RULES_UUIDS","FLATTENED","Map","FEATS","EQUIP","RULES","forEach","uuid","index","push","set","getCategoryUUIDS","getRuleItems","filter","filterItemsWithSourceId","isAddedLanguage","record","notify","str","arg1","arg2","arg3","data","undefined","permanent","ui","notifications","localize","args","key","game","i18n","format","templatePath","path","x","join","chatUUID","name","LANGUAGE_LIST","SKILL_DICTIONARY","acr","arc","ath","cra","dec","dip","itm","med","nat","occ","prf","rel","soc","ste","sur","thi","SKILL_LONG_FORMS","Object","keys","values","scrolls","Set","async","createSpellScroll","level","temp","spell","fromUuid","toObject","system","value","scrollUUID","scrollCompendiumIds","getScrollCompendiumUUID","scroll","location","heightenedLevel","temporary","traits","traditions","flags","core","description","subKey","fn","defineProperties","warn","enumerable","configurable","info","error","subLocalize","DailiesInterface","Application","_actor","constructor","options","super","this","defaultOptions","mergeObject","title","template","height","submitOnClose","submitOnChange","dragDrop","dropSelector","getData","fallback","categories","feat","equipment","isOfType","isInvested","entry","get","hasCategories","rows","groups","slots","spellSlot","spellLevel","selected","skills","rank","map","skill","actorLanguages","languages","sort","language","a","b","localeCompare","length","activateListeners","html","find","on","bind","event","target","$","is","next","categoryType","attr","dataString","dataTransfer","typeError","JSON","parse","isCantrip","isRitual","Number","nextAll","first","removeClass","element","addClass","warns","preventDefault","message","itemsToAdd","selectedLanguages","selectedSkills","fields","toArray","ruleItems","some","field","dataset","hasSourceId","rules","deepClone","_source","ruleIndex","findIndex","rule","splice","obj","update","_id","id","mode","updateData","pushSelection","choices","separator","updateEmbeddedDocuments","createEmbeddedDocuments","setFlag","ChatMessage","create","content","speaker","getSpeaker","close","currentTarget","levels","i","classes","rarity","school","source","console","log","pf2e","compendiumBrowser","openTab","input","prevAll","Hooks","once","original","actions","restForTheNight","result","actors","characters","afterRest","wrapRestForTheNight","sheet","hasItemWithSourceId","hasAnyCategory","small","append","render","off"],"sourceRoot":""}