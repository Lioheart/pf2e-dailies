{
  "version": 3,
  "sources": ["../src/module.js", "../src/data/spell.js", "../src/data/ace.js", "../src/data/blade.js", "../src/data/ceremonial.js", "../src/data/chain.js", "../src/data/flexibility.js", "../src/data/language.js", "../src/data/skill.js", "../src/data/longevity.js", "../src/data/mind.js", "../src/data/rations.js", "../src/data/resistance.js", "../src/data/root.js", "../src/data/staves.js", "../src/spellcasting.js", "../src/data/savant.js", "../src/data/spellshaping.js", "../src/data/tome.js", "../src/dailies.js", "../src/data/familiar.js", "../src/pf2e/utils.js", "../src/pf2e/predicate.js", "../src/apps/interface/data.js", "../src/apps/interface/shared.js", "../src/apps/interface/drop.js", "../src/apps/interface/process.js", "../src/apps/interface.js", "../src/pf2e/spell.js", "../src/api.js", "../src/actor.js", "../src/data/feat.js", "../src/apps/custom/flexibility.js", "../src/apps/custom/mind.js", "../src/apps/custom/savant.js", "../src/apps/custom/tome.js", "../src/apps/custom.js", "../src/chat.js", "../src/rest.js", "../src/main.js"],
  "sourcesContent": ["export const MODULE_ID = \"pf2e-dailies\";\r\n\r\nexport const AsyncFunction = (async () => {}).constructor;\r\n\r\nexport function getSetting(key) {\r\n\treturn game.settings.get(MODULE_ID, key);\r\n}\r\n\r\nexport function setSetting(key, value) {\r\n\treturn game.settings.set(MODULE_ID, key, value);\r\n}\r\n\r\nfunction getSettingLocalizationPath(...path) {\r\n\treturn `${MODULE_ID}.settings.${path.join(\".\")}`;\r\n}\r\n\r\nexport function registerSetting(options) {\r\n\tconst name = options.name;\r\n\toptions.scope = options.scope ?? \"world\";\r\n\toptions.config = options.config ?? true;\r\n\tif (options.config) {\r\n\t\toptions.name = getSettingLocalizationPath(name, \"name\");\r\n\t\toptions.hint = getSettingLocalizationPath(name, \"hint\");\r\n\t}\r\n\tif (Array.isArray(options.choices)) {\r\n\t\toptions.choices = options.choices.reduce((choices, choice) => {\r\n\t\t\tchoices[choice] = getSettingLocalizationPath(name, \"choices\", choice);\r\n\t\t\treturn choices;\r\n\t\t}, {});\r\n\t}\r\n\tgame.settings.register(MODULE_ID, name, options);\r\n}\r\n\r\nexport function registerSettingMenu(options) {\r\n\tconst name = options.name;\r\n\toptions.name = getSettingLocalizationPath(\"menus\", name, \"name\");\r\n\toptions.label = getSettingLocalizationPath(\"menus\", name, \"label\");\r\n\toptions.hint = getSettingLocalizationPath(\"menus\", name, \"hint\");\r\n\toptions.restricted = options.restricted ?? true;\r\n\toptions.icon = options.icon ?? \"fas fa-cogs\";\r\n\tgame.settings.registerMenu(MODULE_ID, name, options);\r\n}\r\n\r\nexport function templatePath(...path) {\r\n\tconst pathStr = path.filter((x) => typeof x === \"string\").join(\"/\");\r\n\treturn `modules/${MODULE_ID}/templates/${pathStr}`;\r\n}\r\n\r\nexport function getFlag(doc, key, fallback) {\r\n\treturn doc.getFlag(MODULE_ID, key) ?? fallback;\r\n}\r\n\r\nexport function setFlag(doc, key, value) {\r\n\treturn doc.setFlag(MODULE_ID, key, value);\r\n}\r\n\r\nexport function localize(...args) {\r\n\tlet [key, data] = args;\r\n\tkey = `${MODULE_ID}.${key}`;\r\n\tif (data) return game.i18n.format(key, data);\r\n\treturn game.i18n.localize(key);\r\n}\r\n\r\nexport function hasLocalization(key) {\r\n\treturn game.i18n.has(`${MODULE_ID}.${key}`, false);\r\n}\r\n\r\nexport function localizePath(key) {\r\n\treturn `${MODULE_ID}.${key}`;\r\n}\r\n\r\nexport function subLocalize(subKey) {\r\n\tconst fn = (...args) => localize(`${subKey}.${args[0]}`, args[1]);\r\n\r\n\tObject.defineProperties(fn, {\r\n\t\twarn: {\r\n\t\t\tvalue: (...args) => warn(`${subKey}.${args[0]}`, args[1], args[2]),\r\n\t\t\tenumerable: false,\r\n\t\t\tconfigurable: false,\r\n\t\t},\r\n\t\tinfo: {\r\n\t\t\tvalue: (...args) => info(`${subKey}.${args[0]}`, args[1], args[2]),\r\n\t\t\tenumerable: false,\r\n\t\t\tconfigurable: false,\r\n\t\t},\r\n\t\terror: {\r\n\t\t\tvalue: (...args) => error(`${subKey}.${args[0]}`, args[1], args[2]),\r\n\t\t\tenumerable: false,\r\n\t\t\tconfigurable: false,\r\n\t\t},\r\n\t\thas: {\r\n\t\t\tvalue: (key) => hasLocalization(`${subKey}.${key}`),\r\n\t\t\tenumerable: false,\r\n\t\t\tconfigurable: false,\r\n\t\t},\r\n\t\tpath: {\r\n\t\t\tvalue: (key) => localizePath(`${subKey}.${key}`),\r\n\t\t\tenumerable: false,\r\n\t\t\tconfigurable: false,\r\n\t\t},\r\n\t\ttemplate: {\r\n\t\t\tvalue: (key, { hash }) => fn(key, hash),\r\n\t\t\tenumerable: false,\r\n\t\t\tconfigurable: false,\r\n\t\t},\r\n\t});\r\n\r\n\treturn fn;\r\n}\r\n\r\nfunction notify(str, arg1, arg2, arg3) {\r\n\tconst type = typeof arg1 === \"string\" ? arg1 : \"info\";\r\n\tconst data =\r\n\t\ttypeof arg1 === \"object\"\r\n\t\t\t? arg1\r\n\t\t\t: typeof arg2 === \"object\"\r\n\t\t\t  ? arg2\r\n\t\t\t  : undefined;\r\n\tconst permanent =\r\n\t\ttypeof arg1 === \"boolean\"\r\n\t\t\t? arg1\r\n\t\t\t: typeof arg2 === \"boolean\"\r\n\t\t\t  ? arg2\r\n\t\t\t  : arg3 ?? false;\r\n\r\n\tui.notifications.notify(localize(str, data), type, { permanent });\r\n}\r\n\r\nexport function warn(...args) {\r\n\tconst [str, arg1, arg2] = args;\r\n\tnotify(str, \"warning\", arg1, arg2);\r\n}\r\n\r\nexport function info(...args) {\r\n\tconst [str, arg1, arg2] = args;\r\n\tnotify(str, \"info\", arg1, arg2);\r\n}\r\n\r\nexport function error(...args) {\r\n\tconst [str, arg1, arg2] = args;\r\n\tnotify(str, \"error\", arg1, arg2);\r\n}\r\n\r\nexport function getSourceId(doc) {\r\n\treturn doc.getFlag(\"core\", \"sourceId\");\r\n}\r\n\r\nexport function includesSourceId(doc, list) {\r\n\tconst sourceId = getSourceId(doc);\r\n\treturn sourceId ? list.includes(sourceId) : false;\r\n}\r\n\r\nexport function getItems(actor, types) {\r\n\tconst itemTypes = typeof types === \"string\" ? [types] : types;\r\n\treturn itemTypes\r\n\t\t? itemTypes.flatMap((type) => actor.itemTypes[type])\r\n\t\t: actor.items;\r\n}\r\n\r\nexport function findItemWithSourceId(actor, sourceId, types = []) {\r\n\tconst itemTypes = typeof types === \"string\" ? [types] : types;\r\n\tfor (const type of itemTypes) {\r\n\t\tconst item = actor.itemTypes[type].find(\r\n\t\t\t(item) => item.sourceId === sourceId,\r\n\t\t);\r\n\t\tif (item) return item;\r\n\t}\r\n}\r\n\r\nexport function sequenceArray(start, end) {\r\n\tconst levels = [];\r\n\r\n\tif (start <= end) {\r\n\t\tfor (let i = start; i <= end; i++) levels.push(i);\r\n\t} else {\r\n\t\tfor (let i = start; i >= end; i--) levels.push(i);\r\n\t}\r\n\r\n\treturn levels;\r\n}\r\n\r\nexport function capitalize(str) {\r\n\tif (!str) return \"\";\r\n\treturn str[0].toUpperCase() + str.slice(1);\r\n}\r\n\r\nexport function chatUUID(uuid, name) {\r\n\tif (name) return `@UUID[${uuid}]{${name}}`;\r\n\treturn `@UUID[${uuid}]`;\r\n}\r\n\r\nexport function fakeChatUUID(name) {\r\n\treturn `<span style=\"background: #DDD;\r\n    padding: 1px 4px;\r\n    border: 1px solid var(--color-border-dark-tertiary);\r\n    border-radius: 2px;\r\n    white-space: nowrap;\r\n    word-break: break-all;\">${name}</span>`;\r\n}\r\n\r\nexport function isInstanceOf(obj, name) {\r\n\tif (typeof obj !== \"object\") return false;\r\n\r\n\tlet cursor = Reflect.getPrototypeOf(obj);\r\n\twhile (cursor) {\r\n\t\tif (cursor.constructor.name === name) return true;\r\n\t\tcursor = Reflect.getPrototypeOf(cursor);\r\n\t}\r\n\r\n\treturn false;\r\n}\r\n\r\nexport function updateSourceFlag(doc, key, value) {\r\n\treturn doc.updateSource({\r\n\t\t[`flags.${MODULE_ID}.${key}`]: value,\r\n\t});\r\n}\r\n\r\nexport function registerWrapper(path, callback, type = \"WRAPPER\") {\r\n\treturn libWrapper.register(MODULE_ID, path, callback, type);\r\n}\r\n", "export function createSpellDaily(key, uuid, filter, level, label) {\r\n\tconst daily = {\r\n\t\tkey,\r\n\t\tlabel,\r\n\t\titem: {\r\n\t\t\tuuid,\r\n\t\t},\r\n\t\trows: [\r\n\t\t\t{\r\n\t\t\t\ttype: \"drop\",\r\n\t\t\t\tslug: \"spell\",\r\n\t\t\t\tfilter: {\r\n\t\t\t\t\ttype: \"spell\",\r\n\t\t\t\t\tsearch: filter ?? {},\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t],\r\n\t\tprocess: async ({ addSpell, utils, fields, messages }) => {\r\n\t\t\tconst uuid = fields.spell.uuid;\r\n\t\t\tconst source = await utils.createSpellSource(uuid);\r\n\t\t\tconst spellLevel = level ?? source.system.level.value;\r\n\t\t\tconst label = `${source.name} (Level ${spellLevel})`;\r\n\t\t\taddSpell(source, level);\r\n\t\t\tmessages.add(\"spells\", { uuid, label });\r\n\t\t},\r\n\t};\r\n\treturn daily;\r\n}\r\n", "import { localizePath } from \"../module\";\r\nimport { createSpellDaily } from \"./spell\";\r\n\r\nexport function tricksterAce() {\r\n\tconst daily = createSpellDaily(\r\n\t\t\"ace\",\r\n\t\t\"Compendium.pf2e.feats-srd.Item.POrE3ZgBRdBL9MsW\",\r\n\t\t{\r\n\t\t\tcategory: [],\r\n\t\t\tlevel: 4,\r\n\t\t},\r\n\t\t4,\r\n\t);\r\n\r\n\tconst row = daily.rows[0];\r\n\trow.filter.drop = (item) => {\r\n\t\tconst castTime = item.system.time.value;\r\n\t\tif (\r\n\t\t\tcastTime.includes(\"hour\") ||\r\n\t\t\t(castTime.includes(\"min\") && parseInt(castTime) > 10)\r\n\t\t) {\r\n\t\t\treturn {\r\n\t\t\t\terror: localizePath(\"interface.error.drop.wrongSpellTime\"),\r\n\t\t\t\tdata: { time: \"10 min\" },\r\n\t\t\t};\r\n\t\t}\r\n\t\treturn true;\r\n\t};\r\n\r\n\treturn daily;\r\n}\r\n", "import { localize } from \"../module\";\r\n\r\nexport const bladeAlly = {\r\n\tkey: \"blade\",\r\n\titem: {\r\n\t\tuuid: \"Compendium.pf2e.classfeatures.Item.EtltLdiy9kNfHU0c\", // Blade Ally\r\n\t},\r\n\tchildren: [\r\n\t\t{\r\n\t\t\tslug: \"good\",\r\n\t\t\tuuid: \"Compendium.pf2e.classfeatures.Item.nxZYP3KGfTSkaW6J\", // The Tenets of Good\r\n\t\t},\r\n\t\t{\r\n\t\t\tslug: \"evil\",\r\n\t\t\tuuid: \"Compendium.pf2e.classfeatures.Item.JiY2ZB4FkK8RJm4T\", // The Tenets of Evil\r\n\t\t},\r\n\t\t{\r\n\t\t\tslug: \"liberator\",\r\n\t\t\tuuid: \"Compendium.pf2e.classfeatures.Item.FCoMFUsth4xB4veC\", // Liberator\r\n\t\t},\r\n\t\t{\r\n\t\t\tslug: \"paladin\",\r\n\t\t\tuuid: \"Compendium.pf2e.classfeatures.Item.peEXunfbSD8WcMFk\", // Paladin\r\n\t\t},\r\n\t\t{\r\n\t\t\tslug: \"antipaladin\",\r\n\t\t\tuuid: \"Compendium.pf2e.classfeatures.Item.EQ6DVIQHAUXUhY6Y\", // Antipaladin\r\n\t\t},\r\n\t\t{\r\n\t\t\tslug: \"tyrant\",\r\n\t\t\tuuid: \"Compendium.pf2e.classfeatures.Item.HiIvez0TqESbleB5\", // Tyrant\r\n\t\t},\r\n\t\t{\r\n\t\t\tslug: \"spirit\",\r\n\t\t\tuuid: \"Compendium.pf2e.feats-srd.Item.h5ksUZlrVGBjq6p4\", // Radiant Blade Spirit\r\n\t\t},\r\n\t\t{\r\n\t\t\tslug: \"master\",\r\n\t\t\tuuid: \"Compendium.pf2e.feats-srd.Item.jYEMVfrXJLpXS6aC\", // Radiant Blade Master\r\n\t\t},\r\n\t],\r\n\trows: [\r\n\t\t{\r\n\t\t\ttype: \"select\",\r\n\t\t\tslug: \"weapon\",\r\n\t\t\tlabel: () => localize(\"label.blade.weapon\"),\r\n\t\t\toptions: ({ actor }) => {\r\n\t\t\t\treturn actor.itemTypes.weapon\r\n\t\t\t\t\t.filter((weapon) => !weapon.isAlchemical)\r\n\t\t\t\t\t.map((weapon) => ({ value: weapon.id, label: weapon.name }));\r\n\t\t\t},\r\n\t\t},\r\n\t\t{\r\n\t\t\ttype: \"select\",\r\n\t\t\tslug: \"rune\",\r\n\t\t\tlabel: () => localize(\"label.blade.rune\"),\r\n\t\t\toptions: ({ children }) => {\r\n\t\t\t\tconst runes = [\"returning\", \"shifting\"];\r\n\r\n\t\t\t\tconst {\r\n\t\t\t\t\tantipaladin,\r\n\t\t\t\t\tevil,\r\n\t\t\t\t\tgood,\r\n\t\t\t\t\tliberator,\r\n\t\t\t\t\tmaster,\r\n\t\t\t\t\tpaladin,\r\n\t\t\t\t\tspirit,\r\n\t\t\t\t\ttyrant,\r\n\t\t\t\t} = children;\r\n\r\n\t\t\t\tif (spirit) {\r\n\t\t\t\t\trunes.push(\"flaming\");\r\n\t\t\t\t\tif (good) runes.push(\"holy\");\r\n\t\t\t\t\tif (evil) runes.push(\"unholy\");\r\n\t\t\t\t\tif (liberator || antipaladin) runes.push(\"anarchic\");\r\n\t\t\t\t\tif (paladin || tyrant) runes.push(\"axiomatic\");\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (good) runes.push(\"disrupting\", \"ghost-touch\");\r\n\t\t\t\tif (master) runes.push(\"greater-disrupting\", \"keen\");\r\n\t\t\t\tif (evil) runes.push(\"fearsome\");\r\n\r\n\t\t\t\treturn runes.map((value) => ({\r\n\t\t\t\t\tvalue,\r\n\t\t\t\t\tlabel: localizeRune(value),\r\n\t\t\t\t}));\r\n\t\t\t},\r\n\t\t\tcondition: ({ actor }) =>\r\n\t\t\t\tactor.itemTypes.weapon.filter((weapon) => !weapon.isAlchemical).length,\r\n\t\t},\r\n\t],\r\n\tprocess: async ({ actor, fields, addRule, messages }) => {\r\n\t\tconst weaponId = fields.weapon.value;\r\n\t\tconst rune = fields.rune.value;\r\n\r\n\t\tconst weapon = actor.items.get(weaponId);\r\n\t\tif (!weapon) return;\r\n\r\n\t\taddRule(\r\n\t\t\t{\r\n\t\t\t\tdefinition: [`item:id:${weaponId}`],\r\n\t\t\t\tkey: \"AdjustStrike\",\r\n\t\t\t\tmode: \"add\",\r\n\t\t\t\tproperty: \"property-runes\",\r\n\t\t\t\tvalue: rune,\r\n\t\t\t},\r\n\t\t\tweapon,\r\n\t\t);\r\n\r\n\t\taddRule(\r\n\t\t\t{\r\n\t\t\t\tkey: \"CriticalSpecialization\",\r\n\t\t\t\tpredicate: [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tor: [`item:category:${weapon.category}`, `item:id:${weaponId}`],\r\n\t\t\t\t\t},\r\n\t\t\t\t],\r\n\t\t\t},\r\n\t\t\tweapon,\r\n\t\t);\r\n\r\n\t\tconst name =\r\n\t\t\tweapon.name !== weapon._source.name\r\n\t\t\t\t? `... ${weapon._source.name}`\r\n\t\t\t\t: weapon.name;\r\n\r\n\t\tmessages.addGroup(\"blade\");\r\n\t\tmessages.add(\"blade\", {\r\n\t\t\tuuid: weapon.uuid,\r\n\t\t\tlabel: name,\r\n\t\t\tselected: localizeRune(rune),\r\n\t\t});\r\n\t},\r\n};\r\n\r\nfunction localizeRune(value) {\r\n\tconst slugged = value.replace(/-\\w/, (match) => match[1].toUpperCase());\r\n\treturn game.i18n.localize(`PF2E.WeaponPropertyRune.${slugged}.Name`);\r\n}\r\n", "const ICON = \"systems/pf2e/icons/equipment/weapons/wish-knife.webp\";\r\n\r\nexport const ceremonialKnife = {\r\n\tkey: \"ceremonial\",\r\n\titem: {\r\n\t\tuuid: \"Compendium.pf2e.feats-srd.Item.78pkCdFaY8hI07Lj\",\r\n\t\tcondition: ({ actor }) =>\r\n\t\t\tactor.itemTypes.weapon.some((weapon) => weapon.group === \"knife\"),\r\n\t},\r\n\trows: [\r\n\t\t{\r\n\t\t\ttype: \"drop\",\r\n\t\t\tslug: \"spell\",\r\n\t\t\tlabel: ({ utils, actor }) => utils.spellRankLabel(calculateRank(actor)),\r\n\t\t\tfilter: {\r\n\t\t\t\ttype: \"spell\",\r\n\t\t\t\tsearch: ({ actor }) => ({\r\n\t\t\t\t\tcategory: [\"spell\"],\r\n\t\t\t\t\tlevel: calculateRank(actor),\r\n\t\t\t\t}),\r\n\t\t\t},\r\n\t\t},\r\n\t],\r\n\tprocess: async ({ actor, fields, utils, item, addItem, messages }) => {\r\n\t\tconst uuid = fields.spell.uuid;\r\n\t\tconst level = calculateRank(actor);\r\n\t\tconst source = await utils.createWandSource({\r\n\t\t\tuuid,\r\n\t\t\tlevel,\r\n\t\t\titemName: item.name,\r\n\t\t\titemImg: ICON,\r\n\t\t});\r\n\r\n\t\taddItem(source);\r\n\r\n\t\tmessages.addGroup(\"ceremonial\");\r\n\t\tmessages.add(\"ceremonial\", { uuid, label: source.name });\r\n\t},\r\n};\r\n\r\nfunction calculateRank(actor) {\r\n\treturn Math.ceil((actor.level - 5) / 2);\r\n}\r\n", "const rows = [\r\n\t\"first\",\r\n\t\"second\",\r\n\t\"third\",\r\n\t\"fourth\",\r\n\t\"fifth\",\r\n\t\"sixth\",\r\n\t\"seventh\",\r\n];\r\n\r\nexport function createScrollChain(key, uuids, label) {\r\n\tconst daily = {\r\n\t\tkey,\r\n\t\tlabel,\r\n\t\titem: {\r\n\t\t\tuuid: uuids[0],\r\n\t\t},\r\n\t\tchildren: [\r\n\t\t\t{\r\n\t\t\t\tslug: \"expert\",\r\n\t\t\t\tuuid: uuids[1],\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tslug: \"master\",\r\n\t\t\t\tuuid: uuids[2],\r\n\t\t\t},\r\n\t\t],\r\n\t\trows: [\r\n\t\t\tcreateRow(\"first\", 1),\r\n\t\t\tcreateRow(\"second\", 2, 8),\r\n\t\t\tcreateRow(\"third\", 3, undefined, \"expert\"),\r\n\t\t\tcreateRow(\"fourth\", 4, 14, \"expert\"),\r\n\t\t\tcreateRow(\"fifth\", 5, 16, \"expert\"),\r\n\t\t\tcreateRow(\"sixth\", 6, undefined, \"master\"),\r\n\t\t\tcreateRow(\"seventh\", 7, 20, \"master\"),\r\n\t\t],\r\n\t\tprocess: async ({ utils, fields, addItem, messages }) => {\r\n\t\t\tfor (const field of Object.values(fields)) {\r\n\t\t\t\tconst uuid = field.uuid;\r\n\t\t\t\tconst level = rows.indexOf(field.row) + 1;\r\n\t\t\t\tconst source = await utils.createSpellScrollSource({ uuid, level });\r\n\t\t\t\taddItem(source);\r\n\t\t\t\tmessages.add(\"scrolls\", { uuid, label: source.name });\r\n\t\t\t}\r\n\t\t},\r\n\t};\r\n\treturn daily;\r\n}\r\n\r\nfunction createRow(slug, level, minActorLevel, child) {\r\n\tconst row = {\r\n\t\ttype: \"drop\",\r\n\t\tslug,\r\n\t\tlabel: ({ utils }) => utils.spellRankLabel(level),\r\n\t\tfilter: {\r\n\t\t\ttype: \"spell\",\r\n\t\t\tsearch: {\r\n\t\t\t\tcategory: [\"spell\"],\r\n\t\t\t\tlevel,\r\n\t\t\t},\r\n\t\t},\r\n\t};\r\n\tif (minActorLevel)\r\n\t\trow.condition = ({ actor }) => actor.level >= minActorLevel;\r\n\tif (child) row.childPredicate = [child];\r\n\treturn row;\r\n}\r\n", "export const combatFlexibility = {\r\n\tkey: \"flexibility\",\r\n\titem: {\r\n\t\tuuid: \"Compendium.pf2e.classfeatures.Item.8g6HzARbhfcgilP8\", // Combat Flexibility\r\n\t},\r\n\tchildren: [\r\n\t\t{\r\n\t\t\tslug: \"improved\",\r\n\t\t\tuuid: \"Compendium.pf2e.classfeatures.Item.W2rwudMNcAxs8VoX\", // Improved Flexibility\r\n\t\t},\r\n\t],\r\n\trows: [\r\n\t\tcreateRow(\"flexibility\", 8), //\r\n\t\tcreateRow(\"improved\", 14, \"improved\"),\r\n\t],\r\n\tprocess: async ({ utils, fields, addFeat, messages, children }) => {\r\n\t\tconst uuid = fields.flexibility.uuid;\r\n\t\tconst source = await utils.createFeatSource(uuid);\r\n\t\taddFeat(source);\r\n\t\tmessages.add(\"feats\", { uuid });\r\n\r\n\t\tif (children.improved) {\r\n\t\t\tconst uuid = fields.improved.uuid;\r\n\t\t\tconst source = await utils.createFeatSource(uuid);\r\n\t\t\taddFeat(source, children.improved);\r\n\t\t\tmessages.add(\"feats\", { uuid });\r\n\t\t}\r\n\t},\r\n};\r\n\r\nfunction createRow(slug, level, child) {\r\n\tconst row = {\r\n\t\ttype: \"drop\",\r\n\t\tlabel: `PF2E.Level${level}`,\r\n\t\tslug,\r\n\t\tfilter: {\r\n\t\t\ttype: \"feat\",\r\n\t\t\tsearch: {\r\n\t\t\t\tcategory: [\"class\"],\r\n\t\t\t\ttraits: [\"fighter\"],\r\n\t\t\t\tlevel,\r\n\t\t\t},\r\n\t\t},\r\n\t};\r\n\tif (child) row.childPredicate = [child];\r\n\treturn row;\r\n}\r\n", "export function createLanguageDaily(key, uuid, label) {\r\n\treturn {\r\n\t\tkey,\r\n\t\tlabel,\r\n\t\titem: {\r\n\t\t\tuuid,\r\n\t\t},\r\n\t\trows: [\r\n\t\t\t{\r\n\t\t\t\ttype: \"select\",\r\n\t\t\t\tslug: \"language\",\r\n\t\t\t\toptions: ({ actor, utils }) => {\r\n\t\t\t\t\tconst actorLanguages = actor.system.details.languages.value;\r\n\t\t\t\t\treturn utils.languageNames\r\n\t\t\t\t\t\t.filter((x) => !actorLanguages.includes(x))\r\n\t\t\t\t\t\t.sort();\r\n\t\t\t\t},\r\n\t\t\t\tlabelizer: ({ utils }) => utils.languageLabel,\r\n\t\t\t},\r\n\t\t],\r\n\t\tprocess: ({ addRule, utils, fields, messages }) => {\r\n\t\t\tconst value = fields.language.value;\r\n\t\t\tconst source = utils.createLanguageRuleElement({ language: value });\r\n\t\t\taddRule(source);\r\n\t\t\tmessages.add(\"languages\", {\r\n\t\t\t\tuuid,\r\n\t\t\t\tselected: utils.languageLabel(value),\r\n\t\t\t\tlabel,\r\n\t\t\t});\r\n\t\t},\r\n\t};\r\n}\r\n", "export function createTrainedSkillDaily(key, uuid, label) {\r\n\tconst daily = {\r\n\t\tkey,\r\n\t\tlabel,\r\n\t\titem: {\r\n\t\t\tuuid,\r\n\t\t},\r\n\t\trows: [createComboSkillRow(\"skill\", 0)],\r\n\t\tprocess: (api) => {\r\n\t\t\tprocessComboSkill(api, { uuid, label });\r\n\t\t},\r\n\t};\r\n\treturn daily;\r\n}\r\n\r\nexport function processComboSkill(\r\n\t{ fields, addItem, addRule, utils, messages, removeRule },\r\n\t{ field = \"skill\", uuid, label, rank = 1, parent },\r\n) {\r\n\tremoveRule(\r\n\t\t(rule) =>\r\n\t\t\trule.key === \"ActiveEffectLike\" &&\r\n\t\t\trule.mode === \"upgrade\" &&\r\n\t\t\trule.phase === \"beforeDerived\" &&\r\n\t\t\trule.path?.startsWith(\"system.skills.\"),\r\n\t\tparent,\r\n\t);\r\n\r\n\tremoveRule(\r\n\t\t(rule) =>\r\n\t\t\trule.key === \"RollOption\" &&\r\n\t\t\trule.toggleable &&\r\n\t\t\trule.alwaysActive &&\r\n\t\t\trule.phase === \"beforeDerived\" &&\r\n\t\t\trule.suboptions.some((suboption) => suboption.label === \"PF2E.SkillAcr\"),\r\n\t\tparent,\r\n\t);\r\n\r\n\tlet value = fields[field].value;\r\n\r\n\tif (fields[field].input === \"true\") {\r\n\t\tconst source = utils.createLoreSource({ name: value, rank });\r\n\t\taddItem(source);\r\n\t} else {\r\n\t\tconst source = utils.createSkillRuleElement({ skill: value, value: rank });\r\n\t\tvalue = utils.skillLabel(value);\r\n\t\taddRule(source, parent);\r\n\t}\r\n\r\n\tmessages.add(\"skills\", { uuid, selected: value, label });\r\n}\r\n\r\nexport function createComboSkillRow(slug, rank, extras = {}) {\r\n\treturn {\r\n\t\ttype: \"combo\",\r\n\t\tslug,\r\n\t\toptions: ({ actor, utils }) => {\r\n\t\t\tconst actorSkills = actor.skills;\r\n\t\t\treturn utils.skillNames.filter((x) => actorSkills[x].rank === rank);\r\n\t\t},\r\n\t\tlabelizer: ({ utils }) => utils.skillLabel,\r\n\t\t...extras,\r\n\t};\r\n}\r\n\r\nexport function createTrainedLoreDaily(key, uuid, label) {\r\n\tconst daily = {\r\n\t\tkey,\r\n\t\tlabel,\r\n\t\titem: {\r\n\t\t\tuuid,\r\n\t\t},\r\n\t\trows: [\r\n\t\t\t{\r\n\t\t\t\ttype: \"input\",\r\n\t\t\t\tslug: \"skill\",\r\n\t\t\t},\r\n\t\t],\r\n\t\tprocess: ({ addItem, utils, fields, messages }) => {\r\n\t\t\tconst value = fields.skill.value;\r\n\t\t\tconst source = utils.createLoreSource({ name: value, rank: 1 });\r\n\t\t\taddItem(source);\r\n\t\t\tmessages.add(\"skills\", { uuid, selected: value, label });\r\n\t\t},\r\n\t};\r\n\treturn daily;\r\n}\r\n", "import { createComboSkillRow, processComboSkill } from \"./skill\";\r\n\r\nexport const longevities = {\r\n\tkey: \"longevities\",\r\n\titem: {\r\n\t\tuuid: \"Compendium.pf2e.feats-srd.Item.WoLh16gyDp8y9WOZ\", // Ancestral Longevity\r\n\t},\r\n\tchildren: [\r\n\t\t{\r\n\t\t\tslug: \"expert\",\r\n\t\t\tuuid: \"Compendium.pf2e.feats-srd.Item.vfuHVSuExvtyajkW\", // Expert Longevity\r\n\t\t},\r\n\t],\r\n\trows: [\r\n\t\tcreateComboSkillRow(\"ancestral\", 0, {\r\n\t\t\tlabel: ({ item }) => item.name,\r\n\t\t}),\r\n\t\tcreateComboSkillRow(\"expert\", 1, {\r\n\t\t\tlabel: ({ children }) => children.expert?.name,\r\n\t\t\tchildPredicate: [\"expert\"],\r\n\t\t}),\r\n\t],\r\n\tprocess: async (api) => {\r\n\t\tconst feats = [\r\n\t\t\t{ field: \"ancestral\", rank: 1, item: api.item },\r\n\t\t\t{ field: \"expert\", rank: 2, item: api.children.expert },\r\n\t\t];\r\n\r\n\t\tfor (const { field, rank, item } of feats) {\r\n\t\t\tif (!api.fields[field]) continue;\r\n\t\t\tprocessComboSkill(api, {\r\n\t\t\t\tlabel: item.name,\r\n\t\t\t\tuuid: item.uuid,\r\n\t\t\t\tfield,\r\n\t\t\t\trank,\r\n\t\t\t\tparent: item,\r\n\t\t\t});\r\n\t\t}\r\n\t},\r\n};\r\n", "import {\r\n\tMODULE_ID,\r\n\tfindItemWithSourceId,\r\n\tgetFlag,\r\n\tlocalize,\r\n\tsubLocalize,\r\n} from \"../module\";\r\n\r\nconst MIND_WEAPON_UUID =\r\n\t\"Compendium.pf2e-dailies.equipment.Item.VpmEozw21aRxX15P\";\r\nconst MALLEABLE_MENTAL_FORGE_UUID =\r\n\t\"Compendium.pf2e.feats-srd.Item.PccekOihIbRWdDky\";\r\n\r\nconst WEAPON_BASE_TYPES = {\r\n\t0: { die: \"d4\", traits: [\"finesse\", \"agile\"], usage: \"held-in-one-hand\" },\r\n\t1: { die: \"d6\", traits: [\"finesse\"], usage: \"held-in-one-hand\" },\r\n\t2: { die: \"d8\", traits: [], usage: \"held-in-one-hand\" },\r\n\t3: { die: \"d10\", traits: [\"reach\"], usage: \"held-in-two-hands\" },\r\n};\r\n\r\nconst WEAPON_GROUPS = {\r\n\tslashing: \"sword\",\r\n\tpiercing: \"spear\",\r\n\tbludgeoning: \"club\",\r\n};\r\n\r\nconst WEAPON_TRAITS = [\"grapple\", \"nonlethal\", \"shove\", \"trip\", \"modular\"];\r\n\r\nconst WEAPON_DAMAGE_TYPES = Object.keys(WEAPON_GROUPS);\r\n\r\nconst WEAPON_RUNES = [\r\n\t\"corrosive\",\r\n\t\"disrupting\",\r\n\t\"flaming\",\r\n\t\"frost\",\r\n\t\"shock\",\r\n\t\"thundering\",\r\n];\r\n\r\nconst WEAPON_GREATER_RUNES = [\r\n\t// \"anarchic\",\r\n\t// \"axiomatic\",\r\n\t\"greaterCorrosive\",\r\n\t\"greaterDisrupting\",\r\n\t\"greaterFlaming\",\r\n\t\"greaterFrost\",\r\n\t\"greaterShock\",\r\n\t\"greaterThundering\",\r\n\t\"holy\",\r\n\t\"unholy\",\r\n];\r\n\r\nexport const mindSmith = {\r\n\tkey: \"mindsmith\",\r\n\titem: {\r\n\t\tuuid: \"Compendium.pf2e.feats-srd.Item.juikoiIA0Jy8PboY\", // Mind Smith Dedication\r\n\t},\r\n\tchildren: [\r\n\t\t{\r\n\t\t\tslug: \"weapon\",\r\n\t\t\tuuid: MIND_WEAPON_UUID, // Mind Weapon\r\n\t\t},\r\n\t\t{\r\n\t\t\tslug: \"mental\",\r\n\t\t\tuuid: MALLEABLE_MENTAL_FORGE_UUID, // Malleable Mental Forge\r\n\t\t},\r\n\t\t{\r\n\t\t\tslug: \"runic\",\r\n\t\t\tuuid: \"Compendium.pf2e.feats-srd.Item.2uQbQgz1AbjzcFSp\", // Runic Mind Smithing\r\n\t\t},\r\n\t\t{\r\n\t\t\tslug: \"advanced\",\r\n\t\t\tuuid: \"Compendium.pf2e.feats-srd.Item.fgnfXwFcn9jZlXGD\", // Advanced Runic Mind Smithing\r\n\t\t},\r\n\t],\r\n\trows: [\r\n\t\t{\r\n\t\t\ttype: \"alert\",\r\n\t\t\tslug: \"alert\",\r\n\t\t\tmessage: () => localize(\"interface.alert.weapon\"),\r\n\t\t\tfix,\r\n\t\t\tchildPredicate: [{ not: \"weapon\" }],\r\n\t\t},\r\n\t\t{\r\n\t\t\ttype: \"select\",\r\n\t\t\tslug: \"smith\",\r\n\t\t\tlabel: () => localize(\"label.mindsmith\"),\r\n\t\t\toptions: WEAPON_DAMAGE_TYPES,\r\n\t\t\tlabelizer: ({ utils }) => utils.damageLabel,\r\n\t\t\tchildPredicate: [\"weapon\"],\r\n\t\t},\r\n\t\t...[1, 2].map((nb) => ({\r\n\t\t\ttype: \"select\",\r\n\t\t\tslug: `mental${nb}`,\r\n\t\t\tlabel: () => localize(\"label.mentalforge\", { nb }),\r\n\t\t\toptions: WEAPON_TRAITS,\r\n\t\t\tlabelizer: ({ utils }) => utils.weaponTraitLabel,\r\n\t\t\tunique: \"mental\",\r\n\t\t\tchildPredicate: [\"weapon\", \"mental\"],\r\n\t\t})),\r\n\t\t{\r\n\t\t\ttype: \"select\",\r\n\t\t\tslug: \"runic\",\r\n\t\t\tlabel: () => localize(\"label.runicmind\"),\r\n\t\t\toptions: WEAPON_RUNES,\r\n\t\t\tlabelizer: ({ utils }) => utils.weaponPropertyRunesLabel,\r\n\t\t\tchildPredicate: [\"weapon\", \"runic\", { not: \"advanced\" }],\r\n\t\t\tcondition: ({ children, utils }) =>\r\n\t\t\t\tutils.hasFreePropertySlot(children.weapon),\r\n\t\t},\r\n\t\t{\r\n\t\t\ttype: \"select\",\r\n\t\t\tslug: \"advanced\",\r\n\t\t\tlabel: () => localize(\"label.runicmind\"),\r\n\t\t\toptions: WEAPON_GREATER_RUNES,\r\n\t\t\tlabelizer: ({ utils }) => utils.weaponPropertyRunesLabel,\r\n\t\t\tchildPredicate: [\"weapon\", \"advanced\"],\r\n\t\t\tcondition: ({ children, utils }) =>\r\n\t\t\t\tutils.hasFreePropertySlot(children.weapon),\r\n\t\t},\r\n\t],\r\n\tprocess: ({ children, updateItem, fields, messages, item, utils }) => {\r\n\t\tconst weapon = children.weapon;\r\n\t\tif (!weapon) return;\r\n\r\n\t\tmessages.addGroup(\"mindsmith\");\r\n\r\n\t\tconst selected = fields.smith.value;\r\n\t\tupdateItem({\r\n\t\t\t_id: weapon.id,\r\n\t\t\t\"system.damage.damageType\": selected,\r\n\t\t\t\"system.group\": WEAPON_GROUPS[selected],\r\n\t\t});\r\n\t\tmessages.add(\"mindsmith\", {\r\n\t\t\tselected: utils.damageLabel(selected),\r\n\t\t\tuuid: item.uuid,\r\n\t\t\tlabel: \"mindsmith\",\r\n\t\t});\r\n\r\n\t\tif (children.mental) {\r\n\t\t\tconst traits = deepClone(weapon._source.system.traits?.value ?? []);\r\n\r\n\t\t\tfor (const nb of [1, 2]) {\r\n\t\t\t\tconst selected = fields[`mental${nb}`].value;\r\n\t\t\t\tif (!traits.includes(selected)) traits.push(selected);\r\n\t\t\t\tupdateItem({ _id: weapon.id, \"system.traits.value\": traits });\r\n\t\t\t\tmessages.add(\"mindsmith\", {\r\n\t\t\t\t\tselected: utils.weaponTraitLabel(selected),\r\n\t\t\t\t\tuuid: children.mental.uuid,\r\n\t\t\t\t\tlabel: localize(\"label.mentalforge\", { nb }),\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (\r\n\t\t\t(children.advanced || children.runic) &&\r\n\t\t\tutils.hasFreePropertySlot(weapon)\r\n\t\t) {\r\n\t\t\tconst child = children.advanced ?? children.runic;\r\n\t\t\tconst freeSlot = utils.getFreePropertyRuneSlot(weapon);\r\n\t\t\tconst field = fields.advanced ?? fields.runic;\r\n\t\t\tconst selected = field.value;\r\n\r\n\t\t\tif (freeSlot && !weapon.system.runes.property.includes(selected)) {\r\n\t\t\t\tupdateItem({\r\n\t\t\t\t\t_id: weapon.id,\r\n\t\t\t\t\t[`system.${freeSlot}.value`]: selected,\r\n\t\t\t\t\t[`flags.${MODULE_ID}.runeSlot`]: freeSlot,\r\n\t\t\t\t});\r\n\t\t\t\tmessages.add(\"mindsmith\", {\r\n\t\t\t\t\tselected: utils.weaponPropertyRunesLabel(selected),\r\n\t\t\t\t\tuuid: child.uuid,\r\n\t\t\t\t\tlabel: \"runicmind\",\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\trest: ({ item, sourceId, updateItem, actor }) => {\r\n\t\tif (sourceId !== MIND_WEAPON_UUID) return;\r\n\r\n\t\tconst mental = findItemWithSourceId(actor, MALLEABLE_MENTAL_FORGE_UUID);\r\n\t\tif (mental) {\r\n\t\t\tlet traits = item._source.system.traits?.value ?? [];\r\n\t\t\ttraits = traits.filter((trait) => !WEAPON_TRAITS.includes(trait));\r\n\t\t\tupdateItem({ _id: item.id, \"system.traits.value\": traits });\r\n\t\t}\r\n\r\n\t\tconst runeSlot = getFlag(item, \"runeSlot\");\r\n\t\tif (runeSlot) {\r\n\t\t\tupdateItem({\r\n\t\t\t\t_id: item.id,\r\n\t\t\t\t[`system.${runeSlot}.value`]: null,\r\n\t\t\t\t[`flags.${MODULE_ID}.-=runeSlot`]: true,\r\n\t\t\t});\r\n\t\t}\r\n\t},\r\n};\r\n\r\nasync function fix({ actor }) {\r\n\tconst localize = subLocalize(\"dialog.weapon\");\r\n\r\n\tlet content = localize(\"flavor\");\r\n\r\n\tfor (const key of [\"0\", \"1\", \"2\", \"3\"]) {\r\n\t\tconst label = localize(`option.${key}`);\r\n\t\tcontent += `<label><input type=\"radio\" name=\"type\" value=\"${key}\">${label}</label>`;\r\n\t}\r\n\r\n\tconst weapon = await Dialog.wait(\r\n\t\t{\r\n\t\t\ttitle: localize(\"title\"),\r\n\t\t\tcontent,\r\n\t\t\tbuttons: {\r\n\t\t\t\tyes: {\r\n\t\t\t\t\ticon: '<i class=\"fas fa-save\"></i>',\r\n\t\t\t\t\tlabel: localize(\"accept\"),\r\n\t\t\t\t\tcallback: onWeaponSelected,\r\n\t\t\t\t},\r\n\t\t\t\tno: {\r\n\t\t\t\t\ticon: '<i class=\"fas fa-times\"></i>',\r\n\t\t\t\t\tlabel: localize(\"cancel\"),\r\n\t\t\t\t\tcallback: () => null,\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t\tclose: () => null,\r\n\t\t},\r\n\t\t{},\r\n\t\t{ id: \"pf2e-dailies-weapon\", width: 600 },\r\n\t);\r\n\r\n\tif (weapon) {\r\n\t\tawait actor.createEmbeddedDocuments(\"Item\", [weapon]);\r\n\t\treturn true;\r\n\t}\r\n\r\n\treturn false;\r\n}\r\n\r\nasync function onWeaponSelected(html) {\r\n\tconst localize = subLocalize(\"dialog.weapon\");\r\n\r\n\tconst selection = html.find(\"[name=type]:checked\").val();\r\n\tif (!selection) {\r\n\t\tlocalize.warn(\"error.noSelection\");\r\n\t\treturn;\r\n\t}\r\n\r\n\tconst weapon = (await fromUuid(MIND_WEAPON_UUID))?.toObject();\r\n\tif (!weapon) {\r\n\t\tlocalize.warn(\"error.missing\");\r\n\t\treturn;\r\n\t}\r\n\r\n\tconst stats = WEAPON_BASE_TYPES[selection];\r\n\r\n\tsetProperty(weapon, \"system.damage.die\", stats.die);\r\n\tsetProperty(weapon, \"system.traits.value\", stats.traits.slice());\r\n\tsetProperty(weapon, \"system.usage.value\", stats.usage);\r\n\r\n\treturn weapon;\r\n}\r\n", "import {\r\n\tchatUUID,\r\n\tfakeChatUUID,\r\n\tfindItemWithSourceId,\r\n\tlocalize,\r\n} from \"../module\";\r\n\r\nconst RATION_UUID = \"Compendium.pf2e.equipment-srd.Item.L9ZV076913otGtiB\";\r\n\r\nfunction getRations(actor) {\r\n\treturn findItemWithSourceId(actor, RATION_UUID, \"consumable\");\r\n}\r\n\r\nexport const rations = {\r\n\tkey: \"rations\",\r\n\titem: {\r\n\t\tuuid: \"Compendium.pf2e.equipment-srd.Item.L9ZV076913otGtiB\",\r\n\t},\r\n\trows: [\r\n\t\t{\r\n\t\t\ttype: \"select\",\r\n\t\t\tslug: \"rations\",\r\n\t\t\tsave: false,\r\n\t\t\torder: 200,\r\n\t\t\toptions: ({ actor }) => {\r\n\t\t\t\tconst rations = getRations(actor);\r\n\t\t\t\tconst { value, max } = rations.uses;\r\n\t\t\t\tconst quantity = rations.quantity;\r\n\t\t\t\tconst remaining = (quantity - 1) * max + value;\r\n\t\t\t\tconst last = remaining <= 1;\r\n\r\n\t\t\t\treturn [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tvalue: \"false\",\r\n\t\t\t\t\t\tlabel: localize(\"interface.rations.no\"),\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tvalue: \"true\",\r\n\t\t\t\t\t\tlabel: last\r\n\t\t\t\t\t\t\t? localize(\"interface.rations.last\")\r\n\t\t\t\t\t\t\t: localize(\"interface.rations.yes\", { nb: remaining }),\r\n\t\t\t\t\t},\r\n\t\t\t\t];\r\n\t\t\t},\r\n\t\t},\r\n\t],\r\n\tprocess: ({ fields, updateItem, messages, actor }) => {\r\n\t\tif (fields.rations.value !== \"true\") return;\r\n\r\n\t\tconst rations = getRations(actor);\r\n\t\tif (!rations?.uses.value) return;\r\n\r\n\t\tconst quantity = rations.quantity;\r\n\t\tconst { value, max } = rations.uses;\r\n\r\n\t\tif (value <= 1) {\r\n\t\t\tif (quantity <= 1) {\r\n\t\t\t\trations.delete();\r\n\t\t\t} else {\r\n\t\t\t\tupdateItem({\r\n\t\t\t\t\t_id: rations.id,\r\n\t\t\t\t\t\"system.quantity\": Math.max(rations.quantity - 1, 0),\r\n\t\t\t\t\t\"system.uses.value\": max,\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tupdateItem({\r\n\t\t\t\t_id: rations.id,\r\n\t\t\t\t\"system.uses.value\": Math.max(value - 1, 0),\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tconst remaining = (quantity - 1) * max + value;\r\n\t\tconst name =\r\n\t\t\tremaining <= 1 ? fakeChatUUID(rations.name) : chatUUID(rations.uuid);\r\n\r\n\t\tconst message =\r\n\t\t\tremaining <= 1\r\n\t\t\t\t? localize(\"message.rations.last\", { name })\r\n\t\t\t\t: remaining <= 3\r\n\t\t\t\t  ? localize(\"message.rations.almost\", { name, nb: remaining - 1 })\r\n\t\t\t\t  : localize(\"message.rations.used\", { name, nb: remaining - 1 });\r\n\r\n\t\tmessages.addRaw(message, 200);\r\n\t},\r\n};\r\n", "export function createResistancelDaily(\r\n\tkey,\r\n\tuuid,\r\n\tresistances,\r\n\tresistance,\r\n\tlabel,\r\n\trandom,\r\n) {\r\n\tconst daily = {\r\n\t\tkey,\r\n\t\tlabel,\r\n\t\titem: {\r\n\t\t\tuuid,\r\n\t\t},\r\n\t\trows: [\r\n\t\t\t{\r\n\t\t\t\ttype: random ? \"random\" : \"select\",\r\n\t\t\t\tslug: \"resistance\",\r\n\t\t\t\toptions: resistances,\r\n\t\t\t\tlabelizer: ({ utils }) => utils.resistanceLabel,\r\n\t\t\t},\r\n\t\t],\r\n\t\tprocess: async ({ utils, fields, actor, addRule, messages }) => {\r\n\t\t\tconst type = random\r\n\t\t\t\t? await utils.randomOption(resistances)\r\n\t\t\t\t: fields.resistance.value;\r\n\t\t\tconst value =\r\n\t\t\t\ttypeof resistance === \"number\"\r\n\t\t\t\t\t? resistance\r\n\t\t\t\t\t: resistance === \"half\"\r\n\t\t\t\t\t  ? utils.halfLevelValue(actor)\r\n\t\t\t\t\t  : actor.level;\r\n\t\t\tconst rule = utils.createResistanceRuleElement({ type, value });\r\n\t\t\taddRule(rule);\r\n\t\t\tmessages.add(\"resistances\", {\r\n\t\t\t\tuuid,\r\n\t\t\t\tselected: utils.resistanceLabel(type, value),\r\n\t\t\t\tlabel,\r\n\t\t\t\trandom,\r\n\t\t\t});\r\n\t\t},\r\n\t};\r\n\treturn daily;\r\n}\r\n", "const effectUUID = \"Compendium.pf2e.feat-effects.Item.jO7wMhnjT7yoAtQg\";\r\n\r\nexport const rootMagic = {\r\n\tkey: \"root\",\r\n\titem: {\r\n\t\tuuid: \"Compendium.pf2e.feats-srd.Item.22P7IFyhrF7Fbw8B\",\r\n\t},\r\n\trows: [\r\n\t\t{\r\n\t\t\ttype: \"select\",\r\n\t\t\tslug: \"target\",\r\n\t\t\toptions: ({ actor, utils }) => {\r\n\t\t\t\tconst actors = utils.getPlayersActors(actor);\r\n\t\t\t\treturn actors.map((a) => ({ value: a.id, label: a.name }));\r\n\t\t\t},\r\n\t\t},\r\n\t],\r\n\tprocess: ({ fields, messages }) => {\r\n\t\tconst actorId = fields.target.value;\r\n\t\tconst actor = game.actors.get(actorId);\r\n\t\tif (!actor) return;\r\n\t\tmessages.addGroup(\"root\");\r\n\t\tmessages.add(\"root\", { uuid: effectUUID, selected: actor.name });\r\n\t},\r\n};\r\n", "import { findItemWithSourceId, getFlag, setFlag } from \"../module\";\r\nimport {\r\n\tgetValidSpellcastingList,\r\n\tgetSpellcastingEntryMaxSlotRank,\r\n\tgetBestSpellcastingEntry,\r\n} from \"../spellcasting\";\r\n\r\nexport const DEFAULT_REGEX_RANKS = [\r\n\t\"cantrips?\",\r\n\t\"1st\",\r\n\t\"2nd\",\r\n\t\"3rd\",\r\n\t\"4th\",\r\n\t\"5th\",\r\n\t\"6th\",\r\n\t\"7th\",\r\n\t\"8th\",\r\n\t\"9th\",\r\n\t\"10th\",\r\n].join(\"|\");\r\n\r\nconst KINETIC_ACTIVATION = \"Compendium.pf2e.feats-srd.Item.NV9H39kbkbjhAK6X\";\r\n\r\nexport function isPF2eStavesActive() {\r\n\treturn game.modules.get(\"pf2e-staves\")?.active;\r\n}\r\n\r\nexport function getSpellcastingEntryStaffFlags(entry) {\r\n\tif (!entry) return;\r\n\r\n\tconst data =\r\n\t\tgetFlag(entry, \"staff\") ?? getProperty(entry, \"flags.pf2e-staves\");\r\n\tif (!data) return;\r\n\r\n\t// biome-ignore lint/performance/noDelete: not master of the returned data object\r\n\tdelete data.prevDescription;\r\n\treturn deepClone(data);\r\n}\r\n\r\nexport function getSpellcastingEntryStaffData(entry) {\r\n\tconst staffData = getSpellcastingEntryStaffFlags(entry);\r\n\tif (!staffData) return;\r\n\r\n\tstaffData.overcharge ??= 0;\r\n\tstaffData.max = getMaxSlotRankForStaves(entry.actor) + staffData.overcharge;\r\n\r\n\tconst spontaneousCharges = (() => {\r\n\t\tconst actor = entry.actor;\r\n\t\tif (\r\n\t\t\t!staffData.charges ||\r\n\t\t\tstaffData.overcharge ||\r\n\t\t\tstaffData.makeshift ||\r\n\t\t\t!actor\r\n\t\t)\r\n\t\t\treturn {};\r\n\r\n\t\treturn actor.spellcasting\r\n\t\t\t.filter((entry) => entry.isSpontaneous)\r\n\t\t\t.reduce((charges, entry) => {\r\n\t\t\t\tfor (let i = 1; i <= 10; i++) {\r\n\t\t\t\t\tconst slot = entry.system.slots[`slot${i}`];\r\n\t\t\t\t\tif (slot.max && slot.value) charges[i] = true;\r\n\t\t\t\t}\r\n\t\t\t\treturn charges;\r\n\t\t\t}, {});\r\n\t})();\r\n\r\n\tstaffData.canPayCost = (cost) => {\r\n\t\treturn (\r\n\t\t\t!!staffData.charges &&\r\n\t\t\t(cost <= staffData.charges || spontaneousCharges[cost])\r\n\t\t);\r\n\t};\r\n\r\n\treturn staffData;\r\n}\r\n\r\nexport async function updateEntryCharges(entry, value) {\r\n\tconst staffData = getSpellcastingEntryStaffData(entry);\r\n\tif (!staffData) return;\r\n\r\n\tconst updatedValue = Math.clamped(value, 0, staffData.max);\r\n\r\n\tif (updatedValue !== staffData.charges) {\r\n\t\tstaffData.charges = updatedValue;\r\n\t\treturn setFlag(entry, \"staff\", staffData);\r\n\t}\r\n}\r\n\r\nexport function getStaves(actor) {\r\n\treturn [\r\n\t\t{ type: \"weapon\", trait: \"magical\" },\r\n\t\t{ type: \"equipment\", trait: \"coda\" },\r\n\t].flatMap(({ type, trait }) =>\r\n\t\tactor.itemTypes[type].filter((item) => {\r\n\t\t\tconst traits = item.system.traits?.value;\r\n\t\t\treturn traits?.includes(\"staff\") && traits.includes(trait);\r\n\t\t}),\r\n\t);\r\n}\r\n\r\nexport function getMaxSlotRankForStaves(actor) {\r\n\tlet maxCharges = 0;\r\n\r\n\tconst entries = getValidSpellcastingList(actor);\r\n\tfor (const entry of entries) {\r\n\t\tconst entryMaxCharges = getSpellcastingEntryMaxSlotRank(entry);\r\n\t\tif (entryMaxCharges > maxCharges) maxCharges = entryMaxCharges;\r\n\t}\r\n\r\n\tconst activation = findItemWithSourceId(actor, KINETIC_ACTIVATION, \"feat\");\r\n\tif (activation) {\r\n\t\tconst classCharges = Math.ceil(actor.level / 2);\r\n\t\tif (classCharges > maxCharges) maxCharges = classCharges;\r\n\t}\r\n\r\n\treturn maxCharges;\r\n}\r\n\r\nexport function getBestSpellcastingEntryForStaves(actor) {\r\n\tconst bestEntry = getBestSpellcastingEntry(actor);\r\n\r\n\tconst activation = findItemWithSourceId(actor, KINETIC_ACTIVATION, \"feat\");\r\n\tif (activation) {\r\n\t\tconst bestMod = bestEntry?.mod ?? 0;\r\n\t\tconst classDC =\r\n\t\t\tactor.classDCs.kineticist ?? actor.classDCs.find((c) => c.mod >= bestMod);\r\n\t\tconst classMod = classDC.mod;\r\n\r\n\t\tif (classMod >= bestMod) {\r\n\t\t\treturn {\r\n\t\t\t\tability: { value: classDC.attribute },\r\n\t\t\t\ttradition: { value: \"primal\" },\r\n\t\t\t\tproficiency: { value: classDC.rank, slug: classDC.slug },\r\n\t\t\t\tmod: classMod,\r\n\t\t\t};\r\n\t\t}\r\n\t}\r\n\r\n\treturn bestEntry;\r\n}\r\n\r\nexport function getPreparedSpellcastingEntriesForStaves(actor) {\r\n\tconst entryGroups = {};\r\n\r\n\tfor (const entry of actor.spellcasting.filter((entry) => entry.isPrepared)) {\r\n\t\tconst entryId = entry.id;\r\n\t\tconst isFlexible = entry.isFlexible;\r\n\r\n\t\tfor (let rank = 1; rank <= 10; rank++) {\r\n\t\t\tconst data = entry.system.slots[`slot${rank}`];\r\n\t\t\tif (data.max < 1) continue;\r\n\r\n\t\t\tif (isFlexible) {\r\n\t\t\t\tif (data.value < 1) continue;\r\n\r\n\t\t\t\tentryGroups[entryId] ??= {\r\n\t\t\t\t\tid: entryId,\r\n\t\t\t\t\tname: entry.name,\r\n\t\t\t\t\tslots: [],\r\n\t\t\t\t};\r\n\r\n\t\t\t\tentryGroups[entryId].slots.push({\r\n\t\t\t\t\trank,\r\n\t\t\t\t\tvalue: data.value,\r\n\t\t\t\t\tmax: data.max,\r\n\t\t\t\t});\r\n\t\t\t} else {\r\n\t\t\t\tfor (const [index, { id, prepared, expended }] of Object.entries(\r\n\t\t\t\t\tdata.prepared,\r\n\t\t\t\t)) {\r\n\t\t\t\t\tif (prepared === false || expended) continue;\r\n\r\n\t\t\t\t\tconst spell = entry.spells.get(id);\r\n\t\t\t\t\tif (!spell) continue;\r\n\r\n\t\t\t\t\tentryGroups[entryId] ??= {\r\n\t\t\t\t\t\tid: entryId,\r\n\t\t\t\t\t\tname: entry.name,\r\n\t\t\t\t\t\tspells: [],\r\n\t\t\t\t\t};\r\n\r\n\t\t\t\t\tentryGroups[entryId].spells.push({\r\n\t\t\t\t\t\tid: spell.id,\r\n\t\t\t\t\t\tname: spell.name,\r\n\t\t\t\t\t\trank,\r\n\t\t\t\t\t\tindex,\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tentryGroups[entryId]?.spells?.sort((a, b) =>\r\n\t\t\ta.rank === b.rank ? a.name.localeCompare(b.name) : a.rank - b.rank,\r\n\t\t);\r\n\t}\r\n\r\n\treturn Object.values(entryGroups);\r\n}\r\n", "import { utils } from \"./api\";\r\nimport { MODULE_ID, getFlag, localize, templatePath, warn } from \"./module\";\r\nimport { getSpellcastingEntryStaffFlags } from \"./data/staves\";\r\n\r\nexport async function onSpellcastingEntryCast(wrapped, ...args) {\r\n\tconst [spell, { rank }] = args;\r\n\tif (spell.isCantrip) return wrapped(...args);\r\n\r\n\tconst staffFlags = getSpellcastingEntryStaffFlags(this);\r\n\tif (!staffFlags) return wrapped(...args);\r\n\r\n\tconst actor = this.actor;\r\n\tconst staff = actor.items.get(staffFlags.staveID);\r\n\tif (!staff?.isEquipped) {\r\n\t\twarn(\"staves.noStaff\");\r\n\t\treturn;\r\n\t}\r\n\r\n\tconst castRank = spell.computeCastRank(rank);\r\n\r\n\tif (!rank || rank === \"0\") {\r\n\t\treturn spell.toMessage(undefined, { data: { castRank } });\r\n\t}\r\n\r\n\tif (\r\n\t\tstaffFlags.charges < 1 ||\r\n\t\t(staffFlags.charges < castRank && staffFlags.overcharge)\r\n\t) {\r\n\t\twarn(\"staves.noCharge\");\r\n\t\treturn;\r\n\t}\r\n\r\n\tconst updates = [];\r\n\r\n\tif (!staffFlags.overcharge) {\r\n\t\tconst spontaneousEntries = actor.spellcasting.filter(\r\n\t\t\t(entry) =>\r\n\t\t\t\tentry.isSpontaneous && entry.system.slots[`slot${castRank}`].value,\r\n\t\t);\r\n\r\n\t\tlet useSpontaneous = false;\r\n\r\n\t\tconst entryRankValue = (entry) =>\r\n\t\t\tentry.system.slots[`slot${castRank}`].value;\r\n\r\n\t\tif (spontaneousEntries.length === 1) {\r\n\t\t\tconst entry = spontaneousEntries[0];\r\n\r\n\t\t\tconst content = localize(\"staves.spontaneous.one\", {\r\n\t\t\t\trank: utils.spellRankLabel(castRank),\r\n\t\t\t\tentry: entry.name,\r\n\t\t\t\tremaining: entryRankValue(entry),\r\n\t\t\t});\r\n\r\n\t\t\tuseSpontaneous = await Dialog.confirm({\r\n\t\t\t\ttitle: localize(\"staves.spontaneous.title\"),\r\n\t\t\t\tdefaultYes: false,\r\n\t\t\t\tcontent: `<div class=\"pf2e-dailies-spontaneous\">${content}</div>`,\r\n\t\t\t});\r\n\r\n\t\t\tif (useSpontaneous) useSpontaneous = 0;\r\n\t\t} else if (spontaneousEntries.length > 1) {\r\n\t\t\tconst entries = spontaneousEntries.map((entry, index) => ({\r\n\t\t\t\tindex,\r\n\t\t\t\tname: entry.name,\r\n\t\t\t\tremaining: entryRankValue(entry),\r\n\t\t\t}));\r\n\r\n\t\t\tconst content = await renderTemplate(\r\n\t\t\t\ttemplatePath(\"staves-spontaneous.hbs\"),\r\n\t\t\t\t{\r\n\t\t\t\t\tentries,\r\n\t\t\t\t\tcastRank: utils.spellRankLabel(castRank),\r\n\t\t\t\t\ti18n: (key, { hash }) => localize(`staves.spontaneous.${key}`, hash),\r\n\t\t\t\t},\r\n\t\t\t);\r\n\r\n\t\t\tuseSpontaneous = await Dialog.wait({\r\n\t\t\t\ttitle: localize(\"staves.spontaneous.title\"),\r\n\t\t\t\tcontent,\r\n\t\t\t\tbuttons: {\r\n\t\t\t\t\tyes: {\r\n\t\t\t\t\t\ticon: '<i class=\"fas fa-check\"></i>',\r\n\t\t\t\t\t\tlabel: game.i18n.localize(\"Yes\"),\r\n\t\t\t\t\t\tcallback: (html) => {\r\n\t\t\t\t\t\t\tconst value = html.find(\"input[name=entry]:checked\").val();\r\n\t\t\t\t\t\t\treturn Number(value);\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t},\r\n\t\t\t\t\tno: {\r\n\t\t\t\t\t\ticon: '<i class=\"fas fa-times\"></i>',\r\n\t\t\t\t\t\tlabel: game.i18n.localize(\"No\"),\r\n\t\t\t\t\t\tcallback: () => false,\r\n\t\t\t\t\t},\r\n\t\t\t\t},\r\n\t\t\t\tclose: () => null,\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tif (useSpontaneous === null) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif (typeof useSpontaneous === \"number\") {\r\n\t\t\tconst entry = spontaneousEntries[useSpontaneous];\r\n\t\t\tconst current = entry.system.slots[`slot${castRank}`].value;\r\n\r\n\t\t\tupdates.push({\r\n\t\t\t\t_id: entry.id,\r\n\t\t\t\t[`system.slots.slot${castRank}.value`]: current - 1,\r\n\t\t\t});\r\n\r\n\t\t\tstaffFlags.charges -= 1;\r\n\t\t}\r\n\t}\r\n\r\n\tif (!updates.length) {\r\n\t\tif (staffFlags.charges < castRank) {\r\n\t\t\twarn(\"staves.noCharge\");\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tstaffFlags.charges -= castRank;\r\n\t}\r\n\r\n\tupdates.push({ _id: this.id, [`flags.${MODULE_ID}.staff`]: staffFlags });\r\n\r\n\tawait actor.updateEmbeddedDocuments(\"Item\", updates);\r\n\tawait spell.toMessage(undefined, { data: { castRank } });\r\n}\r\n\r\nexport function getValidSpellcastingList(\r\n\tactor,\r\n\t{ itemOnly, innate, focus } = {},\r\n) {\r\n\treturn actor.spellcasting.regular.filter((entry) => {\r\n\t\tif (entry.flags?.[\"pf2e-staves\"] || getFlag(entry, \"staff\")) return false;\r\n\r\n\t\tif (!innate && entry.isInnate) return false;\r\n\t\tif (!focus && entry.isFocusPool) return false;\r\n\r\n\t\tif (entry.system.prepared.value === \"items\") {\r\n\t\t\tif (!itemOnly) return false;\r\n\t\t\tif (\r\n\t\t\t\titemOnly === \"scroll\" &&\r\n\t\t\t\tentry.system.prepared.validItems !== \"scroll\"\r\n\t\t\t)\r\n\t\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\t});\r\n}\r\n\r\nexport function getSpellcastingEntryMaxSlotRank(entry) {\r\n\tlet maxSlot = 0;\r\n\r\n\tif (entry.system.prepared.value === \"items\") {\r\n\t\tconst levelMaxSlot = Math.ceil(entry.actor.level / 2);\r\n\t\tif (levelMaxSlot > maxSlot) maxSlot = levelMaxSlot;\r\n\t} else {\r\n\t\tfor (let i = 0; i <= 10; i++) {\r\n\t\t\tconst slot = entry.system.slots[`slot${i}`];\r\n\t\t\tif (slot.max) maxSlot = Math.max(maxSlot, i);\r\n\t\t}\r\n\t}\r\n\r\n\treturn maxSlot;\r\n}\r\n\r\nexport function getNotExpendedPreparedSpellSlot(spell, rank) {\r\n\tconst entry = spell.spellcasting;\r\n\tconst entries = Object.entries(\r\n\t\tentry.system.slots[`slot${rank ?? spell.rank}`].prepared,\r\n\t);\r\n\tconst prepared = entries.find(\r\n\t\t([_, { id, expended }]) => id === spell.id && expended !== true,\r\n\t);\r\n\tif (!prepared) return;\r\n\r\n\treturn {\r\n\t\tslotIndex: prepared[0],\r\n\t\tentry,\r\n\t};\r\n}\r\n\r\nexport function getBestSpellcastingEntry(actor) {\r\n\tconst entries = getValidSpellcastingList(actor);\r\n\r\n\tlet bestMod = 0;\r\n\tlet bestEntries = [];\r\n\r\n\tfor (const entry of entries) {\r\n\t\tconst mod = entry.statistic.mod;\r\n\t\tif (mod > bestMod) {\r\n\t\t\tbestEntries = [entry];\r\n\t\t\tbestMod = mod;\r\n\t\t} else if (mod === bestMod) {\r\n\t\t\tbestEntries.push(entry);\r\n\t\t}\r\n\t}\r\n\r\n\tif (bestEntries.length === 0) return;\r\n\r\n\tconst returnedEntry = (entry) => {\r\n\t\tconst { ability, tradition, proficiency } = entry.system;\r\n\t\treturn { ability, tradition, proficiency, mod: bestMod };\r\n\t};\r\n\r\n\tif (bestEntries.length === 1) return returnedEntry(bestEntries[0]);\r\n\r\n\tconst classAttr = actor.classDC.attribute;\r\n\tconst classAttrEntries = bestEntries.filter(\r\n\t\t(entry) => entry.attribute === classAttr,\r\n\t);\r\n\r\n\tif (classAttrEntries === 1) return returnedEntry(classAttrEntries[0]);\r\n\r\n\tlet bestCount = 0;\r\n\tlet bestEntry;\r\n\r\n\tfor (const entry of bestEntries) {\r\n\t\tconst entryCount = getPreparedCount(entry);\r\n\t\tif (entryCount > bestCount) {\r\n\t\t\tbestCount = entryCount;\r\n\t\t\tbestEntry = entry;\r\n\t\t}\r\n\t}\r\n\r\n\treturn returnedEntry(bestEntry);\r\n}\r\n\r\nfunction getPreparedCount(entry) {\r\n\tif (entry.isSpontaneous) return entry.spells.size;\r\n\r\n\tif (entry.isPrepared) {\r\n\t\tconst slots = Object.values(entry.system.slots);\r\n\t\tconst prepared = slots.flatMap((slot) => Object.values(slot.prepared));\r\n\t\treturn prepared.filter((spell) => spell.id).length;\r\n\t}\r\n\r\n\treturn 0;\r\n}\r\n\r\nexport function getSpellcastingEntriesSortBounds(actor) {\r\n\tlet min = 0;\r\n\tlet max = 0;\r\n\r\n\tfor (const entry of actor.spellcasting) {\r\n\t\tif (entry.sort > max) max = entry.sort;\r\n\t\telse if (entry.sort < min) min = entry.sort;\r\n\t}\r\n\r\n\treturn { min, max };\r\n}\r\n", "import {\r\n\tgetSpellcastingEntryMaxSlotRank,\r\n\tgetValidSpellcastingList,\r\n} from \"../spellcasting\";\r\n\r\nexport const scrollSavant = {\r\n\tkey: \"savant\",\r\n\titem: {\r\n\t\tuuid: \"Compendium.pf2e.feats-srd.Item.u5DBg0LrBUKP0JsJ\", // Scroll Adept\r\n\t},\r\n\tprepare: ({ actor }) => {\r\n\t\tconst { maxSlot, maxTradition } = getSpellcastingTraditionDetails(\r\n\t\t\tactor,\r\n\t\t\t\"arcane\",\r\n\t\t);\r\n\r\n\t\tconst custom = {\r\n\t\t\tfirst: { level: maxSlot - 2, condition: true },\r\n\t\t\tsecond: { level: maxSlot - 3, condition: true },\r\n\t\t\tthird: {\r\n\t\t\t\tlevel: maxSlot - 4,\r\n\t\t\t\tcondition: maxTradition >= 3 && maxSlot >= 5,\r\n\t\t\t},\r\n\t\t\tfourth: {\r\n\t\t\t\tlevel: maxSlot - 5,\r\n\t\t\t\tcondition: maxTradition >= 4 && maxSlot >= 6,\r\n\t\t\t},\r\n\t\t};\r\n\r\n\t\treturn custom;\r\n\t},\r\n\trows: [\"first\", \"second\", \"third\", \"fourth\"].map((rowName) => {\r\n\t\tconst row = {\r\n\t\t\ttype: \"drop\",\r\n\t\t\tslug: rowName,\r\n\t\t\tlabel: ({ custom, utils }) => utils.spellRankLabel(custom[rowName].level),\r\n\t\t\tfilter: {\r\n\t\t\t\ttype: \"spell\",\r\n\t\t\t\tsearch: ({ custom }) => ({\r\n\t\t\t\t\tcategory: [\"spell\"],\r\n\t\t\t\t\ttraditions: [\"arcane\"],\r\n\t\t\t\t\tlevel: custom[rowName].level,\r\n\t\t\t\t}),\r\n\t\t\t},\r\n\t\t\tcondition: ({ custom }) => custom[rowName].condition,\r\n\t\t};\r\n\t\treturn row;\r\n\t}),\r\n\tprocess: async ({ utils, fields, custom, addItem, messages }) => {\r\n\t\tfor (const field of Object.values(fields)) {\r\n\t\t\tconst uuid = field.uuid;\r\n\t\t\tconst source = await utils.createSpellScrollSource({\r\n\t\t\t\tuuid,\r\n\t\t\t\tlevel: custom[field.row].level,\r\n\t\t\t});\r\n\t\t\taddItem(source);\r\n\t\t\tmessages.add(\"scrolls\", { uuid, label: source.name });\r\n\t\t}\r\n\t},\r\n};\r\n\r\nfunction getSpellcastingTraditionDetails(actor, tradition) {\r\n\tlet maxSlot = 1;\r\n\tlet maxTradition = 0;\r\n\r\n\tconst entries = getValidSpellcastingList(actor);\r\n\tfor (const entry of entries) {\r\n\t\tconst entryMaxSlot = getSpellcastingEntryMaxSlotRank(entry);\r\n\t\tif (entryMaxSlot > maxSlot) maxSlot = entryMaxSlot;\r\n\r\n\t\tif (entry.tradition === tradition)\r\n\t\t\tmaxTradition = Math.max(maxTradition, entry.rank);\r\n\t}\r\n\r\n\treturn { maxSlot: Math.min(maxSlot, 10), maxTradition };\r\n}\r\n", "export const spellshaping = {\r\n\tkey: \"metamagical\",\r\n\titem: {\r\n\t\tuuid: \"Compendium.pf2e.classfeatures.Item.89zWKD2CN7nRu2xp\", // Experimental Spellshaping\r\n\t\tcondition: ({ actor }) => actor.level >= 4,\r\n\t},\r\n\trows: [\r\n\t\t{\r\n\t\t\ttype: \"drop\",\r\n\t\t\tslug: \"feat\",\r\n\t\t\tfilter: {\r\n\t\t\t\ttype: \"feat\",\r\n\t\t\t\tsearch: {\r\n\t\t\t\t\tcategory: [\"class\"],\r\n\t\t\t\t\ttraits: { selected: [\"spellshape\", \"wizard\"], conjunction: \"and\" },\r\n\t\t\t\t\tlevel: \"half\",\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t},\r\n\t],\r\n\tprocess: async ({ utils, fields, addFeat, messages }) => {\r\n\t\tconst uuid = fields.feat.uuid;\r\n\t\tconst source = await utils.createFeatSource(uuid);\r\n\t\taddFeat(source);\r\n\t\tmessages.add(\"feats\", { uuid });\r\n\t},\r\n};\r\n", "export const thaumaturgeTome = {\r\n\tkey: \"tome\",\r\n\titem: {\r\n\t\tuuid: \"Compendium.pf2e.classfeatures.Item.MyN1cQgE0HsLF20e\", // Tome\r\n\t},\r\n\tchildren: [\r\n\t\t{\r\n\t\t\tslug: \"adept\",\r\n\t\t\tuuid: \"Compendium.pf2e.classfeatures.Item.Obm4ItMIIr0whYeO\", // Implement Adept\r\n\t\t\tcondition: createChildCondition(\"adept\"),\r\n\t\t},\r\n\t\t{\r\n\t\t\tslug: \"second\",\r\n\t\t\tuuid: \"Compendium.pf2e.classfeatures.Item.ZEUxZ4Ta1kDPHiq5\", // Second Adept\r\n\t\t\tcondition: createChildCondition(\"adept\"),\r\n\t\t},\r\n\t\t{\r\n\t\t\tslug: \"intense\",\r\n\t\t\tuuid: \"Compendium.pf2e.feats-srd.Item.yRRM1dsY6jakEMaC\", // Intense Implement\r\n\t\t},\r\n\t\t{\r\n\t\t\tslug: \"paragon\",\r\n\t\t\tuuid: \"Compendium.pf2e.classfeatures.Item.QEtgbY8N2V4wTbsI\", // Implement Paragon\r\n\t\t\tcondition: createChildCondition(\"paragon\"),\r\n\t\t},\r\n\t],\r\n\tprepare: ({ utils, actor, children }) => {\r\n\t\tconst skillNames = utils.skillNames;\r\n\t\tconst actorLevel = actor.level;\r\n\t\tconst actorSkills = actor.skills;\r\n\r\n\t\tconst custom = {\r\n\t\t\tfirst: { options: [], rank: 1 },\r\n\t\t\tsecond: { options: [], rank: 1 },\r\n\t\t};\r\n\r\n\t\t// Implement Paragon\r\n\t\tif (children.paragon) {\r\n\t\t\tconst skills = skillNames.filter((x) => actorSkills[x].rank < 4);\r\n\t\t\tcustom.first = { rank: 4, options: skills };\r\n\t\t\tcustom.second = { rank: 4, options: skills };\r\n\t\t}\r\n\t\t// Intense Implement or Second Adept or Implement Adept\r\n\t\telse if (children.intense || children.adept || children.second) {\r\n\t\t\tconst masters = skillNames.filter((x) => actorSkills[x].rank < 3);\r\n\r\n\t\t\tif (actorLevel >= 9) {\r\n\t\t\t\tcustom.first = { rank: 3, options: masters };\r\n\t\t\t\tcustom.second = { rank: 3, options: masters };\r\n\t\t\t} else {\r\n\t\t\t\tconst experts = skillNames.filter((x) => actorSkills[x].rank < 2);\r\n\t\t\t\tcustom.first = { rank: 2, options: experts };\r\n\t\t\t\tcustom.second = { rank: 3, options: masters };\r\n\t\t\t}\r\n\t\t}\r\n\t\t// Tome\r\n\t\telse {\r\n\t\t\tif (actorLevel >= 5) {\r\n\t\t\t\tconst experts = skillNames.filter((x) => actorSkills[x].rank < 2);\r\n\t\t\t\tcustom.first = { rank: 2, options: experts };\r\n\t\t\t\tcustom.second = { rank: 2, options: experts };\r\n\t\t\t} else if (actorLevel >= 3) {\r\n\t\t\t\tconst trained = skillNames.filter((x) => actorSkills[x].rank < 1);\r\n\t\t\t\tconst experts = skillNames.filter((x) => actorSkills[x].rank < 2);\r\n\t\t\t\tcustom.first = { rank: 1, options: trained };\r\n\t\t\t\tcustom.second = { rank: 2, options: experts };\r\n\t\t\t} else {\r\n\t\t\t\tconst trained = skillNames.filter((x) => actorSkills[x].rank < 1);\r\n\t\t\t\tcustom.first = { rank: 1, options: trained };\r\n\t\t\t\tcustom.second = { rank: 1, options: trained };\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn custom;\r\n\t},\r\n\trows: [\"first\", \"second\"].map((rowName) => {\r\n\t\tconst row = {\r\n\t\t\ttype: \"combo\",\r\n\t\t\tslug: rowName,\r\n\t\t\tlabel: ({ custom, utils }) =>\r\n\t\t\t\tutils.proficiencyLabel(custom[rowName].rank),\r\n\t\t\toptions: ({ custom }) => custom[rowName].options,\r\n\t\t\tlabelizer: ({ utils }) => utils.skillLabel,\r\n\t\t};\r\n\t\treturn row;\r\n\t}),\r\n\tprocess: ({ custom, fields, utils, messages, addItem, addRule }) => {\r\n\t\tmessages.addGroup(\"tome\", 65);\r\n\r\n\t\tfor (const rowName of [\"first\", \"second\"]) {\r\n\t\t\tconst rank = custom[rowName].rank;\r\n\t\t\tlet value = fields[rowName].value;\r\n\r\n\t\t\tif (fields[rowName].input === \"true\") {\r\n\t\t\t\tconst source = utils.createLoreSource({ name: value, rank });\r\n\t\t\t\taddItem(source);\r\n\t\t\t} else {\r\n\t\t\t\tconst source = utils.createSkillRuleElement({\r\n\t\t\t\t\tskill: value,\r\n\t\t\t\t\tvalue: rank,\r\n\t\t\t\t});\r\n\t\t\t\tvalue = utils.skillLabel(value);\r\n\t\t\t\taddRule(source);\r\n\t\t\t}\r\n\r\n\t\t\tmessages.add(\"tome\", {\r\n\t\t\t\tlabel: utils.proficiencyLabel(rank),\r\n\t\t\t\tselected: value,\r\n\t\t\t});\r\n\t\t}\r\n\t},\r\n};\r\n\r\nfunction createChildCondition(option) {\r\n\treturn ({ item, utils, actor }) => {\r\n\t\tconst itemId = utils.getChoiSetRuleSelection(item);\r\n\t\treturn actor.items.get(itemId)?.slug === \"tome\";\r\n\t};\r\n}\r\n", "import { utils } from \"./api\";\r\nimport { tricksterAce } from \"./data/ace\";\r\nimport { bladeAlly } from \"./data/blade\";\r\nimport { ceremonialKnife } from \"./data/ceremonial\";\r\nimport { createScrollChain } from \"./data/chain\";\r\nimport { combatFlexibility } from \"./data/flexibility\";\r\nimport { createLanguageDaily } from \"./data/language\";\r\nimport { longevities } from \"./data/longevity\";\r\nimport { mindSmith } from \"./data/mind\";\r\nimport { rations } from \"./data/rations\";\r\nimport { createResistancelDaily } from \"./data/resistance\";\r\nimport { rootMagic } from \"./data/root\";\r\nimport { scrollSavant } from \"./data/savant\";\r\nimport { createTrainedLoreDaily, createTrainedSkillDaily } from \"./data/skill\";\r\nimport { spellshaping } from \"./data/spellshaping\";\r\nimport { thaumaturgeTome } from \"./data/tome\";\r\nimport { AsyncFunction, error, getSetting, getSourceId, warn } from \"./module\";\r\n\r\nconst DEPRECATED_CUSTOM_DAILIES = [\"root-magic\"];\r\n\r\nexport const UNIQUE_DAILY_KEYS = [\"familiar\", \"staves\"];\r\n\r\nexport const BUILTINS_DAILIES = [\r\n\tthaumaturgeTome,\r\n\tlongevities,\r\n\tcreateTrainedSkillDaily(\r\n\t\t\"ageless\",\r\n\t\t\"Compendium.pf2e.feats-srd.Item.wylnETwIz32Au46y\",\r\n\t), // Ageless Spirit\r\n\tcreateTrainedSkillDaily(\r\n\t\t\"memories\",\r\n\t\t\"Compendium.pf2e.feats-srd.Item.ptEOt3lqjxUnAW62\",\r\n\t), // Ancient Memories\r\n\tcreateTrainedSkillDaily(\r\n\t\t\"studies\",\r\n\t\t\"Compendium.pf2e.feats-srd.Item.9bgl6qYWKHzqWZj0\",\r\n\t), // Flexible Studies\r\n\tcreateTrainedLoreDaily(\r\n\t\t\"study\",\r\n\t\t\"Compendium.pf2e.feats-srd.Item.aLJsBBZzlUK3G8MW\",\r\n\t), // Quick Study\r\n\tcreateLanguageDaily(\r\n\t\t\"linguistics\",\r\n\t\t\"Compendium.pf2e.feats-srd.Item.eCWQU16hRLfN1KaX\",\r\n\t), // Ancestral Linguistics\r\n\tcreateLanguageDaily(\r\n\t\t\"borts\",\r\n\t\t\"Compendium.pf2e.equipment-srd.Item.iS7hAQMAaThHYE8g\",\r\n\t), // Bort's Blessing\r\n\tcreateResistancelDaily(\r\n\t\t\"elementalist\",\r\n\t\t\"Compendium.pf2e.feats-srd.Item.tx9pkrpmtqe4FnvS\",\r\n\t\t[\"air\", \"earth\", \"fire\", \"water\"],\r\n\t\t\"half\",\r\n\t\t\"elementalist\",\r\n\t), // Elementalist Dedication\r\n\tcreateResistancelDaily(\r\n\t\t\"ganzi\",\r\n\t\t\"Compendium.pf2e.heritages.Item.3reGfXH0S82hM7Gp\",\r\n\t\t[\"acid\", \"electricity\", \"sonic\"],\r\n\t\t\"half\",\r\n\t\t\"ganzi\",\r\n\t\ttrue,\r\n\t), // Ganzi\r\n\tspellshaping,\r\n\tcombatFlexibility,\r\n\tscrollSavant,\r\n\tcreateScrollChain(\"esoterica\", [\r\n\t\t\"Compendium.pf2e.feats-srd.Item.OqObuRB8oVSAEKFR\", // Scroll Esoterica\r\n\t\t\"Compendium.pf2e.feats-srd.Item.nWd7m0yRcIEVUy7O\", // Elaborate Scroll Esoterica\r\n\t\t\"Compendium.pf2e.feats-srd.Item.LHjPTV5vP3MOsPPJ\", // Grand Scroll Esoterica\r\n\t]),\r\n\tcreateScrollChain(\"trickster\", [\r\n\t\t\"Compendium.pf2e.feats-srd.Item.ROAUR1GhC19Pjk9C\", // Basic Scroll Cache\r\n\t\t\"Compendium.pf2e.feats-srd.Item.UrOj9TROtn8nuxPf\", // Expert Scroll Cache\r\n\t\t\"Compendium.pf2e.feats-srd.Item.lIg5Gzz7W70jfbk1\", // Master Scroll Cache\r\n\t]),\r\n\ttricksterAce(),\r\n\tmindSmith,\r\n\tbladeAlly,\r\n\trootMagic,\r\n\tceremonialKnife,\r\n\trations,\r\n];\r\n\r\nexport let DAILY_FILTERS = [];\r\n\r\nlet BUILTINS_UUIDS;\r\nconst UUIDS = new Map();\r\n\r\nexport function prepareDailies(dailies, prefix) {\r\n\tconst uuids = new Map();\r\n\r\n\tfor (const original of dailies) {\r\n\t\tconst daily = deepClone(original);\r\n\r\n\t\ttry {\r\n\t\t\tconst keyWithPrefix = `${prefix}.${daily.key}`;\r\n\t\t\tif (DAILY_FILTERS.includes(keyWithPrefix)) continue;\r\n\r\n\t\t\tuuids.set(daily.item.uuid, { daily, condition: daily.item.condition });\r\n\r\n\t\t\tdaily.key = keyWithPrefix;\r\n\r\n\t\t\tif (daily.children) {\r\n\t\t\t\tfor (let i = 0; i < daily.children.length; i++) {\r\n\t\t\t\t\tconst { uuid, condition } = daily.children[i];\r\n\t\t\t\t\tuuids.set(uuid, { daily, index: i, condition });\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} catch (err) {\r\n\t\t\terror(\"error.unexpected\");\r\n\t\t\tconsole.error(err);\r\n\t\t\tconsole.error(\r\n\t\t\t\t`The error occured during data gathering of ${prefix}.${daily.key}`,\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n\r\n\treturn uuids;\r\n}\r\n\r\nfunction prepareBaseDailies() {\r\n\tBUILTINS_UUIDS = prepareDailies(BUILTINS_DAILIES, \"dailies\");\r\n}\r\n\r\nexport let CUSTOM_DAILIES = [];\r\n\r\nexport async function parseCustomDailies() {\r\n\tUUIDS.clear();\r\n\r\n\tCUSTOM_DAILIES = [];\r\n\r\n\tconst customs = getSetting(\"customDailies\");\r\n\tfor (const { key, code } of customs) {\r\n\t\ttry {\r\n\t\t\tconst fn = new AsyncFunction(code);\r\n\t\t\tconst daily = await fn();\r\n\t\t\tif (!checkCustomDaily(daily, true)) continue;\r\n\t\t\tCUSTOM_DAILIES.push(daily);\r\n\t\t} catch (err) {\r\n\t\t\terror(\"error.unexpected\");\r\n\t\t\tconsole.error(err);\r\n\t\t\tconsole.error(\r\n\t\t\t\t`The error occured during call of custom function for ${key}`,\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n\r\n\tfor (const [uuid, daily] of BUILTINS_UUIDS.entries()) {\r\n\t\tUUIDS.set(uuid, daily);\r\n\t}\r\n\r\n\tconst CUSTOM_UUIDS = prepareDailies(CUSTOM_DAILIES, \"custom\");\r\n\tfor (const [uuid, daily] of CUSTOM_UUIDS.entries()) {\r\n\t\tUUIDS.set(uuid, daily);\r\n\t}\r\n}\r\n\r\nfunction prepareDailyFilters() {\r\n\tconst filters = getSetting(\"filters\").trim();\r\n\tif (!filters) {\r\n\t\tDAILY_FILTERS = [];\r\n\t}\r\n\r\n\ttry {\r\n\t\tDAILY_FILTERS = filters\r\n\t\t\t.split(\",\")\r\n\t\t\t.map((s) => s.trim())\r\n\t\t\t.filter(Boolean);\r\n\t} catch (err) {\r\n\t\terror(\"error.unexpected\");\r\n\t\tconsole.error(err);\r\n\t\tconsole.error(\"The error occured while trying to parse the daily filters\");\r\n\t}\r\n}\r\n\r\nexport async function prepareAllDailies() {\r\n\tprepareDailyFilters();\r\n\tprepareBaseDailies();\r\n\tawait parseCustomDailies();\r\n}\r\n\r\nexport function checkCustomDaily(daily, warning = false) {\r\n\tif (!DEPRECATED_CUSTOM_DAILIES.includes(daily.key)) return true;\r\n\tif (warning && game.user.isGM)\r\n\t\twarn(\r\n\t\t\t\"deprecated.custom.key\",\r\n\t\t\t{ name: daily.label.trim() || daily.key },\r\n\t\t\ttrue,\r\n\t\t);\r\n\treturn false;\r\n}\r\n\r\nexport function getDailies(actor) {\r\n\tconst dailies = {};\r\n\r\n\tfor (const item of actor.items) {\r\n\t\tconst sourceId = getSourceId(item);\r\n\t\tif (!sourceId || (item.isOfType(\"physical\") && item.isInvested === false))\r\n\t\t\tcontinue;\r\n\r\n\t\tconst entry = UUIDS.get(sourceId);\r\n\t\tif (!entry) continue;\r\n\r\n\t\tconst { daily, index, condition } = entry;\r\n\t\ttry {\r\n\t\t\tif (typeof condition === \"function\" && !condition({ actor, item, utils }))\r\n\t\t\t\tcontinue;\r\n\r\n\t\t\tdailies[daily.key] ??= deepClone(daily);\r\n\r\n\t\t\tif (index === undefined) dailies[daily.key].item = item;\r\n\t\t\telse dailies[daily.key].children[index].item = item;\r\n\t\t} catch (err) {\r\n\t\t\terror(\"error.unexpected\");\r\n\t\t\tconsole.error(err);\r\n\t\t\tconsole.error(`The error occured during data gathering of ${daily.key}`);\r\n\t\t}\r\n\t}\r\n\r\n\treturn Object.values(dailies).filter(\r\n\t\t(daily) => daily.item && daily.item instanceof Item,\r\n\t);\r\n}\r\n\r\nexport function getDailyFromSourceId(sourceId) {\r\n\treturn UUIDS.get(sourceId)?.daily;\r\n}\r\n", "export function getFamiliarPack() {\r\n\treturn game.packs.get(\"pf2e.familiar-abilities\");\r\n}\r\n\r\nexport function familiarUUID(id) {\r\n\treturn `Compendium.pf2e.familiar-abilities.Item.${id}`;\r\n}\r\n", "const PHYSICAL_ITEM_TYPES = new Set([\r\n\t\"armor\",\r\n\t\"backpack\",\r\n\t\"book\",\r\n\t\"consumable\",\r\n\t\"equipment\",\r\n\t\"shield\",\r\n\t\"treasure\",\r\n\t\"weapon\",\r\n]);\r\n\r\nexport function ErrorPF2e(message) {\r\n\treturn Error(`PF2e System | ${message}`);\r\n}\r\n\r\nexport function isObject(value) {\r\n\treturn typeof value === \"object\" && value !== null;\r\n}\r\n\r\nexport function sluggify(text, options) {\r\n\treturn game.pf2e.system.sluggify(text, options);\r\n}\r\n\r\nexport function setHasElement(set, value) {\r\n\treturn set.has(value);\r\n}\r\n\r\nexport function itemIsOfType(item, ...types) {\r\n\treturn types.some((t) =>\r\n\t\tt === \"physical\"\r\n\t\t\t? setHasElement(PHYSICAL_ITEM_TYPES, item.type)\r\n\t\t\t: item.type === t,\r\n\t);\r\n}\r\n", "import { isObject } from \"./utils\";\r\n\r\nexport class PredicatePF2e extends Array {\r\n\tconstructor(...statements) {\r\n\t\tsuper(...(Array.isArray(statements[0]) ? statements[0] : statements));\r\n\t\tthis.isValid = PredicatePF2e.isValid(this);\r\n\t}\r\n\r\n\t/** Structurally validate the predicates */\r\n\tstatic isValid(statements) {\r\n\t\treturn PredicatePF2e.isArray(statements);\r\n\t}\r\n\r\n\t/** Is this an array of predicatation statements? */\r\n\tstatic isArray(statements) {\r\n\t\treturn Array.isArray(statements) && statements.every((s) => isStatement(s));\r\n\t}\r\n\r\n\t/** Test if the given predicate passes for the given list of options. */\r\n\tstatic test(predicate = [], options = []) {\r\n\t\treturn predicate instanceof PredicatePF2e\r\n\t\t\t? predicate.test(options)\r\n\t\t\t: new PredicatePF2e(...predicate).test(options);\r\n\t}\r\n\r\n\t/** Test this predicate against a domain of discourse */\r\n\ttest(options) {\r\n\t\tif (this.length === 0) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\r\n\t\tif (!this.isValid) {\r\n\t\t\tconsole.warn(\"PF2e System | The provided predicate set is malformed.\");\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tconst domain = options instanceof Set ? options : new Set(options);\r\n\t\treturn this.every((s) => this.#isTrue(s, domain));\r\n\t}\r\n\r\n\ttoObject() {\r\n\t\treturn deepClone([...this]);\r\n\t}\r\n\r\n\tclone() {\r\n\t\treturn new PredicatePF2e(this.toObject());\r\n\t}\r\n\r\n\t/** Is the provided statement true? */\r\n\t#isTrue(statement, domain) {\r\n\t\treturn (\r\n\t\t\t(typeof statement === \"string\" && domain.has(statement)) ||\r\n\t\t\t(isBinaryOp(statement) && this.#testBinaryOp(statement, domain)) ||\r\n\t\t\t(isCompound(statement) && this.#testCompound(statement, domain))\r\n\t\t);\r\n\t}\r\n\r\n\t#testBinaryOp(statement, domain) {\r\n\t\tif (\"eq\" in statement) {\r\n\t\t\treturn domain.has(`${statement.eq[0]}:${statement.eq[1]}`);\r\n\t\t}\r\n\r\n\t\tconst operator = Object.keys(statement)[0];\r\n\r\n\t\t// Allow for tests of partial statements against numeric values\r\n\t\t// E.g., `{ \"gt\": [\"actor:level\", 5] }` would match against \"actor:level:6\" and \"actor:level:7\"\r\n\t\tconst [left, right] = Object.values(statement)[0];\r\n\t\tconst domainArray = Array.from(domain);\r\n\t\tconst getValues = (operand) => {\r\n\t\t\tconst maybeNumber = Number(operand);\r\n\t\t\tif (!Number.isNaN(maybeNumber)) return [maybeNumber];\r\n\t\t\tconst pattern = new RegExp(String.raw`^${operand}:([^:]+)$`);\r\n\t\t\tconst values = domainArray\r\n\t\t\t\t.map((s) => Number(pattern.exec(s)?.[1] || NaN))\r\n\t\t\t\t.filter((v) => !Number.isNaN(v));\r\n\t\t\treturn values.length > 0 ? values : [NaN];\r\n\t\t};\r\n\t\tconst leftValues = getValues(left);\r\n\t\tconst rightValues = getValues(right);\r\n\r\n\t\tswitch (operator) {\r\n\t\t\tcase \"gt\":\r\n\t\t\t\treturn leftValues.some((l) => rightValues.every((r) => l > r));\r\n\t\t\tcase \"gte\":\r\n\t\t\t\treturn leftValues.some((l) => rightValues.every((r) => l >= r));\r\n\t\t\tcase \"lt\":\r\n\t\t\t\treturn leftValues.some((l) => rightValues.every((r) => l < r));\r\n\t\t\tcase \"lte\":\r\n\t\t\t\treturn leftValues.some((l) => rightValues.every((r) => l <= r));\r\n\t\t\tdefault:\r\n\t\t\t\tconsole.warn(\"PF2e System | Malformed binary operation encountered\");\r\n\t\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\r\n\t/** Is the provided compound statement true? */\r\n\t#testCompound(statement, domain) {\r\n\t\treturn (\r\n\t\t\t(\"and\" in statement &&\r\n\t\t\t\tstatement.and.every((subProp) => this.#isTrue(subProp, domain))) ||\r\n\t\t\t(\"nand\" in statement &&\r\n\t\t\t\t!statement.nand.every((subProp) => this.#isTrue(subProp, domain))) ||\r\n\t\t\t(\"or\" in statement &&\r\n\t\t\t\tstatement.or.some((subProp) => this.#isTrue(subProp, domain))) ||\r\n\t\t\t(\"xor\" in statement &&\r\n\t\t\t\tstatement.xor.filter((subProp) => this.#isTrue(subProp, domain))\r\n\t\t\t\t\t.length === 1) ||\r\n\t\t\t(\"nor\" in statement &&\r\n\t\t\t\t!statement.nor.some((subProp) => this.#isTrue(subProp, domain))) ||\r\n\t\t\t(\"not\" in statement && !this.#isTrue(statement.not, domain)) ||\r\n\t\t\t(\"if\" in statement &&\r\n\t\t\t\t!(\r\n\t\t\t\t\tthis.#isTrue(statement.if, domain) &&\r\n\t\t\t\t\t!this.#isTrue(statement.then, domain)\r\n\t\t\t\t))\r\n\t\t);\r\n\t}\r\n}\r\n\r\nconst binaryOperators = new Set([\"eq\", \"gt\", \"gte\", \"lt\", \"lte\"]);\r\n\r\nfunction isStatement(statement) {\r\n\treturn statement instanceof Object\r\n\t\t? isCompound(statement) || isBinaryOp(statement)\r\n\t\t: typeof statement === \"string\"\r\n\t\t  ? isAtomic(statement)\r\n\t\t  : false;\r\n}\r\n\r\nfunction isAtomic(statement) {\r\n\treturn (\r\n\t\t(typeof statement === \"string\" && statement.length > 0) ||\r\n\t\tisBinaryOp(statement)\r\n\t);\r\n}\r\n\r\nfunction isBinaryOp(statement) {\r\n\tif (!isObject(statement)) return false;\r\n\tconst entries = Object.entries(statement);\r\n\tif (entries.length > 1) return false;\r\n\tconst [operator, operands] = entries[0];\r\n\treturn (\r\n\t\tbinaryOperators.has(operator) &&\r\n\t\tArray.isArray(operands) &&\r\n\t\toperands.length === 2 &&\r\n\t\ttypeof operands[0] === \"string\" &&\r\n\t\t[\"string\", \"number\"].includes(typeof operands[1])\r\n\t);\r\n}\r\n\r\nfunction isCompound(statement) {\r\n\treturn (\r\n\t\tisObject(statement) &&\r\n\t\t(isAnd(statement) ||\r\n\t\t\tisOr(statement) ||\r\n\t\t\tisNand(statement) ||\r\n\t\t\tisXor(statement) ||\r\n\t\t\tisNor(statement) ||\r\n\t\t\tisNot(statement) ||\r\n\t\t\tisIf(statement))\r\n\t);\r\n}\r\n\r\nfunction isAnd(statement) {\r\n\treturn (\r\n\t\tObject.keys(statement).length === 1 &&\r\n\t\tArray.isArray(statement.and) &&\r\n\t\tstatement.and.every((subProp) => isStatement(subProp))\r\n\t);\r\n}\r\n\r\nfunction isNand(statement) {\r\n\treturn (\r\n\t\tObject.keys(statement).length === 1 &&\r\n\t\tArray.isArray(statement.nand) &&\r\n\t\tstatement.nand.every((subProp) => isStatement(subProp))\r\n\t);\r\n}\r\n\r\nfunction isOr(statement) {\r\n\treturn (\r\n\t\tObject.keys(statement).length === 1 &&\r\n\t\tArray.isArray(statement.or) &&\r\n\t\tstatement.or.every((subProp) => isStatement(subProp))\r\n\t);\r\n}\r\n\r\nfunction isXor(statement) {\r\n\treturn (\r\n\t\tObject.keys(statement).length === 1 &&\r\n\t\tArray.isArray(statement.xor) &&\r\n\t\tstatement.xor.every((subProp) => isStatement(subProp))\r\n\t);\r\n}\r\n\r\nfunction isNor(statement) {\r\n\treturn (\r\n\t\tObject.keys(statement).length === 1 &&\r\n\t\tArray.isArray(statement.nor) &&\r\n\t\tstatement.nor.every((subProp) => isStatement(subProp))\r\n\t);\r\n}\r\n\r\nfunction isNot(statement) {\r\n\treturn (\r\n\t\tObject.keys(statement).length === 1 &&\r\n\t\t!!statement.not &&\r\n\t\tisStatement(statement.not)\r\n\t);\r\n}\r\n\r\nfunction isIf(statement) {\r\n\treturn (\r\n\t\tObject.keys(statement).length === 2 &&\r\n\t\tisStatement(statement.if) &&\r\n\t\tisStatement(statement.then)\r\n\t);\r\n}\r\n", "import { utils } from \"../../api\";\r\nimport { capitalize, getFlag, hasLocalization, localize } from \"../../module\";\r\nimport { PredicatePF2e } from \"../../pf2e/predicate\";\r\n\r\nconst templateOrders = {\r\n\tselect: 100,\r\n\tcombo: 80,\r\n\trandom: 60,\r\n\talert: 40,\r\n\tinput: 20,\r\n\tdrop: 0,\r\n};\r\n\r\nexport async function getTemplate({\r\n\tchildren = [],\r\n\tkey,\r\n\titem,\r\n\tprepare,\r\n\tlabel,\r\n\trows = [],\r\n}) {\r\n\tconst actor = this.actor;\r\n\r\n\tthis.saved[key] = getFlag(actor, key) ?? {};\r\n\r\n\tthis.rows[key] = {};\r\n\r\n\tthis.children[key] = children.reduce((children, { slug, item }) => {\r\n\t\tchildren[slug] = item;\r\n\t\treturn children;\r\n\t}, {});\r\n\r\n\tconst prepareArgs = {\r\n\t\tactor,\r\n\t\titem,\r\n\t\tchildren: this.children[key],\r\n\t\tutils,\r\n\t};\r\n\r\n\tthis.custom[key] = (await prepare?.(prepareArgs)) || {};\r\n\tconst custom = this.custom[key];\r\n\r\n\tthis.dailyArgs[key] = {\r\n\t\t...prepareArgs,\r\n\t\tcustom,\r\n\t};\r\n\tconst dailyArgs = this.dailyArgs[key];\r\n\r\n\tlet groupLabel = await getProcessedValue(label, dailyArgs);\r\n\tconst labeled = groupLabel\r\n\t\t? `label.${groupLabel}`\r\n\t\t: key.startsWith(\"dailies.\")\r\n\t\t  ? `label.${key.slice(8)}`\r\n\t\t  : undefined;\r\n\tif (labeled && hasLocalization(labeled)) groupLabel = localize(labeled);\r\n\r\n\tthis.predicate[key] = children\r\n\t\t.filter((child) => child.item)\r\n\t\t.map((child) => child.slug);\r\n\r\n\tconst template = {\r\n\t\tlabel: groupLabel ? game.i18n.localize(groupLabel) : item.name,\r\n\t\trows: [],\r\n\t};\r\n\r\n\tfor (const row of rows) {\r\n\t\tthis.rows[key][row.slug] = row;\r\n\r\n\t\tconst {\r\n\t\t\ttype,\r\n\t\t\tslug,\r\n\t\t\tchildPredicate = [],\r\n\t\t\tcondition,\r\n\t\t\tlabel,\r\n\t\t\tsave,\r\n\t\t\tunique,\r\n\t\t\torder,\r\n\t\t} = row;\r\n\r\n\t\tif (\r\n\t\t\tchildPredicate.length &&\r\n\t\t\t!PredicatePF2e.test(childPredicate, this.predicate[key])\r\n\t\t)\r\n\t\t\tcontinue;\r\n\t\tif (condition && !(await condition(dailyArgs))) continue;\r\n\r\n\t\tconst savedRow =\r\n\t\t\tsave === false || type === \"random\" ? undefined : this.saved[key][slug];\r\n\t\tconst rowLabel = await getProcessedValue(label, dailyArgs);\r\n\t\tconst value =\r\n\t\t\tsavedRow === undefined\r\n\t\t\t\t? \"\"\r\n\t\t\t\t: typeof savedRow !== \"object\"\r\n\t\t\t\t  ? savedRow\r\n\t\t\t\t  : \"name\" in savedRow\r\n\t\t\t\t\t  ? savedRow.name\r\n\t\t\t\t\t  : savedRow.selected;\r\n\r\n\t\tconst rowTemplate = {\r\n\t\t\tlabel: rowLabel ? game.i18n.localize(rowLabel) : \"\",\r\n\t\t\tvalue,\r\n\t\t\torder: order ?? templateOrders[type],\r\n\t\t\tdata: {\r\n\t\t\t\ttype,\r\n\t\t\t\tdaily: key,\r\n\t\t\t\trow: slug,\r\n\t\t\t\t...(unique ? { unique } : \"\"),\r\n\t\t\t},\r\n\t\t};\r\n\r\n\t\tif (isComboRow(row) || isSelectRow(row) || isRandomRow(row)) {\r\n\t\t\tconst tmp = (await getProcessedValue(row.options, dailyArgs)) ?? [];\r\n\t\t\tif (type !== \"combo\" && !tmp.length) continue;\r\n\r\n\t\t\tconst labelize =\r\n\t\t\t\t(typeof row.labelizer === \"function\" && row.labelizer(dailyArgs)) ||\r\n\t\t\t\t((value) => capitalize(value));\r\n\t\t\trowTemplate.options = tmp.map((value) =>\r\n\t\t\t\ttypeof value === \"string\" ? { value, label: labelize(value) } : value,\r\n\t\t\t);\r\n\r\n\t\t\tif (isComboRow(row)) {\r\n\t\t\t\trowTemplate.selected = rowTemplate.value;\r\n\t\t\t\trowTemplate.data.input = savedRow?.input ?? true;\r\n\r\n\t\t\t\tif (!rowTemplate.data.input && tmp.includes(rowTemplate.selected)) {\r\n\t\t\t\t\trowTemplate.value = labelize(rowTemplate.selected);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} else if (isDropRow(row)) {\r\n\t\t\trowTemplate.data.uuid = savedRow?.uuid ?? \"\";\r\n\t\t} else if (isAlerRow(row)) {\r\n\t\t\trowTemplate.value =\r\n\t\t\t\ttypeof row.message === \"function\"\r\n\t\t\t\t\t? await row.message(dailyArgs)\r\n\t\t\t\t\t: row.message;\r\n\t\t}\r\n\r\n\t\ttemplate.rows.push(rowTemplate);\r\n\t}\r\n\r\n\treturn template;\r\n}\r\n\r\nasync function getProcessedValue(obj, args) {\r\n\tif (typeof obj === \"function\") return await obj(args);\r\n\treturn obj;\r\n}\r\n\r\nfunction isComboRow(row) {\r\n\treturn row.type === \"combo\";\r\n}\r\n\r\nfunction isSelectRow(row) {\r\n\treturn row.type === \"select\";\r\n}\r\n\r\nfunction isRandomRow(row) {\r\n\treturn row.type === \"random\";\r\n}\r\n\r\nfunction isDropRow(row) {\r\n\treturn row.type === \"drop\";\r\n}\r\n\r\nfunction isAlerRow(row) {\r\n\treturn row.type === \"alert\";\r\n}\r\n", "import { sequenceArray } from \"../../module\";\r\n\r\nexport function getSimplifiableValue(actor, value, fallback) {\r\n\tif (value === undefined) return fallback;\r\n\tif (typeof value === \"number\") return value;\r\n\tif (value === \"level\") return actor.level;\r\n\tif (value === \"half\") return Math.max(1, Math.floor(actor.level / 2));\r\n\tconst numbered = Number(value);\r\n\treturn Number.isNaN(numbered) ? fallback : numbered;\r\n}\r\n\r\nexport async function parseFilter(filter) {\r\n\treturn {\r\n\t\ttype: filter.type,\r\n\t\tsearch: await (filter.type === \"feat\"\r\n\t\t\t? parseFeatFilter(this.actor, filter.search)\r\n\t\t\t: parseSpellFilter(this.actor, filter.search)),\r\n\t\tdrop: filter.drop,\r\n\t};\r\n}\r\n\r\nfunction checkFilter(selected, checkbox) {\r\n\tif (!selected?.length) return;\r\n\r\n\tcheckbox.selected = selected;\r\n\tcheckbox.isExpanded = true;\r\n\r\n\tfor (const x of selected) {\r\n\t\tcheckbox.options[x].selected = true;\r\n\t}\r\n}\r\n\r\nfunction setTraits(searchTraits, dataTraits) {\r\n\tconst traits = getFilterTraits(searchTraits);\r\n\tif (traits?.selected.length) {\r\n\t\tdataTraits.conjunction = traits.conjunction;\r\n\t\tdataTraits.selected = traits.selected;\r\n\t}\r\n}\r\n\r\nexport function getFilterTraits(traits) {\r\n\tif (!traits) return;\r\n\r\n\tconst selected = Array.isArray(traits) ? traits : traits.selected;\r\n\tif (!selected?.length) return;\r\n\r\n\treturn {\r\n\t\tselected: selected.map((x) => (typeof x === \"string\" ? { value: x } : x)),\r\n\t\tconjunction: (!Array.isArray(traits) && traits.conjunction) || \"and\",\r\n\t};\r\n}\r\n\r\nasync function parseSpellFilter(actor, search) {\r\n\tconst data = await game.pf2e.compendiumBrowser.tabs.spell.getFilterData();\r\n\r\n\tcheckFilter(search.category, data.checkboxes.category);\r\n\tcheckFilter(search.school, data.checkboxes.school);\r\n\tcheckFilter(search.traditions, data.checkboxes.traditions);\r\n\tcheckFilter(search.rarity, data.checkboxes.rarity);\r\n\tcheckFilter(search.source, data.checkboxes.source);\r\n\r\n\tsetTraits(search.traits, data.multiselects.traits);\r\n\r\n\tconst level = getSpellFilterLevel(actor, search.level);\r\n\tif (level?.length) checkFilter(level, data.checkboxes.rank);\r\n\r\n\treturn data;\r\n}\r\n\r\nasync function parseFeatFilter(actor, search) {\r\n\tconst data = await game.pf2e.compendiumBrowser.tabs.feat.getFilterData();\r\n\r\n\tcheckFilter(search.category, data.checkboxes.category);\r\n\tcheckFilter(search.skills, data.checkboxes.skills);\r\n\tcheckFilter(search.rarity, data.checkboxes.rarity);\r\n\tcheckFilter(search.source, data.checkboxes.source);\r\n\r\n\tsetTraits(search.traits, data.multiselects.traits);\r\n\r\n\tconst level = getFeatFilterLevel(actor, search.level);\r\n\tif (level) {\r\n\t\tdata.sliders.level.values.min = level.min;\r\n\t\tdata.sliders.level.values.max = level.max;\r\n\t\tdata.sliders.level.isExpanded = true;\r\n\t}\r\n\r\n\treturn data;\r\n}\r\n\r\nexport function getSpellFilterLevel(actor, level) {\r\n\tif (Array.isArray(level)) return level;\r\n\r\n\tconst simplified = getSimplifiableValue(actor, level);\r\n\tif (simplified) return sequenceArray(1, simplified);\r\n}\r\n\r\nexport function getFeatFilterLevel(actor, level) {\r\n\tif (level === undefined) return;\r\n\r\n\tif (typeof level === \"object\") {\r\n\t\treturn {\r\n\t\t\tmin: getSimplifiableValue(actor, level.min, 0),\r\n\t\t\tmax: getSimplifiableValue(actor, level.min, 20),\r\n\t\t};\r\n\t}\r\n\r\n\treturn { min: 0, max: getSimplifiableValue(actor, level, 20) };\r\n}\r\n", "import { utils } from \"../../api\";\r\nimport { subLocalize } from \"../../module\";\r\nimport { sluggify } from \"../../pf2e/utils\";\r\nimport {\r\n\tgetFeatFilterLevel,\r\n\tgetFilterTraits,\r\n\tgetSpellFilterLevel,\r\n} from \"./shared\";\r\n\r\nconst localize = subLocalize(\"interface.error.drop\");\r\n\r\nexport async function onDropFeat(item, target, filter) {\r\n\tif (!item.isOfType(\"feat\")) return localize(\"notFeat\");\r\n\r\n\tconst { search, drop } = filter;\r\n\r\n\tif (search.category?.length && !search.category.includes(item.category)) {\r\n\t\treturn localize.warn(\"wrongType\", {\r\n\t\t\ttypes: localizeAll(\"featCategories\", search.category),\r\n\t\t});\r\n\t}\r\n\r\n\tif (search.traits) {\r\n\t\tconst traits = getFilterTraits(search.traits);\r\n\r\n\t\tif (traits?.selected.length) {\r\n\t\t\tconst testFn = traits.conjunction === \"or\" ? \"some\" : \"every\";\r\n\t\t\tconst test = traits.selected[testFn](\r\n\t\t\t\t(trait) =>\r\n\t\t\t\t\tNumber(trait.not ?? false) - Number(item.traits.has(trait.value)),\r\n\t\t\t);\r\n\t\t\tif (!test) return localize.warn(\"wrongTraits\");\r\n\t\t}\r\n\t}\r\n\r\n\tif (search.skills?.length) {\r\n\t\tconst translatedSkills = utils.getTranslatedSkills(true);\r\n\t\tconst prerequisites = item.system.prerequisites.value.map((prerequisite) =>\r\n\t\t\tprerequisite.value.toLocaleLowerCase(),\r\n\t\t);\r\n\t\tconst test = search.skills.some((skill) =>\r\n\t\t\tprerequisites.some(\r\n\t\t\t\t(prerequisite) =>\r\n\t\t\t\t\tprerequisite.includes(skill) ||\r\n\t\t\t\t\tprerequisite.includes(translatedSkills[skill]),\r\n\t\t\t),\r\n\t\t);\r\n\t\tif (!test)\r\n\t\t\treturn localize.warn(\"wrongSkill\", {\r\n\t\t\t\tskills: localizeAll(\"skillList\", search.skills),\r\n\t\t\t});\r\n\t}\r\n\r\n\tif (\r\n\t\tsearch.rarity?.length &&\r\n\t\t!search.rarity.includes(item.system.traits.rarity)\r\n\t) {\r\n\t\treturn localize.warn(\"wrongRarity\", {\r\n\t\t\trarities: localizeAll(\"rarityTraits\", search.rarity),\r\n\t\t});\r\n\t}\r\n\r\n\tif (\r\n\t\tsearch.source?.length &&\r\n\t\t!search.source.includes(sluggify(item.system.source.value))\r\n\t) {\r\n\t\treturn localize.warn(\"wrongSource\", { sources: search.source.join(\", \") });\r\n\t}\r\n\r\n\tconst level = getFeatFilterLevel(this.actor, search.level);\r\n\tif (level) {\r\n\t\tconst itemLevel = item.level;\r\n\t\tif (itemLevel < level.min)\r\n\t\t\treturn localize.warn(\"wrongLevelLow\", { level: `min: ${level.min}` });\r\n\t\tif (itemLevel > level.max)\r\n\t\t\treturn localize.warn(\"wrongLevelHigh\", { level: `max: ${level.max}` });\r\n\t}\r\n\r\n\tif (drop) {\r\n\t\tconst args = this.dailyArgs[target.dataset.daily];\r\n\t\tif (args) {\r\n\t\t\tconst result = await drop(item, args);\r\n\t\t\tif (typeof result === \"object\") {\r\n\t\t\t\tif (result.data) return game.i18n.format(result.error, result.data);\r\n\t\t\t\treturn game.i18n.localize(result.error);\r\n\t\t\t}\r\n\r\n\t\t\tif (result === false) {\r\n\t\t\t\treturn localize.warn(\"wrongCustom\");\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tonDropItem(item, target);\r\n}\r\n\r\nexport async function onDropSpell(item, target, filter) {\r\n\tif (!item.isOfType(\"spell\")) return localize(\"notSpell\");\r\n\r\n\tconst { search, drop } = filter;\r\n\r\n\tif (search.category?.length) {\r\n\t\tconst categories = search.category\r\n\t\t\t.map((x) =>\r\n\t\t\t\tgame.i18n.localize(\r\n\t\t\t\t\tx === \"cantrip\"\r\n\t\t\t\t\t\t? \"PF2E.SpellCantripLabel\"\r\n\t\t\t\t\t\t: CONFIG.PF2E.preparationType[x],\r\n\t\t\t\t),\r\n\t\t\t)\r\n\t\t\t.join(\", \");\r\n\r\n\t\tif (\r\n\t\t\t(item.isCantrip && !search.category.includes(\"cantrip\")) ||\r\n\t\t\t(item.isFocusSpell && !search.category.includes(\"focus\")) ||\r\n\t\t\t(item.isRitual && !search.category.includes(\"ritual\")) ||\r\n\t\t\t(!item.isCantrip &&\r\n\t\t\t\t!item.isFocusSpell &&\r\n\t\t\t\t!item.isRitual &&\r\n\t\t\t\t!search.category.includes(\"spell\"))\r\n\t\t) {\r\n\t\t\treturn localize.warn(\"wrongCategory\", { categories });\r\n\t\t}\r\n\t}\r\n\r\n\tif (search.traits) {\r\n\t\tconst traits = getFilterTraits(search.traits);\r\n\r\n\t\tif (traits?.selected.length) {\r\n\t\t\tconst testFn = traits.conjunction === \"or\" ? \"some\" : \"every\";\r\n\t\t\tconst test = traits.selected[testFn](\r\n\t\t\t\t(trait) =>\r\n\t\t\t\t\tNumber(trait.not ?? false) - Number(item.traits.has(trait.value)),\r\n\t\t\t);\r\n\t\t\tif (!test) return localize.warn(\"wrongTraits\");\r\n\t\t}\r\n\t}\r\n\r\n\tif (search.traditions?.length) {\r\n\t\tif (\r\n\t\t\t!search.traditions.some((tradition) => item.traditions.has(tradition))\r\n\t\t) {\r\n\t\t\treturn localize.warn(\"wrongTradition\", {\r\n\t\t\t\ttraditions: localizeAll(\"magicTraditions\", search.traditions),\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\tconst level = getSpellFilterLevel(this.actor, search.level);\r\n\tif (level?.length && !level.includes(item.level)) {\r\n\t\treturn localize.warn(\"wrongLevel\", { levels: level.join(\", \") });\r\n\t}\r\n\r\n\tif (search.school?.length && !search.school.includes(item.school)) {\r\n\t\treturn localize.warn(\"wrongSchool\", {\r\n\t\t\tschools: localizeAll(\"magicSchools\", search.school),\r\n\t\t});\r\n\t}\r\n\r\n\tif (\r\n\t\tsearch.rarity?.length &&\r\n\t\t!search.rarity.includes(item.system.traits.rarity)\r\n\t) {\r\n\t\treturn localize.warn(\"wrongRarity\", {\r\n\t\t\trarities: localizeAll(\"rarityTraits\", search.rarity),\r\n\t\t});\r\n\t}\r\n\r\n\tif (\r\n\t\tsearch.source?.length &&\r\n\t\t!search.source.includes(sluggify(item.system.source.value))\r\n\t) {\r\n\t\treturn localize.warn(\"wrongSource\", { sources: search.source.join(\", \") });\r\n\t}\r\n\r\n\tif (drop) {\r\n\t\tconst args = this.dailyArgs[target.dataset.daily];\r\n\t\tif (args) {\r\n\t\t\tconst result = await drop(item, args);\r\n\t\t\tif (typeof result === \"object\") {\r\n\t\t\t\tif (result.data) {\r\n\t\t\t\t\treturn ui.notifications.warn(\r\n\t\t\t\t\t\tgame.i18n.format(result.error, result.data),\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t\treturn ui.notifications.warn(game.i18n.localize(result.error));\r\n\t\t\t}\r\n\r\n\t\t\tif (result === false) {\r\n\t\t\t\treturn localize.warn(\"wrongCustom\");\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tonDropItem(item, target);\r\n}\r\n\r\nfunction localizeAll(config, list) {\r\n\tconst localized = list.map((key) =>\r\n\t\tgame.i18n.localize(CONFIG.PF2E[config][key]),\r\n\t);\r\n\treturn localized.join(\", \");\r\n}\r\n\r\nexport function onDropItem(item, target) {\r\n\ttarget.value = item.name;\r\n\ttarget.dataset.uuid = item.uuid;\r\n\ttarget.nextElementSibling.nextElementSibling.classList.remove(\"disabled\");\r\n}\r\n", "import { createUpdateCollection, utils } from \"../../api\";\r\nimport { familiarUUID, getFamiliarPack } from \"../../data/familiar\";\r\nimport {\r\n\tDEFAULT_REGEX_RANKS,\r\n\tgetBestSpellcastingEntryForStaves,\r\n\tgetMaxSlotRankForStaves,\r\n} from \"../../data/staves\";\r\nimport {\r\n\tMODULE_ID,\r\n\tchatUUID,\r\n\terror,\r\n\tgetFlag,\r\n\tgetSetting,\r\n\thasLocalization,\r\n\tlocalize,\r\n\tsubLocalize,\r\n} from \"../../module\";\r\nimport { sluggify } from \"../../pf2e/utils\";\r\nimport {\r\n\tgetNotExpendedPreparedSpellSlot,\r\n\tgetSpellcastingEntriesSortBounds,\r\n} from \"../../spellcasting\";\r\n\r\nexport async function processData() {\r\n\tconst actor = this.actor;\r\n\tconst dailies = this.dailies;\r\n\tconst fields = getFields.call(this);\r\n\tconst addItems = [];\r\n\tconst addRules = new Map();\r\n\tconst [updateItems, updateItem] = createUpdateCollection();\r\n\tconst flags = {};\r\n\tconst msg = subLocalize(\"message\");\r\n\r\n\tlet addedSpells = false;\r\n\tlet chatContent = \"\";\r\n\r\n\tconst getRules = (item) => {\r\n\t\tconst id = item.id;\r\n\t\tconst existing = addRules.get(id);\r\n\t\tif (existing) return existing;\r\n\r\n\t\tconst rules = deepClone(item._source.system.rules);\r\n\r\n\t\tfor (let i = rules.length - 1; i >= 0; i--) {\r\n\t\t\tif (MODULE_ID in rules[i]) rules.splice(i, 1);\r\n\t\t}\r\n\r\n\t\taddRules.set(id, rules);\r\n\t\treturn rules;\r\n\t};\r\n\r\n\tconst messages = {\r\n\t\tlanguages: { order: 80, messages: [] },\r\n\t\tskills: { order: 70, messages: [] },\r\n\t\tresistances: { order: 60, messages: [] },\r\n\t\tfeats: { order: 50, messages: [] },\r\n\t\tspells: { order: 40, messages: [] },\r\n\t\tscrolls: { order: 30, messages: [] },\r\n\t};\r\n\r\n\tconst rawMessages = [];\r\n\r\n\tconst messageObj = {\r\n\t\tadd: (group, options) => {\r\n\t\t\tmessages[group] ??= { order: 0, messages: [] };\r\n\t\t\tmessages[group].messages.push(options);\r\n\t\t},\r\n\t\taddGroup: (group, order, label) => {\r\n\t\t\tmessages[group] ??= { label, order: order ?? 1, messages: [] };\r\n\t\t},\r\n\t\taddRaw: (message, order = 1) => {\r\n\t\t\trawMessages.push({ order, message });\r\n\t\t},\r\n\t};\r\n\r\n\tif (actor.familiar && fields[\"dailies.familiar\"]) {\r\n\t\tconst familiar = actor.familiar;\r\n\t\tconst pack = getFamiliarPack();\r\n\t\tconst abilities = [];\r\n\r\n\t\t// we remove old abilities\r\n\t\tconst ids = familiar.itemTypes.action.map((item) => item.id);\r\n\t\tif (ids.length) familiar.deleteEmbeddedDocuments(\"Item\", ids);\r\n\r\n\t\tmessageObj.addGroup(\"familiar\", 20);\r\n\r\n\t\tfor (const field of Object.values(fields[\"dailies.familiar\"])) {\r\n\t\t\tconst value = field.value;\r\n\t\t\tconst isCustom = value.includes(\".\");\r\n\t\t\tconst item = await (isCustom ? fromUuid(value) : pack.getDocument(value));\r\n\t\t\tif (!item || !item.isOfType(\"action\")) continue;\r\n\r\n\t\t\tconst source = item.toObject();\r\n\t\t\tif (source) {\r\n\t\t\t\tabilities.push(source);\r\n\t\t\t\tmessageObj.add(\"familiar\", {\r\n\t\t\t\t\tuuid: isCustom ? value : familiarUUID(value),\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (abilities.length) familiar.createEmbeddedDocuments(\"Item\", abilities);\r\n\t}\r\n\r\n\tif (fields[\"dailies.staff\"]) {\r\n\t\tconst staffField = fields[\"dailies.staff\"];\r\n\t\tconst staffID = staffField.staffID.value;\r\n\t\tconst staff = actor.items.get(staffID);\r\n\t\tconst makeshift = staffField.staffID.makeshift === \"true\";\r\n\t\tconst maxStaffCharges = getMaxSlotRankForStaves(actor);\r\n\r\n\t\tif (staff && (maxStaffCharges || makeshift)) {\r\n\t\t\tconst uuids = [];\r\n\t\t\tconst ranks = getSetting(\"staff-regex\").trim() || DEFAULT_REGEX_RANKS;\r\n\t\t\tconst ranksRegex = new RegExp(\r\n\t\t\t\t`<strong>\\\\s*(?<rank>(?:${ranks}))\\\\s*<\\/strong>.+?(?<uuids>@(?:UUID|Compendium)\\[[a-zA-Z0-9-.]+\\].+?)\\n`,\r\n\t\t\t\t\"gi\",\r\n\t\t\t);\r\n\r\n\t\t\tlet rankMatch = ranksRegex.exec(staff.description);\r\n\t\t\twhile (rankMatch !== null) {\r\n\t\t\t\tconst rankStr = rankMatch.groups.rank.trim().replace(/\\D+/, \"\") || \"0\";\r\n\t\t\t\tconst rank = Math.clamped(parseInt(rankStr), 0, 10);\r\n\t\t\t\tconst uuidRegex =\r\n\t\t\t\t\t/@(?<protocole>UUID|Compendium)\\[(?<uuid>[a-zA-Z0-9-.]+)\\]/g;\r\n\r\n\t\t\t\tlet uuidMatch = uuidRegex.exec(rankMatch.groups.uuids);\r\n\t\t\t\twhile (uuidMatch !== null) {\r\n\t\t\t\t\tlet uuid = uuidMatch.groups.uuid;\r\n\t\t\t\t\tif (uuidMatch.groups.protocole === \"Compendium\") {\r\n\t\t\t\t\t\tif (!uuid.startsWith(\"Compendium.\")) uuid = `Compendium.${uuid}`;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tuuids.push({ rank, uuid });\r\n\t\t\t\t\tuuidMatch = uuidRegex.exec(rankMatch.groups.uuids);\r\n\t\t\t\t}\r\n\r\n\t\t\t\trankMatch = ranksRegex.exec(staff.description);\r\n\t\t\t}\r\n\r\n\t\t\tif (uuids.length) {\r\n\t\t\t\tlet overcharge = 0;\r\n\r\n\t\t\t\tconst expendedSpells = [];\r\n\t\t\t\tconst expendedSlots = makeshift ? [1, 2, 3] : [1];\r\n\t\t\t\tconst flexibleLabel = game.i18n.localize(\"PF2E.SpellFlexibleLabel\");\r\n\t\t\t\tconst slotsUpdates = {};\r\n\r\n\t\t\t\tfor (const i of expendedSlots) {\r\n\t\t\t\t\tconst expendField = staffField[`expend${i}`];\r\n\t\t\t\t\tconst data = expendField?.optionData;\r\n\t\t\t\t\tif (!data) continue;\r\n\r\n\t\t\t\t\tif (data.type === \"spell\") {\r\n\t\t\t\t\t\tconst spell = actor.items.get(data.spell);\r\n\t\t\t\t\t\tif (!spell) continue;\r\n\r\n\t\t\t\t\t\tconst spellSlot = getNotExpendedPreparedSpellSlot(spell, data.rank);\r\n\t\t\t\t\t\tif (!spellSlot) continue;\r\n\r\n\t\t\t\t\t\tovercharge += +data.rank;\r\n\r\n\t\t\t\t\t\tupdateItem({\r\n\t\t\t\t\t\t\t_id: spellSlot.entry.id,\r\n\t\t\t\t\t\t\t[`system.slots.slot${data.rank}.prepared.${spellSlot.slotIndex}.expended`]: true,\r\n\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\texpendedSpells.push({\r\n\t\t\t\t\t\t\tuuid: spell.uuid,\r\n\t\t\t\t\t\t\tname: spell.name,\r\n\t\t\t\t\t\t\trank: data.rank,\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tconst entry = actor.items.get(data.entry);\r\n\t\t\t\t\t\tif (!entry) continue;\r\n\r\n\t\t\t\t\t\tconst slot = entry.system.slots[`slot${data.rank}`];\r\n\t\t\t\t\t\tif (slot.max < 1 || slot.value < 1) continue;\r\n\r\n\t\t\t\t\t\tslotsUpdates[data.entry] ??= {};\r\n\t\t\t\t\t\tslotsUpdates[data.entry][data.rank] ??= slot.value;\r\n\r\n\t\t\t\t\t\tconst currentValue = slotsUpdates[data.entry][data.rank];\r\n\r\n\t\t\t\t\t\tif (currentValue < 1) continue;\r\n\r\n\t\t\t\t\t\tovercharge += +data.rank;\r\n\r\n\t\t\t\t\t\tupdateItem({\r\n\t\t\t\t\t\t\t_id: data.entry,\r\n\t\t\t\t\t\t\t[`system.slots.slot${data.rank}.value`]: currentValue - 1,\r\n\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\tslotsUpdates[data.entry][data.rank] -= 1;\r\n\r\n\t\t\t\t\t\texpendedSpells.push({\r\n\t\t\t\t\t\t\tname: flexibleLabel,\r\n\t\t\t\t\t\t\trank: data.rank,\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconst bestEntry = getBestSpellcastingEntryForStaves(actor);\r\n\r\n\t\t\t\tif (bestEntry) {\r\n\t\t\t\t\tconst { ability, tradition, proficiency } = bestEntry;\r\n\r\n\t\t\t\t\tconst sort = (() => {\r\n\t\t\t\t\t\tconst { min, max } = getSpellcastingEntriesSortBounds(actor);\r\n\t\t\t\t\t\treturn getSetting(\"staff-sort\") === \"bottom\"\r\n\t\t\t\t\t\t\t? max + 10000\r\n\t\t\t\t\t\t\t: min - 10000;\r\n\t\t\t\t\t})();\r\n\r\n\t\t\t\t\tconst entrySource = {\r\n\t\t\t\t\t\ttype: \"spellcastingEntry\",\r\n\t\t\t\t\t\tname: staff.name,\r\n\t\t\t\t\t\tsort,\r\n\t\t\t\t\t\tsystem: {\r\n\t\t\t\t\t\t\tability,\r\n\t\t\t\t\t\t\tprepared: { value: \"charge\" },\r\n\t\t\t\t\t\t\tshowSlotlessLevels: { value: false },\r\n\t\t\t\t\t\t\tshowUnpreparedSpells: { value: false },\r\n\t\t\t\t\t\t\tproficiency,\r\n\t\t\t\t\t\t\ttradition,\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\tflags: {\r\n\t\t\t\t\t\t\t[MODULE_ID]: {\r\n\t\t\t\t\t\t\t\ttype: \"staff\",\r\n\t\t\t\t\t\t\t\tstaff: {\r\n\t\t\t\t\t\t\t\t\tcharges: maxStaffCharges + overcharge,\r\n\t\t\t\t\t\t\t\t\tstaveID: staffID,\r\n\t\t\t\t\t\t\t\t\tovercharge,\r\n\t\t\t\t\t\t\t\t\tmakeshift,\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t};\r\n\r\n\t\t\t\t\taddItems.push(entrySource);\r\n\r\n\t\t\t\t\tawait Promise.all(\r\n\t\t\t\t\t\tuuids.map(async ({ rank, uuid }) => {\r\n\t\t\t\t\t\t\tconst source = await utils.createSpellSource(uuid);\r\n\t\t\t\t\t\t\tsetProperty(source, `flags.${MODULE_ID}.entry`, {\r\n\t\t\t\t\t\t\t\tlevel: rank,\r\n\t\t\t\t\t\t\t\ttype: \"staff\",\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\taddItems.push(source);\r\n\t\t\t\t\t\t}),\r\n\t\t\t\t\t);\r\n\r\n\t\t\t\t\tmessageObj.addGroup(\r\n\t\t\t\t\t\t\"staff\",\r\n\t\t\t\t\t\t45,\r\n\t\t\t\t\t\tlocalize(\r\n\t\t\t\t\t\t\t`staves.message.${overcharge ? \"withExpend\" : \"noExpend\"}`,\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tmakeshift: makeshift ? localize(\"staves.makeshift\") : \"\",\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t),\r\n\t\t\t\t\t);\r\n\t\t\t\t\tmessageObj.add(\"staff\", { uuid: staff.uuid });\r\n\t\t\t\t\tfor (const { uuid, name, rank } of expendedSpells) {\r\n\t\t\t\t\t\tmessageObj.add(\"staff\", {\r\n\t\t\t\t\t\t\tuuid,\r\n\t\t\t\t\t\t\tlabel: `${name} (${utils.spellRankLabel(rank)})`,\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tfor (const { item, key, process } of dailies) {\r\n\t\tif (!fields[key]) continue;\r\n\r\n\t\tconst dailyArgs = this.dailyArgs[key];\r\n\r\n\t\ttry {\r\n\t\t\tawait process({\r\n\t\t\t\t...dailyArgs,\r\n\t\t\t\tfields: fields[key],\r\n\t\t\t\tmessages: messageObj,\r\n\t\t\t\taddItem: (source) => addItems.push(source),\r\n\t\t\t\tupdateItem,\r\n\t\t\t\tremoveRule: (signature, parent) => {\r\n\t\t\t\t\tconst rules = getRules(parent ?? item);\r\n\t\t\t\t\tfor (let i = rules.length - 1; i >= 0; i--) {\r\n\t\t\t\t\t\tconst rule = rules[i];\r\n\t\t\t\t\t\tif (signature(rule)) {\r\n\t\t\t\t\t\t\trules.splice(i, 1);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\taddRule: (source, parent) => {\r\n\t\t\t\t\tsource[MODULE_ID] = true;\r\n\t\t\t\t\tgetRules(parent ?? item).push(source);\r\n\t\t\t\t},\r\n\t\t\t\taddFeat: (source, parent) => {\r\n\t\t\t\t\tconst parentItem = parent ?? item;\r\n\t\t\t\t\tif (parentItem.isOfType(\"feat\")) {\r\n\t\t\t\t\t\tconst parentId = parentItem.id;\r\n\t\t\t\t\t\tsetProperty(source, \"flags.pf2e.grantedBy\", {\r\n\t\t\t\t\t\t\tid: parentId,\r\n\t\t\t\t\t\t\tonDelete: \"cascade\",\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t\tsetProperty(source, `flags.${MODULE_ID}.grantedBy`, parentId);\r\n\t\t\t\t\t}\r\n\t\t\t\t\taddItems.push(source);\r\n\t\t\t\t},\r\n\t\t\t\taddSpell: (source, level) => {\r\n\t\t\t\t\tsetProperty(source, `flags.${MODULE_ID}.entry`, {\r\n\t\t\t\t\t\tlevel: level,\r\n\t\t\t\t\t\ttype: \"fallback\",\r\n\t\t\t\t\t});\r\n\t\t\t\t\taddItems.push(source);\r\n\t\t\t\t\taddedSpells = true;\r\n\t\t\t\t},\r\n\t\t\t});\r\n\t\t} catch (err) {\r\n\t\t\terror(\"error.unexpected\");\r\n\t\t\tconsole.error(err);\r\n\t\t\tconsole.error(`The error occured during processing of ${key}`);\r\n\t\t}\r\n\t}\r\n\r\n\tfor (const [key, rowFields] of Object.entries(fields)) {\r\n\t\tconst rows = this.rows[key];\r\n\t\tif (!rows) continue;\r\n\r\n\t\tfor (const { row, type, input, value, uuid } of Object.values(rowFields)) {\r\n\t\t\tif (type === \"random\" || rows[row]?.save === false) continue;\r\n\r\n\t\t\tflags[key] ??= {};\r\n\t\t\tconst flag = flags[key];\r\n\r\n\t\t\tif (type === \"combo\") {\r\n\t\t\t\tflag[row] = { input: input === \"true\", selected: value };\r\n\t\t\t} else if (type === \"drop\") {\r\n\t\t\t\tflag[row] = { uuid: uuid, name: value };\r\n\t\t\t} else {\r\n\t\t\t\tflag[row] = value;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tfor (const [id, rules] of addRules) {\r\n\t\tupdateItem({ _id: id, \"system.rules\": rules });\r\n\t}\r\n\r\n\tif (addedSpells) {\r\n\t\tconst entrySource = {\r\n\t\t\ttype: \"spellcastingEntry\",\r\n\t\t\tname: localize(\"spellEntry.name\"),\r\n\t\t\tsystem: {\r\n\t\t\t\tprepared: { value: \"innate\" },\r\n\t\t\t\tshowSlotlessLevels: { value: false },\r\n\t\t\t\tshowUnpreparedSpells: { value: false },\r\n\t\t\t\tproficiency: {\r\n\t\t\t\t\tvalue: 1,\r\n\t\t\t\t\tslug: actor.classDC?.slug || actor.class?.slug || undefined,\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t\tflags: {\r\n\t\t\t\t[MODULE_ID]: {\r\n\t\t\t\t\ttype: \"fallback\",\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t};\r\n\t\taddItems.push(entrySource);\r\n\t}\r\n\r\n\tfor (const source of addItems) {\r\n\t\tconst alreadyTemp = getProperty(source, \"system.temporary\") === true;\r\n\t\tif (!alreadyTemp) setProperty(source, `flags.${MODULE_ID}.temporary`, true);\r\n\t}\r\n\r\n\tif (addItems.length) {\r\n\t\tconst items = await actor.createEmbeddedDocuments(\"Item\", addItems);\r\n\r\n\t\tfor (const item of items) {\r\n\t\t\tif (item.isOfType(\"feat\")) {\r\n\t\t\t\t// we add itemGrants flag to the parent feat to have the cascade effect in the tab\r\n\t\t\t\tconst parentId = getFlag(item, \"grantedBy\");\r\n\t\t\t\tif (parentId) {\r\n\t\t\t\t\tconst slug = sluggify(item.name, { camel: \"dromedary\" });\r\n\t\t\t\t\tconst path = `flags.pf2e.itemGrants.${slug}`;\r\n\t\t\t\t\tupdateItem({\r\n\t\t\t\t\t\t_id: parentId,\r\n\t\t\t\t\t\t[path]: { id: item.id, onDelete: \"detach\" },\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t} else if (item.isOfType(\"spellcastingEntry\")) {\r\n\t\t\t\t// we add all the newly created spells with 'addSpell' to this spellcasting entry\r\n\t\t\t\tconst entryType = getFlag(item, \"type\");\r\n\t\t\t\tconst spells = items.filter(\r\n\t\t\t\t\t(item) =>\r\n\t\t\t\t\t\titem.isOfType(\"spell\") &&\r\n\t\t\t\t\t\tgetFlag(item, \"entry\")?.type === entryType,\r\n\t\t\t\t);\r\n\t\t\t\tfor (const spell of spells) {\r\n\t\t\t\t\tconst { level } = getFlag(spell, \"entry\");\r\n\t\t\t\t\tconst data = { _id: spell.id, \"system.location.value\": item.id };\r\n\t\t\t\t\tif (level !== undefined)\r\n\t\t\t\t\t\tdata[\"system.location.heightenedLevel\"] = level;\r\n\t\t\t\t\tupdateItem(data);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tawait actor.update({\r\n\t\t[`flags.${MODULE_ID}`]: { ...expandObject(flags), rested: false },\r\n\t});\r\n\r\n\tif (updateItems.size)\r\n\t\tawait actor.updateEmbeddedDocuments(\"Item\", updateItems.contents);\r\n\r\n\trawMessages.sort((a, b) => b.order - a.order);\r\n\tfor (const { message } of rawMessages) {\r\n\t\tchatContent += `${message}<hr />`;\r\n\t}\r\n\r\n\tchatContent += parseMessages(messages, chatContent);\r\n\tchatContent = chatContent\r\n\t\t? `${msg(\"changes\")}<hr />${chatContent}`\r\n\t\t: msg(\"noChanges\");\r\n\r\n\tChatMessage.create({\r\n\t\tcontent: chatContent,\r\n\t\tspeaker: ChatMessage.getSpeaker({ actor }),\r\n\t});\r\n}\r\n\r\nfunction parseMessages(messages) {\r\n\tconst msg = subLocalize(\"message\");\r\n\r\n\tconst messageList = Object.entries(messages).map(([type, options]) => {\r\n\t\toptions.label ??= msg.has(type) ? msg(type) : msg(\"gained\", { type });\r\n\t\treturn options;\r\n\t});\r\n\tmessageList.sort((a, b) => b.order - a.order);\r\n\r\n\tlet message = \"\";\r\n\r\n\tfor (const { label, messages } of messageList) {\r\n\t\tif (!messages.length) continue;\r\n\r\n\t\tif (message) message += \"<hr />\";\r\n\r\n\t\tif (label) message += `<p><strong>${label}</strong></p>`;\r\n\r\n\t\tfor (let { uuid, selected, label, random } of messages) {\r\n\t\t\tconst key = `label.${label}`;\r\n\t\t\tlabel = label && hasLocalization(key) ? localize(key) : label || \"\";\r\n\r\n\t\t\tmessage += \"<p>\";\r\n\t\t\tmessage += uuid\r\n\t\t\t\t? `${chatUUID(uuid, label)}`\r\n\t\t\t\t: `<strong>${label}</strong>`;\r\n\t\t\tif (selected) message += ` <span>${selected}</span>`;\r\n\t\t\tif (random) message += ' <i class=\"fa-solid fa-dice-d20\"></i>';\r\n\t\t\tmessage += \"</p>\";\r\n\t\t}\r\n\t}\r\n\r\n\treturn message;\r\n}\r\n\r\nfunction getFields() {\r\n\tconst elements = this.element\r\n\t\t.find(\".window-content .content\")\r\n\t\t.find(\"input:not(.alert), select[data-type]\")\r\n\t\t.toArray();\r\n\r\n\tconst fields = {};\r\n\r\n\tfor (const element of elements) {\r\n\t\tconst field = {\r\n\t\t\t...element.dataset,\r\n\t\t\tvalue: element.value,\r\n\t\t};\r\n\r\n\t\tif (field.type === \"combo\" && field.input === \"false\") {\r\n\t\t\tconst select = element.previousElementSibling;\r\n\t\t\tfield.value = select.value;\r\n\t\t\tfield.optionData = select.selectedOptions[0].dataset;\r\n\t\t}\r\n\r\n\t\tif (field.type === \"select\") {\r\n\t\t\tfield.optionData = element.selectedOptions[0].dataset;\r\n\t\t}\r\n\r\n\t\tfields[field.daily] ??= {};\r\n\t\tfields[field.daily][field.row] = field;\r\n\t}\r\n\r\n\treturn fields;\r\n}\r\n", "import { utils } from \"../api\";\r\nimport { DAILY_FILTERS, getDailies } from \"../dailies\";\r\nimport { getFamiliarPack } from \"../data/familiar\";\r\nimport {\r\n\tgetMaxSlotRankForStaves,\r\n\tgetStaves,\r\n\tisPF2eStavesActive,\r\n} from \"../data/staves\";\r\nimport {\r\n\tfindItemWithSourceId,\r\n\tgetFlag,\r\n\tgetSetting,\r\n\tsetFlag,\r\n\tsubLocalize,\r\n\ttemplatePath,\r\n} from \"../module\";\r\nimport { getPreparedSpellcastingEntriesForStaves } from \"../data/staves\";\r\nimport { getTemplate } from \"./interface/data\";\r\nimport { onDropFeat, onDropItem, onDropSpell } from \"./interface/drop\";\r\nimport { processData } from \"./interface/process\";\r\nimport { parseFilter } from \"./interface/shared\";\r\n\r\nconst localize = subLocalize(\"interface\");\r\n\r\nconst STAFF_NEXUS = \"Compendium.pf2e.classfeatures.Item.Klb35AwlkNrq1gpB\";\r\n\r\nexport class DailiesInterface extends Application {\r\n\tconstructor(actor, options, message) {\r\n\t\tsuper(options);\r\n\t\tthis._actor = actor;\r\n\t\tthis._dailies = [];\r\n\t\tthis._dailyArgs = {};\r\n\t\tthis._saved = {};\r\n\t\tthis._children = {};\r\n\t\tthis._custom = {};\r\n\t\tthis._predicate = {};\r\n\t\tthis._rows = {};\r\n\t\tthis._message = message;\r\n\t}\r\n\r\n\tstatic get defaultOptions() {\r\n\t\treturn mergeObject(Application.defaultOptions, {\r\n\t\t\tid: \"pf2e-dailies-interface\",\r\n\t\t\ttemplate: templatePath(\"interface.hbs\"),\r\n\t\t\theight: \"auto\",\r\n\t\t\twidth: 400,\r\n\t\t\tsubmitOnClose: false,\r\n\t\t\tsubmitOnChange: false,\r\n\t\t\tdragDrop: [\r\n\t\t\t\t{\r\n\t\t\t\t\tdropSelector: '[data-droppable=\"true\"]',\r\n\t\t\t\t},\r\n\t\t\t],\r\n\t\t});\r\n\t}\r\n\r\n\tget actor() {\r\n\t\treturn this._actor;\r\n\t}\r\n\r\n\tget dailies() {\r\n\t\treturn this._dailies;\r\n\t}\r\n\r\n\tget dailyArgs() {\r\n\t\treturn this._dailyArgs;\r\n\t}\r\n\r\n\tget saved() {\r\n\t\treturn this._saved;\r\n\t}\r\n\r\n\tget children() {\r\n\t\treturn this._children;\r\n\t}\r\n\r\n\tget custom() {\r\n\t\treturn this._custom;\r\n\t}\r\n\r\n\tget predicate() {\r\n\t\treturn this._predicate;\r\n\t}\r\n\r\n\tget rows() {\r\n\t\treturn this._rows;\r\n\t}\r\n\r\n\tasync getData(options) {\r\n\t\tconst templates = [];\r\n\t\tconst actor = this._actor;\r\n\t\tthis._dailies = getDailies(actor);\r\n\r\n\t\tif (actor.familiar && !DAILY_FILTERS.includes(\"dailies.familiar\")) {\r\n\t\t\tconst type = \"dailies.familiar\";\r\n\t\t\tconst localize = subLocalize(\"label\");\r\n\t\t\tconst nbAbilities = actor.attributes.familiarAbilities.value;\r\n\t\t\tconst pack = getFamiliarPack();\r\n\t\t\tconst flags = getFlag(actor, type) ?? {};\r\n\r\n\t\t\tconst template = {\r\n\t\t\t\tlabel: localize(\"familiar\"),\r\n\t\t\t\trows: [],\r\n\t\t\t};\r\n\r\n\t\t\tconst options = pack.index.map(({ _id, name }) => ({\r\n\t\t\t\tvalue: _id,\r\n\t\t\t\tlabel: name,\r\n\t\t\t}));\r\n\r\n\t\t\tconst customUUIDS = getSetting(\"familiar\").split(\",\");\r\n\t\t\tfor (let uuid of customUUIDS) {\r\n\t\t\t\tuuid = uuid.trim();\r\n\t\t\t\tconst item = await fromUuid(uuid);\r\n\t\t\t\tif (item?.isOfType(\"action\"))\r\n\t\t\t\t\toptions.push({ value: uuid, label: item.name });\r\n\t\t\t}\r\n\r\n\t\t\toptions.sort((a, b) => a.label.localeCompare(b.label));\r\n\r\n\t\t\tfor (let index = 0; index < nbAbilities; index++) {\r\n\t\t\t\ttemplate.rows.push({\r\n\t\t\t\t\tlabel: localize(\"ability\", { nb: index + 1 }),\r\n\t\t\t\t\tvalue: flags[`${index}`] ?? \"\",\r\n\t\t\t\t\torder: 100,\r\n\t\t\t\t\toptions,\r\n\t\t\t\t\tdata: {\r\n\t\t\t\t\t\ttype: \"select\",\r\n\t\t\t\t\t\tdaily: type,\r\n\t\t\t\t\t\trow: index.toString(),\r\n\t\t\t\t\t\tunique: \"ability\",\r\n\t\t\t\t\t},\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\tif (template.rows.length) {\r\n\t\t\t\tthis._rows[type] = template.rows.reduce((rows, { data }) => {\r\n\t\t\t\t\trows[data.row] = { save: true };\r\n\t\t\t\t\treturn rows;\r\n\t\t\t\t}, {});\r\n\t\t\t\ttemplates.push(template);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (!DAILY_FILTERS.includes(\"dailies.staves\") && !isPF2eStavesActive()) {\r\n\t\t\tconst staves = getStaves(actor);\r\n\r\n\t\t\tif (staves.length) {\r\n\t\t\t\tconst maxStaffCharges = getMaxSlotRankForStaves(actor);\r\n\r\n\t\t\t\tif (maxStaffCharges) {\r\n\t\t\t\t\tconst type = \"dailies.staff\";\r\n\t\t\t\t\tconst flags = getFlag(actor, type) ?? {};\r\n\t\t\t\t\tconst options = staves.map((staff) => ({\r\n\t\t\t\t\t\tvalue: staff.id,\r\n\t\t\t\t\t\tlabel: staff.name,\r\n\t\t\t\t\t}));\r\n\t\t\t\t\toptions.sort((a, b) => a.label.localeCompare(b.label));\r\n\r\n\t\t\t\t\tconst staffIdRow = {\r\n\t\t\t\t\t\tlabel: localize(\"staves.staff\"),\r\n\t\t\t\t\t\tvalue: flags.staffID ?? \"\",\r\n\t\t\t\t\t\torder: 100,\r\n\t\t\t\t\t\toptions,\r\n\t\t\t\t\t\tdata: {\r\n\t\t\t\t\t\t\ttype: \"select\",\r\n\t\t\t\t\t\t\tdaily: type,\r\n\t\t\t\t\t\t\trow: \"staffID\",\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t};\r\n\r\n\t\t\t\t\tconst template = {\r\n\t\t\t\t\t\tlabel: localize(\"staves.prepare\"),\r\n\t\t\t\t\t\trows: [staffIdRow],\r\n\t\t\t\t\t};\r\n\r\n\t\t\t\t\tthis._rows[type] = {\r\n\t\t\t\t\t\tstaffID: { save: true },\r\n\t\t\t\t\t};\r\n\r\n\t\t\t\t\tconst preparedEntries =\r\n\t\t\t\t\t\tgetPreparedSpellcastingEntriesForStaves(actor);\r\n\t\t\t\t\tif (preparedEntries.length) {\r\n\t\t\t\t\t\tpreparedEntries.sort((a, b) =>\r\n\t\t\t\t\t\t\t!!a.slot === !!b.slot\r\n\t\t\t\t\t\t\t\t? a.name.localeCompare(b.name)\r\n\t\t\t\t\t\t\t\t: a.slot\r\n\t\t\t\t\t\t\t\t  ? -1\r\n\t\t\t\t\t\t\t\t  : b.slot\r\n\t\t\t\t\t\t\t\t\t  ? 1\r\n\t\t\t\t\t\t\t\t\t  : 0,\r\n\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\tconst options = [{ value: \"\", label: \"\" }];\r\n\t\t\t\t\t\tconst flexibleLabel = game.i18n.localize(\"PF2E.SpellFlexibleLabel\");\r\n\r\n\t\t\t\t\t\tfor (const entry of preparedEntries) {\r\n\t\t\t\t\t\t\tconst entryId = entry.id;\r\n\r\n\t\t\t\t\t\t\toptions.push({ groupStart: true, label: entry.name });\r\n\r\n\t\t\t\t\t\t\tfor (const spell of entry.spells ?? []) {\r\n\t\t\t\t\t\t\t\toptions.push({\r\n\t\t\t\t\t\t\t\t\tvalue: spell.id,\r\n\t\t\t\t\t\t\t\t\tlabel: `${spell.name} (${utils.spellRankLabel(spell.rank)})`,\r\n\t\t\t\t\t\t\t\t\tdata: {\r\n\t\t\t\t\t\t\t\t\t\ttype: \"spell\",\r\n\t\t\t\t\t\t\t\t\t\trank: spell.rank,\r\n\t\t\t\t\t\t\t\t\t\tspell: spell.id,\r\n\t\t\t\t\t\t\t\t\t\tunique: `${spell.id}.${spell.rank}.${spell.index}`,\r\n\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tfor (const slot of entry.slots ?? []) {\r\n\t\t\t\t\t\t\t\tconst rankLabel = utils.spellRankLabel(slot.rank);\r\n\r\n\t\t\t\t\t\t\t\tconst data = {\r\n\t\t\t\t\t\t\t\t\ttype: \"slot\",\r\n\t\t\t\t\t\t\t\t\trank: slot.rank,\r\n\t\t\t\t\t\t\t\t\tentry: entryId,\r\n\t\t\t\t\t\t\t\t};\r\n\r\n\t\t\t\t\t\t\t\tif (slot.value > 1) {\r\n\t\t\t\t\t\t\t\t\tdata.skipUnique = true;\r\n\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\tdata.unique = `${entryId}.${slot.rank}`;\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\toptions.push({\r\n\t\t\t\t\t\t\t\t\tvalue: slot.rank,\r\n\t\t\t\t\t\t\t\t\tlabel: `${flexibleLabel} ${slot.value}/${slot.max} (${rankLabel})`,\r\n\t\t\t\t\t\t\t\t\tdata,\r\n\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\toptions.push({ groupEnd: true });\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tconst staffNexus = findItemWithSourceId(actor, STAFF_NEXUS, \"feat\");\r\n\t\t\t\t\t\tconst nbExpends =\r\n\t\t\t\t\t\t\tstaffNexus && actor.level >= 8 ? (actor.level >= 16 ? 3 : 2) : 1;\r\n\r\n\t\t\t\t\t\tif (staffNexus) {\r\n\t\t\t\t\t\t\tstaffIdRow.data.makeshift = true;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tfor (let i = 1; i <= nbExpends; i++) {\r\n\t\t\t\t\t\t\ttemplate.rows.push({\r\n\t\t\t\t\t\t\t\tlabel: localize(\"staves.expend\"),\r\n\t\t\t\t\t\t\t\tvalue: \"\",\r\n\t\t\t\t\t\t\t\torder: 100,\r\n\t\t\t\t\t\t\t\toptions,\r\n\t\t\t\t\t\t\t\tdata: {\r\n\t\t\t\t\t\t\t\t\ttype: \"select\",\r\n\t\t\t\t\t\t\t\t\tdaily: type,\r\n\t\t\t\t\t\t\t\t\trow: `expend${i}`,\r\n\t\t\t\t\t\t\t\t\tunique: \"expend\",\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\tthis._rows[type][`expend${i}`] = { save: false };\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\ttemplates.push(template);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfor (const daily of this._dailies) {\r\n\t\t\ttry {\r\n\t\t\t\tconst template = await getTemplate.call(this, daily);\r\n\t\t\t\ttemplates.push(template);\r\n\t\t\t} catch (error) {\r\n\t\t\t\tlocalize.error(\"error.unexpected\");\r\n\t\t\t\tconsole.error(error);\r\n\t\t\t\tconsole.error(`The error occured during templating of ${daily.key}`);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tconst rows = [];\r\n\t\tconst groups = [];\r\n\t\tfor (const template of templates) {\r\n\t\t\tif (template.rows.length > 1) groups.push(template);\r\n\t\t\telse if (template.rows.length) rows.push(template);\r\n\t\t}\r\n\r\n\t\trows.sort((a, b) => b.rows[0].order - a.rows[0].order);\r\n\t\tgroups.sort((a, b) => a.rows.length - b.rows.length);\r\n\r\n\t\treturn mergeObject(super.getData(options), {\r\n\t\t\ti18n: localize,\r\n\t\t\tdump: ({ value, placeholder, data }) => {\r\n\t\t\t\tlet msg = \"\";\r\n\t\t\t\tif (value) msg += ` value=\"${value}\"`;\r\n\t\t\t\tif (placeholder) msg += ` placeholder=\"${placeholder}\"`;\r\n\t\t\t\tif (typeof data === \"object\") {\r\n\t\t\t\t\tfor (const [key, value] of Object.entries(data)) {\r\n\t\t\t\t\t\tconst formattedKey = key.replace(/[A-Z]/g, (c) => `-${c}`);\r\n\t\t\t\t\t\tmsg += ` data-${formattedKey}=\"${value}\"`;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif (msg) msg += \" \";\r\n\t\t\t\treturn msg;\r\n\t\t\t},\r\n\t\t\trows,\r\n\t\t\tgroups,\r\n\t\t\thasDailies: rows.length || groups.length,\r\n\t\t});\r\n\t}\r\n\r\n\trender(force, options) {\r\n\t\tif (this._randomInterval) clearInterval(this._randomInterval);\r\n\r\n\t\tif (this.element.find(\"select.random\")) {\r\n\t\t\tthis._randomInterval = setInterval(() => {\r\n\t\t\t\tconst randoms = this.element.find(\"select.random\");\r\n\t\t\t\trandoms.each((_, select) => {\r\n\t\t\t\t\tselect.selectedIndex =\r\n\t\t\t\t\t\t(select.selectedIndex + 1) % select.options.length;\r\n\t\t\t\t});\r\n\t\t\t}, 2000);\r\n\t\t}\r\n\r\n\t\treturn super.render(force, options);\r\n\t}\r\n\r\n\tclose(options) {\r\n\t\tif (this._randomInterval) clearInterval(this._randomInterval);\r\n\t\treturn super.close(options);\r\n\t}\r\n\r\n\tactivateListeners(html) {\r\n\t\tsuper.activateListeners(html);\r\n\r\n\t\thtml.find(\"[data-action=clear]\").on(\"click\", this.#onClear.bind(this));\r\n\t\thtml.find(\"[data-action=accept]\").on(\"click\", this.#onAccept.bind(this));\r\n\t\thtml.find(\"[data-action=cancel]\").on(\"click\", this.#onCancel.bind(this));\r\n\r\n\t\thtml\r\n\t\t\t.find(\".combo select\")\r\n\t\t\t.on(\"change\", this.#onComboSelectChange.bind(this));\r\n\t\thtml.find(\".combo input\").on(\"change\", this.#onComboInputChange.bind(this));\r\n\r\n\t\thtml.find(\"[data-action=search]\").on(\"click\", this.#onSearch.bind(this));\r\n\r\n\t\thtml.find(\"[data-action=alert]\").on(\"click\", this.#onAlert.bind(this));\r\n\r\n\t\tconst uniqueSelects = html.find(\"select[data-unique]\");\r\n\t\tuniqueSelects.on(\"change\", (event) =>\r\n\t\t\tthis.#cleanUniqueSelects(event.currentTarget, true),\r\n\t\t);\r\n\t\t{\r\n\t\t\tconst processedUniques = [];\r\n\r\n\t\t\tfor (const select of uniqueSelects) {\r\n\t\t\t\tconst { unique, daily } = select.dataset;\r\n\t\t\t\tconst uniqueTag = `${daily}.${unique}`;\r\n\t\t\t\tif (processedUniques.includes(uniqueTag)) continue;\r\n\r\n\t\t\t\tprocessedUniques.push(uniqueTag);\r\n\t\t\t\tthis.#cleanUniqueSelects(select, false);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t_canDragDrop(selector) {\r\n\t\treturn true;\r\n\t}\r\n\r\n\tasync _onDrop(event) {\r\n\t\tconst localize = subLocalize(\"interface.error.drop\");\r\n\t\tlet target = event.target;\r\n\t\tif (target instanceof HTMLLabelElement) target = target.nextElementSibling;\r\n\r\n\t\ttry {\r\n\t\t\tconst dataString = event.dataTransfer?.getData(\"text/plain\");\r\n\t\t\tconst data = JSON.parse(dataString);\r\n\r\n\t\t\tif (!data || data.type !== \"Item\" || typeof data.uuid !== \"string\")\r\n\t\t\t\treturn localize.warn(\"wrongDataType\");\r\n\r\n\t\t\tconst item = await fromUuid(data.uuid);\r\n\t\t\tif (!item) return localize.warn(\"wrongDataType\");\r\n\r\n\t\t\tconst filter = await this.#getfilterFromElement(target);\r\n\t\t\tif (!filter) return onDropItem(item, target);\r\n\r\n\t\t\tif (filter.type === \"feat\") onDropFeat.call(this, item, target, filter);\r\n\t\t\telse if (filter.type === \"spell\")\r\n\t\t\t\tonDropSpell.call(this, item, target, filter);\r\n\t\t\telse onDropItem(item, target);\r\n\t\t} catch (error) {\r\n\t\t\tlocalize.error(\"error.unexpected\");\r\n\t\t\tconsole.error(error);\r\n\t\t\tconsole.error(\"The error occured during _onDrop\");\r\n\t\t}\r\n\t}\r\n\r\n\tasync #onAlert(event) {\r\n\t\tevent.preventDefault();\r\n\t\tthis.#lock();\r\n\r\n\t\tconst data = event.currentTarget.dataset;\r\n\t\tconst row = this.rows[data.daily][data.row];\r\n\t\tconst args = this.dailyArgs[data.daily];\r\n\r\n\t\tlet fixed;\r\n\t\ttry {\r\n\t\t\tfixed = await row.fix(args);\r\n\t\t} catch (error) {\r\n\t\t\tlocalize.error(\"error.unexpected\");\r\n\t\t\tconsole.error(error);\r\n\t\t\tconsole.error(`The error occured during an alert fix of '${data.daily}'`);\r\n\t\t}\r\n\r\n\t\tthis.#unlock();\r\n\t\tif (fixed) this.render();\r\n\t}\r\n\r\n\tasync #onSearch(event) {\r\n\t\tevent.preventDefault();\r\n\t\tconst filter = await this.#getfilterFromElement(event.currentTarget, true);\r\n\t\tif (filter) game.pf2e.compendiumBrowser.openTab(filter.type, filter.search);\r\n\t\telse game.pf2e.compendiumBrowser.render(true);\r\n\t}\r\n\r\n\tasync #getfilterFromElement(element, parsed) {\r\n\t\tconst { daily, row } = element.dataset;\r\n\t\tconst filter = this.rows[daily]?.[row]?.filter;\r\n\t\tconst args = this.dailyArgs[daily];\r\n\r\n\t\tif (!args || !filter) return;\r\n\r\n\t\tif (typeof filter.search === \"function\")\r\n\t\t\tfilter.search = await filter.search(args);\r\n\r\n\t\tif (!parsed) return filter;\r\n\r\n\t\treturn parseFilter.call(this, filter);\r\n\t}\r\n\r\n\t#onComboSelectChange(event) {\r\n\t\tconst select = event.currentTarget;\r\n\t\tconst input = select.nextElementSibling;\r\n\t\tinput.dataset.input = \"false\";\r\n\t\tinput.value = select.options[select.selectedIndex].text;\r\n\t}\r\n\r\n\t#onComboInputChange(event) {\r\n\t\tconst input = event.currentTarget;\r\n\t\tconst select = input.previousElementSibling;\r\n\t\tconst value = input.value.toLowerCase();\r\n\t\tconst options = Array.from(select.options).map((x) => x.value);\r\n\r\n\t\tconst index = options.indexOf(value);\r\n\t\tif (index !== -1) {\r\n\t\t\tselect.value = value;\r\n\t\t\tinput.value = select.options[index].text;\r\n\t\t\tinput.dataset.input = \"false\";\r\n\t\t} else {\r\n\t\t\tselect.value = \"\";\r\n\t\t\tinput.dataset.input = \"true\";\r\n\t\t}\r\n\t}\r\n\r\n\t#lock() {\r\n\t\tthis.element.addClass(\"disabled\");\r\n\t}\r\n\r\n\t#unlock() {\r\n\t\tthis.element.removeClass(\"disabled\");\r\n\t}\r\n\r\n\t#validate() {\r\n\t\tconst warns = [];\r\n\t\tconst html = this.element;\r\n\r\n\t\tconst emptyInputs = html.find(\"input\").filter((_, input) => !input.value);\r\n\t\tconst alertInputs = html.find(\"input.alert\");\r\n\r\n\t\tif (emptyInputs.length) warns.push(\"error.empty\");\r\n\t\tif (alertInputs.length) warns.push(\"error.unattended\");\r\n\r\n\t\thtml.find(\"label\").removeClass(\"empty\");\r\n\r\n\t\tfor (const input of emptyInputs) {\r\n\t\t\tconst parent = input.parentElement;\r\n\t\t\tconst target = parent.classList.contains(\"combo\") ? parent : input;\r\n\t\t\ttarget.previousElementSibling.classList.add(\"empty\");\r\n\t\t}\r\n\r\n\t\tfor (const warning of warns) {\r\n\t\t\tlocalize.warn(warning);\r\n\t\t}\r\n\r\n\t\treturn !warns.length;\r\n\t}\r\n\r\n\tasync #onAccept(event) {\r\n\t\tevent.preventDefault();\r\n\t\tif (!this.#validate()) return;\r\n\r\n\t\tthis.#lock();\r\n\r\n\t\tawait processData.call(this);\r\n\r\n\t\tif (this._message) {\r\n\t\t\tsetFlag(this._message, \"prepared\", true);\r\n\t\t}\r\n\r\n\t\tthis.close();\r\n\t}\r\n\r\n\t#onClear(event) {\r\n\t\tevent.preventDefault();\r\n\t\tconst target = $(event.currentTarget);\r\n\t\tconst input = target.prevAll(\"input\").first();\r\n\t\tinput.val(\"\");\r\n\t\tinput.attr(\"value\", \"\");\r\n\t\tinput.attr(\"data-uuid\", \"\");\r\n\t\ttarget.addClass(\"disabled\");\r\n\t}\r\n\r\n\t#onCancel(event) {\r\n\t\tevent.preventDefault();\r\n\t\tthis.close();\r\n\t}\r\n\r\n\t#cleanUniqueSelects(select, isTarget) {\r\n\t\tconst uniqueTag = select.dataset.unique;\r\n\t\tconst children = isTarget\r\n\t\t\t? [select, ...getSiblings(select, `select[data-unique=\"${uniqueTag}\"]`)]\r\n\t\t\t: select.parentElement.querySelectorAll(\r\n\t\t\t\t\t`:scope > select[data-unique=\"${uniqueTag}\"]`,\r\n\t\t\t  );\r\n\r\n\t\tconst uniqueOptions = new Set();\r\n\r\n\t\tfor (const child of children) {\r\n\t\t\tlet childIndex = child.selectedIndex;\r\n\t\t\tconst childOptions = child.options;\r\n\r\n\t\t\tconst optionUniqueValue = () => {\r\n\t\t\t\tconst option = childOptions[childIndex];\r\n\t\t\t\treturn option.dataset.skipUnique\r\n\t\t\t\t\t? undefined\r\n\t\t\t\t\t: option.dataset.unique ?? option.value;\r\n\t\t\t};\r\n\r\n\t\t\tconst optionExists = () => {\r\n\t\t\t\tconst value = optionUniqueValue();\r\n\t\t\t\treturn value && uniqueOptions.has(value);\r\n\t\t\t};\r\n\r\n\t\t\twhile (optionExists() && childIndex > 0) {\r\n\t\t\t\tchildIndex -= 1;\r\n\t\t\t}\r\n\r\n\t\t\tconst maxIndex = child.options.length - 1;\r\n\t\t\twhile (optionExists() && childIndex < maxIndex) {\r\n\t\t\t\tchildIndex += 1;\r\n\t\t\t}\r\n\r\n\t\t\tif (optionExists()) continue;\r\n\r\n\t\t\tconst finalValue = optionUniqueValue();\r\n\t\t\tif (finalValue) uniqueOptions.add(finalValue);\r\n\r\n\t\t\tif (child.selectedIndex !== childIndex) {\r\n\t\t\t\tchild.selectedIndex = childIndex;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfor (const child of children) {\r\n\t\t\tconst childIndex = child.selectedIndex;\r\n\t\t\tconst childOptions = child.options;\r\n\r\n\t\t\tfor (let index = 0; index < childOptions.length; index++) {\r\n\t\t\t\tif (index === childIndex) continue;\r\n\r\n\t\t\t\tconst option = childOptions[index];\r\n\t\t\t\toption.disabled = uniqueOptions.has(\r\n\t\t\t\t\toption.dataset.unique ?? option.value,\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\nfunction getSiblings(el, selector) {\r\n\tconst siblings = [];\r\n\r\n\tconst parent = el.parentElement;\r\n\tif (!parent) return siblings;\r\n\r\n\tconst children = selector\r\n\t\t? parent.querySelectorAll(`:scope > ${selector}`)\r\n\t\t: parent.children;\r\n\tfor (const child of children) {\r\n\t\tif (child === el) continue;\r\n\t\tsiblings.push(child);\r\n\t}\r\n\r\n\treturn siblings;\r\n}\r\n", "import { isInstanceOf } from \"../module\";\r\n\r\nconst CANTRIP_DECK_ID = \"tLa4bewBhyqzi6Ow\";\r\n\r\nconst scrollCompendiumIds = {\r\n\t1: \"RjuupS9xyXDLgyIr\",\r\n\t2: \"Y7UD64foDbDMV9sx\",\r\n\t3: \"ZmefGBXGJF3CFDbn\",\r\n\t4: \"QSQZJ5BC3DeHv153\",\r\n\t5: \"tjLvRWklAylFhBHQ\",\r\n\t6: \"4sGIy77COooxhQuC\",\r\n\t7: \"fomEZZ4MxVVK3uVu\",\r\n\t8: \"iPki3yuoucnj7bIt\",\r\n\t9: \"cFHomF3tty8Wi1e5\",\r\n\t10: \"o1XIHJ4MJyroAHfF\",\r\n};\r\n\r\nconst wandCompendiumIds = {\r\n\t1: \"UJWiN0K3jqVjxvKk\",\r\n\t2: \"vJZ49cgi8szuQXAD\",\r\n\t3: \"wrDmWkGxmwzYtfiA\",\r\n\t4: \"Sn7v9SsbEDMUIwrO\",\r\n\t5: \"5BF7zMnrPYzyigCs\",\r\n\t6: \"kiXh4SUWKr166ZeM\",\r\n\t7: \"nmXPj9zuMRQBNT60\",\r\n\t8: \"Qs8RgNH6thRPv2jt\",\r\n\t9: \"Fgv722039TVM5JTc\",\r\n};\r\n\r\nconst SPELL_CONSUMABLE_NAME_TEMPLATES = {\r\n\tcantripDeck5: \"PF2E.Item.Physical.FromSpell.CantripDeck5\",\r\n\tscroll: \"PF2E.Item.Physical.FromSpell.Scroll\",\r\n\twand: \"PF2E.Item.Physical.FromSpell.Wand\",\r\n};\r\n\r\nconst MAGIC_TRADITIONS = new Set([\"arcane\", \"divine\", \"occult\", \"primal\"]);\r\n\r\nexport async function createConsumableFromSpell(\r\n\tuuid,\r\n\ttype,\r\n\t{ heightenedLevel, mystified = false, temp = false, itemName, itemImg },\r\n) {\r\n\tconst spell = await fromUuid(uuid);\r\n\tif (!spell) return null;\r\n\r\n\theightenedLevel ??= spell.baseRank;\r\n\r\n\tif (!itemName || typeof itemName !== \"string\") {\r\n\t\titemName ??= type;\r\n\t}\r\n\r\n\tconst pack = game.packs.find((p) => p.collection === \"pf2e.equipment-srd\");\r\n\tconst itemId = getIdForSpellConsumable(type, heightenedLevel);\r\n\tconst consumable = await pack?.getDocument(itemId ?? \"\");\r\n\tif (!isInstanceOf(consumable, \"ConsumablePF2e\")) return null;\r\n\r\n\tconst consumableSource = { ...consumable.toObject(), _id: null };\r\n\r\n\tconst traits = consumableSource.system.traits;\r\n\ttraits.value = Array.from(new Set([...traits.value, ...spell.traits]));\r\n\ttraits.rarity = spell.rarity;\r\n\tif (\r\n\t\ttraits.value.includes(\"magical\") &&\r\n\t\ttraits.value.some((trait) => MAGIC_TRADITIONS.has(trait))\r\n\t) {\r\n\t\ttraits.value.splice(traits.value.indexOf(\"magical\"), 1);\r\n\t}\r\n\ttraits.value.sort();\r\n\r\n\tconsumableSource.name = getNameForSpellConsumable(\r\n\t\titemName,\r\n\t\tspell.name,\r\n\t\theightenedLevel,\r\n\t);\r\n\tconst description = consumableSource.system.description.value;\r\n\r\n\tconsumableSource.system.description.value = (() => {\r\n\t\tconst paragraphElement = document.createElement(\"p\");\r\n\t\tparagraphElement.append(\r\n\t\t\tspell.sourceId\r\n\t\t\t\t? `@UUID[${spell.sourceId}]{${spell.name}}`\r\n\t\t\t\t: spell.description,\r\n\t\t);\r\n\r\n\t\tconst containerElement = document.createElement(\"div\");\r\n\t\tconst hrElement = document.createElement(\"hr\");\r\n\t\tcontainerElement.append(paragraphElement, hrElement);\r\n\t\thrElement.insertAdjacentHTML(\"afterend\", description);\r\n\r\n\t\treturn containerElement.innerHTML;\r\n\t})();\r\n\r\n\tif (type !== \"cantripDeck5\") {\r\n\t\tconsumableSource.system.spell = spell\r\n\t\t\t.clone(\r\n\t\t\t\t{\r\n\t\t\t\t\t_id: randomID(),\r\n\t\t\t\t\t\"system.location.heightenedLevel\": heightenedLevel,\r\n\t\t\t\t},\r\n\t\t\t\t{ keepId: true },\r\n\t\t\t)\r\n\t\t\t.toObject();\r\n\t}\r\n\r\n\tif (mystified) {\r\n\t\tconsumableSource.system.identification.status = \"unidentified\";\r\n\t}\r\n\r\n\tif (typeof itemImg === \"string\") {\r\n\t\tconsumableSource.img = itemImg;\r\n\t}\r\n\r\n\tconsumableSource.system.temporary = temp;\r\n\r\n\treturn consumableSource;\r\n}\r\n\r\nfunction getIdForSpellConsumable(type, heightenedLevel) {\r\n\tswitch (type) {\r\n\t\tcase \"cantripDeck5\":\r\n\t\t\treturn CANTRIP_DECK_ID;\r\n\t\tcase \"scroll\":\r\n\t\t\treturn scrollCompendiumIds[heightenedLevel] ?? null;\r\n\t\tdefault:\r\n\t\t\treturn wandCompendiumIds[heightenedLevel] ?? null;\r\n\t}\r\n}\r\n\r\nfunction getNameForSpellConsumable(type, spellName, heightenedLevel) {\r\n\tconst templateId =\r\n\t\tSPELL_CONSUMABLE_NAME_TEMPLATES[type] ||\r\n\t\t`${type} of {name} (Level {level})`;\r\n\r\n\treturn game.i18n.format(templateId, {\r\n\t\tname: spellName,\r\n\t\tlevel: heightenedLevel,\r\n\t});\r\n}\r\n", "import { canPrepDailies } from \"./actor\";\r\nimport { DailiesInterface } from \"./apps/interface\";\r\nimport {\r\n\tcapitalize,\r\n\tgetSetting,\r\n\tlocalize,\r\n\tsequenceArray,\r\n\twarn,\r\n} from \"./module\";\r\nimport { createConsumableFromSpell } from \"./pf2e/spell\";\r\n\r\nconst halfLevelString = \"max(1,floor(@actor.level/2))\";\r\n\r\nconst RUNE_PROPERTY_KEYS = [\r\n\t\"propertyRune1\",\r\n\t\"propertyRune2\",\r\n\t\"propertyRune3\",\r\n\t\"propertyRune4\",\r\n];\r\n\r\nlet SKILLNAMES;\r\nlet LANGUAGES;\r\n\r\nexport const utils = {\r\n\t// Skills\r\n\tget skillNames() {\r\n\t\tSKILLNAMES ??= Object.keys(CONFIG.PF2E.skillList).filter(\r\n\t\t\t(skill) => skill !== \"lore\",\r\n\t\t);\r\n\t\treturn SKILLNAMES.slice();\r\n\t},\r\n\tskillLabel: (skill) => {\r\n\t\treturn game.i18n.localize(CONFIG.PF2E.skillList[skill]);\r\n\t},\r\n\tcreateSkillRuleElement: ({ skill, value, mode = \"upgrade\", predicate }) => {\r\n\t\tconst rule = {\r\n\t\t\tkey: \"ActiveEffectLike\",\r\n\t\t\tmode,\r\n\t\t\tpath: `system.skills.${skill}.rank`,\r\n\t\t\tvalue,\r\n\t\t};\r\n\t\tif (predicate?.length) rule.predicate = predicate;\r\n\t\treturn rule;\r\n\t},\r\n\tcreateLoreSource: ({ name, rank }) => {\r\n\t\tconst data = {\r\n\t\t\ttype: \"lore\",\r\n\t\t\timg: \"systems/pf2e/icons/default-icons/lore.svg\",\r\n\t\t\tname,\r\n\t\t\tsystem: { proficient: { value: rank } },\r\n\t\t};\r\n\t\treturn data;\r\n\t},\r\n\tgetTranslatedSkills: (lowercase = false) => {\r\n\t\treturn Object.entries(CONFIG.PF2E.skillList).reduce(\r\n\t\t\t(result, [key, value]) => {\r\n\t\t\t\tconst localized = game.i18n.localize(value);\r\n\t\t\t\tresult[key] = lowercase\r\n\t\t\t\t\t? localized.toLocaleLowerCase(game.i18n.lang)\r\n\t\t\t\t\t: localized;\r\n\t\t\t\treturn result;\r\n\t\t\t},\r\n\t\t\t{},\r\n\t\t);\r\n\t},\r\n\t// Languages\r\n\tget languageNames() {\r\n\t\tLANGUAGES ??= Object.keys(CONFIG.PF2E.languages);\r\n\t\treturn LANGUAGES.slice();\r\n\t},\r\n\tlanguageLabel: (language) => {\r\n\t\treturn game.i18n.localize(CONFIG.PF2E.languages[language]);\r\n\t},\r\n\tcreateLanguageRuleElement: ({ language, mode = \"add\", predicate }) => {\r\n\t\tconst rule = {\r\n\t\t\tkey: \"ActiveEffectLike\",\r\n\t\t\tmode,\r\n\t\t\tpath: \"system.details.languages.value\",\r\n\t\t\tvalue: language,\r\n\t\t};\r\n\t\tif (predicate?.length) rule.predicate = predicate;\r\n\t\treturn rule;\r\n\t},\r\n\t// resistances\r\n\tresistanceLabel: (resistance, value) => {\r\n\t\tlet str = game.i18n.localize(`PF2E.Trait${capitalize(resistance)}`);\r\n\t\tif (value) str += ` ${value}`;\r\n\t\treturn str;\r\n\t},\r\n\tcreateResistanceRuleElement: ({ type, value, predicate }) => {\r\n\t\tif (value === \"half\") value = halfLevelString;\r\n\t\tconst rule = {\r\n\t\t\tkey: \"Resistance\",\r\n\t\t\ttype,\r\n\t\t\tvalue,\r\n\t\t};\r\n\t\tif (predicate?.length) rule.predicate = predicate;\r\n\t\treturn rule;\r\n\t},\r\n\t// feats\r\n\tcreateFeatSource: async (uuid) => {\r\n\t\tconst source = (await fromUuid(uuid))?.toObject();\r\n\t\tif (!source)\r\n\t\t\tthrow new Error(\r\n\t\t\t\t`An error occured while trying to create a feat source with uuid: ${uuid}`,\r\n\t\t\t);\r\n\t\treturn source;\r\n\t},\r\n\t// spells\r\n\tcreateSpellScrollSource: async ({ uuid, level, itemName, itemImg }) => {\r\n\t\tconst source = await createConsumableFromSpell(uuid, \"scroll\", {\r\n\t\t\theightenedLevel: level,\r\n\t\t\ttemp: true,\r\n\t\t\titemName,\r\n\t\t\titemImg,\r\n\t\t});\r\n\t\tif (!source)\r\n\t\t\tthrow new Error(\r\n\t\t\t\t`An error occured while trying to create a spell scroll source with uuid: ${uuid}`,\r\n\t\t\t);\r\n\t\treturn source;\r\n\t},\r\n\tcreateWandSource: async ({ uuid, level, itemName, itemImg }) => {\r\n\t\tconst source = await createConsumableFromSpell(uuid, \"wand\", {\r\n\t\t\theightenedLevel: level,\r\n\t\t\ttemp: true,\r\n\t\t\titemName,\r\n\t\t\titemImg,\r\n\t\t});\r\n\t\tif (!source)\r\n\t\t\tthrow new Error(\r\n\t\t\t\t`An error occured while trying to create a wand source with uuid: ${uuid}`,\r\n\t\t\t);\r\n\t\treturn source;\r\n\t},\r\n\tcreateSpellSource: async (uuid) => {\r\n\t\tconst source = (await fromUuid(uuid))?.toObject();\r\n\t\tif (!source)\r\n\t\t\tthrow new Error(\r\n\t\t\t\t`An error occured while trying to create a spell source with uuid: ${uuid}`,\r\n\t\t\t);\r\n\t\treturn source;\r\n\t},\r\n\tspellRankLabel: (rank) => {\r\n\t\treturn game.i18n.format(\"PF2E.Item.Spell.Rank.Ordinal\", {\r\n\t\t\trank: ordinalString(rank),\r\n\t\t});\r\n\t},\r\n\t// Rule Elements\r\n\tget halfLevelString() {\r\n\t\treturn halfLevelString;\r\n\t},\r\n\tgetChoiSetRuleSelection: (item, option) => {\r\n\t\tconst rules = item._source.system.rules;\r\n\t\tconst rule = rules.find(\r\n\t\t\t(rule) =>\r\n\t\t\t\trule.key === \"ChoiceSet\" && (!option || rule.rollOption === option),\r\n\t\t);\r\n\t\treturn rule?.selection;\r\n\t},\r\n\t//\r\n\tproficiencyLabel: (rank) => {\r\n\t\treturn game.i18n.localize(CONFIG.PF2E.proficiencyLevels[rank]);\r\n\t},\r\n\trandomOption: async (options) => {\r\n\t\tconst roll = (\r\n\t\t\tawait new Roll(`1d${options.length}`).evaluate({ async: true })\r\n\t\t).total;\r\n\t\tconst result = options[roll - 1];\r\n\t\tif (typeof result === \"string\") return result;\r\n\t\treturn result.value;\r\n\t},\r\n\thalfLevelValue: (actor) => Math.max(1, Math.floor(actor.level / 2)),\r\n\tsequenceArray,\r\n\t// equipment\r\n\tdamageLabel: (damage) => {\r\n\t\treturn game.i18n.localize(CONFIG.PF2E.damageTypes[damage]);\r\n\t},\r\n\tweaponTraitLabel: (trait) => {\r\n\t\treturn game.i18n.localize(CONFIG.PF2E.weaponTraits[trait]);\r\n\t},\r\n\tweaponPropertyRunesLabel: (rune) => {\r\n\t\tconst key = `PF2E.WeaponPropertyRune.${rune}.Name`;\r\n\t\treturn game.i18n.localize(key);\r\n\t},\r\n\thasFreePropertySlot: (item) => {\r\n\t\tconst potency = item.system.runes.potency;\r\n\t\treturn potency > 0 && item.system.runes.property.length < potency;\r\n\t},\r\n\tgetFreePropertyRuneSlot: (item) => {\r\n\t\tconst potency = item.system.potencyRune.value;\r\n\t\tif (potency === null) return null;\r\n\r\n\t\tfor (let i = 0; i < potency; i++) {\r\n\t\t\tconst property = RUNE_PROPERTY_KEYS[i];\r\n\t\t\tif (!item.system[property].value) return property;\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\t},\r\n\t// actor\r\n\tgetPlayersActors: (member, ...types) => {\r\n\t\tconst actorTypes = types.length ? types : [\"creature\"];\r\n\t\tconst memberIsActor = member instanceof Actor;\r\n\r\n\t\tlet actors = game.actors;\r\n\r\n\t\tif (memberIsActor && member.parties.size && getSetting(\"members\")) {\r\n\t\t\tactors = Array.from(member.parties ?? []).flatMap((p) => p.members);\r\n\t\t\tactors = Array.from(new Set(actors));\r\n\t\t} else {\r\n\t\t\tactors = actors.filter((a) => a.hasPlayerOwner);\r\n\t\t}\r\n\r\n\t\treturn actors.filter(\r\n\t\t\t(a) => a.isOfType(...actorTypes) && (!memberIsActor || a !== member),\r\n\t\t);\r\n\t},\r\n};\r\n\r\nexport function ordinalString(value) {\r\n\tconst pluralRules = new Intl.PluralRules(game.i18n.lang, { type: \"ordinal\" });\r\n\tconst suffix = game.i18n.localize(\r\n\t\t`PF2E.OrdinalSuffixes.${pluralRules.select(value)}`,\r\n\t);\r\n\treturn game.i18n.format(\"PF2E.OrdinalNumber\", { value, suffix });\r\n}\r\n\r\nexport function openDailiesInterface(character, message) {\r\n\tlet actor = character;\r\n\r\n\tif (!actor || !actor.isOfType(\"character\") || !actor.isOwner) {\r\n\t\tconst controlled = canvas.tokens.controlled;\r\n\t\tactor = controlled.find(\r\n\t\t\t(token) => token.actor?.isOfType(\"character\") && token.actor.isOwner,\r\n\t\t)?.actor;\r\n\t\tif (!actor) actor = game.user.character;\r\n\t}\r\n\r\n\tif (!actor || !actor.isOfType(\"character\") || !actor.isOwner)\r\n\t\treturn warn(\"error.noCharacterSelected\");\r\n\r\n\tif (!canPrepDailies(actor)) return warn(\"error.unrested\");\r\n\r\n\tnew DailiesInterface(\r\n\t\tactor,\r\n\t\t{\r\n\t\t\ttitle: localize(\"interface.title\", { name: actor.name }),\r\n\t\t},\r\n\t\tmessage,\r\n\t).render(true);\r\n}\r\n\r\nexport function createUpdateCollection() {\r\n\tconst collection = new Collection();\r\n\treturn [\r\n\t\tcollection,\r\n\t\t(data) => {\r\n\t\t\tconst id = data._id;\r\n\t\t\tif (!id) return;\r\n\t\t\tconst update = collection.get(id) ?? {};\r\n\t\t\tcollection.set(id, mergeObject(update, data));\r\n\t\t},\r\n\t];\r\n}\r\n", "import { openDailiesInterface } from \"./api\";\r\nimport {\r\n\tgetSpellcastingEntryStaffData,\r\n\tisPF2eStavesActive,\r\n\tupdateEntryCharges,\r\n} from \"./data/staves\";\r\nimport { getFlag, localize } from \"./module\";\r\nimport { itemIsOfType } from \"./pf2e/utils\";\r\n\r\nexport async function performDailyCrafting() {\r\n\tconst entries = (await this.getCraftingEntries()).filter(\r\n\t\t(e) => e.isDailyPrep,\r\n\t);\r\n\tconst alchemicalEntries = entries.filter((e) => e.isAlchemical);\r\n\tconst reagentCost = alchemicalEntries.reduce(\r\n\t\t(sum, entry) => sum + entry.reagentCost,\r\n\t\t0,\r\n\t);\r\n\tconst reagentValue =\r\n\t\t(this.system.resources.crafting.infusedReagents.value || 0) - reagentCost;\r\n\r\n\tif (reagentValue < 0) {\r\n\t\tui.notifications.warn(\r\n\t\t\tgame.i18n.localize(\"PF2E.CraftingTab.Alerts.MissingReagents\"),\r\n\t\t);\r\n\t\treturn;\r\n\t}\r\n\r\n\tawait this.update({\r\n\t\t\"system.resources.crafting.infusedReagents.value\": reagentValue,\r\n\t});\r\n\r\n\tconst key =\r\n\t\treagentCost === 0\r\n\t\t\t? \"ZeroConsumed\"\r\n\t\t\t: reagentCost === 1\r\n\t\t\t  ? \"OneConsumed\"\r\n\t\t\t  : \"NConsumed\";\r\n\r\n\tui.notifications.info(\r\n\t\tgame.i18n.format(`PF2E.Actor.Character.Crafting.Daily.Complete.${key}`, {\r\n\t\t\tquantity: reagentCost,\r\n\t\t}),\r\n\t);\r\n\r\n\t// // Remove infused/temp items\r\n\t// for (const item of this.inventory) {\r\n\t// \tif (item.system.temporary) await item.delete();\r\n\t// }\r\n\r\n\tfor (const entry of entries) {\r\n\t\tfor (const formula of entry.preparedCraftingFormulas) {\r\n\t\t\tconst itemSource = formula.item.toObject();\r\n\t\t\titemSource.system.quantity = formula.quantity;\r\n\t\t\titemSource.system.temporary = true;\r\n\t\t\titemSource.system.size = this.ancestry?.size === \"tiny\" ? \"tiny\" : \"med\";\r\n\r\n\t\t\tif (\r\n\t\t\t\tentry.isAlchemical &&\r\n\t\t\t\titemIsOfType(itemSource, \"consumable\", \"equipment\", \"weapon\")\r\n\t\t\t) {\r\n\t\t\t\titemSource.system.traits.value.push(\"infused\");\r\n\t\t\t}\r\n\r\n\t\t\tawait this.addToInventory(itemSource);\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport function renderCharacterSheetPF2e(sheet, html) {\r\n\tconst actor = sheet.actor;\r\n\tif (!actor.isOwner) return;\r\n\r\n\tconst canPrep = canPrepDailies(actor);\r\n\tconst disabledClass = canPrep ? \"\" : \" disabled\";\r\n\tconst tooltip = localize(canPrep ? \"sheet.title\" : \"sheet.unrested\");\r\n\tconst icon = `<a class=\"roll-icon dailies${disabledClass}\" data-tooltip=\"${tooltip}\">\r\n\t<i class=\"fas fa-mug-saucer\"></i>\r\n</a>`;\r\n\r\n\tconst el = html.find(\"aside .sidebar .hitpoints .hp-small\");\r\n\tel.append(icon);\r\n\r\n\tif (canPrep) {\r\n\t\tel.find(\".dailies\").on(\"click\", () => openDailiesInterface(actor));\r\n\t}\r\n\r\n\tif (!isPF2eStavesActive()) renderStavesEntries(html, actor);\r\n}\r\n\r\nfunction renderStavesEntries(html, actor) {\r\n\tconst tab = html.find(\r\n\t\t\".sheet-body .sheet-content [data-tab=spellcasting] [data-tab=known-spells] .spellcastingEntry-list\",\r\n\t);\r\n\tconst entries = tab.find(\"[data-container-type=spellcastingEntry]\");\r\n\r\n\tfor (const el of entries) {\r\n\t\tconst entryId = el.dataset.containerId;\r\n\t\tconst entry = actor.spellcasting.get(entryId);\r\n\t\tconst staffData = getSpellcastingEntryStaffData(entry);\r\n\t\tif (!staffData) continue;\r\n\r\n\t\tconst label = localize(\"staves.label\");\r\n\t\tconst charges = $(\r\n\t\t\t`<div class=\"pf2e-dailies-charges\"><label>${label}</label></div>`,\r\n\t\t);\r\n\r\n\t\tconst input = $(\r\n\t\t\t`<input type=\"number\" min=\"0\" max=\"${staffData.max}\" value=\"${staffData.charges}\">`,\r\n\t\t);\r\n\t\tinput.on(\"change\", (event) => onStaffChargesChange(event, actor));\r\n\r\n\t\tconst reset = $('<a><i class=\"fas fa-redo\"></i></a>');\r\n\t\treset.on(\"click\", (event) => onStaffChargesReset(event, actor));\r\n\r\n\t\tcharges.append(input);\r\n\t\tcharges.append(reset);\r\n\r\n\t\tel.querySelector(\".spell-ability-data .statistic-values\").after(charges[0]);\r\n\r\n\t\tconst spells = el.querySelectorAll(\r\n\t\t\t'.spell-list .spell:not([data-group-id=\"cantrips\"]',\r\n\t\t);\r\n\t\tfor (const spell of spells) {\r\n\t\t\tconst cost = spell.dataset.castRank;\r\n\t\t\tif (staffData.canPayCost(cost)) continue;\r\n\t\t\tspell.dataset.slotExpended = \"\";\r\n\t\t}\r\n\t}\r\n}\r\n\r\nfunction getEntryDataFromEvent(event, actor) {\r\n\tconst { itemId } = event.currentTarget.closest(\".spellcasting-entry\").dataset;\r\n\treturn actor.spellcasting.get(itemId);\r\n}\r\n\r\nasync function onStaffChargesReset(event, actor) {\r\n\tconst entry = getEntryDataFromEvent(event, actor);\r\n\tupdateEntryCharges(entry, 9999);\r\n}\r\n\r\nasync function onStaffChargesChange(event, actor) {\r\n\tconst entry = getEntryDataFromEvent(event, actor);\r\n\tupdateEntryCharges(entry, event.currentTarget.valueAsNumber);\r\n}\r\n\r\nexport function canPrepDailies(actor) {\r\n\treturn getFlag(actor, \"rested\") !== false;\r\n}\r\n", "export function createFeatDaily(key, uuid, filter, label) {\r\n\tconst daily = {\r\n\t\tkey,\r\n\t\tlabel,\r\n\t\titem: {\r\n\t\t\tuuid,\r\n\t\t},\r\n\t\trows: [\r\n\t\t\t{\r\n\t\t\t\ttype: \"drop\",\r\n\t\t\t\tslug: \"feat\",\r\n\t\t\t\tfilter: {\r\n\t\t\t\t\ttype: \"feat\",\r\n\t\t\t\t\tsearch: filter ?? {},\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t],\r\n\t\tprocess: async ({ utils, fields, addFeat, messages }) => {\r\n\t\t\tconst uuid = fields.feat.uuid;\r\n\t\t\tconst source = await utils.createFeatSource(uuid);\r\n\t\t\taddFeat(source);\r\n\t\t\tmessages.add(\"feats\", { uuid });\r\n\t\t},\r\n\t};\r\n\treturn daily;\r\n}\r\n", "export const flexibility = [\r\n\t\"/** @typedef {'flexibility' | 'improved'} FlexibilityRow */\",\r\n\t\"/** @typedef {'improved'} FlexibilityChild */\",\r\n\t\"/** @typedef {[FlexibilityRow, {}, FlexibilityChild]} FlexibilityGenerics */\",\r\n\t\"\",\r\n\t\"/**\",\r\n\t\" * @param {FlexibilityRow} slug\",\r\n\t\" * @param {number} level\",\r\n\t\" * @param {FlexibilityChild} [child]\",\r\n\t\" */\",\r\n\t\"function createRow(slug, level, child) {\",\r\n\t\"    /** @type {DailyRowDrop<FlexibilityGenerics>} */\",\r\n\t\"    const row = {\",\r\n\t\"        type: 'drop',\",\r\n\t\"        label: `PF2E.Level${level}`,\",\r\n\t\"        slug,\",\r\n\t\"        filter: {\",\r\n\t\"            type: 'feat',\",\r\n\t\"            search: {\",\r\n\t\"                category: ['class'],\",\r\n\t\"                traits: {\",\r\n\t\"                    values: ['fighter'],\",\r\n\t\"                },\",\r\n\t\"                level,\",\r\n\t\"            },\",\r\n\t\"        },\",\r\n\t\"    }\",\r\n\t\"    if (child) row.childPredicate = [child]\",\r\n\t\"    return row\",\r\n\t\"}\",\r\n\t\"\",\r\n\t\"/** @type {Daily<FlexibilityGenerics>} */\",\r\n\t\"const combatFlexibility = {\",\r\n\t\"    key: 'flexibility',\",\r\n\t\"    item: {\",\r\n\t\"        uuid: 'Compendium.pf2e.classfeatures.Item.8g6HzARbhfcgilP8', // Combat Flexibility\",\r\n\t\"    },\",\r\n\t\"    children: [\",\r\n\t\"        {\",\r\n\t\"            slug: 'improved',\",\r\n\t\"            uuid: 'Compendium.pf2e.classfeatures.Item.W2rwudMNcAxs8VoX', // Improved Flexibility\",\r\n\t\"        },\",\r\n\t\"    ],\",\r\n\t\"    rows: [\",\r\n\t\"        createRow('flexibility', 8), //\",\r\n\t\"        createRow('improved', 14, 'improved'),\",\r\n\t\"    ],\",\r\n\t\"    process: async ({ utils, fields, addFeat, messages, children }) => {\",\r\n\t\"        const uuid = fields.flexibility.uuid\",\r\n\t\"        const source = await utils.createFeatSource(uuid)\",\r\n\t\"        addFeat(source)\",\r\n\t\"        messages.add('feats', { uuid })\",\r\n\t\"\",\r\n\t\"        if (children.improved) {\",\r\n\t\"            const uuid = fields.improved.uuid\",\r\n\t\"            const source = await utils.createFeatSource(uuid)\",\r\n\t\"            addFeat(source, children.improved)\",\r\n\t\"            messages.add('feats', { uuid })\",\r\n\t\"        }\",\r\n\t\"    },\",\r\n\t\"}\",\r\n\t\"\",\r\n\t\"return combatFlexibility\",\r\n].join(\"\\n\");\r\n", "export const mind = [\r\n\t\"/** @typedef {'alert' | 'smith' | 'mental' | 'runic' | 'advanced'} MindRow */\",\r\n\t\"/** @typedef {'weapon' | 'mental' | 'runic' | 'advanced'} MindChild */\",\r\n\t\"/** @typedef {[MindRow, {}, MindChild]} MindGenerics */\",\r\n\t\"\",\r\n\t\"const MIND_WEAPON_UUID = 'Compendium.pf2e-dailies.equipment.Item.VpmEozw21aRxX15P'\",\r\n\t\"\",\r\n\t\"const WEAPON_BASE_TYPES = {\",\r\n\t\"    0: { die: 'd4', traits: ['finesse', 'agile'], usage: 'held-in-one-hand' },\",\r\n\t\"    1: { die: 'd6', traits: ['finesse'], usage: 'held-in-one-hand' },\",\r\n\t\"    2: { die: 'd8', traits: [], usage: 'held-in-one-hand' },\",\r\n\t\"    3: { die: 'd10', traits: ['reach'], usage: 'held-in-two-hands' },\",\r\n\t\"}\",\r\n\t\"\",\r\n\t\"const WEAPON_GROUPS = /** @type {Record<WeaponDamage, string>} */ {\",\r\n\t\"    slashing: 'sword',\",\r\n\t\"    piercing: 'spear',\",\r\n\t\"    bludgeoning: 'club',\",\r\n\t\"}\",\r\n\t\"\",\r\n\t\"const WEAPON_TRAITS = ['grapple', 'nonlethal', 'shove', 'trip', 'modular']\",\r\n\t\"\",\r\n\t\"const WEAPON_DAMAGE_TYPES = Object.keys(WEAPON_GROUPS)\",\r\n\t\"\",\r\n\t\"const WEAPON_RUNES = ['corrosive', 'disrupting', 'flaming', 'frost', 'shock', 'thundering']\",\r\n\t\"\",\r\n\t\"const WEAPON_GREATER_RUNES = [\",\r\n\t\"    'anarchic',\",\r\n\t\"    'axiomatic',\",\r\n\t\"    'greaterCorrosive',\",\r\n\t\"    'greaterDisrupting',\",\r\n\t\"    'greaterFlaming',\",\r\n\t\"    'greaterFrost',\",\r\n\t\"    'greaterShock',\",\r\n\t\"    'greaterThundering',\",\r\n\t\"    'holy',\",\r\n\t\"    'unholy',\",\r\n\t\"]\",\r\n\t\"\",\r\n\t\"/** @type {Daily<MindGenerics>} */\",\r\n\t\"const mindSmith = {\",\r\n\t\"    key: 'mindsmith',\",\r\n\t\"    item: {\",\r\n\t\"        uuid: 'Compendium.pf2e.feats-srd.Item.juikoiIA0Jy8PboY', // Mind Smith Dedication\",\r\n\t\"    },\",\r\n\t\"    children: [\",\r\n\t\"        {\",\r\n\t\"            slug: 'weapon',\",\r\n\t\"            uuid: MIND_WEAPON_UUID, // Mind Weapon\",\r\n\t\"        },\",\r\n\t\"        {\",\r\n\t\"            slug: 'mental',\",\r\n\t\"            uuid: 'Compendium.pf2e.feats-srd.Item.PccekOihIbRWdDky', // Malleable Mental Forge\",\r\n\t\"        },\",\r\n\t\"        {\",\r\n\t\"            slug: 'runic',\",\r\n\t\"            uuid: 'Compendium.pf2e.feats-srd.Item.2uQbQgz1AbjzcFSp', // Runic Mind Smithing\",\r\n\t\"        },\",\r\n\t\"        {\",\r\n\t\"            slug: 'advanced',\",\r\n\t\"            uuid: 'Compendium.pf2e.feats-srd.Item.fgnfXwFcn9jZlXGD', // Advanced Runic Mind Smithing\",\r\n\t\"        },\",\r\n\t\"    ],\",\r\n\t\"    rows: [\",\r\n\t\"        {\",\r\n\t\"            type: 'alert',\",\r\n\t\"            slug: 'alert',\",\r\n\t\"            message: 'Missing Mind Weapon',\",\r\n\t\"            fix,\",\r\n\t\"            childPredicate: [{ not: 'weapon' }],\",\r\n\t\"        },\",\r\n\t\"        {\",\r\n\t\"            type: 'select',\",\r\n\t\"            slug: 'smith',\",\r\n\t\"            label: 'Mind Smith',\",\r\n\t\"            options: WEAPON_DAMAGE_TYPES,\",\r\n\t\"            labelizer: ({ utils }) => utils.damageLabel,\",\r\n\t\"            childPredicate: ['weapon'],\",\r\n\t\"        },\",\r\n\t\"        {\",\r\n\t\"            type: 'select',\",\r\n\t\"            slug: 'mental',\",\r\n\t\"            label: 'Mental Forge',\",\r\n\t\"            options: WEAPON_TRAITS,\",\r\n\t\"            labelizer: ({ utils }) => utils.weaponTraitLabel,\",\r\n\t\"            childPredicate: ['weapon', 'mental'],\",\r\n\t\"        },\",\r\n\t\"        {\",\r\n\t\"            type: 'select',\",\r\n\t\"            slug: 'runic',\",\r\n\t\"            label: 'Runic Smithing',\",\r\n\t\"            options: WEAPON_RUNES,\",\r\n\t\"            labelizer: ({ utils }) => utils.weaponPropertyRunesLabel,\",\r\n\t\"            childPredicate: ['weapon', 'runic', { not: 'advanced' }],\",\r\n\t\"            condition: ({ children, utils }) => utils.hasFreePropertySlot(children.weapon),\",\r\n\t\"        },\",\r\n\t\"        {\",\r\n\t\"            type: 'select',\",\r\n\t\"            slug: 'advanced',\",\r\n\t\"            label: 'Runic Smithing',\",\r\n\t\"            options: WEAPON_GREATER_RUNES,\",\r\n\t\"            labelizer: ({ utils }) => utils.weaponPropertyRunesLabel,\",\r\n\t\"            childPredicate: ['weapon', 'advanced'],\",\r\n\t\"            condition: ({ children, utils }) => utils.hasFreePropertySlot(children.weapon),\",\r\n\t\"        },\",\r\n\t\"    ],\",\r\n\t\"    process: ({ children, updateItem, fields, messages, item, utils }) => {\",\r\n\t\"        const weapon = children.weapon\",\r\n\t\"        if (!weapon) return\",\r\n\t\"\",\r\n\t\"        messages.addGroup('mindsmith')\",\r\n\t\"\",\r\n\t\"        const selected = /** @type {WeaponDamage} */ fields.smith.value\",\r\n\t\"        updateItem({ _id: weapon.id, 'system.damage.damageType': selected, 'system.group': WEAPON_GROUPS[selected] })\",\r\n\t\"        messages.add('mindsmith', { selected: utils.damageLabel(selected), uuid: item.uuid, label: 'mindsmith' })\",\r\n\t\"\",\r\n\t\"        if (children.mental) {\",\r\n\t\"            const selected = fields.mental.value\",\r\n\t\"            const traits = deepClone(weapon._source.system.traits?.value ?? [])\",\r\n\t\"            if (!traits.includes(selected)) traits.push(selected)\",\r\n\t\"            updateItem({ _id: weapon.id, 'system.traits.value': traits })\",\r\n\t\"            messages.add('mindsmith', {\",\r\n\t\"                selected: utils.weaponTraitLabel(selected),\",\r\n\t\"                uuid: children.mental.uuid,\",\r\n\t\"                label: 'mentalforge',\",\r\n\t\"            })\",\r\n\t\"        }\",\r\n\t\"\",\r\n\t\"        if ((children.advanced || children.runic) && utils.hasFreePropertySlot(weapon)) {\",\r\n\t\"            const child = children.advanced ?? children.runic\",\r\n\t\"            const freeSlot = utils.getFreePropertyRuneSlot(weapon)\",\r\n\t\"            const field = fields.advanced ?? fields.runic\",\r\n\t\"            const selected = field.value\",\r\n\t\"\",\r\n\t\"            if (!weapon.system.runes.property.includes(selected)) {\",\r\n\t\"                updateItem({ _id: weapon.id, [`system.${freeSlot}.value`]: selected, [`flags.world.runeSlot`]: freeSlot })\",\r\n\t\"                messages.add('mindsmith', {\",\r\n\t\"                    selected: utils.weaponPropertyRunesLabel(selected),\",\r\n\t\"                    uuid: child.uuid,\",\r\n\t\"                    label: 'runicmind',\",\r\n\t\"                })\",\r\n\t\"            }\",\r\n\t\"        }\",\r\n\t\"    },\",\r\n\t\"    rest: ({ item, sourceId, updateItem }) => {\",\r\n\t\"        if (sourceId !== MIND_WEAPON_UUID) return\",\r\n\t\"\",\r\n\t\"        let traits = item._source.system.traits?.value ?? []\",\r\n\t\"        traits = traits.filter(trait => !WEAPON_TRAITS.includes(trait))\",\r\n\t\"        updateItem({ _id: item.id, 'system.traits.value': traits })\",\r\n\t\"\",\r\n\t\"        const runeSlot = item.getFlag('world', 'runeSlot')\",\r\n\t\"        if (runeSlot) {\",\r\n\t\"            updateItem({ _id: item.id, [`system.${runeSlot}.value`]: null, [`flags.world.-=runeSlot`]: true })\",\r\n\t\"        }\",\r\n\t\"    },\",\r\n\t\"}\",\r\n\t\"\",\r\n\t\"const OPTIONS = {\",\r\n\t\"    0: 'A one-handed weapon that deals <strong>1d4</strong> damage and has the <strong>agile</strong> and <strong>finesse</strong> traits',\",\r\n\t\"    1: 'A one-handed weapon that deals <strong>1d6</strong> damage and has the <strong>finesse</strong> trait',\",\r\n\t\"    2: 'A one-handed weapon that deals <strong>1d8</strong> damage',\",\r\n\t\"    3: 'A two-handed weapon that deals <strong>1d10</strong> damage and has the <strong>reach</strong> trait',\",\r\n\t\"}\",\r\n\t\"\",\r\n\t\"/** * @param {DailyValueArgs<MindGenerics>} args */\",\r\n\t\"async function fix({ actor }) {\",\r\n\t\"    let content =\",\r\n\t\"        `<p>This character doesn't have a mind weapon in their inventory.</p><p>Please select one of the following options to create one.</p>`\",\r\n\t\"\",\r\n\t\"    for (const [key, label] of Object.entries(OPTIONS)) {\",\r\n\t\"        content += `<label><input type='radio' name='type' value='${key}'>${label}</label>`\",\r\n\t\"    }\",\r\n\t\"\",\r\n\t\"    const weapon = await Dialog.wait(\",\r\n\t\"        {\",\r\n\t\"            title: 'Mind Weapon',\",\r\n\t\"            content,\",\r\n\t\"            buttons: {\",\r\n\t\"                yes: {\",\r\n\t\"                    icon: `<i class='fas fa-save'></i>`,\",\r\n\t\"                    label: 'Accept',\",\r\n\t\"                    callback: onWeaponSelected,\",\r\n\t\"                },\",\r\n\t\"                no: {\",\r\n\t\"                    icon: `<i class='fas fa-times'></i>`,\",\r\n\t\"                    label: 'Cancel',\",\r\n\t\"                    callback: () => null,\",\r\n\t\"                },\",\r\n\t\"            },\",\r\n\t\"            close: () => null,\",\r\n\t\"        },\",\r\n\t\"        {},\",\r\n\t\"        { id: 'pf2e-dailies-weapon', width: 600 }\",\r\n\t\"    )\",\r\n\t\"\",\r\n\t\"    if (weapon) {\",\r\n\t\"        await actor.createEmbeddedDocuments('Item', [weapon])\",\r\n\t\"        return true\",\r\n\t\"    }\",\r\n\t\"\",\r\n\t\"    return false\",\r\n\t\"}\",\r\n\t\"\",\r\n\t\"/** @params {JQuery} html */\",\r\n\t\"async function onWeaponSelected(html) {\",\r\n\t\"    const selection = html.find('[name=type]:checked').val()\",\r\n\t\"    if (!selection) {\",\r\n\t\"        ui.notifications.warn('You must select one weapon base type.')\",\r\n\t\"        return\",\r\n\t\"    }\",\r\n\t\"\",\r\n\t\"    const weapon = (await fromUuid(MIND_WEAPON_UUID))?.toObject()\",\r\n\t\"    if (!weapon) {\",\r\n\t\"        ui.notifications.warn(`The weapon couldn't be found in the compendium.`)\",\r\n\t\"        return\",\r\n\t\"    }\",\r\n\t\"\",\r\n\t\"    const stats = WEAPON_BASE_TYPES[selection]\",\r\n\t\"\",\r\n\t\"    setProperty(weapon, 'system.damage.die', stats.die)\",\r\n\t\"    setProperty(weapon, 'system.traits.value', stats.traits.slice())\",\r\n\t\"    setProperty(weapon, 'system.usage.value', stats.usage)\",\r\n\t\"\",\r\n\t\"    return weapon\",\r\n\t\"}\",\r\n\t\"\",\r\n\t\"return mindSmith\",\r\n].join(\"\\n\");\r\n", "export const savant = [\r\n\t\"/** @typedef {'first' | 'second' | 'third' | 'fourth'} SavantRow */\",\r\n\t\"/** @typedef {Record<SavantRow, { level: number; condition: boolean }>} SavantCustom */\",\r\n\t\"/** @typedef {[SavantRow, SavantCustom, '']} SavantGenerics */\",\r\n\t\"\",\r\n\t\"const ROWS = /** @type {const} */ (['first', 'second', 'third', 'fourth'])\",\r\n\t\"\",\r\n\t\"/**\",\r\n\t\" * @param {CharacterPF2e} actor\",\r\n\t\" * @param {MagicTradition} tradition\",\r\n\t\" */\",\r\n\t\"function getSpellcastingTraditionDetails(actor, tradition) {\",\r\n\t\"    let maxSlot = 1\",\r\n\t\"    let maxTradition = 0\",\r\n\t\"\",\r\n\t\"    for (const entry of actor.spellcasting.regular) {\",\r\n\t\"        if ('pf2e-staves' in entry.flags) continue // we skip staff entries\",\r\n\t\"\",\r\n\t\"        const slots = entry.system.slots\",\r\n\t\"        for (const key in slots) {\",\r\n\t\"            const slot = slots[key]\",\r\n\t\"            if (slot.max) maxSlot = Math.max(maxSlot, Number(key.slice(4)))\",\r\n\t\"        }\",\r\n\t\"\",\r\n\t\"        if (entry.tradition === tradition) maxTradition = Math.max(maxTradition, entry.rank)\",\r\n\t\"    }\",\r\n\t\"\",\r\n\t\"    return { maxSlot: Math.min(maxSlot, 10), maxTradition }\",\r\n\t\"}\",\r\n\t\"\",\r\n\t\"/** @type {Daily<SavantGenerics>} */\",\r\n\t\"const scrollSavant = {\",\r\n\t\"    key: 'savant',\",\r\n\t\"    item: {\",\r\n\t\"        uuid: 'Compendium.pf2e.feats-srd.Item.u5DBg0LrBUKP0JsJ', // Scroll Savant\",\r\n\t\"    },\",\r\n\t\"    prepare: ({ actor }) => {\",\r\n\t\"        const { maxSlot, maxTradition } = getSpellcastingTraditionDetails(actor, 'arcane')\",\r\n\t\"        return {\",\r\n\t\"            first: { level: maxSlot - 2, condition: true },\",\r\n\t\"            second: { level: maxSlot - 3, condition: true },\",\r\n\t\"            third: { level: maxSlot - 4, condition: maxTradition >= 3 && maxSlot >= 5 },\",\r\n\t\"            fourth: { level: maxSlot - 5, condition: maxTradition >= 4 && maxSlot >= 6 },\",\r\n\t\"        }\",\r\n\t\"    },\",\r\n\t\"    rows: ROWS.map(rowName => {\",\r\n\t\"        /** @type {DailyRowDrop<SavantGenerics>} */\",\r\n\t\"        const row = {\",\r\n\t\"            type: 'drop',\",\r\n\t\"            slug: rowName,\",\r\n\t\"            label: ({ custom }) => `PF2E.SpellLevel${custom[rowName].level}`,\",\r\n\t\"            filter: {\",\r\n\t\"                type: 'spell',\",\r\n\t\"                search: ({ custom }) => ({\",\r\n\t\"                    category: ['spell'],\",\r\n\t\"                    traditions: ['arcane'],\",\r\n\t\"                    level: custom[rowName].level,\",\r\n\t\"                }),\",\r\n\t\"            },\",\r\n\t\"            condition: ({ custom }) => custom[rowName].condition,\",\r\n\t\"        }\",\r\n\t\"        return row\",\r\n\t\"    }),\",\r\n\t\"    process: async ({ utils, fields, custom, addItem, messages }) => {\",\r\n\t\"        for (const field of Object.values(fields)) {\",\r\n\t\"            const uuid = field.uuid\",\r\n\t\"            const source = await utils.createSpellScrollSource({ uuid, level: custom[field.row].level })\",\r\n\t\"            addItem(source)\",\r\n\t\"            messages.add('scrolls', { uuid, label: source.name })\",\r\n\t\"        }\",\r\n\t\"    },\",\r\n\t\"}\",\r\n\t\"\",\r\n\t\"return scrollSavant\",\r\n].join(\"\\n\");\r\n", "export const tome = [\r\n\t\"/** @typedef {typeof ROWS[number]} TomeRow */\",\r\n\t\"/** @typedef {'adept' | 'second' | 'intense' | 'paragon'} TomeChild */\",\r\n\t\"/** @typedef {Record<TomeRow, { rank: OneToFour; options: string[] }>} TomeCustom */\",\r\n\t\"/** @typedef {[TomeRow, TomeCustom, TomeChild]} TomeGenerics */\",\r\n\t\"\",\r\n\t\"const ROWS = /** @type {const} */ (['first', 'second'])\",\r\n\t\"\",\r\n\t\"/** @param {'adept' | 'paragon'} option */\",\r\n\t\"function createChildCondition(option) {\",\r\n\t\"    /** @type { BaseDailyConditionFunction<TomeGenerics>} */\",\r\n\t\"    const condition = ({ item, utils }) => {\",\r\n\t\"        return utils.getChoiSetRuleSelection(item, option) === 'tome'\",\r\n\t\"    }\",\r\n\t\"    return condition\",\r\n\t\"}\",\r\n\t\"\",\r\n\t\"/** @type {Daily<TomeGenerics>} */\",\r\n\t\"const thaumaturgeTome = {\",\r\n\t\"    key: 'tome',\",\r\n\t\"    item: {\",\r\n\t\"        uuid: 'Compendium.pf2e.classfeatures.Item.MyN1cQgE0HsLF20e', // Tome\",\r\n\t\"    },\",\r\n\t\"    children: [\",\r\n\t\"        {\",\r\n\t\"            slug: 'adept',\",\r\n\t\"            uuid: 'Compendium.pf2e.classfeatures.Item.Obm4ItMIIr0whYeO', // Implement Adept\",\r\n\t\"            condition: createChildCondition('adept'),\",\r\n\t\"        },\",\r\n\t\"        {\",\r\n\t\"            slug: 'second',\",\r\n\t\"            uuid: 'Compendium.pf2e.classfeatures.Item.ZEUxZ4Ta1kDPHiq5', // Second Adept\",\r\n\t\"            condition: createChildCondition('adept'),\",\r\n\t\"        },\",\r\n\t\"        {\",\r\n\t\"            slug: 'intense',\",\r\n\t\"            uuid: 'Compendium.pf2e.feats-srd.Item.yRRM1dsY6jakEMaC', // Intense Implement\",\r\n\t\"        },\",\r\n\t\"        {\",\r\n\t\"            slug: 'paragon',\",\r\n\t\"            uuid: 'Compendium.pf2e.classfeatures.Item.QEtgbY8N2V4wTbsI', // Implement Paragon\",\r\n\t\"            condition: createChildCondition('paragon'),\",\r\n\t\"        },\",\r\n\t\"    ],\",\r\n\t\"    prepare: ({ utils, actor, children }) => {\",\r\n\t\"        const skillNames = utils.skillNames\",\r\n\t\"        const actorLevel = actor.level\",\r\n\t\"        const actorSkills = /** @type {Record<SkillLongForm, { rank: ZeroToFour }>} */ (actor.skills)\",\r\n\t\"\",\r\n\t\"        /** @type {TomeCustom} */\",\r\n\t\"        const custom = {\",\r\n\t\"            first: { options: [], rank: 1 },\",\r\n\t\"            second: { options: [], rank: 1 },\",\r\n\t\"        }\",\r\n\t\"\",\r\n\t\"        // Implement Paragon\",\r\n\t\"        if (children.paragon) {\",\r\n\t\"            const skills = skillNames.filter(x => actorSkills[x].rank < 4)\",\r\n\t\"            custom.first = { rank: 4, options: skills }\",\r\n\t\"            custom.second = { rank: 4, options: skills }\",\r\n\t\"        }\",\r\n\t\"        // Intense Implement or Second Adept or Implement Adept\",\r\n\t\"        else if (children.intense || children.adept || children.second) {\",\r\n\t\"            const masters = skillNames.filter(x => actorSkills[x].rank < 3)\",\r\n\t\"\",\r\n\t\"            if (actorLevel >= 9) {\",\r\n\t\"                custom.first = { rank: 3, options: masters }\",\r\n\t\"                custom.second = { rank: 3, options: masters }\",\r\n\t\"            } else {\",\r\n\t\"                const experts = skillNames.filter(x => actorSkills[x].rank < 2)\",\r\n\t\"                custom.first = { rank: 2, options: experts }\",\r\n\t\"                custom.second = { rank: 3, options: masters }\",\r\n\t\"            }\",\r\n\t\"        }\",\r\n\t\"        // Tome\",\r\n\t\"        else {\",\r\n\t\"            if (actorLevel >= 5) {\",\r\n\t\"                const experts = skillNames.filter(x => actorSkills[x].rank < 2)\",\r\n\t\"                custom.first = { rank: 2, options: experts }\",\r\n\t\"                custom.second = { rank: 2, options: experts }\",\r\n\t\"            } else if (actorLevel >= 3) {\",\r\n\t\"                const trained = skillNames.filter(x => actorSkills[x].rank < 1)\",\r\n\t\"                const experts = skillNames.filter(x => actorSkills[x].rank < 2)\",\r\n\t\"                custom.first = { rank: 1, options: trained }\",\r\n\t\"                custom.second = { rank: 2, options: experts }\",\r\n\t\"            } else {\",\r\n\t\"                const trained = skillNames.filter(x => actorSkills[x].rank < 1)\",\r\n\t\"                custom.first = { rank: 1, options: trained }\",\r\n\t\"                custom.second = { rank: 1, options: trained }\",\r\n\t\"            }\",\r\n\t\"        }\",\r\n\t\"\",\r\n\t\"        return custom\",\r\n\t\"    },\",\r\n\t\"    rows: ROWS.map(rowName => {\",\r\n\t\"        /** @type {DailyRowCombo<TomeGenerics>} */\",\r\n\t\"        const row = {\",\r\n\t\"            type: 'combo',\",\r\n\t\"            slug: rowName,\",\r\n\t\"            label: ({ custom, utils }) => utils.proficiencyLabel(custom[rowName].rank),\",\r\n\t\"            options: ({ custom }) => custom[rowName].options,\",\r\n\t\"            labelizer: ({ utils }) => utils.skillLabel,\",\r\n\t\"        }\",\r\n\t\"        return row\",\r\n\t\"    }),\",\r\n\t\"    process: ({ custom, fields, utils, messages, addItem, addRule }) => {\",\r\n\t\"        messages.addGroup('tome', 65)\",\r\n\t\"\",\r\n\t\"        for (const rowName of ROWS) {\",\r\n\t\"            const rank = custom[rowName].rank\",\r\n\t\"            let value = fields[rowName].value\",\r\n\t\"\",\r\n\t\"            if (fields[rowName].input === 'true') {\",\r\n\t\"                const source = utils.createLoreSource({ name: value, rank })\",\r\n\t\"                addItem(source)\",\r\n\t\"            } else {\",\r\n\t\"                const source = utils.createSkillRuleElement({ skill: value, value: rank })\",\r\n\t\"                value = utils.skillLabel(value)\",\r\n\t\"                addRule(source)\",\r\n\t\"            }\",\r\n\t\"\",\r\n\t\"            messages.add('tome', { label: utils.proficiencyLabel(rank), selected: value })\",\r\n\t\"        }\",\r\n\t\"    },\",\r\n\t\"}\",\r\n\t\"\",\r\n\t\"return thaumaturgeTome\",\r\n].join(\"\\n\");\r\n", "import { createFeatDaily } from \"../data/feat\";\r\nimport { createLanguageDaily } from \"../data/language\";\r\nimport { createResistancelDaily } from \"../data/resistance\";\r\nimport { createTrainedLoreDaily, createTrainedSkillDaily } from \"../data/skill\";\r\nimport { createSpellDaily } from \"../data/spell\";\r\nimport { EXT_VERSION } from \"../main\";\r\nimport {\r\n\tAsyncFunction,\r\n\terror,\r\n\tgetSetting,\r\n\tsetSetting,\r\n\tsubLocalize,\r\n\ttemplatePath,\r\n\twarn,\r\n} from \"../module\";\r\nimport { flexibility } from \"./custom/flexibility\";\r\nimport { mind } from \"./custom/mind\";\r\nimport { savant } from \"./custom/savant\";\r\nimport { tome } from \"./custom/tome\";\r\n\r\nconst localize = subLocalize(\"customs\");\r\n\r\nconst TEMPLATES = [\r\n\t\"default\",\r\n\t\"trainedSkill\",\r\n\t\"trainedLore\",\r\n\t\"language\",\r\n\t\"resistance\",\r\n\t\"feat\",\r\n\t\"spell\",\r\n];\r\nconst EXAMPLES = [\"flexibility\", \"savant\", \"tome\", \"mind\"];\r\n\r\nexport class DailyCustoms extends FormApplication {\r\n\tstatic get defaultOptions() {\r\n\t\treturn mergeObject(FormApplication.defaultOptions, {\r\n\t\t\tid: \"pf2e-dailies-customs\",\r\n\t\t\ttitle: localize(\"title\"),\r\n\t\t\ttemplate: templatePath(\"customs.hbs\"),\r\n\t\t\tsubmitOnChange: false,\r\n\t\t\tsubmitOnClose: false,\r\n\t\t\tcloseOnSubmit: false,\r\n\t\t\tscrollY: [\".left .list\"],\r\n\t\t});\r\n\t}\r\n\r\n\tasync _updateObject(event, formData) {}\r\n\r\n\tasync getData(options) {\r\n\t\tconst customs = getSetting(\"customDailies\");\r\n\t\tconst code = customs.find(\r\n\t\t\t(custom) => custom.key === this._selectedDaily,\r\n\t\t)?.code;\r\n\t\tconst template = this._selectedTemplate;\r\n\t\tconst extension = game.modules.get(\"pf2e-dailies-ext\");\r\n\t\tconst newVersion =\r\n\t\t\textension?.active && isNewerVersion(EXT_VERSION, extension.version)\r\n\t\t\t\t? { version: EXT_VERSION }\r\n\t\t\t\t: \"\";\r\n\r\n\t\treturn mergeObject(super.getData(options), {\r\n\t\t\ti18n: localize,\r\n\t\t\ttemplate,\r\n\t\t\ttemplates: TEMPLATES,\r\n\t\t\tdaily: this._selectedDaily,\r\n\t\t\tcode,\r\n\t\t\tcustoms,\r\n\t\t\texamples: EXAMPLES,\r\n\t\t\tisExample: EXAMPLES.includes(template),\r\n\t\t\tmonaco: extension?.active,\r\n\t\t\tnewVersion,\r\n\t\t});\r\n\t}\r\n\r\n\tactivateListeners(html) {\r\n\t\tsuper.activateListeners(html);\r\n\r\n\t\tthis._monaco?.dispose();\r\n\r\n\t\tconst monaco = game.modules.get(\"pf2e-dailies-ext\")?.api;\r\n\t\tconst area = html.find(\".code\")[0];\r\n\t\tif (monaco && area) {\r\n\t\t\tconst element = html.find(\".monaco .placeholder\")[0];\r\n\t\t\tthis._monaco = monaco.createEditor(element, area.value);\r\n\t\t\tthis._monaco.onDidChangeModelContent(\r\n\t\t\t\tdebounce(() => {\r\n\t\t\t\t\tarea.value = this._monaco.getValue();\r\n\t\t\t\t}, 200),\r\n\t\t\t);\r\n\t\t} else {\r\n\t\t\tthis._monaco = null;\r\n\t\t}\r\n\r\n\t\thtml\r\n\t\t\t.find(\"[data-action=select-template]\")\r\n\t\t\t.on(\"change\", this.#onSelectTemplate.bind(this));\r\n\t\thtml\r\n\t\t\t.find(\"[data-action=create-template]\")\r\n\t\t\t.on(\"click\", this.#onCreateTemplate.bind(this));\r\n\t\thtml\r\n\t\t\t.find(\"[data-action=create-daily]\")\r\n\t\t\t.on(\"click\", this.#onCreateDaily.bind(this));\r\n\r\n\t\thtml.find(\".row[data-key]\").on(\"click\", this.#onSelectDaily.bind(this));\r\n\t\thtml\r\n\t\t\t.find(\"[data-action=delete-daily]\")\r\n\t\t\t.on(\"click\", this.#onDeleteDaily.bind(this));\r\n\r\n\t\thtml\r\n\t\t\t.find(\"[data-action=save-code]\")\r\n\t\t\t.on(\"click\", this.#onSaveCode.bind(this));\r\n\t}\r\n\r\n\tget code() {\r\n\t\tconst element = this.form.querySelector(\".window-content .code\");\r\n\t\treturn element?.value;\r\n\t}\r\n\r\n\tasync #onSaveCode(event) {\r\n\t\tevent.preventDefault();\r\n\r\n\t\tconst code = this.code;\r\n\t\tconst selected = this._selectedDaily;\r\n\r\n\t\tif (!selected || !code) return;\r\n\r\n\t\tconst customs = getSetting(\"customDailies\");\r\n\t\tconst stipped = customs.filter((custom) => custom.key !== selected);\r\n\r\n\t\ttry {\r\n\t\t\tconst fn = new AsyncFunction(code);\r\n\t\t\tconst daily = await fn();\r\n\t\t\tconst key = daily.key;\r\n\r\n\t\t\tif (typeof key !== \"string\") return warn(\"invalidKey\");\r\n\t\t\tif (stipped.find((custom) => custom.key === key))\r\n\t\t\t\treturn warn(\"duplicate\");\r\n\r\n\t\t\tconst index = customs.findIndex((custom) => custom.key === selected);\r\n\t\t\tif (index < 0) return;\r\n\r\n\t\t\tcustoms.splice(index, 1, { key, code });\r\n\t\t\tawait setSetting(\"customDailies\", customs);\r\n\r\n\t\t\tlocalize.info(\"saved\", { daily: key });\r\n\t\t\tthis._selectedDaily = key;\r\n\t\t\tthis.render();\r\n\t\t} catch (err) {\r\n\t\t\terror(\"error.unexpected\");\r\n\t\t\tconsole.error(err);\r\n\t\t\tconsole.error(\r\n\t\t\t\t`The error occured while testing the custom daily ${selected}`,\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n\r\n\tasync #onDeleteDaily(event) {\r\n\t\tevent.preventDefault();\r\n\t\tevent.stopPropagation();\r\n\r\n\t\tconst remove = await Dialog.confirm({\r\n\t\t\ttitle: localize(\"delete.title\"),\r\n\t\t\tcontent: localize(\"delete.content\"),\r\n\t\t});\r\n\r\n\t\tif (!remove) return;\r\n\r\n\t\tconst key = event.currentTarget.dataset.key;\r\n\t\tconst customs = getSetting(\"customDailies\").filter(\r\n\t\t\t(custom) => custom.key !== key,\r\n\t\t);\r\n\r\n\t\tawait setSetting(\"customDailies\", customs);\r\n\t\tlocalize.info(\"deleted\", { daily: key });\r\n\t\tthis.#onCreateDaily();\r\n\t}\r\n\r\n\t#onCreateDaily() {\r\n\t\tthis._selectedDaily = \"\";\r\n\t\tthis._selectedTemplate = \"default\";\r\n\t\tthis.render();\r\n\t}\r\n\r\n\t#onSelectDaily(event) {\r\n\t\tevent.preventDefault();\r\n\r\n\t\tthis._selectedDaily = event.currentTarget.dataset.key;\r\n\t\tthis.render();\r\n\t}\r\n\r\n\tasync #onCreateTemplate(event) {\r\n\t\tevent.preventDefault();\r\n\t\tconst template = this._selectedTemplate;\r\n\r\n\t\tconst customs = getSetting(\"customDailies\");\r\n\t\tconst formData = new FormData(this.form);\r\n\t\tconst data = Object.fromEntries(formData);\r\n\t\tconst isExample = EXAMPLES.includes(template);\r\n\t\tlet { key, uuid, label } = data;\r\n\r\n\t\tif (isExample) {\r\n\t\t\tkey = template;\r\n\t\t} else if (!key || !uuid) {\r\n\t\t\treturn localize.warn(\"template.noEmpty\");\r\n\t\t}\r\n\r\n\t\tif (customs.find((custom) => custom.key === key))\r\n\t\t\treturn warn(\"error.duplicate\");\r\n\r\n\t\tlet code;\r\n\r\n\t\tif (template === \"trainedSkill\") {\r\n\t\t\tconst daily = createTrainedSkillDaily(key, uuid, label);\r\n\t\t\tcode = this.#stringifyDaily(daily, { key, uuid, label }, \"SkillGenerics\");\r\n\t\t} else if (template === \"trainedLore\") {\r\n\t\t\tconst daily = createTrainedLoreDaily(key, uuid, label);\r\n\t\t\tcode = this.#stringifyDaily(daily, { key, uuid, label }, \"SkillGenerics\");\r\n\t\t} else if (template === \"language\") {\r\n\t\t\tconst daily = createLanguageDaily(key, uuid, label);\r\n\t\t\tcode = this.#stringifyDaily(\r\n\t\t\t\tdaily,\r\n\t\t\t\t{ key, uuid, label },\r\n\t\t\t\t\"LanguageGenerics\",\r\n\t\t\t);\r\n\t\t} else if (template === \"resistance\") {\r\n\t\t\tconst resistance = simplyfiable(data.resistance);\r\n\t\t\tconst resistances = splitList(data.resistances);\r\n\r\n\t\t\tif (resistance === \"\" || !resistances.length)\r\n\t\t\t\treturn localize.warn(\"template.noEmpty\");\r\n\t\t\tif (typeof resistance === \"number\" && resistance < 1)\r\n\t\t\t\treturn localize.warn(\"template.badResistance\");\r\n\r\n\t\t\tconst daily = createResistancelDaily(\r\n\t\t\t\tkey,\r\n\t\t\t\tuuid,\r\n\t\t\t\tresistances,\r\n\t\t\t\tresistance,\r\n\t\t\t\tlabel,\r\n\t\t\t);\r\n\t\t\tcode = this.#stringifyDaily(\r\n\t\t\t\tdaily,\r\n\t\t\t\t{ key, uuid, label, resistance, resistances },\r\n\t\t\t\t\"ResistanceGenerics\",\r\n\t\t\t);\r\n\t\t} else if (template === \"feat\") {\r\n\t\t\tconst traits = splitList(data.traits);\r\n\t\t\tconst filter = {\r\n\t\t\t\tcategory: splitList(data.category),\r\n\t\t\t\tlevel: simplyfiable(data.level) || { min: 0, max: 20 },\r\n\t\t\t};\r\n\t\t\tif (traits.length) filter.traits = traits;\r\n\t\t\tconst daily = createFeatDaily(key, uuid, filter, label);\r\n\t\t\tcode = this.#stringifyDaily(daily, { key, uuid, label }, \"FeatGenerics\");\r\n\t\t} else if (template === \"spell\") {\r\n\t\t\tconst level = Number(data.level) || undefined;\r\n\t\t\tconst traits = splitList(data.traits);\r\n\t\t\tlet levels = data.levels.split(\",\").map((x) => x.trim());\r\n\t\t\tif (levels.length === 1) {\r\n\t\t\t\tlevels = simplyfiable(levels[0]);\r\n\t\t\t} else {\r\n\t\t\t\tlevels = levels\r\n\t\t\t\t\t.filter((x) => x)\r\n\t\t\t\t\t.map((x) => Number(x))\r\n\t\t\t\t\t.filter((x) => !Number.isNaN(x));\r\n\t\t\t}\r\n\t\t\tconst filter = {\r\n\t\t\t\tcategory: splitList(data.category),\r\n\t\t\t\ttraditions: splitList(data.traditions),\r\n\t\t\t\tlevel: levels || [],\r\n\t\t\t};\r\n\t\t\tif (traits.length) filter.traits = traits;\r\n\t\t\tconst daily = createSpellDaily(key, uuid, filter, level, label);\r\n\t\t\tcode = this.#stringifyDaily(\r\n\t\t\t\tdaily,\r\n\t\t\t\t{ key, uuid, label, level },\r\n\t\t\t\t\"SpellGenerics\",\r\n\t\t\t);\r\n\t\t} else if (template === \"tome\") {\r\n\t\t\tcode = tome;\r\n\t\t} else if (template === \"flexibility\") {\r\n\t\t\tcode = flexibility;\r\n\t\t} else if (template === \"savant\") {\r\n\t\t\tcode = savant;\r\n\t\t} else if (template === \"mind\") {\r\n\t\t\tcode = mind;\r\n\t\t} else {\r\n\t\t\tconst daily = { key, label, item: { uuid }, rows: [], process: () => {} };\r\n\t\t\tcode = this.#stringifyDaily(daily, { key, uuid, label });\r\n\t\t}\r\n\r\n\t\tcustoms.push({ key, code });\r\n\t\tawait setSetting(\"customDailies\", customs);\r\n\r\n\t\tthis._selectedDaily = key;\r\n\t\tthis.render();\r\n\t}\r\n\r\n\t#stringifyDaily(daily, args, type) {\r\n\t\tconst placeholder = \"____PLACEHOLDER____\";\r\n\t\tconst fns = [];\r\n\r\n\t\tlet str = JSON.stringify(\r\n\t\t\tdaily,\r\n\t\t\t(_, value) => {\r\n\t\t\t\tif (typeof value === \"function\") {\r\n\t\t\t\t\tfns.push(value);\r\n\t\t\t\t\treturn placeholder;\r\n\t\t\t\t}\r\n\t\t\t\treturn value;\r\n\t\t\t},\r\n\t\t\t4,\r\n\t\t);\r\n\r\n\t\tstr = str.replace(new RegExp(`\"${placeholder}\"`, \"g\"), () => {\r\n\t\t\tconst fn = fns.shift()?.toString();\r\n\t\t\treturn fn?.replace(/( {5,})/g, (match) => match.slice(4)) ?? \"\";\r\n\t\t});\r\n\r\n\t\tlet strArgs = \"\";\r\n\t\tfor (const [key, value] of Object.entries(args)) {\r\n\t\t\tif (typeof value === \"string\") strArgs += `const ${key} = '${value}';\\n`;\r\n\t\t\telse if (typeof value === \"object\")\r\n\t\t\t\tstrArgs += `const ${key} = ${JSON.stringify(value)};\\n`;\r\n\t\t\telse strArgs += `const ${key} = ${value};\\n`;\r\n\t\t}\r\n\r\n\t\tconst typing = type ? `Daily<${type}>` : \"Daily\";\r\n\t\treturn `${strArgs}\\n/** @type {${typing}} */\\nconst daily = ${str};\\n\\nreturn daily;`;\r\n\t}\r\n\r\n\t#onSelectTemplate(event) {\r\n\t\tevent.preventDefault();\r\n\r\n\t\tthis._selectedDaily = \"\";\r\n\t\tthis._selectedTemplate = event.currentTarget.value;\r\n\r\n\t\tthis.render();\r\n\t}\r\n}\r\n\r\nfunction splitList(list) {\r\n\treturn list\r\n\t\t.split(\",\")\r\n\t\t.map((x) => x.trim())\r\n\t\t.filter((x) => x);\r\n}\r\n\r\nfunction simplyfiable(value) {\r\n\tif (typeof value === \"number\") return value;\r\n\r\n\tconst trimmed = value.trim();\r\n\tif (trimmed === \"level\" || trimmed === \"half\") return trimmed;\r\n\r\n\tconst numbered = Number(trimmed);\r\n\treturn Number.isNaN(numbered) ? \"\" : numbered;\r\n}\r\n", "import { canPrepDailies } from \"./actor\";\r\nimport { openDailiesInterface } from \"./api\";\r\nimport { getFlag, localize, updateSourceFlag } from \"./module\";\r\n\r\nexport function preCreateChatMessage(message, data, context) {\r\n\tif (context.restForTheNight) {\r\n\t\tupdateSourceFlag(message, \"restForTheNight\", true);\r\n\t}\r\n}\r\n\r\nexport function renderChatMessage(message, html) {\r\n\tif (getFlag(message, \"restForTheNight\")) {\r\n\t\trenderRestMessage(message, html);\r\n\t}\r\n}\r\n\r\nfunction renderRestMessage(message, html) {\r\n\tconst actor = message.actor;\r\n\tif (!actor.isOwner) return;\r\n\r\n\tconst canPrep = canPrepDailies(actor);\r\n\tconst prepared = getFlag(message, \"prepared\");\r\n\tconst label = localize(\r\n\t\t`message.dailiesRequest.${\r\n\t\t\t!canPrep && prepared === undefined\r\n\t\t\t\t? \"cleaning\"\r\n\t\t\t\t: canPrep\r\n\t\t\t\t  ? \"button\"\r\n\t\t\t\t  : \"prepared\"\r\n\t\t}`,\r\n\t);\r\n\tconst btn = $(`<button type=\"button\">${label}</button>`);\r\n\r\n\thtml.find(\".message-content\").append(btn);\r\n\r\n\tif (canPrep) {\r\n\t\tbtn.on(\"click\", () => openDailiesInterface(actor, message));\r\n\t} else {\r\n\t\tbtn.prop(\"disabled\", true);\r\n\t}\r\n}\r\n", "import { createUpdateCollection } from \"./api\";\r\nimport { getDailyFromSourceId } from \"./dailies\";\r\nimport { MODULE_ID, getFlag, getSourceId, setFlag } from \"./module\";\r\nimport { isPF2eStavesActive } from \"./data/staves\";\r\nimport { sluggify } from \"./pf2e/utils\";\r\n\r\nexport async function restForTheNightAll(wrapped, ...args) {\r\n\tconst messages = await wrapped(...args);\r\n\tawait Promise.all(\r\n\t\tmessages.map(async (message) => {\r\n\t\t\tconst actor = message.actor;\r\n\t\t\tif (!actor?.isOwner) return;\r\n\r\n\t\t\tawait restForTheNight(actor);\r\n\t\t\tawait setFlag(actor, \"rested\", true);\r\n\t\t\tawait setFlag(message, \"prepared\", false);\r\n\t\t}),\r\n\t);\r\n\treturn messages;\r\n}\r\n\r\nasync function restForTheNight(actor) {\r\n\tconst removeItems = [];\r\n\tconst [updateItems, updateItem] = createUpdateCollection();\r\n\tconst pf2eStavesActive = isPF2eStavesActive();\r\n\r\n\tfor (const item of actor.items) {\r\n\t\tif (getFlag(item, \"temporary\")) {\r\n\t\t\tremoveItems.push(item.id);\r\n\r\n\t\t\t// we remove the itemGrants flag from the parent feat\r\n\t\t\tif (item.isOfType(\"feat\")) {\r\n\t\t\t\tconst parentId = getFlag(item, \"grantedBy\");\r\n\t\t\t\tif (parentId) {\r\n\t\t\t\t\tconst slug = sluggify(item.name, { camel: \"dromedary\" });\r\n\t\t\t\t\tconst path = `flags.pf2e.itemGrants.-=${slug}`;\r\n\t\t\t\t\tupdateItem({ _id: parentId, [path]: true });\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// we don't need to do more work because the item is being deleted\r\n\t\t\tcontinue;\r\n\t\t}\r\n\r\n\t\t// we remove the spellcasting entries from pf2e staves\r\n\t\tif (\r\n\t\t\t!pf2eStavesActive &&\r\n\t\t\titem.isOfType(\"spellcastingEntry\") &&\r\n\t\t\titem.system.prepared.value === \"charge\"\r\n\t\t) {\r\n\t\t\tremoveItems.push(item.id);\r\n\t\t\tcontinue;\r\n\t\t}\r\n\r\n\t\tconst sourceId = getSourceId(item);\r\n\r\n\t\t// We run the daily rest function if it exists\r\n\t\tif (sourceId) {\r\n\t\t\tconst daily = getDailyFromSourceId(sourceId);\r\n\t\t\tif (daily?.rest) {\r\n\t\t\t\tawait daily.rest({ item, sourceId, updateItem, actor });\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// we clean temporary rule elements\r\n\t\tconst rules = deepClone(item._source.system.rules);\r\n\t\tlet modifiedRules = false;\r\n\t\tfor (let i = rules.length - 1; i >= 0; i--) {\r\n\t\t\tif (MODULE_ID in rules[i]) {\r\n\t\t\t\trules.splice(i, 1);\r\n\t\t\t\tmodifiedRules = true;\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (modifiedRules) updateItem({ _id: item.id, \"system.rules\": rules });\r\n\t}\r\n\r\n\tif (updateItems.size) {\r\n\t\tawait actor.updateEmbeddedDocuments(\"Item\", updateItems.contents);\r\n\t}\r\n\r\n\tif (removeItems.length) {\r\n\t\tawait actor.deleteEmbeddedDocuments(\"Item\", removeItems);\r\n\t}\r\n}\r\n", "import { performDailyCrafting, renderCharacterSheetPF2e } from \"./actor\";\r\nimport { openDailiesInterface, utils } from \"./api\";\r\nimport { DailyCustoms } from \"./apps/custom\";\r\nimport { preCreateChatMessage, renderChatMessage } from \"./chat\";\r\nimport {\r\n\tBUILTINS_DAILIES,\r\n\tCUSTOM_DAILIES,\r\n\tUNIQUE_DAILY_KEYS,\r\n\tcheckCustomDaily,\r\n\tparseCustomDailies,\r\n\tprepareAllDailies,\r\n\tprepareDailies,\r\n} from \"./dailies\";\r\nimport {\r\n\tDEFAULT_REGEX_RANKS,\r\n\tgetSpellcastingEntryStaffData,\r\n\tgetSpellcastingEntryStaffFlags,\r\n\tisPF2eStavesActive,\r\n\tupdateEntryCharges,\r\n} from \"./data/staves\";\r\nimport {\r\n\tMODULE_ID,\r\n\tregisterSetting,\r\n\tregisterSettingMenu,\r\n\tregisterWrapper,\r\n\twarn,\r\n} from \"./module\";\r\nimport { restForTheNightAll } from \"./rest\";\r\nimport { onSpellcastingEntryCast } from \"./spellcasting\";\r\n\r\nexport const EXT_VERSION = \"1.3.0\";\r\n\r\nconst SPELLCASTING_ENTRY_CAST =\r\n\t\"CONFIG.PF2E.Item.documentClasses.spellcastingEntry.prototype.cast\";\r\nconst DAILY_CRAFTING =\r\n\t\"CONFIG.PF2E.Actor.documentClasses.character.prototype.performDailyCrafting\";\r\nconst REST_FOR_THE_NIGHT = \"game.pf2e.actions.restForTheNight\";\r\n\r\nHooks.once(\"setup\", () => {\r\n\tregisterSetting({\r\n\t\tname: \"customDailies\",\r\n\t\ttype: Array,\r\n\t\tdefault: [],\r\n\t\tconfig: false,\r\n\t\tonChange: parseCustomDailies,\r\n\t});\r\n\r\n\tregisterSetting({\r\n\t\tname: \"familiar\",\r\n\t\ttype: String,\r\n\t\tdefault: \"\",\r\n\t});\r\n\r\n\tregisterSetting({\r\n\t\tname: \"members\",\r\n\t\ttype: Boolean,\r\n\t\tdefault: true,\r\n\t\tscope: \"client\",\r\n\t});\r\n\r\n\tregisterSetting({\r\n\t\tname: \"staff-sort\",\r\n\t\ttype: String,\r\n\t\tdefault: \"top\",\r\n\t\tchoices: [\"top\", \"bottom\"],\r\n\t\tscope: \"client\",\r\n\t});\r\n\r\n\tregisterSetting({\r\n\t\tname: \"staff-regex\",\r\n\t\ttype: String,\r\n\t\tdefault: DEFAULT_REGEX_RANKS,\r\n\t});\r\n\r\n\tregisterSetting({\r\n\t\tname: \"filters\",\r\n\t\ttype: String,\r\n\t\tdefault: \"\",\r\n\t\tscope: \"client\",\r\n\t\tonChange: prepareAllDailies,\r\n\t});\r\n\r\n\tregisterSettingMenu({\r\n\t\tname: \"customs\",\r\n\t\ttype: DailyCustoms,\r\n\t});\r\n\r\n\tgame.modules.get(MODULE_ID).api = {\r\n\t\topenDailiesInterface: (actor) => openDailiesInterface(actor),\r\n\t\tgetBuiltinDailies: () => deepClone(BUILTINS_DAILIES),\r\n\t\tgetCustomDailies: () => deepClone(CUSTOM_DAILIES),\r\n\t\tgetBuiltinDailyKeys: () =>\r\n\t\t\t[\r\n\t\t\t\tUNIQUE_DAILY_KEYS.map((k) => `dailies.${k}`),\r\n\t\t\t\tBUILTINS_DAILIES.map((d) => `dailies.${d.key}`),\r\n\t\t\t].flat(),\r\n\t\tgetBuiltinDailyKey: (uuid) => {\r\n\t\t\tconst daily = BUILTINS_DAILIES.find(\r\n\t\t\t\t(d) => d.item.uuid === uuid || d.children?.some((c) => c.uuid === uuid),\r\n\t\t\t);\r\n\t\t\tif (!daily) return;\r\n\t\t\treturn `dailies.${daily.key}`;\r\n\t\t},\r\n\t\tprepareDailies,\r\n\t\tcheckCustomDaily,\r\n\t\tgetUtils: () => deepClone(utils),\r\n\t\tgetSpellcastingEntryStaffFlags,\r\n\t\tgetSpellcastingEntryStaffData,\r\n\t\tupdateEntryCharges,\r\n\t};\r\n\r\n\tif (!isPF2eStavesActive()) {\r\n\t\tCONFIG.PF2E.preparationType.charge = \"Charge\";\r\n\t\tregisterWrapper(SPELLCASTING_ENTRY_CAST, onSpellcastingEntryCast, \"MIXED\");\r\n\t}\r\n});\r\n\r\nHooks.once(\"ready\", async () => {\r\n\tif (isPF2eStavesActive()) {\r\n\t\twarn(\"staves.conflict\", true);\r\n\t}\r\n\r\n\tawait prepareAllDailies();\r\n\r\n\tif (!game.modules.get(\"lib-wrapper\")?.active && game.user.isGM) {\r\n\t\twarn(\"error.noLibwrapper\", true);\r\n\t\treturn;\r\n\t}\r\n\r\n\tregisterWrapper(DAILY_CRAFTING, performDailyCrafting, \"OVERRIDE\");\r\n\r\n\tregisterWrapper(REST_FOR_THE_NIGHT, restForTheNightAll);\r\n});\r\n\r\nHooks.on(\"renderCharacterSheetPF2e\", renderCharacterSheetPF2e);\r\n\r\nHooks.on(\"preCreateChatMessage\", preCreateChatMessage);\r\nHooks.on(\"renderChatMessage\", renderChatMessage);\r\n"],
  "mappings": "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CACD,EACA,KAAM,CACL,CACC,KAAM,OACN,KAAM,OACN,OAAQ,CACP,KAAM,OACN,OAAQC,GAAU,CAAC,CACpB,CACD,CACD,EACA,QAAS,MAAO,CAAE,MAAAE,EAAO,OAAAC,EAAQ,QAAAC,EAAS,SAAAC,CAAS,IAAM,CACxD,IAAMN,EAAOI,EAAO,KAAK,KACnBG,EAAS,MAAMJ,EAAM,iBAAiBH,CAAI,EAChDK,EAAQE,CAAM,EACdD,EAAS,IAAI,QAAS,CAAE,KAAAN,CAAK,CAAC,CAC/B,CACD,CAED,CAzBgBQ,EAAAV,GAAA,mBCAT,IAAMW,GAAc,CAC1B,8DACA,gDACA,+EACA,GACA,MACA,kCACA,2BACA,uCACA,MACA,2CACA,uDACA,oBACA,wBACA,uCACA,gBACA,oBACA,4BACA,wBACA,uCACA,4BACA,2CACA,qBACA,yBACA,iBACA,aACA,QACA,8CACA,iBACA,IACA,GACA,4CACA,8BACA,0BACA,cACA,6FACA,SACA,kBACA,YACA,gCACA,mGACA,aACA,SACA,cACA,0CACA,iDACA,SACA,2EACA,+CACA,4DACA,0BACA,0CACA,GACA,mCACA,gDACA,gEACA,iDACA,8CACA,YACA,SACA,IACA,GACA,0BACD,EAAE,KAAK;AAAA,CAAI,EC/DJ,IAAMC,GAAO,CACnB,gFACA,yEACA,0DACA,GACA,qFACA,GACA,8BACA,iFACA,wEACA,+DACA,wEACA,IACA,GACA,sEACA,yBACA,yBACA,2BACA,IACA,GACA,6EACA,GACA,yDACA,GACA,8FACA,GACA,iCACA,kBACA,mBACA,0BACA,2BACA,wBACA,sBACA,sBACA,2BACA,cACA,gBACA,IACA,GACA,qCACA,sBACA,wBACA,cACA,4FACA,SACA,kBACA,YACA,8BACA,qDACA,aACA,YACA,8BACA,iGACA,aACA,YACA,6BACA,8FACA,aACA,YACA,gCACA,uGACA,aACA,SACA,cACA,YACA,6BACA,6BACA,8CACA,mBACA,mDACA,aACA,YACA,8BACA,6BACA,mCACA,4CACA,2DACA,0CACA,aACA,YACA,8BACA,8BACA,qCACA,sCACA,gEACA,oDACA,aACA,YACA,8BACA,6BACA,uCACA,qCACA,wEACA,wEACA,8FACA,aACA,YACA,8BACA,gCACA,uCACA,6CACA,wEACA,sDACA,8FACA,aACA,SACA,8EACA,yCACA,8BACA,GACA,yCACA,GACA,0EACA,wHACA,oHACA,GACA,iCACA,mDACA,kFACA,oEACA,4EACA,0CACA,8DACA,8CACA,wCACA,iBACA,YACA,GACA,4FACA,gEACA,qEACA,4DACA,2CACA,GACA,sEACA,6HACA,8CACA,0EACA,wCACA,0CACA,qBACA,gBACA,YACA,SACA,kDACA,oDACA,GACA,+DACA,0EACA,sEACA,GACA,6DACA,0BACA,iHACA,YACA,SACA,IACA,GACA,oBACA,8IACA,kHACA,uEACA,iHACA,IACA,GACA,sDACA,kCACA,oBACA,iJACA,GACA,4DACA,8FACA,QACA,GACA,wCACA,YACA,oCACA,uBACA,yBACA,yBACA,2DACA,uCACA,kDACA,qBACA,wBACA,4DACA,uCACA,4CACA,qBACA,iBACA,iCACA,aACA,cACA,oDACA,QACA,GACA,oBACA,gEACA,sBACA,QACA,GACA,mBACA,IACA,GACA,+BACA,0CACA,+DACA,wBACA,yEACA,iBACA,QACA,GACA,oEACA,qBACA,mFACA,iBACA,QACA,GACA,iDACA,GACA,0DACA,uEACA,6DACA,GACA,oBACA,IACA,GACA,kBACD,EAAE,KAAK;AAAA,CAAI,ECpOJ,IAAMC,GAAS,CACrB,sEACA,0FACA,iEACA,GACA,6EACA,GACA,MACA,kCACA,uCACA,MACA,+DACA,sBACA,2BACA,GACA,wDACA,8EACA,GACA,2CACA,qCACA,sCACA,8EACA,YACA,GACA,+FACA,QACA,GACA,8DACA,IACA,GACA,uCACA,yBACA,qBACA,cACA,oFACA,SACA,gCACA,6FACA,mBACA,8DACA,+DACA,2FACA,4FACA,YACA,SACA,kCACA,sDACA,wBACA,4BACA,6BACA,gFACA,wBACA,iCACA,6CACA,2CACA,8CACA,oDACA,sBACA,iBACA,oEACA,YACA,qBACA,UACA,yEACA,uDACA,sCACA,2GACA,8BACA,oEACA,YACA,SACA,IACA,GACA,qBACD,EAAE,KAAK;AAAA,CAAI,EC1EJ,IAAMC,GAAO,CACnB,gDACA,yEACA,uFACA,kEACA,GACA,0DACA,GACA,6CACA,0CACA,+DACA,+CACA,wEACA,QACA,uBACA,IACA,GACA,qCACA,4BACA,mBACA,cACA,+EACA,SACA,kBACA,YACA,6BACA,8FACA,wDACA,aACA,YACA,8BACA,2FACA,wDACA,aACA,YACA,+BACA,4FACA,aACA,YACA,+BACA,gGACA,0DACA,aACA,SACA,iDACA,8CACA,yCACA,wGACA,GACA,oCACA,2BACA,+CACA,gDACA,YACA,GACA,+BACA,kCACA,6EACA,0DACA,2DACA,YACA,kEACA,4EACA,8EACA,GACA,qCACA,+DACA,gEACA,uBACA,kFACA,+DACA,gEACA,gBACA,YACA,kBACA,iBACA,qCACA,kFACA,+DACA,gEACA,4CACA,kFACA,kFACA,+DACA,gEACA,uBACA,kFACA,+DACA,gEACA,gBACA,YACA,GACA,wBACA,SACA,kCACA,qDACA,wBACA,6BACA,6BACA,0FACA,gEACA,0DACA,YACA,qBACA,UACA,4EACA,wCACA,GACA,wCACA,gDACA,gDACA,GACA,sDACA,+EACA,kCACA,uBACA,6FACA,kDACA,kCACA,gBACA,GACA,6FACA,YACA,SACA,IACA,GACA,wBACD,EAAE,KAAK;AAAA,CAAI,EC3GX,IAAMC,EAAWC,EAAY,SAAS,EAEhCC,GAAY,CACjB,UACA,eACA,cACA,WACA,aACA,OACA,OACD,EACMC,GAAW,CAAC,cAAe,SAAU,OAAQ,MAAM,EAE5CC,GAAN,cAA2B,eAAgB,CAjClD,MAiCkD,CAAAC,EAAA,qBACjD,WAAW,gBAAiB,CAC3B,OAAO,YAAY,gBAAgB,eAAgB,CAClD,GAAI,uBACJ,MAAOL,EAAS,OAAO,EACvB,SAAUM,GAAa,aAAa,EACpC,eAAgB,GAChB,cAAe,GACf,cAAe,GACf,QAAS,CAAC,aAAa,CACxB,CAAC,CACF,CAEA,MAAM,cAAcC,EAAOC,EAAU,CAAC,CAEtC,MAAM,QAAQC,EAAS,CACtB,IAAMC,EAAUC,EAAW,eAAe,EACpCC,EAAOF,EAAQ,KACnBG,GAAWA,EAAO,MAAQ,KAAK,cACjC,GAAG,KACGC,EAAW,KAAK,kBAChBC,EAAY,KAAK,QAAQ,IAAI,kBAAkB,EAC/CC,EACLD,GAAW,QAAU,eAAeE,GAAaF,EAAU,OAAO,EAC/D,CAAE,QAASE,EAAY,EACvB,GAEJ,OAAO,YAAY,MAAM,QAAQR,CAAO,EAAG,CAC1C,KAAMT,EACN,SAAAc,EACA,UAAWZ,GACX,MAAO,KAAK,eACZ,KAAAU,EACA,QAAAF,EACA,SAAUP,GACV,UAAWA,GAAS,SAASW,CAAQ,EACrC,OAAQC,GAAW,OACnB,WAAAC,CACD,CAAC,CACF,CAEA,kBAAkBE,EAAM,CACvB,MAAM,kBAAkBA,CAAI,EAE5B,KAAK,SAAS,QAAQ,EAEtB,IAAMC,EAAS,KAAK,QAAQ,IAAI,kBAAkB,GAAG,IAC/CC,EAAOF,EAAK,KAAK,OAAO,EAAE,CAAC,EACjC,GAAIC,GAAUC,EAAM,CACnB,IAAMC,EAAUH,EAAK,KAAK,sBAAsB,EAAE,CAAC,EACnD,KAAK,QAAUC,EAAO,aAAaE,EAASD,EAAK,KAAK,EACtD,KAAK,QAAQ,wBACZ,SAAS,IAAM,CACdA,EAAK,MAAQ,KAAK,QAAQ,SAAS,CACpC,EAAG,GAAG,CACP,CACD,MACC,KAAK,QAAU,KAGhBF,EACE,KAAK,+BAA+B,EACpC,GAAG,SAAU,KAAKI,GAAkB,KAAK,IAAI,CAAC,EAChDJ,EACE,KAAK,+BAA+B,EACpC,GAAG,QAAS,KAAKK,GAAkB,KAAK,IAAI,CAAC,EAC/CL,EACE,KAAK,4BAA4B,EACjC,GAAG,QAAS,KAAKM,GAAe,KAAK,IAAI,CAAC,EAE5CN,EAAK,KAAK,gBAAgB,EAAE,GAAG,QAAS,KAAKO,GAAe,KAAK,IAAI,CAAC,EACtEP,EACE,KAAK,4BAA4B,EACjC,GAAG,QAAS,KAAKQ,GAAe,KAAK,IAAI,CAAC,EAE5CR,EACE,KAAK,yBAAyB,EAC9B,GAAG,QAAS,KAAKS,GAAY,KAAK,IAAI,CAAC,CAC1C,CAEA,IAAI,MAAO,CAEV,OADgB,KAAK,KAAK,cAAc,uBAAuB,GAC/C,KACjB,CAEA,KAAMA,GAAYpB,EAAO,CACxBA,EAAM,eAAe,EAErB,IAAMK,EAAO,KAAK,KACZgB,EAAW,KAAK,eAEtB,GAAI,CAACA,GAAY,CAAChB,EAAM,OAExB,IAAMF,EAAUC,EAAW,eAAe,EACpCkB,EAAUnB,EAAQ,OAAQG,GAAWA,EAAO,MAAQe,CAAQ,EAElE,GAAI,CAGH,IAAME,GADQ,MADH,IAAIC,GAAcnB,CAAI,EACV,GACL,IAElB,GAAI,OAAOkB,GAAQ,SAAU,OAAOE,EAAK,YAAY,EACrD,GAAIH,EAAQ,KAAMhB,GAAWA,EAAO,MAAQiB,CAAG,EAC9C,OAAOE,EAAK,WAAW,EAExB,IAAMC,EAAQvB,EAAQ,UAAWG,GAAWA,EAAO,MAAQe,CAAQ,EACnE,GAAIK,EAAQ,EAAG,OAEfvB,EAAQ,OAAOuB,EAAO,EAAG,CAAE,IAAAH,EAAK,KAAAlB,CAAK,CAAC,EACtC,MAAMsB,GAAW,gBAAiBxB,CAAO,EAEzCV,EAAS,KAAK,QAAS,CAAE,MAAO8B,CAAI,CAAC,EACrC,KAAK,eAAiBA,EACtB,KAAK,OAAO,CACb,OAASK,EAAK,CACbC,EAAM,kBAAkB,EACxB,QAAQ,MAAMD,CAAG,EACjB,QAAQ,MACP,oDAAoDP,CAAQ,EAC7D,CACD,CACD,CAEA,KAAMF,GAAenB,EAAO,CAS3B,GARAA,EAAM,eAAe,EACrBA,EAAM,gBAAgB,EAOlB,CALW,MAAM,OAAO,QAAQ,CACnC,MAAOP,EAAS,cAAc,EAC9B,QAASA,EAAS,gBAAgB,CACnC,CAAC,EAEY,OAEb,IAAM8B,EAAMvB,EAAM,cAAc,QAAQ,IAClCG,EAAUC,EAAW,eAAe,EAAE,OAC1CE,GAAWA,EAAO,MAAQiB,CAC5B,EAEA,MAAMI,GAAW,gBAAiBxB,CAAO,EACzCV,EAAS,KAAK,UAAW,CAAE,MAAO8B,CAAI,CAAC,EACvC,KAAKN,GAAe,CACrB,CAEAA,IAAiB,CAChB,KAAK,eAAiB,GACtB,KAAK,kBAAoB,UACzB,KAAK,OAAO,CACb,CAEAC,GAAelB,EAAO,CACrBA,EAAM,eAAe,EAErB,KAAK,eAAiBA,EAAM,cAAc,QAAQ,IAClD,KAAK,OAAO,CACb,CAEA,KAAMgB,GAAkBhB,EAAO,CAC9BA,EAAM,eAAe,EACrB,IAAMO,EAAW,KAAK,kBAEhBJ,EAAUC,EAAW,eAAe,EACpCH,EAAW,IAAI,SAAS,KAAK,IAAI,EACjC6B,EAAO,OAAO,YAAY7B,CAAQ,EAClC8B,EAAYnC,GAAS,SAASW,CAAQ,EACxC,CAAE,IAAAgB,EAAK,KAAAS,EAAM,MAAAC,CAAM,EAAIH,EAE3B,GAAIC,EACHR,EAAMhB,UACI,CAACgB,GAAO,CAACS,EACnB,OAAOvC,EAAS,KAAK,kBAAkB,EAGxC,GAAIU,EAAQ,KAAMG,GAAWA,EAAO,MAAQiB,CAAG,EAC9C,OAAOE,EAAK,iBAAiB,EAE9B,IAAIpB,EAEJ,GAAIE,IAAa,eAAgB,CAChC,IAAM2B,EAAQC,GAAwBZ,EAAKS,EAAMC,CAAK,EACtD5B,EAAO,KAAK+B,GAAgBF,EAAO,CAAE,IAAAX,EAAK,KAAAS,EAAM,MAAAC,CAAM,EAAG,eAAe,CACzE,SAAW1B,IAAa,cAAe,CACtC,IAAM2B,EAAQG,GAAuBd,EAAKS,EAAMC,CAAK,EACrD5B,EAAO,KAAK+B,GAAgBF,EAAO,CAAE,IAAAX,EAAK,KAAAS,EAAM,MAAAC,CAAM,EAAG,eAAe,CACzE,SAAW1B,IAAa,WAAY,CACnC,IAAM2B,EAAQI,GAAoBf,EAAKS,EAAMC,CAAK,EAClD5B,EAAO,KAAK+B,GACXF,EACA,CAAE,IAAAX,EAAK,KAAAS,EAAM,MAAAC,CAAM,EACnB,kBACD,CACD,SAAW1B,IAAa,aAAc,CACrC,IAAMgC,EAAaC,GAAaV,EAAK,UAAU,EACzCW,EAAcC,GAAUZ,EAAK,WAAW,EAE9C,GAAIS,IAAe,IAAM,CAACE,EAAY,OACrC,OAAOhD,EAAS,KAAK,kBAAkB,EACxC,GAAI,OAAO8C,GAAe,UAAYA,EAAa,EAClD,OAAO9C,EAAS,KAAK,wBAAwB,EAE9C,IAAMyC,EAAQS,GACbpB,EACAS,EACAS,EACAF,EACAN,CACD,EACA5B,EAAO,KAAK+B,GACXF,EACA,CAAE,IAAAX,EAAK,KAAAS,EAAM,MAAAC,EAAO,WAAAM,EAAY,YAAAE,CAAY,EAC5C,oBACD,CACD,SAAWlC,IAAa,OAAQ,CAC/B,IAAMqC,EAASF,GAAUZ,EAAK,MAAM,EAC9Be,EAAS,CACd,SAAUH,GAAUZ,EAAK,QAAQ,EACjC,MAAOU,GAAaV,EAAK,KAAK,GAAK,CAAE,IAAK,EAAG,IAAK,EAAG,CACtD,EACIc,EAAO,SAAQC,EAAO,OAASD,GACnC,IAAMV,EAAQY,GAAgBvB,EAAKS,EAAMa,EAAQZ,CAAK,EACtD5B,EAAO,KAAK+B,GAAgBF,EAAO,CAAE,IAAAX,EAAK,KAAAS,EAAM,MAAAC,CAAM,EAAG,cAAc,CACxE,SAAW1B,IAAa,QAAS,CAChC,IAAMwC,EAAQ,OAAOjB,EAAK,KAAK,GAAK,OAC9Bc,EAASF,GAAUZ,EAAK,MAAM,EAChCkB,EAASlB,EAAK,OAAO,MAAM,GAAG,EAAE,IAAKmB,GAAMA,EAAE,KAAK,CAAC,EACnDD,EAAO,SAAW,EACrBA,EAASR,GAAaQ,EAAO,CAAC,CAAC,EAE/BA,EAASA,EACP,OAAQC,GAAMA,CAAC,EACf,IAAKA,GAAM,OAAOA,CAAC,CAAC,EACpB,OAAQA,GAAM,CAAC,OAAO,MAAMA,CAAC,CAAC,EAEjC,IAAMJ,EAAS,CACd,SAAUH,GAAUZ,EAAK,QAAQ,EACjC,WAAYY,GAAUZ,EAAK,UAAU,EACrC,MAAOkB,GAAU,CAAC,CACnB,EACIJ,EAAO,SAAQC,EAAO,OAASD,GACnC,IAAMV,EAAQgB,GAAiB3B,EAAKS,EAAMa,EAAQE,EAAOd,CAAK,EAC9D5B,EAAO,KAAK+B,GACXF,EACA,CAAE,IAAAX,EAAK,KAAAS,EAAM,MAAAC,EAAO,MAAAc,CAAM,EAC1B,eACD,CACD,SAAWxC,IAAa,OACvBF,EAAO8C,WACG5C,IAAa,cACvBF,EAAO+C,WACG7C,IAAa,SACvBF,EAAOgD,WACG9C,IAAa,OACvBF,EAAOiD,OACD,CACN,IAAMpB,EAAQ,CAAE,IAAAX,EAAK,MAAAU,EAAO,KAAM,CAAE,KAAAD,CAAK,EAAG,KAAM,CAAC,EAAG,QAAS,IAAM,CAAC,CAAE,EACxE3B,EAAO,KAAK+B,GAAgBF,EAAO,CAAE,IAAAX,EAAK,KAAAS,EAAM,MAAAC,CAAM,CAAC,CACxD,CAEA9B,EAAQ,KAAK,CAAE,IAAAoB,EAAK,KAAAlB,CAAK,CAAC,EAC1B,MAAMsB,GAAW,gBAAiBxB,CAAO,EAEzC,KAAK,eAAiBoB,EACtB,KAAK,OAAO,CACb,CAEAa,GAAgBF,EAAOqB,EAAMC,EAAM,CAClC,IAAMC,EAAc,sBACdC,EAAM,CAAC,EAETC,EAAM,KAAK,UACdzB,EACA,CAAC0B,EAAGC,IACC,OAAOA,GAAU,YACpBH,EAAI,KAAKG,CAAK,EACPJ,GAEDI,EAER,CACD,EAEAF,EAAMA,EAAI,QAAQ,IAAI,OAAO,IAAIF,CAAW,IAAK,GAAG,EAAG,IAC3CC,EAAI,MAAM,GAAG,SAAS,GACtB,QAAQ,WAAaI,GAAUA,EAAM,MAAM,CAAC,CAAC,GAAK,EAC7D,EAED,IAAIC,EAAU,GACd,OAAW,CAACxC,EAAKsC,CAAK,IAAK,OAAO,QAAQN,CAAI,EACzC,OAAOM,GAAU,SAAUE,GAAW,SAASxC,CAAG,OAAOsC,CAAK;AAAA,EACzD,OAAOA,GAAU,SACzBE,GAAW,SAASxC,CAAG,MAAM,KAAK,UAAUsC,CAAK,CAAC;AAAA,EAC9CE,GAAW,SAASxC,CAAG,MAAMsC,CAAK;AAAA,EAGxC,IAAMG,EAASR,EAAO,SAASA,CAAI,IAAM,QACzC,MAAO,GAAGO,CAAO;AAAA,aAAgBC,CAAM;AAAA,gBAAuBL,CAAG;AAAA;AAAA,cAClE,CAEA5C,GAAkBf,EAAO,CACxBA,EAAM,eAAe,EAErB,KAAK,eAAiB,GACtB,KAAK,kBAAoBA,EAAM,cAAc,MAE7C,KAAK,OAAO,CACb,CACD,EAEA,SAAS0C,GAAUuB,EAAM,CACxB,OAAOA,EACL,MAAM,GAAG,EACT,IAAKhB,GAAMA,EAAE,KAAK,CAAC,EACnB,OAAQA,GAAMA,CAAC,CAClB,CALSnD,EAAA4C,GAAA,aAOT,SAASF,GAAaqB,EAAO,CAC5B,GAAI,OAAOA,GAAU,SAAU,OAAOA,EAEtC,IAAMK,EAAUL,EAAM,KAAK,EAC3B,GAAIK,IAAY,SAAWA,IAAY,OAAQ,OAAOA,EAEtD,IAAMC,EAAW,OAAOD,CAAO,EAC/B,OAAO,OAAO,MAAMC,CAAQ,EAAI,GAAKA,CACtC,CARSrE,EAAA0C,GAAA,gBCxVF,SAAS4B,GAAqBC,EAASC,EAAMC,EAAS,CACxDA,EAAQ,iBACXC,GAAiBH,EAAS,kBAAmB,EAAI,CAEnD,CAJgBI,EAAAL,GAAA,wBAMT,SAASM,GAAkBL,EAASM,EAAM,CAC5CC,EAAQP,EAAS,iBAAiB,GACrCQ,GAAkBR,EAASM,CAAI,CAEjC,CAJgBF,EAAAC,GAAA,qBAMhB,SAASG,GAAkBR,EAASM,EAAM,CACzC,IAAMG,EAAQT,EAAQ,MACtB,GAAI,CAACS,EAAM,QAAS,OAEpB,IAAMC,EAAUC,GAAeF,CAAK,EAC9BG,EAAWL,EAAQP,EAAS,UAAU,EACtCa,EAAQC,EACb,0BACC,CAACJ,GAAWE,IAAa,OACtB,WACAF,EACE,SACA,UACN,EACD,EACMK,EAAM,EAAE,yBAAyBF,CAAK,WAAW,EAEvDP,EAAK,KAAK,kBAAkB,EAAE,OAAOS,CAAG,EAEpCL,EACHK,EAAI,GAAG,QAAS,IAAMC,GAAqBP,EAAOT,CAAO,CAAC,EAE1De,EAAI,KAAK,WAAY,EAAI,CAE3B,CAxBSX,EAAAI,GAAA,qBCVT,eAAsBS,GAAmBC,KAAYC,EAAM,CAC1D,IAAMC,EAAW,MAAMF,EAAQ,GAAGC,CAAI,EACtC,aAAM,QAAQ,IACbC,EAAS,IAAI,MAAOC,GAAY,CAC/B,IAAMC,EAAQD,EAAQ,MACjBC,GAAO,UAEZ,MAAMC,GAAgBD,CAAK,EAC3B,MAAME,EAAQF,EAAO,SAAU,EAAI,EACnC,MAAME,EAAQH,EAAS,WAAY,EAAK,EACzC,CAAC,CACF,EACOD,CACR,CAbsBK,EAAAR,GAAA,sBAetB,eAAeM,GAAgBD,EAAO,CACrC,IAAMI,EAAc,CAAC,EACf,CAACC,EAAaC,CAAU,EAAIC,GAAuB,EACnDC,EAAmBC,EAAmB,EAE5C,QAAWC,KAAQV,EAAM,MAAO,CAC/B,GAAIW,EAAQD,EAAM,WAAW,EAAG,CAI/B,GAHAN,EAAY,KAAKM,EAAK,EAAE,EAGpBA,EAAK,SAAS,MAAM,EAAG,CAC1B,IAAME,EAAWD,EAAQD,EAAM,WAAW,EAC1C,GAAIE,EAAU,CAEb,IAAMC,EAAO,2BADAC,EAASJ,EAAK,KAAM,CAAE,MAAO,WAAY,CAAC,CACX,GAC5CJ,EAAW,CAAE,IAAKM,EAAU,CAACC,CAAI,EAAG,EAAK,CAAC,CAC3C,CACD,CAGA,QACD,CAGA,GACC,CAACL,GACDE,EAAK,SAAS,mBAAmB,GACjCA,EAAK,OAAO,SAAS,QAAU,SAC9B,CACDN,EAAY,KAAKM,EAAK,EAAE,EACxB,QACD,CAEA,IAAMK,EAAWC,GAAYN,CAAI,EAGjC,GAAIK,EAAU,CACb,IAAME,EAAQC,GAAqBH,CAAQ,EACvCE,GAAO,MACV,MAAMA,EAAM,KAAK,CAAE,KAAAP,EAAM,SAAAK,EAAU,WAAAT,EAAY,MAAAN,CAAM,CAAC,CAExD,CAGA,IAAMmB,EAAQ,UAAUT,EAAK,QAAQ,OAAO,KAAK,EAC7CU,EAAgB,GACpB,QAASC,EAAIF,EAAM,OAAS,EAAGE,GAAK,EAAGA,IAClCC,KAAaH,EAAME,CAAC,IACvBF,EAAM,OAAOE,EAAG,CAAC,EACjBD,EAAgB,IAGdA,GAAed,EAAW,CAAE,IAAKI,EAAK,GAAI,eAAgBS,CAAM,CAAC,CACtE,CAEId,EAAY,MACf,MAAML,EAAM,wBAAwB,OAAQK,EAAY,QAAQ,EAG7DD,EAAY,QACf,MAAMJ,EAAM,wBAAwB,OAAQI,CAAW,CAEzD,CA9DeD,EAAAF,GAAA,mBCSR,IAAMsB,GAAc,QAErBC,GACL,oEACKC,GACL,6EACKC,GAAqB,oCAE3B,MAAM,KAAK,QAAS,IAAM,CACzBC,EAAgB,CACf,KAAM,gBACN,KAAM,MACN,QAAS,CAAC,EACV,OAAQ,GACR,SAAUC,EACX,CAAC,EAEDD,EAAgB,CACf,KAAM,WACN,KAAM,OACN,QAAS,EACV,CAAC,EAEDA,EAAgB,CACf,KAAM,UACN,KAAM,QACN,QAAS,GACT,MAAO,QACR,CAAC,EAEDA,EAAgB,CACf,KAAM,aACN,KAAM,OACN,QAAS,MACT,QAAS,CAAC,MAAO,QAAQ,EACzB,MAAO,QACR,CAAC,EAEDA,EAAgB,CACf,KAAM,cACN,KAAM,OACN,QAASE,EACV,CAAC,EAEDF,EAAgB,CACf,KAAM,UACN,KAAM,OACN,QAAS,GACT,MAAO,SACP,SAAUG,EACX,CAAC,EAEDC,GAAoB,CACnB,KAAM,UACN,KAAMC,EACP,CAAC,EAED,KAAK,QAAQ,IAAIC,CAAS,EAAE,IAAM,CACjC,qBAAuBC,GAAUC,GAAqBD,CAAK,EAC3D,kBAAmB,IAAM,UAAUE,EAAgB,EACnD,iBAAkB,IAAM,UAAUC,EAAc,EAChD,oBAAqB,IACpB,CACCC,GAAkB,IAAKC,GAAM,WAAWA,CAAC,EAAE,EAC3CH,GAAiB,IAAKI,GAAM,WAAWA,EAAE,GAAG,EAAE,CAC/C,EAAE,KAAK,EACR,mBAAqBC,GAAS,CAC7B,IAAMC,EAAQN,GAAiB,KAC7BI,GAAMA,EAAE,KAAK,OAASC,GAAQD,EAAE,UAAU,KAAMG,GAAMA,EAAE,OAASF,CAAI,CACvE,EACA,GAAKC,EACL,MAAO,WAAWA,EAAM,GAAG,EAC5B,EACA,eAAAE,GACA,iBAAAC,GACA,SAAU,IAAM,UAAUC,CAAK,EAC/B,+BAAAC,GACA,8BAAAC,GACA,mBAAAC,EACD,EAEKC,EAAmB,IACvB,OAAO,KAAK,gBAAgB,OAAS,SACrCC,GAAgB3B,GAAyB4B,GAAyB,OAAO,EAE3E,CAAC,EAED,MAAM,KAAK,QAAS,SAAY,CAO/B,GANIF,EAAmB,GACtBG,EAAK,kBAAmB,EAAI,EAG7B,MAAMvB,GAAkB,EAEpB,CAAC,KAAK,QAAQ,IAAI,aAAa,GAAG,QAAU,KAAK,KAAK,KAAM,CAC/DuB,EAAK,qBAAsB,EAAI,EAC/B,MACD,CAEAF,GAAgB1B,GAAgB6B,GAAsB,UAAU,EAEhEH,GAAgBzB,GAAoB6B,EAAkB,CACvD,CAAC,EAED,MAAM,GAAG,2BAA4BC,EAAwB,EAE7D,MAAM,GAAG,uBAAwBC,EAAoB,EACrD,MAAM,GAAG,oBAAqBC,EAAiB",
  "names": ["MODULE_ID", "AsyncFunction", "getSetting", "key", "__name", "setSetting", "value", "getSettingLocalizationPath", "path", "registerSetting", "options", "name", "choices", "choice", "registerSettingMenu", "templatePath", "pathStr", "x", "getFlag", "doc", "fallback", "setFlag", "localize", "args", "data", "hasLocalization", "localizePath", "subLocalize", "subKey", "fn", "warn", "info", "error", "hash", "notify", "str", "arg1", "arg2", "arg3", "type", "permanent", "getSourceId", "findItemWithSourceId", "actor", "sourceId", "types", "itemTypes", "type", "item", "__name", "sequenceArray", "start", "end", "levels", "i", "capitalize", "str", "chatUUID", "uuid", "name", "fakeChatUUID", "isInstanceOf", "obj", "cursor", "updateSourceFlag", "doc", "key", "value", "MODULE_ID", "registerWrapper", "path", "callback", "createSpellDaily", "key", "uuid", "filter", "level", "label", "addSpell", "utils", "fields", "messages", "source", "spellLevel", "__name", "tricksterAce", "daily", "createSpellDaily", "row", "item", "castTime", "localizePath", "__name", "bladeAlly", "localize", "actor", "weapon", "children", "runes", "antipaladin", "evil", "good", "liberator", "master", "paladin", "spirit", "tyrant", "value", "localizeRune", "fields", "addRule", "messages", "weaponId", "rune", "name", "slugged", "match", "__name", "ICON", "ceremonialKnife", "actor", "weapon", "utils", "calculateRank", "fields", "item", "addItem", "messages", "uuid", "level", "source", "__name", "rows", "createScrollChain", "key", "uuids", "label", "createRow", "utils", "fields", "addItem", "messages", "field", "uuid", "level", "source", "__name", "slug", "minActorLevel", "child", "row", "actor", "combatFlexibility", "createRow", "utils", "fields", "addFeat", "messages", "children", "uuid", "source", "slug", "level", "child", "row", "__name", "createLanguageDaily", "key", "uuid", "label", "actor", "utils", "actorLanguages", "x", "addRule", "fields", "messages", "value", "source", "__name", "createTrainedSkillDaily", "key", "uuid", "label", "createComboSkillRow", "api", "processComboSkill", "__name", "fields", "addItem", "addRule", "utils", "messages", "removeRule", "field", "rank", "parent", "rule", "suboption", "value", "source", "slug", "extras", "actor", "actorSkills", "x", "createTrainedLoreDaily", "longevities", "createComboSkillRow", "item", "children", "api", "feats", "field", "rank", "processComboSkill", "MIND_WEAPON_UUID", "MALLEABLE_MENTAL_FORGE_UUID", "WEAPON_BASE_TYPES", "WEAPON_GROUPS", "WEAPON_TRAITS", "WEAPON_DAMAGE_TYPES", "WEAPON_RUNES", "WEAPON_GREATER_RUNES", "mindSmith", "localize", "fix", "utils", "nb", "children", "updateItem", "fields", "messages", "item", "weapon", "selected", "traits", "child", "freeSlot", "MODULE_ID", "sourceId", "actor", "findItemWithSourceId", "trait", "runeSlot", "getFlag", "subLocalize", "content", "key", "label", "onWeaponSelected", "__name", "html", "selection", "stats", "RATION_UUID", "getRations", "actor", "findItemWithSourceId", "__name", "rations", "value", "max", "remaining", "last", "localize", "fields", "updateItem", "messages", "quantity", "name", "fakeChatUUID", "chatUUID", "message", "createResistancelDaily", "key", "uuid", "resistances", "resistance", "label", "random", "utils", "fields", "actor", "addRule", "messages", "type", "value", "rule", "__name", "effectUUID", "rootMagic", "actor", "utils", "a", "fields", "messages", "actorId", "DEFAULT_REGEX_RANKS", "KINETIC_ACTIVATION", "isPF2eStavesActive", "__name", "getSpellcastingEntryStaffFlags", "entry", "data", "getFlag", "getSpellcastingEntryStaffData", "staffData", "getMaxSlotRankForStaves", "spontaneousCharges", "actor", "charges", "i", "slot", "cost", "updateEntryCharges", "value", "updatedValue", "setFlag", "getStaves", "type", "trait", "item", "traits", "maxCharges", "entries", "getValidSpellcastingList", "entryMaxCharges", "getSpellcastingEntryMaxSlotRank", "findItemWithSourceId", "classCharges", "getBestSpellcastingEntryForStaves", "bestEntry", "getBestSpellcastingEntry", "bestMod", "classDC", "c", "classMod", "getPreparedSpellcastingEntriesForStaves", "entryGroups", "entryId", "isFlexible", "rank", "index", "id", "prepared", "expended", "spell", "a", "b", "onSpellcastingEntryCast", "wrapped", "args", "spell", "rank", "staffFlags", "getSpellcastingEntryStaffFlags", "actor", "warn", "castRank", "updates", "spontaneousEntries", "entry", "useSpontaneous", "entryRankValue", "__name", "content", "localize", "utils", "entries", "index", "templatePath", "key", "hash", "html", "value", "current", "MODULE_ID", "getValidSpellcastingList", "itemOnly", "innate", "focus", "getFlag", "getSpellcastingEntryMaxSlotRank", "maxSlot", "levelMaxSlot", "i", "getNotExpendedPreparedSpellSlot", "prepared", "_", "id", "expended", "getBestSpellcastingEntry", "bestMod", "bestEntries", "mod", "returnedEntry", "ability", "tradition", "proficiency", "classAttr", "classAttrEntries", "bestCount", "bestEntry", "entryCount", "getPreparedCount", "slot", "getSpellcastingEntriesSortBounds", "min", "max", "scrollSavant", "actor", "maxSlot", "maxTradition", "getSpellcastingTraditionDetails", "rowName", "custom", "utils", "fields", "addItem", "messages", "field", "uuid", "source", "tradition", "entries", "getValidSpellcastingList", "entry", "entryMaxSlot", "getSpellcastingEntryMaxSlotRank", "__name", "spellshaping", "actor", "utils", "fields", "addFeat", "messages", "uuid", "source", "thaumaturgeTome", "createChildCondition", "utils", "actor", "children", "skillNames", "actorLevel", "actorSkills", "custom", "skills", "x", "masters", "experts", "trained", "rowName", "fields", "messages", "addItem", "addRule", "rank", "value", "source", "option", "item", "itemId", "__name", "DEPRECATED_CUSTOM_DAILIES", "UNIQUE_DAILY_KEYS", "BUILTINS_DAILIES", "thaumaturgeTome", "longevities", "createTrainedSkillDaily", "createTrainedLoreDaily", "createLanguageDaily", "createResistancelDaily", "spellshaping", "combatFlexibility", "scrollSavant", "createScrollChain", "tricksterAce", "mindSmith", "bladeAlly", "rootMagic", "ceremonialKnife", "rations", "DAILY_FILTERS", "BUILTINS_UUIDS", "UUIDS", "prepareDailies", "dailies", "prefix", "uuids", "original", "daily", "keyWithPrefix", "i", "uuid", "condition", "err", "error", "__name", "prepareBaseDailies", "CUSTOM_DAILIES", "parseCustomDailies", "customs", "getSetting", "key", "code", "AsyncFunction", "checkCustomDaily", "CUSTOM_UUIDS", "prepareDailyFilters", "filters", "s", "prepareAllDailies", "warning", "warn", "getDailies", "actor", "item", "sourceId", "getSourceId", "entry", "index", "utils", "getDailyFromSourceId", "getFamiliarPack", "__name", "familiarUUID", "id", "PHYSICAL_ITEM_TYPES", "isObject", "value", "__name", "sluggify", "text", "options", "setHasElement", "set", "itemIsOfType", "item", "types", "t", "PHYSICAL_ITEM_TYPES", "PredicatePF2e", "_PredicatePF2e", "__name", "statements", "isStatement", "predicate", "options", "domain", "s", "#isTrue", "statement", "isBinaryOp", "#testBinaryOp", "isCompound", "#testCompound", "operator", "left", "right", "domainArray", "getValues", "operand", "maybeNumber", "pattern", "values", "v", "leftValues", "rightValues", "l", "r", "subProp", "binaryOperators", "isAtomic", "isObject", "entries", "operands", "isAnd", "isOr", "isNand", "isXor", "isNor", "isNot", "isIf", "templateOrders", "getTemplate", "children", "key", "item", "prepare", "label", "rows", "actor", "getFlag", "slug", "prepareArgs", "utils", "custom", "dailyArgs", "groupLabel", "getProcessedValue", "labeled", "hasLocalization", "localize", "child", "template", "row", "type", "childPredicate", "condition", "save", "unique", "order", "PredicatePF2e", "savedRow", "rowLabel", "value", "rowTemplate", "isComboRow", "isSelectRow", "isRandomRow", "tmp", "labelize", "capitalize", "isDropRow", "isAlerRow", "__name", "obj", "args", "getSimplifiableValue", "actor", "value", "fallback", "numbered", "__name", "parseFilter", "filter", "parseFeatFilter", "parseSpellFilter", "checkFilter", "selected", "checkbox", "x", "setTraits", "searchTraits", "dataTraits", "traits", "getFilterTraits", "search", "data", "level", "getSpellFilterLevel", "getFeatFilterLevel", "simplified", "sequenceArray", "localize", "subLocalize", "onDropFeat", "item", "target", "filter", "search", "drop", "localizeAll", "traits", "getFilterTraits", "testFn", "trait", "translatedSkills", "utils", "prerequisites", "prerequisite", "skill", "sluggify", "level", "getFeatFilterLevel", "itemLevel", "args", "result", "onDropItem", "__name", "onDropSpell", "categories", "x", "tradition", "getSpellFilterLevel", "config", "list", "key", "processData", "actor", "dailies", "fields", "getFields", "addItems", "addRules", "updateItems", "updateItem", "createUpdateCollection", "flags", "msg", "subLocalize", "addedSpells", "chatContent", "getRules", "__name", "item", "id", "existing", "rules", "i", "MODULE_ID", "messages", "rawMessages", "messageObj", "group", "options", "order", "label", "message", "familiar", "pack", "getFamiliarPack", "abilities", "ids", "field", "value", "isCustom", "source", "familiarUUID", "staffField", "staffID", "staff", "makeshift", "maxStaffCharges", "getMaxSlotRankForStaves", "uuids", "ranks", "getSetting", "DEFAULT_REGEX_RANKS", "ranksRegex", "rankMatch", "rankStr", "rank", "uuidRegex", "uuidMatch", "uuid", "overcharge", "expendedSpells", "expendedSlots", "flexibleLabel", "slotsUpdates", "data", "spell", "spellSlot", "getNotExpendedPreparedSpellSlot", "entry", "slot", "currentValue", "bestEntry", "getBestSpellcastingEntryForStaves", "ability", "tradition", "proficiency", "sort", "min", "max", "getSpellcastingEntriesSortBounds", "entrySource", "utils", "localize", "name", "key", "process", "dailyArgs", "signature", "parent", "rule", "parentItem", "parentId", "level", "err", "error", "rowFields", "rows", "row", "type", "input", "flag", "items", "getFlag", "path", "sluggify", "entryType", "spells", "a", "b", "parseMessages", "messageList", "selected", "random", "hasLocalization", "chatUUID", "elements", "element", "select", "localize", "subLocalize", "STAFF_NEXUS", "DailiesInterface", "__name", "actor", "options", "message", "templatePath", "templates", "getDailies", "DAILY_FILTERS", "type", "nbAbilities", "pack", "getFamiliarPack", "flags", "getFlag", "template", "_id", "name", "customUUIDS", "getSetting", "uuid", "item", "a", "b", "index", "rows", "data", "isPF2eStavesActive", "staves", "getStaves", "getMaxSlotRankForStaves", "staff", "staffIdRow", "preparedEntries", "getPreparedSpellcastingEntriesForStaves", "flexibleLabel", "entry", "entryId", "spell", "utils", "slot", "rankLabel", "staffNexus", "findItemWithSourceId", "nbExpends", "i", "daily", "getTemplate", "error", "groups", "value", "placeholder", "msg", "key", "formattedKey", "c", "force", "_", "select", "html", "#onClear", "#onAccept", "#onCancel", "#onComboSelectChange", "#onComboInputChange", "#onSearch", "#onAlert", "uniqueSelects", "event", "#cleanUniqueSelects", "processedUniques", "unique", "uniqueTag", "selector", "target", "dataString", "filter", "#getfilterFromElement", "onDropItem", "onDropFeat", "onDropSpell", "#lock", "row", "args", "fixed", "#unlock", "element", "parsed", "parseFilter", "input", "x", "#validate", "warns", "emptyInputs", "alertInputs", "parent", "warning", "processData", "setFlag", "isTarget", "children", "getSiblings", "uniqueOptions", "child", "childIndex", "childOptions", "optionUniqueValue", "option", "optionExists", "maxIndex", "finalValue", "el", "siblings", "CANTRIP_DECK_ID", "scrollCompendiumIds", "wandCompendiumIds", "SPELL_CONSUMABLE_NAME_TEMPLATES", "MAGIC_TRADITIONS", "createConsumableFromSpell", "uuid", "type", "heightenedLevel", "mystified", "temp", "itemName", "itemImg", "spell", "pack", "p", "itemId", "getIdForSpellConsumable", "consumable", "isInstanceOf", "consumableSource", "traits", "trait", "getNameForSpellConsumable", "description", "paragraphElement", "containerElement", "hrElement", "__name", "spellName", "templateId", "halfLevelString", "RUNE_PROPERTY_KEYS", "SKILLNAMES", "LANGUAGES", "utils", "skill", "value", "mode", "predicate", "rule", "name", "rank", "lowercase", "result", "key", "localized", "language", "resistance", "str", "capitalize", "type", "uuid", "source", "level", "itemName", "itemImg", "createConsumableFromSpell", "ordinalString", "item", "option", "options", "roll", "actor", "sequenceArray", "damage", "trait", "rune", "potency", "i", "property", "member", "types", "actorTypes", "memberIsActor", "actors", "getSetting", "p", "a", "pluralRules", "suffix", "__name", "openDailiesInterface", "character", "message", "token", "warn", "canPrepDailies", "DailiesInterface", "localize", "createUpdateCollection", "collection", "data", "id", "update", "performDailyCrafting", "entries", "e", "reagentCost", "sum", "entry", "reagentValue", "key", "formula", "itemSource", "itemIsOfType", "__name", "renderCharacterSheetPF2e", "sheet", "html", "actor", "canPrep", "canPrepDailies", "disabledClass", "tooltip", "localize", "icon", "el", "openDailiesInterface", "isPF2eStavesActive", "renderStavesEntries", "entryId", "staffData", "getSpellcastingEntryStaffData", "label", "charges", "input", "event", "onStaffChargesChange", "reset", "onStaffChargesReset", "spells", "spell", "cost", "getEntryDataFromEvent", "itemId", "updateEntryCharges", "getFlag", "createFeatDaily", "key", "uuid", "filter", "label", "utils", "fields", "addFeat", "messages", "source", "__name", "flexibility", "mind", "savant", "tome", "localize", "subLocalize", "TEMPLATES", "EXAMPLES", "DailyCustoms", "__name", "templatePath", "event", "formData", "options", "customs", "getSetting", "code", "custom", "template", "extension", "newVersion", "EXT_VERSION", "html", "monaco", "area", "element", "#onSelectTemplate", "#onCreateTemplate", "#onCreateDaily", "#onSelectDaily", "#onDeleteDaily", "#onSaveCode", "selected", "stipped", "key", "AsyncFunction", "warn", "index", "setSetting", "err", "error", "data", "isExample", "uuid", "label", "daily", "createTrainedSkillDaily", "#stringifyDaily", "createTrainedLoreDaily", "createLanguageDaily", "resistance", "simplyfiable", "resistances", "splitList", "createResistancelDaily", "traits", "filter", "createFeatDaily", "level", "levels", "x", "createSpellDaily", "tome", "flexibility", "savant", "mind", "args", "type", "placeholder", "fns", "str", "_", "value", "match", "strArgs", "typing", "list", "trimmed", "numbered", "preCreateChatMessage", "message", "data", "context", "updateSourceFlag", "__name", "renderChatMessage", "html", "getFlag", "renderRestMessage", "actor", "canPrep", "canPrepDailies", "prepared", "label", "localize", "btn", "openDailiesInterface", "restForTheNightAll", "wrapped", "args", "messages", "message", "actor", "restForTheNight", "setFlag", "__name", "removeItems", "updateItems", "updateItem", "createUpdateCollection", "pf2eStavesActive", "isPF2eStavesActive", "item", "getFlag", "parentId", "path", "sluggify", "sourceId", "getSourceId", "daily", "getDailyFromSourceId", "rules", "modifiedRules", "i", "MODULE_ID", "EXT_VERSION", "SPELLCASTING_ENTRY_CAST", "DAILY_CRAFTING", "REST_FOR_THE_NIGHT", "registerSetting", "parseCustomDailies", "DEFAULT_REGEX_RANKS", "prepareAllDailies", "registerSettingMenu", "DailyCustoms", "MODULE_ID", "actor", "openDailiesInterface", "BUILTINS_DAILIES", "CUSTOM_DAILIES", "UNIQUE_DAILY_KEYS", "k", "d", "uuid", "daily", "c", "prepareDailies", "checkCustomDaily", "utils", "getSpellcastingEntryStaffFlags", "getSpellcastingEntryStaffData", "updateEntryCharges", "isPF2eStavesActive", "registerWrapper", "onSpellcastingEntryCast", "warn", "performDailyCrafting", "restForTheNightAll", "renderCharacterSheetPF2e", "preCreateChatMessage", "renderChatMessage"]
}
