{"version":3,"file":"main.js","mappings":"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CRlF,EAAQoC,KAAOqC,EAA2BrC,EAAM,QAChDpC,EAAQmF,KAAOV,EAA2BrC,EAAM,SAEhDgD,MAAMC,QAAQrF,EAAQsF,WACtBtF,EAAQsF,QAAUtF,EAAQsF,QAAQC,QAAO,CAACD,EAASE,KAC/CF,EAAQE,GAAUf,EAA2BrC,EAAM,UAAWoD,GACvDF,IACR,CAAC,IAER5B,KAAKmB,SAASY,SAAmB,EAAWrD,EAAMpC,EACtD,CC1BO,SAAS0F,EAA2CC,GACvD,OAAOjC,KAAKkC,QAAQtH,IAAIqH,EAC5B,CCTO,MAAME,EAAgBtG,iBAAmB,EAAEuG,YCArCC,EAAO,CAChB,gDACA,yEACA,uFACA,kEACA,GACA,0DACA,GACA,6CACA,0CACA,+DACA,+CACA,wEACA,QACA,uBACA,IACA,GACA,qCACA,4BACA,mBACA,cACA,0EACA,SACA,kBACA,YACA,6BACA,yFACA,wDACA,aACA,YACA,8BACA,sFACA,wDACA,aACA,YACA,+BACA,uFACA,aACA,YACA,+BACA,2FACA,0DACA,aACA,SACA,iDACA,8CACA,yCACA,wGACA,GACA,oCACA,2BACA,+CACA,gDACA,YACA,GACA,+BACA,kCACA,6EACA,0DACA,2DACA,YACA,kEACA,4EACA,8EACA,GACA,qCACA,+DACA,gEACA,uBACA,kFACA,+DACA,gEACA,gBACA,YACA,kBACA,iBACA,qCACA,kFACA,+DACA,gEACA,4CACA,kFACA,kFACA,+DACA,gEACA,uBACA,kFACA,+DACA,gEACA,gBACA,YACA,GACA,wBACA,SACA,kCACA,qDACA,wBACA,6BACA,6BACA,0FACA,gEACA,0DACA,YACA,qBACA,UACA,4EACA,wCACA,GACA,wCACA,gDACA,gDACA,GACA,sDACA,+EACA,kCACA,uBACA,6FACA,kDACA,kCACA,gBACA,GACA,6FACA,YACA,SACA,IACA,GACA,0BACFrB,KAAK,MC/HMsB,EAAc,CACvB,8DACA,gDACA,+EACA,GACA,MACA,kCACA,2BACA,uCACA,MACA,2CACA,uDACA,oBACA,wBACA,uCACA,gBACA,oBACA,4BACA,wBACA,uCACA,4BACA,2CACA,qBACA,yBACA,iBACA,aACA,QACA,8CACA,iBACA,IACA,GACA,4CACA,8BACA,0BACA,cACA,wFACA,SACA,kBACA,YACA,gCACA,8FACA,aACA,SACA,cACA,0CACA,iDACA,SACA,2EACA,+CACA,4DACA,0BACA,0CACA,GACA,mCACA,gDACA,gEACA,iDACA,8CACA,YACA,SACA,IACA,GACA,4BACFtB,KAAK,MC/DMuB,EAAS,CAClB,sEACA,0FACA,iEACA,GACA,6EACA,GACA,MACA,kCACA,uCACA,MACA,+DACA,sBACA,2BACA,GACA,gDACA,8EACA,GACA,2CACA,qCACA,sCACA,8EACA,YACA,GACA,+FACA,QACA,GACA,8DACA,IACA,GACA,uCACA,yBACA,qBACA,cACA,+EACA,SACA,gCACA,6FACA,mBACA,8DACA,+DACA,2FACA,4FACA,YACA,SACA,kCACA,sDACA,wBACA,4BACA,6BACA,gFACA,wBACA,iCACA,6CACA,2CACA,8CACA,oDACA,sBACA,iBACA,oEACA,YACA,qBACA,UACA,yEACA,uDACA,sCACA,2GACA,8BACA,oEACA,YACA,SACA,IACA,GACA,uBACFvB,KAAK,MC1EMwB,EAAO,CAChB,gFACA,yEACA,0DACA,GACA,gFACA,GACA,8BACA,iFACA,wEACA,+DACA,wEACA,IACA,GACA,sEACA,yBACA,yBACA,2BACA,IACA,GACA,6EACA,GACA,yDACA,GACA,8FACA,GACA,iCACA,kBACA,mBACA,0BACA,2BACA,wBACA,sBACA,sBACA,2BACA,cACA,gBACA,IACA,GACA,qCACA,sBACA,wBACA,cACA,uFACA,SACA,kBACA,YACA,8BACA,qDACA,aACA,YACA,8BACA,4FACA,aACA,YACA,6BACA,yFACA,aACA,YACA,gCACA,kGACA,aACA,SACA,cACA,YACA,6BACA,6BACA,8CACA,mBACA,mDACA,aACA,YACA,8BACA,6BACA,mCACA,4CACA,2DACA,0CACA,aACA,YACA,8BACA,8BACA,qCACA,sCACA,gEACA,oDACA,aACA,YACA,8BACA,6BACA,uCACA,qCACA,wEACA,wEACA,8FACA,aACA,YACA,8BACA,gCACA,uCACA,6CACA,wEACA,sDACA,8FACA,aACA,SACA,8EACA,yCACA,8BACA,GACA,yCACA,GACA,0EACA,wHACA,oHACA,GACA,iCACA,mDACA,kFACA,oEACA,4EACA,0CACA,8DACA,8CACA,wCACA,iBACA,YACA,GACA,4FACA,gEACA,qEACA,4DACA,2CACA,GACA,sEACA,6HACA,8CACA,0EACA,wCACA,0CACA,qBACA,gBACA,YACA,SACA,kDACA,oDACA,GACA,+DACA,0EACA,sEACA,GACA,6DACA,0BACA,iHACA,YACA,SACA,IACA,GACA,oBACA,8IACA,kHACA,uEACA,iHACA,IACA,GACA,sDACA,kCACA,oBACA,iJACA,GACA,4DACA,8FACA,QACA,GACA,wCACA,YACA,oCACA,uBACA,yBACA,yBACA,2DACA,uCACA,kDACA,qBACA,wBACA,4DACA,uCACA,4CACA,qBACA,iBACA,iCACA,aACA,cACA,oDACA,QACA,GACA,oBACA,gEACA,sBACA,QACA,GACA,mBACA,IACA,GACA,+BACA,0CACA,+DACA,wBACA,yEACA,iBACA,QACA,GACA,oEACA,qBACA,mFACA,iBACA,QACA,GACA,iDACA,GACA,0DACA,uEACA,6DACA,GACA,oBACA,IACA,GACA,oBACFxB,KAAK,MCnND,EAAWV,EAAY,WAiBvBmC,EAAY,CAAC,UAAW,eAAgB,cAAe,WAAY,aAAc,OAAQ,SACzFC,EAAW,CAAC,cAAe,SAAU,OAAQ,QAE5C,MAAMC,qBAAqBC,gBACtBC,kBAA0D,UAC1DC,eAAyB,GACzBC,QAAsB,KAE9BX,cACIY,OACJ,CAEWC,4BACP,OAAOC,YAAYF,MAAMC,eAAgB,CACrChB,GAAI,uBACJkB,MAAO,EAAS,SAChBtC,SAAUI,EAAa,eACvBmC,gBAAgB,EAChBC,eAAe,EACfC,eAAe,EACfC,QAAS,CAAC,gBAElB,CAEA1H,oBAAoB2H,EAAcC,GAAoC,CAEtE5H,cAAcS,GACV,MA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hB,IAAI,OAAQ,GAC1BohB,GAAcphB,IAAI,YAAa,GAC/BohB,GAAcphB,IAAI,kBAAmB,IClCL,IAAIqR,IAAI,CAAC,SAAU,SAAU,SAAU,WAAhE,MAID2K,GAAqC,GA8B3C,MAAMqF,GAA8C,CAChD,EAAG,mBACH,EAAG,mBACH,EAAG,mBACH,EAAG,mBACH,EAAG,mBACH,EAAG,mBACH,EAAG,mBACH,EAAG,mBACH,EAAG,mBACH,GAAI,oBCWFC,GAAqB,CAAC,gBAAiB,gBAAiB,gBAAiB,iBAcnD,IAAIjQ,IAAI,CAAC,QAAS,WAAY,OAAQ,aAAc,YAAa,WAAY,WCvElG,MAAMkQ,GAAgB,CACzB,SACA,WACA,UACA,QACA,UACA,SACA,WACA,QACA,SACA,SACA,cACA,QACA,UACA,QACA,OACA,YACA,aACA,UACA,QACA,mBACA,UACA,WACA,QACA,WACA,QACA,UACA,QACA,UACA,YACA,UACA,WACA,aACA,SACA,UACA,SACA,UACA,UACA,UACA,aACA,QACA,SACA,UACA,SACA,OACA,UACA,QACA,UACA,UACA,WACA,QACA,UACA,QACA,QACA,YACA,UACA,UACA,SACA,UACA,SACA,UACA,WACA,SACA,QACA,SACA,SACA,SACA,UACA,WACA,UACA,OACA,UACA,YACA,UACA,UACA,SACA,eACA,UACA,QACA,UACA,SACA,QACA,SACA,QACA,UACA,aACA,QACA,SACA,eACA,OACA,UACA,SACA,WACA,QACA,aACA,UACA,UACA,SACA,YACA,UACA,SACA,WACA,OACA,UACA,WACA,YACA,OACA,UACA,WCvGG,SAASC,GAAkBxX,EAA0B1G,GAC3C4D,EAAiB8C,EAAS,YAEvC1G,EAAKf,KAAK,2BAA2BwB,GAAG,SAAS,IAAM0d,MAC3D,CCIA,MAAMC,GAAkB,+BAQXjnB,GAAQ,CAEbqC,iBACA,OAAOuZ,GAAiB1P,OAC5B,EACA3J,WAAaE,GACFyB,KAAKC,KAAKL,SAASsb,OAAOC,KAAKF,UAAU1c,IAEpDK,uBAAwB,EAAGL,QAAO3B,QAAOiV,OAAO,UAAWL,gBACvD,MAAMwR,EAAqB,CACvBzoB,IAAK,mBACLsX,OACAjR,KAAM,iBAAiBrC,SACvB3B,SAGJ,OADI4U,GAAaA,EAAU9K,SAAQsc,EAAKxR,UAAYA,GAC7CwR,CAAI,EAEfvkB,iBAAkB,EAAGC,OAAMN,WACe,CAClC3C,KAAM,OACNwnB,IAAK,4CACLvkB,OACAjC,OAAQ,CAAEymB,WAAY,CAAEtmB,MAAOwB,MAKnCvB,oBACA,OAAO+lB,GAAc5a,OACzB,EACA9K,cAAgBE,GACL4C,KAAKC,KAAKL,SAASsb,OAAOC,KAAKxe,UAAUS,IAEpDC,0BAA2B,EAAGD,WAAUyU,OAAO,MAAOL,gBAClD,MAAMwR,EAAqB,CACvBzoB,IAAK,mBACLsX,OACAjR,KAAM,gCACNhE,MAAOQ,GAGX,OADIoU,GAAaA,EAAU9K,SAAQsc,EAAKxR,UAAYA,GAC7CwR,CAAI,EAGfrlB,gBAAiB,CAACF,EAAoBb,KAClC,IAAIuC,EAAMa,KAAKC,KAAKL,SAAS,aAAaiV,GAAWpX,MAErD,OADIb,IAAOuC,GAAO,IAAIvC,KACfuC,CAAG,EAEdpB,4BAA6B,EAAGtC,OAAMmB,QAAO4U,gBAC3B,SAAV5U,IAAkBA,EAAQmmB,IAC9B,MAAMC,EAA6B,CAC/BzoB,IAAK,aACLkB,OACAmB,SAGJ,OADI4U,GAAaA,EAAU9K,SAAQsc,EAAKxR,UAAYA,GAC7CwR,CAAI,EAGf7mB,iBAAkBN,MAAOV,IACrB,MAAMwD,SAAgB8O,SAAmBtS,KAAQuS,WACjD,IAAK/O,EAAQ,MAAM,IAAIma,MAAM,oEAAoE3d,KACjG,OAAOwD,CAAM,EAGjBuL,wBAAyBrO,OAASV,OAAM2C,YACpC,MAAMa,QJlFP9C,eAAiCV,EAAgB2C,EAAyBqlB,GAAO,GACpF,MAAMnkB,SAAeyO,SAAoBtS,KAAQuS,WACjD,IAAK1O,EAAO,OAAO,MAEL,IAAVlB,IAAiBA,EAAQkB,EAAMvC,OAAOqB,MAAMlB,OAEhD,MAAMwmB,EAmBV,SAAiCtlB,GAC7B,MAAO,iCAAiC4kB,GAAoB5kB,IAChE,CArBuBulB,CAAwBvlB,GAC3Cuf,GAAQvf,WAAiB2P,SAAyB2V,GAElD,MAAME,EAASjG,GAAQvf,IAAQ4P,WAC/B,IAAK4V,EAAQ,OAAO,KAEpBtkB,EAAMvC,OAAO8mB,SAASC,gBAAkB1lB,EAExCwlB,EAAO5kB,KAAO,aAAaM,EAAMN,eAAeZ,KAChDwlB,EAAO7mB,OAAOgnB,UAAYN,EAC1BG,EAAO7mB,OAAOuC,MAAQA,EACtBskB,EAAO7mB,OAAOC,OAAOE,MAAMyK,QAAQrI,EAAMvC,OAAO2K,WAAWxK,OAE3D,MAAMiM,EAAW7J,EAAMoP,MAAMsV,MAAM7a,SAGnC,OAFIA,IAAUya,EAAO7mB,OAAOknB,YAAY/mB,MAAQ,GAAG4f,GAAS3T,aAAoBya,EAAO7mB,OAAOknB,YAAY/mB,SAEnG0mB,CACX,CI2D6BM,CAAkBzoB,EAAM2C,IAAS,GAAO,GAC7D,IAAKa,EAAQ,MAAM,IAAIma,MAAM,4EAA4E3d,KACzG,OAAOwD,CAAM,EAEjBM,kBAAmBpD,MAAOV,IACtB,MAAMwD,SAAgB8O,SAAoBtS,KAAQuS,WAClD,IAAK/O,EAAQ,MAAM,IAAIma,MAAM,qEAAqE3d,KAClG,OAAOwD,CAAM,EAGbokB,sBACA,OAAOA,EACX,EACAvT,wBHnDG,SAAoDjU,EAAgBgU,GAGvE,OAFchU,EAAKsR,QAAQpQ,OAAOygB,MACftZ,MAAKof,GAAqB,cAAbA,EAAKzoB,KAAuByoB,EAAKa,aAAetU,KACnEhC,SACjB,EGiDI+B,iBAAmBlR,GACR4B,KAAKC,KAAKL,SAASsb,OAAOC,KAAK2I,kBAAkB1lB,IAE5DR,aAAc/B,MAA6CS,IACvD,MACM8e,EAAS9e,SADK,IAAIynB,KAAK,KAAKznB,EAAQoK,UAAUsd,SAAS,CAAEnoB,OAAO,KAASooB,MACjD,GAC9B,MAAsB,iBAAX7I,EAA4BA,EAChCA,EAAOxe,KAAK,EAEvBiB,eAAiBtB,GAAyB+R,KAAKzH,IAAI,EAAGyH,KAAK6K,MAAM5c,EAAMuB,MAAQ,IAC/Eib,cAAa,GAEb5M,YAAc+X,GACHlkB,KAAKC,KAAKL,SAASsb,OAAOC,KAAKgJ,aAAaD,IAEvD9X,iBAAmBiB,GACRrN,KAAKC,KAAKL,SAASsb,OAAOC,KAAKiJ,aAAa/W,IAEvDhB,yBAA2BgY,GAChBrkB,KAAKC,KAAKL,SAASsb,OAAOC,KAAKmJ,oBAAoBD,IAE9D/X,oBAAsB/Q,IAClB,MAAMgpB,EAAUhpB,EAAKkB,OAAOyQ,MAAMqX,QAClC,OAAOA,EAAU,GAAKhpB,EAAKkB,OAAOyQ,MAAMC,SAASzG,OAAS6d,CAAO,EAErEtX,wBHtEG,SAAiC1R,GACpC,MAAMgpB,EAAUhpB,EAAKkB,OAAO+nB,YAAY5nB,MACxC,GAAgB,OAAZ2nB,EAAkB,OAAO,KAE7B,IAAK,IAAIrU,EAAI,EAAGA,EAAIqU,EAASrU,IAAK,CAC9B,MAAM/C,EAAWwV,GAAmBzS,GACpC,IAAK3U,EAAKkB,OAAO0Q,GAAUvQ,MAAO,OAAOuQ,C,CAG7C,OAAO,IACX,GG+DO,SAAS2V,GAAqBvmB,EAA0C6kB,GAS3E,OARK7kB,GAAUA,EAAMiU,SAAS,cAAiBjU,EAAMkoB,UAEjDloB,EADmBmoB,OAAOC,OAAOC,WACdhhB,MAAKihB,GAASA,EAAMtoB,OAAOiU,SAAS,cAAgBqU,EAAMtoB,MAAMkoB,WAAUloB,MAGxFA,IAAOA,EAAQyD,KAAK8kB,KAAKC,YAG7BxoB,GAAUA,EAAMiU,SAAS,cAAiBjU,EAAMkoB,SAEpB,IAA7Blc,EAAQhM,EAAO,UAA2BsD,EAAK,kBAC9CuhB,GAAUxQ,GAAYrU,QAE3B,IAAIwjB,iBAAiBxjB,EAAO,CAAE4G,MAAOvD,EAAS,kBAAmB,CAAElB,KAAMnC,EAAMmC,SAAWmH,QAAO,GAFvDhG,EAAK,mBAHsBA,EAAK,4BAM9E,CAEO,SAASmlB,KACZ,IAAKhlB,KAAK8kB,KAAKG,KAAM,OAAOplB,EAAK,gBD3I9B,WACH,IAAIsG,EAAU,QAAQvG,EAAS,0CAC/BuG,GAAW,kDAAkDvG,EAAS,4CACtE4f,YAAYC,OAAO,CAAEtZ,UAASiI,MAAO,CAAE,CAAC,IAAY,CAAE8W,SAAS,KACnE,CCwIIC,EACJ,CC5IO,MAAM,GAAY,gBxCTlB,SAAqBljB,EAAYmjB,GAAW,GAC1C,IAAW,EAAYnjB,GAC5B,EAAOmjB,EAAW,SAAW,QACjC,CwCOAC,CAAY,IAEL,MAAMlhB,GAAc,QAyD3B,SAASmhB,GAAgBC,GACrBC,MAAMD,EAAU,KAAO,OAAO,oBAAqB1C,GACvD,CAEAhnB,eAAe4pB,KACX,MAAMvd,SAAiBpE,KAAK4hB,sBAAsBtqB,QAAOuqB,GAAKA,EAAEC,cAE1DC,EADoB3d,EAAQ9M,QAAOuqB,GAAKA,EAAEG,eACVjkB,QAAO,CAACkkB,EAAK7X,IAAU6X,EAAM7X,EAAM2X,aAAa,GAChFG,GAAgBliB,KAAKrH,OAAOwpB,UAAUC,SAASC,gBAAgBvpB,OAAS,GAAKipB,EAEnF,GAAIG,EAAe,EACftmB,GAAGC,cAAcE,KAAKG,KAAKC,KAAKL,SAAS,gDAD7C,OAIUkE,KAAKkb,OAAO,CAAE,kDAAmDgH,IAG3E,IAAK,MAAM9X,KAAShG,EAChB,IAAK,MAAMke,KAAWlY,EAAMmY,yBAA0B,CAClD,MAAMC,EAAiCF,EAAQ7qB,KAAKmS,WACpD4Y,EAAW7pB,OAAOuhB,SAAWoI,EAAQpI,SACrCsI,EAAW7pB,OAAOgnB,WAAY,EAC9B6C,EAAW7pB,OAAO8pB,KAA+B,SAAxBziB,KAAK0iB,UAAUD,KAAkB,OAAS,OAG/DrY,EAAM4X,cACe,eAApBQ,EAAW7qB,MAA6C,WAApB6qB,EAAW7qB,MAAyC,cAApB6qB,EAAW7qB,MAEhF6qB,EAAW7pB,OAAOC,OAAOE,MAAMyK,KAAK,iBAElCvD,KAAK2iB,eAAeH,E,EAGtC,CAxFAd,MAAMpgB,GAAG,wBCZFvJ,eAA+BU,GAClC,MAAMyiB,EAAiD,GACjDzC,EAAmB,GAEzB,IAAK,MAAMhhB,KAAQgB,EAAMyM,MAAO,CAC5B,GAAIT,EAAQhN,EAAM,aAAc,CAI5B,GAHAghB,EAAOlV,KAAK9L,EAAK0G,IAGb1G,EAAKiV,SAAS,QAAS,CACvB,MAAM8N,EAAW/V,EAAgBhN,EAAM,aACvC,GAAI+iB,EAAU,CACV,MACM1d,EAAO,2BADA2X,GAAShd,EAAKmD,KAAM,CAAE+Z,MAAO,gBAE1CuG,EAAO3X,KAAK,CAAEqF,IAAK4R,EAAU,CAAC1d,IAAO,G,EAK7C,Q,CAGJ,MAAMiI,EAAWH,EAAYnN,GAG7B,GAAIsN,EAAU,CACV,MAAMvN,EAAQqV,GAAqB9H,GAC/BvN,GAAO8R,YACD9R,EAAM8R,KAAK,CAAE7R,OAAMsN,WAAU0D,WAAYhN,GAAQyf,EAAO3X,KAAK9H,I,CAK3E,MAAM2d,EAAQtQ,UAAUrR,EAAKsR,QAAQpQ,OAAOygB,OAC5C,IAAIwJ,GAAgB,EACpB,IAAK,IAAIxW,EAAIgN,EAAMxW,OAAS,EAAGwJ,GAAK,EAAGA,IAC/B,MAAagN,EAAMhN,KACnBgN,EAAMtX,OAAOsK,EAAG,GAChBwW,GAAgB,GAGpBA,GAAe1H,EAAO3X,KAAK,CAAEqF,IAAKnR,EAAK0G,GAAI,eAAgBib,G,C5BvBhE,IAAiB1U,E4B0BhBwW,EAAOtY,cAAcnK,EAAM4iB,wBAAwB,OAAQH,GAC3DzC,EAAO7V,cAAcnK,EAAMqhB,wBAAwB,OAAQrB,S5B3B3C/T,E4B6BNjM,EAAO,UAAU,E5B5BxBiM,EAAIme,QAAQ,E4B4BE,SAAU,MACnC,IDlCAnB,MAAMpgB,GAAG,4BEfF,SAAkCwhB,EAA2BjiB,GAChE,MAAMpI,EAAQqqB,EAAMrqB,MACfA,EAAMkoB,SAAY7T,GAAYrU,IAErBoI,EAAKf,KAAK,uCAEnBijB,OAAO,8CAA8CjnB,EAAS,yDAC9DgE,KAAK,YACLwB,GAAG,SAAS,IAAM0d,GAAqBvmB,GAAO,IACvD,IFQAipB,MAAMsB,KAAK,SAAS,KAChBxlB,EAAgB,CACZ5C,KAAM,gBACNjD,KAAMiG,MACNqlB,QAAS,GACTC,SAAU7W,KAGd7O,EAAgB,CACZ5C,KAAM,WACNjD,KAAMmc,OACNmP,QAAS,GACTvlB,QAAQ,IAGZF,EAAgB,CACZ5C,KAAM,QACNjD,KAAMwrB,QACNF,SAAS,EACTvlB,QAAQ,EACRwlB,SAAU1B,KpCDX,SACHhpB,GAEA,MAAMoC,EAAOpC,EAAQoC,KACrBpC,EAAQoC,KAAOqC,EAA2B,QAASrC,EAAM,QACzDpC,EAAQjB,MAAQ0F,EAA2B,QAASrC,EAAM,SAC1DpC,EAAQmF,KAAOV,EAA2B,QAASrC,EAAM,QACzDpC,EAAQ4qB,WAAa5qB,EAAQ4qB,aAAc,EAC3C5qB,EAAQqP,KAAOrP,EAAQqP,MAAQ,cAC/B3L,KAAKmB,SAASgmB,aAAa,EAAWzoB,EAAMpC,EAChD,CoCNI8qB,CAAoB,CAChB1oB,KAAM,UACNjD,KAAMkH,enClCHX,EAAU,GmCqCkB6C,IAAM,CACrCie,qBAAsBvmB,GAASumB,GAAqBvmB,GACpDyoB,eAAc,IAGd9jB,EAAW,UAAUokB,IAAgB,EAAK,IAGlDE,MAAMsB,KAAK,SAASjrB,gBACVsU,KAEDnQ,KAAKkC,QAAQtH,IAAI,gBAAgBqJ,SAAUjE,KAAK8kB,KAAKG,KGxDvD,SACHrK,EACApa,EACA/E,EAAyC,WAElC4rB,WAAWtlB,SAAS,EAAW6Y,EAAQpa,EAAI/E,EACtD,CHuDI6rB,CACI,6EACA7B,GACA,YAPA5lB,EAAK,sBAAsB,EAQ9B,G","sources":["webpack:///webpack/bootstrap","webpack:///webpack/runtime/define property getters","webpack:///webpack/runtime/hasOwnProperty shorthand","webpack:///./src/data/feat.ts","webpack:///./src/data/language.ts","webpack:///./src/data/resistance.ts","webpack:///./src/data/skill.ts","webpack:///./src/data/spell.ts","webpack:///../../../../foundryVTT-projects/@utils/module.ts","webpack:///../../../../foundryVTT-projects/@utils/foundry/notification.ts","webpack:///../../../../foundryVTT-projects/@utils/foundry/localize.ts","webpack:///../../../../foundryVTT-projects/@utils/foundry/path.ts","webpack:///../../../../foundryVTT-projects/@utils/foundry/settings.ts","webpack:///../../../../foundryVTT-projects/@utils/foundry/module.ts","webpack:///../../../../foundryVTT-projects/@utils/function.ts","webpack:///./src/apps/customs/tome.ts","webpack:///./src/apps/customs/flexibility.ts","webpack:///./src/apps/customs/savant.ts","webpack:///./src/apps/customs/mind.ts","webpack:///./src/apps/customs.ts","webpack:///./src/data/familiar.ts","webpack:///../../../../foundryVTT-projects/@utils/foundry/flags.ts","webpack:///./src/data/rations.ts","webpack:///../../../../foundryVTT-projects/@utils/foundry/item.ts","webpack:///./src/data/ace.ts","webpack:///./src/data/chain.ts","webpack:///./src/data/flexibility.ts","webpack:///./src/data/mind.ts","webpack:///./src/data/savant.ts","webpack:///./src/data/tome.ts","webpack:///./src/dailies.ts","webpack:///../../../../foundryVTT-projects/@utils/pf2e/predicate.ts","webpack:///../../../../foundryVTT-projects/@utils/string.ts","webpack:///./src/apps/interface/data.ts","webpack:///../../../../foundryVTT-projects/@utils/pf2e/skills.ts","webpack:///../../../../foundryVTT-projects/@utils/pf2e/utils.ts","webpack:///../../../../foundryVTT-projects/@utils/utils.ts","webpack:///./src/apps/interface/shared.ts","webpack:///./src/apps/interface/drop.ts","webpack:///../../../../foundryVTT-projects/@utils/foundry/uuid.ts","webpack:///./src/apps/interface/process.ts","webpack:///./src/apps/interface.ts","webpack:///../../../../foundryVTT-projects/@utils/pf2e/dc.ts","webpack:///../../../../foundryVTT-projects/@utils/pf2e/spell.ts","webpack:///../../../../foundryVTT-projects/@utils/pf2e/item.ts","webpack:///../../../../foundryVTT-projects/@utils/pf2e/languages.ts","webpack:///./src/chat.ts","webpack:///./src/api.ts","webpack:///./src/main.ts","webpack:///./src/rest.ts","webpack:///./src/sheet.ts","webpack:///../../../../foundryVTT-projects/@utils/libwrapper.ts"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","type FeatGenerics = ['feat', {}, '']\r\n\r\nexport function createFeatDaily(key: string, uuid: ItemUUID, filter: DailyFeatFilter = {}, label?: string) {\r\n    const daily: Daily<FeatGenerics> = {\r\n        key,\r\n        label,\r\n        item: {\r\n            uuid,\r\n        },\r\n        rows: [\r\n            {\r\n                type: 'drop',\r\n                slug: 'feat',\r\n                filter: {\r\n                    type: 'feat',\r\n                    search: filter,\r\n                },\r\n            },\r\n        ],\r\n        process: async ({ utils, fields, addFeat, messages }: DailyProcessFunctionArgs<FeatGenerics>) => {\r\n            const uuid = fields.feat.uuid!\r\n            const source = await utils.createFeatSource(uuid)\r\n            addFeat(source)\r\n            messages.add('feats', { uuid })\r\n        },\r\n    }\r\n    return daily\r\n}\r\n","type LanguageGenerics = ['language', {}, '']\r\n\r\nexport function createLanguageDaily(key: string, uuid: ItemUUID, label?: string) {\r\n    const daily: Daily<LanguageGenerics> = {\r\n        key,\r\n        label,\r\n        item: {\r\n            uuid,\r\n        },\r\n        rows: [\r\n            {\r\n                type: 'select',\r\n                slug: 'language',\r\n                options: ({ actor, utils }) => {\r\n                    const actorLanguages = actor.system.traits.languages.value\r\n                    return utils.languageNames.filter(x => !actorLanguages.includes(x)).sort()\r\n                },\r\n                labelizer: ({ utils }) => utils.languageLabel,\r\n            },\r\n        ],\r\n        process: ({ addRule, utils, fields, messages }) => {\r\n            const value = fields.language.value\r\n            const source = utils.createLanguageRuleElement({ language: value })\r\n            addRule(source)\r\n            messages.add('languages', { uuid, selected: utils.languageLabel(value), label })\r\n        },\r\n    }\r\n    return daily\r\n}\r\n","type ResistanceGenerics = ['resistance', {}, '']\r\n\r\nexport function createResistancelDaily(\r\n    key: string,\r\n    uuid: ItemUUID,\r\n    resistances: string[],\r\n    resistance: number | 'half' | 'level',\r\n    label?: string,\r\n    random?: boolean\r\n) {\r\n    const daily: Daily<ResistanceGenerics> = {\r\n        key,\r\n        label,\r\n        item: {\r\n            uuid,\r\n        },\r\n        rows: [\r\n            {\r\n                type: random ? 'random' : 'select',\r\n                slug: 'resistance',\r\n                options: resistances,\r\n                labelizer: ({ utils }) => utils.resistanceLabel,\r\n            },\r\n        ],\r\n        process: async ({ utils, fields, actor, addRule, messages }) => {\r\n            const type = random ? await utils.randomOption(resistances) : fields.resistance.value\r\n            const value =\r\n                typeof resistance === 'number' ? resistance : resistance === 'half' ? utils.halfLevelValue(actor) : actor.level\r\n            const rule = utils.createResistanceRuleElement({ type, value })\r\n            addRule(rule)\r\n            messages.add('resistances', { uuid, selected: utils.resistanceLabel(type, value), label, random })\r\n        },\r\n    }\r\n    return daily\r\n}\r\n","type SkillGenerics = ['skill', {}, '']\r\n\r\nexport function createTrainedSkillDaily(key: string, uuid: ItemUUID, label?: string) {\r\n    const daily: Daily<SkillGenerics> = {\r\n        key,\r\n        label,\r\n        item: {\r\n            uuid,\r\n        },\r\n        rows: [\r\n            {\r\n                type: 'combo',\r\n                slug: 'skill',\r\n                options: ({ actor, utils }) => {\r\n                    const actorSkills = actor.skills\r\n                    return utils.skillNames.filter(x => actorSkills[x]!.rank! < 1)\r\n                },\r\n                labelizer: ({ utils }) => utils.skillLabel,\r\n            },\r\n        ],\r\n        process: ({ fields, addItem, addRule, utils, messages }) => {\r\n            let value = fields.skill.value\r\n\r\n            if (fields.skill.input === 'true') {\r\n                const source = utils.createLoreSource({ name: value, rank: 1 })\r\n                addItem(source)\r\n            } else {\r\n                const source = utils.createSkillRuleElement({ skill: value, value: 1 })\r\n                value = utils.skillLabel(value as SkillLongForm)\r\n                addRule(source)\r\n            }\r\n\r\n            messages.add('skills', { uuid, selected: value, label })\r\n        },\r\n    }\r\n    return daily\r\n}\r\n\r\nexport function createTrainedLoreDaily(key: string, uuid: ItemUUID, label?: string) {\r\n    const daily: Daily<SkillGenerics> = {\r\n        key,\r\n        label,\r\n        item: {\r\n            uuid,\r\n        },\r\n        rows: [\r\n            {\r\n                type: 'input',\r\n                slug: 'skill',\r\n            },\r\n        ],\r\n        process: ({ addItem, utils, fields, messages }) => {\r\n            const value = fields.skill.value\r\n            const source = utils.createLoreSource({ name: value, rank: 1 })\r\n            addItem(source)\r\n            messages.add('skills', { uuid, selected: value, label })\r\n        },\r\n    }\r\n    return daily\r\n}\r\n","export type SpellGenerics = ['spell', {}, '']\r\n\r\nexport function createSpellDaily(key: string, uuid: ItemUUID, filter: DailySpellFilter = {}, level?: number, label?: string) {\r\n    const daily: Daily<SpellGenerics> = {\r\n        key,\r\n        label,\r\n        item: {\r\n            uuid,\r\n        },\r\n        rows: [\r\n            {\r\n                type: 'drop',\r\n                slug: 'spell',\r\n                filter: {\r\n                    type: 'spell',\r\n                    search: filter,\r\n                },\r\n            },\r\n        ],\r\n        process: async ({ addSpell, utils, fields, messages }) => {\r\n            const uuid = fields.spell.uuid!\r\n            const source = await utils.createSpellSource(uuid)\r\n            const label = `${source.name} (Level ${level || source.system.level.value})`\r\n            addSpell(source, level)\r\n            messages.add('spells', { uuid, label })\r\n        },\r\n    }\r\n    return daily\r\n}\r\n","export let MODULE_ID = ''\r\nexport let TYPE = 'module'\r\n\r\nexport function setModuleID(id: string, isSystem = false) {\r\n    if (!MODULE_ID) MODULE_ID = id\r\n    TYPE = isSystem ? 'system' : 'module'\r\n}\r\n","import { localize } from '@utils/foundry/localize'\r\n\r\nexport type NotifyArgs = [str: string, arg1?: boolean | Record<string, string | number | boolean>, arg2?: boolean]\r\n\r\nfunction notify(\r\n    str: string,\r\n    arg1?: 'warning' | 'info' | 'error' | boolean | Record<string, string | number | boolean>,\r\n    arg2?: boolean | Record<string, string | number | boolean>,\r\n    arg3?: boolean\r\n) {\r\n    const type = typeof arg1 === 'string' ? arg1 : 'info'\r\n    const data = typeof arg1 === 'object' ? arg1 : typeof arg2 === 'object' ? arg2 : undefined\r\n    const permanent = typeof arg1 === 'boolean' ? arg1 : typeof arg2 === 'boolean' ? arg2 : arg3 ?? false\r\n\r\n    ui.notifications.notify(localize(str, data), type, { permanent })\r\n}\r\n\r\nexport function warn(...args: NotifyArgs) {\r\n    const [str, arg1, arg2] = args\r\n    notify(str, 'warning', arg1, arg2)\r\n}\r\n\r\nexport function info(...args: NotifyArgs) {\r\n    const [str, arg1, arg2] = args\r\n    notify(str, 'info', arg1, arg2)\r\n}\r\n\r\nexport function error(...args: NotifyArgs) {\r\n    const [str, arg1, arg2] = args\r\n    notify(str, 'error', arg1, arg2)\r\n}\r\n","import { MODULE_ID } from '@utils/module'\r\nimport { warn, NotifyArgs, info, error } from '@utils/foundry/notification'\r\n\r\nexport type LocalizeArgs = [key: string, data?: Record<string, string | number | boolean>]\r\n\r\nexport function localize(...args: LocalizeArgs) {\r\n    let [key, data] = args\r\n    key = `${MODULE_ID}.${key}`\r\n    if (data) return game.i18n.format(key, data)\r\n    return game.i18n.localize(key)\r\n}\r\n\r\nexport function hasLocalization(key: string) {\r\n    return game.i18n.has(`${MODULE_ID}.${key}`, false)\r\n}\r\n\r\nexport function localizePath(key: string) {\r\n    return `${MODULE_ID}.${key}`\r\n}\r\n\r\nexport function localizeTemplate(key: string, { hash }: { hash: Record<string, string> }) {\r\n    return localize(`${key}`, hash)\r\n}\r\n\r\nexport function subLocalize(subKey: string) {\r\n    const fn = (...args: LocalizeArgs) => localize(`${subKey}.${args[0]}`, args[1])\r\n\r\n    Object.defineProperties(fn, {\r\n        warn: {\r\n            value: (...args: NotifyArgs) => warn(`${subKey}.${args[0]}`, args[1], args[2]),\r\n            enumerable: false,\r\n            configurable: false,\r\n        },\r\n        info: {\r\n            value: (...args: NotifyArgs) => info(`${subKey}.${args[0]}`, args[1], args[2]),\r\n            enumerable: false,\r\n            configurable: false,\r\n        },\r\n        error: {\r\n            value: (...args: NotifyArgs) => error(`${subKey}.${args[0]}`, args[1], args[2]),\r\n            enumerable: false,\r\n            configurable: false,\r\n        },\r\n        has: {\r\n            value: (key: string) => hasLocalization(`${subKey}.${key}`),\r\n            enumerable: false,\r\n            configurable: false,\r\n        },\r\n        path: {\r\n            value: (key: string) => localizePath(`${subKey}.${key}`),\r\n            enumerable: false,\r\n            configurable: false,\r\n        },\r\n        template: {\r\n            value: (key: string, { hash }: { hash: Record<string, string> }) => fn(key, hash),\r\n            enumerable: false,\r\n            configurable: false,\r\n        },\r\n    })\r\n\r\n    return fn as ((...args: LocalizeArgs) => string) & {\r\n        warn: (...args: NotifyArgs) => void\r\n        info: (...args: NotifyArgs) => void\r\n        error: (...args: NotifyArgs) => void\r\n        has: (key: string) => boolean\r\n        path: (key: string) => string\r\n        template: (key: string, options: { hash: Record<string, string> }) => string\r\n    }\r\n}\r\n","import { MODULE_ID, TYPE } from '@utils/module'\r\n\r\nexport function getSettingLocalizationPath(...path: string[]) {\r\n    return `${MODULE_ID}.settings.${path.join('.')}`\r\n}\r\n\r\nexport function flagsUpdatePath(...path: string[]) {\r\n    return `flags.${MODULE_ID}.${path.join('/')}`\r\n}\r\n\r\nexport function templatePath(...path: string[]) {\r\n    path = path.filter(x => typeof x === 'string')\r\n    return `${TYPE}s/${MODULE_ID}/templates/${path.join('/')}`\r\n}\r\n\r\nexport function imagePath(...path: string[]) {\r\n    return `${TYPE}s/${MODULE_ID}/images/${path.join('/')}`\r\n}\r\n","import { MODULE_ID } from '@utils/module'\r\nimport { getSettingLocalizationPath } from '@utils/foundry/path'\r\n\r\nexport function getSetting<T extends any>(key: string) {\r\n    return game.settings.get(MODULE_ID, key) as T\r\n}\r\n\r\nexport function setSetting(key: string, value: unknown) {\r\n    return game.settings.set(MODULE_ID, key, value)\r\n}\r\n\r\n/**\r\n * options.scope = 'world'\r\n *\r\n * options.config = false\r\n */\r\nexport function registerSetting<TChoices extends Record<string, unknown> | undefined>(\r\n    options: Omit<SettingRegistration<TChoices>, 'choices'> & { choices?: string[] | Record<string, unknown>; name: string }\r\n) {\r\n    const name = options.name\r\n    options.scope = options.scope ?? 'world'\r\n    options.config = options.config ?? false\r\n    if (options.config) {\r\n        options.name = getSettingLocalizationPath(name, 'name')\r\n        options.hint = getSettingLocalizationPath(name, 'hint')\r\n    }\r\n    if (Array.isArray(options.choices)) {\r\n        options.choices = options.choices.reduce((choices, choice) => {\r\n            choices[choice] = getSettingLocalizationPath(name, 'choices', choice)\r\n            return choices\r\n        }, {} as Record<string, unknown>)\r\n    }\r\n    game.settings.register<TChoices>(MODULE_ID, name, options as SettingRegistration<TChoices>)\r\n}\r\n\r\n/**\r\n * options.restricted = true\r\n *\r\n * options.icon = 'fas fa-cogs'\r\n */\r\nexport function registerSettingMenu(\r\n    options: RequiredBy<Partial<Omit<SettingSubmenuConfig, 'type'>>, 'name'> & { type: ConstructorOf<FormApplication> }\r\n) {\r\n    const name = options.name\r\n    options.name = getSettingLocalizationPath('menus', name, 'name')\r\n    options.label = getSettingLocalizationPath('menus', name, 'label')\r\n    options.hint = getSettingLocalizationPath('menus', name, 'hint')\r\n    options.restricted = options.restricted ?? true\r\n    options.icon = options.icon ?? 'fas fa-cogs'\r\n    game.settings.registerMenu(MODULE_ID, name, options as SettingSubmenuConfig)\r\n}\r\n\r\nexport function getCombatTrackerConfig() {\r\n    return game.settings.get('core', 'combatTrackerConfig') as { resource: string; skipDefeated: boolean }\r\n}\r\n","import { MODULE_ID } from '@utils/module'\r\n\r\ntype OwnModule = 'anonymous' | 'idleuh' | 'pf2e-hero-actions' | 'pf2e-dailies'\r\n\r\ntype ReturnedModule<TApi extends ModuleApi = ModuleApi> = Module<TApi> | undefined\r\ntype ReturnedModuleApi<TApi extends Record<string, any>> = Module<TApi>['api'] | undefined\r\n\r\nexport function getModule<T extends ModuleApi = ModuleApi>(id: string | OwnModule) {\r\n    return game.modules.get(id) as ReturnedModule<T>\r\n}\r\n\r\nexport function getCurrentModule<TApi extends ModuleApi = ModuleApi>() {\r\n    return getModule(MODULE_ID) as Module<TApi>\r\n}\r\n\r\nexport function getModuleApi<TApi extends Record<string, any>>(id: string | OwnModule) {\r\n    return getModule<TApi>(id)?.api as ReturnedModuleApi<TApi>\r\n}\r\n","export const AsyncFunction = async function () {}.constructor as ConstructorOf<(...args: any[]) => Promise<any>>\r\n","export const tome = [\r\n    '/** @typedef {typeof ROWS[number]} TomeRow */',\r\n    \"/** @typedef {'adept' | 'second' | 'intense' | 'paragon'} TomeChild */\",\r\n    '/** @typedef {Record<TomeRow, { rank: OneToFour; options: string[] }>} TomeCustom */',\r\n    '/** @typedef {[TomeRow, TomeCustom, TomeChild]} TomeGenerics */',\r\n    '',\r\n    \"const ROWS = /** @type {const} */ (['first', 'second'])\",\r\n    '',\r\n    \"/** @param {'adept' | 'paragon'} option */\",\r\n    'function createChildCondition(option) {',\r\n    '    /** @type { BaseDailyConditionFunction<TomeGenerics>} */',\r\n    '    const condition = ({ item, utils }) => {',\r\n    \"        return utils.getChoiSetRuleSelection(item, option) === 'tome'\",\r\n    '    }',\r\n    '    return condition',\r\n    '}',\r\n    '',\r\n    '/** @type {Daily<TomeGenerics>} */',\r\n    'const thaumaturgeTome = {',\r\n    \"    key: 'tome',\",\r\n    '    item: {',\r\n    \"        uuid: 'Compendium.pf2e.classfeatures.MyN1cQgE0HsLF20e', // Tome\",\r\n    '    },',\r\n    '    children: [',\r\n    '        {',\r\n    \"            slug: 'adept',\",\r\n    \"            uuid: 'Compendium.pf2e.classfeatures.Obm4ItMIIr0whYeO', // Implement Adept\",\r\n    \"            condition: createChildCondition('adept'),\",\r\n    '        },',\r\n    '        {',\r\n    \"            slug: 'second',\",\r\n    \"            uuid: 'Compendium.pf2e.classfeatures.ZEUxZ4Ta1kDPHiq5', // Second Adept\",\r\n    \"            condition: createChildCondition('adept'),\",\r\n    '        },',\r\n    '        {',\r\n    \"            slug: 'intense',\",\r\n    \"            uuid: 'Compendium.pf2e.feats-srd.yRRM1dsY6jakEMaC', // Intense Implement\",\r\n    '        },',\r\n    '        {',\r\n    \"            slug: 'paragon',\",\r\n    \"            uuid: 'Compendium.pf2e.classfeatures.QEtgbY8N2V4wTbsI', // Implement Paragon\",\r\n    \"            condition: createChildCondition('paragon'),\",\r\n    '        },',\r\n    '    ],',\r\n    '    prepare: ({ utils, actor, children }) => {',\r\n    '        const skillNames = utils.skillNames',\r\n    '        const actorLevel = actor.level',\r\n    '        const actorSkills = /** @type {Record<SkillLongForm, { rank: ZeroToFour }>} */ (actor.skills)',\r\n    '',\r\n    '        /** @type {TomeCustom} */',\r\n    '        const custom = {',\r\n    '            first: { options: [], rank: 1 },',\r\n    '            second: { options: [], rank: 1 },',\r\n    '        }',\r\n    '',\r\n    '        // Implement Paragon',\r\n    '        if (children.paragon) {',\r\n    '            const skills = skillNames.filter(x => actorSkills[x].rank < 4)',\r\n    '            custom.first = { rank: 4, options: skills }',\r\n    '            custom.second = { rank: 4, options: skills }',\r\n    '        }',\r\n    '        // Intense Implement or Second Adept or Implement Adept',\r\n    '        else if (children.intense || children.adept || children.second) {',\r\n    '            const masters = skillNames.filter(x => actorSkills[x].rank < 3)',\r\n    '',\r\n    '            if (actorLevel >= 9) {',\r\n    '                custom.first = { rank: 3, options: masters }',\r\n    '                custom.second = { rank: 3, options: masters }',\r\n    '            } else {',\r\n    '                const experts = skillNames.filter(x => actorSkills[x].rank < 2)',\r\n    '                custom.first = { rank: 2, options: experts }',\r\n    '                custom.second = { rank: 3, options: masters }',\r\n    '            }',\r\n    '        }',\r\n    '        // Tome',\r\n    '        else {',\r\n    '            if (actorLevel >= 5) {',\r\n    '                const experts = skillNames.filter(x => actorSkills[x].rank < 2)',\r\n    '                custom.first = { rank: 2, options: experts }',\r\n    '                custom.second = { rank: 2, options: experts }',\r\n    '            } else if (actorLevel >= 3) {',\r\n    '                const trained = skillNames.filter(x => actorSkills[x].rank < 1)',\r\n    '                const experts = skillNames.filter(x => actorSkills[x].rank < 2)',\r\n    '                custom.first = { rank: 1, options: trained }',\r\n    '                custom.second = { rank: 2, options: experts }',\r\n    '            } else {',\r\n    '                const trained = skillNames.filter(x => actorSkills[x].rank < 1)',\r\n    '                custom.first = { rank: 1, options: trained }',\r\n    '                custom.second = { rank: 1, options: trained }',\r\n    '            }',\r\n    '        }',\r\n    '',\r\n    '        return custom',\r\n    '    },',\r\n    '    rows: ROWS.map(rowName => {',\r\n    '        /** @type {DailyRowCombo<TomeGenerics>} */',\r\n    '        const row = {',\r\n    \"            type: 'combo',\",\r\n    '            slug: rowName,',\r\n    '            label: ({ custom, utils }) => utils.proficiencyLabel(custom[rowName].rank),',\r\n    '            options: ({ custom }) => custom[rowName].options,',\r\n    '            labelizer: ({ utils }) => utils.skillLabel,',\r\n    '        }',\r\n    '        return row',\r\n    '    }),',\r\n    '    process: ({ custom, fields, utils, messages, addItem, addRule }) => {',\r\n    \"        messages.addGroup('tome', 65)\",\r\n    '',\r\n    '        for (const rowName of ROWS) {',\r\n    '            const rank = custom[rowName].rank',\r\n    '            let value = fields[rowName].value',\r\n    '',\r\n    \"            if (fields[rowName].input === 'true') {\",\r\n    '                const source = utils.createLoreSource({ name: value, rank })',\r\n    '                addItem(source)',\r\n    '            } else {',\r\n    '                const source = utils.createSkillRuleElement({ skill: value, value: rank })',\r\n    '                value = utils.skillLabel(value)',\r\n    '                addRule(source)',\r\n    '            }',\r\n    '',\r\n    \"            messages.add('tome', { label: utils.proficiencyLabel(rank), selected: value })\",\r\n    '        }',\r\n    '    },',\r\n    '}',\r\n    '',\r\n    'return thaumaturgeTome',\r\n].join('\\n')\r\n","export const flexibility = [\r\n    \"/** @typedef {'flexibility' | 'improved'} FlexibilityRow */\",\r\n    \"/** @typedef {'improved'} FlexibilityChild */\",\r\n    '/** @typedef {[FlexibilityRow, {}, FlexibilityChild]} FlexibilityGenerics */',\r\n    '',\r\n    '/**',\r\n    ' * @param {FlexibilityRow} slug',\r\n    ' * @param {number} level',\r\n    ' * @param {FlexibilityChild} [child]',\r\n    ' */',\r\n    'function createRow(slug, level, child) {',\r\n    '    /** @type {DailyRowDrop<FlexibilityGenerics>} */',\r\n    '    const row = {',\r\n    \"        type: 'drop',\",\r\n    '        label: `PF2E.Level${level}`,',\r\n    '        slug,',\r\n    '        filter: {',\r\n    \"            type: 'feat',\",\r\n    '            search: {',\r\n    \"                category: ['class'],\",\r\n    '                traits: {',\r\n    \"                    values: ['fighter'],\",\r\n    '                },',\r\n    '                level,',\r\n    '            },',\r\n    '        },',\r\n    '    }',\r\n    '    if (child) row.childPredicate = [child]',\r\n    '    return row',\r\n    '}',\r\n    '',\r\n    '/** @type {Daily<FlexibilityGenerics>} */',\r\n    'const combatFlexibility = {',\r\n    \"    key: 'flexibility',\",\r\n    '    item: {',\r\n    \"        uuid: 'Compendium.pf2e.classfeatures.8g6HzARbhfcgilP8', // Combat Flexibility\",\r\n    '    },',\r\n    '    children: [',\r\n    '        {',\r\n    \"            slug: 'improved',\",\r\n    \"            uuid: 'Compendium.pf2e.classfeatures.W2rwudMNcAxs8VoX', // Improved Flexibility\",\r\n    '        },',\r\n    '    ],',\r\n    '    rows: [',\r\n    \"        createRow('flexibility', 8), //\",\r\n    \"        createRow('improved', 14, 'improved'),\",\r\n    '    ],',\r\n    '    process: async ({ utils, fields, addFeat, messages, children }) => {',\r\n    '        const uuid = fields.flexibility.uuid',\r\n    '        const source = await utils.createFeatSource(uuid)',\r\n    '        addFeat(source)',\r\n    \"        messages.add('feats', { uuid })\",\r\n    '',\r\n    '        if (children.improved) {',\r\n    '            const uuid = fields.improved.uuid',\r\n    '            const source = await utils.createFeatSource(uuid)',\r\n    '            addFeat(source, children.improved)',\r\n    \"            messages.add('feats', { uuid })\",\r\n    '        }',\r\n    '    },',\r\n    '}',\r\n    '',\r\n    'return combatFlexibility',\r\n].join('\\n')\r\n","export const savant = [\r\n    \"/** @typedef {'first' | 'second' | 'third' | 'fourth'} SavantRow */\",\r\n    '/** @typedef {Record<SavantRow, { level: number; condition: boolean }>} SavantCustom */',\r\n    \"/** @typedef {[SavantRow, SavantCustom, '']} SavantGenerics */\",\r\n    '',\r\n    \"const ROWS = /** @type {const} */ (['first', 'second', 'third', 'fourth'])\",\r\n    '',\r\n    '/**',\r\n    ' * @param {CharacterPF2e} actor',\r\n    ' * @param {MagicTradition} tradition',\r\n    ' */',\r\n    'function getSpellcastingTraditionDetails(actor, tradition) {',\r\n    '    let maxSlot = 1',\r\n    '    let maxTradition = 0',\r\n    '',\r\n    '    for (const entry of actor.spellcasting) {',\r\n    \"        if ('pf2e-staves' in entry.flags) continue // we skip staff entries\",\r\n    '',\r\n    '        const slots = entry.system.slots',\r\n    '        for (const key in slots) {',\r\n    '            const slot = slots[key]',\r\n    '            if (slot.max) maxSlot = Math.max(maxSlot, Number(key.slice(4)))',\r\n    '        }',\r\n    '',\r\n    '        if (entry.tradition === tradition) maxTradition = Math.max(maxTradition, entry.rank)',\r\n    '    }',\r\n    '',\r\n    '    return { maxSlot: Math.min(maxSlot, 10), maxTradition }',\r\n    '}',\r\n    '',\r\n    '/** @type {Daily<SavantGenerics>} */',\r\n    'const scrollSavant = {',\r\n    \"    key: 'savant',\",\r\n    '    item: {',\r\n    \"        uuid: 'Compendium.pf2e.feats-srd.u5DBg0LrBUKP0JsJ', // Scroll Savant\",\r\n    '    },',\r\n    '    prepare: ({ actor }) => {',\r\n    \"        const { maxSlot, maxTradition } = getSpellcastingTraditionDetails(actor, 'arcane')\",\r\n    '        return {',\r\n    '            first: { level: maxSlot - 2, condition: true },',\r\n    '            second: { level: maxSlot - 3, condition: true },',\r\n    '            third: { level: maxSlot - 4, condition: maxTradition >= 3 && maxSlot >= 5 },',\r\n    '            fourth: { level: maxSlot - 5, condition: maxTradition >= 4 && maxSlot >= 6 },',\r\n    '        }',\r\n    '    },',\r\n    '    rows: ROWS.map(rowName => {',\r\n    '        /** @type {DailyRowDrop<SavantGenerics>} */',\r\n    '        const row = {',\r\n    \"            type: 'drop',\",\r\n    '            slug: rowName,',\r\n    '            label: ({ custom }) => `PF2E.SpellLevel${custom[rowName].level}`,',\r\n    '            filter: {',\r\n    \"                type: 'spell',\",\r\n    '                search: ({ custom }) => ({',\r\n    \"                    category: ['spell'],\",\r\n    \"                    traditions: ['arcane'],\",\r\n    '                    level: custom[rowName].level,',\r\n    '                }),',\r\n    '            },',\r\n    '            condition: ({ custom }) => custom[rowName].condition,',\r\n    '        }',\r\n    '        return row',\r\n    '    }),',\r\n    '    process: async ({ utils, fields, custom, addItem, messages }) => {',\r\n    '        for (const field of Object.values(fields)) {',\r\n    '            const uuid = field.uuid',\r\n    '            const source = await utils.createSpellScrollSource({ uuid, level: custom[field.row].level })',\r\n    '            addItem(source)',\r\n    \"            messages.add('scrolls', { uuid, label: source.name })\",\r\n    '        }',\r\n    '    },',\r\n    '}',\r\n    '',\r\n    'return scrollSavant',\r\n].join('\\n')\r\n","export const mind = [\r\n    \"/** @typedef {'alert' | 'smith' | 'mental' | 'runic' | 'advanced'} MindRow */\",\r\n    \"/** @typedef {'weapon' | 'mental' | 'runic' | 'advanced'} MindChild */\",\r\n    '/** @typedef {[MindRow, {}, MindChild]} MindGenerics */',\r\n    '',\r\n    \"const MIND_WEAPON_UUID = 'Compendium.pf2e-dailies.equipment.VpmEozw21aRxX15P'\",\r\n    '',\r\n    'const WEAPON_BASE_TYPES = {',\r\n    \"    0: { die: 'd4', traits: ['finesse', 'agile'], usage: 'held-in-one-hand' },\",\r\n    \"    1: { die: 'd6', traits: ['finesse'], usage: 'held-in-one-hand' },\",\r\n    \"    2: { die: 'd8', traits: [], usage: 'held-in-one-hand' },\",\r\n    \"    3: { die: 'd10', traits: ['reach'], usage: 'held-in-two-hands' },\",\r\n    '}',\r\n    '',\r\n    'const WEAPON_GROUPS = /** @type {Record<WeaponDamage, string>} */ {',\r\n    \"    slashing: 'sword',\",\r\n    \"    piercing: 'spear',\",\r\n    \"    bludgeoning: 'club',\",\r\n    '}',\r\n    '',\r\n    \"const WEAPON_TRAITS = ['grapple', 'nonlethal', 'shove', 'trip', 'modular']\",\r\n    '',\r\n    'const WEAPON_DAMAGE_TYPES = Object.keys(WEAPON_GROUPS)',\r\n    '',\r\n    \"const WEAPON_RUNES = ['corrosive', 'disrupting', 'flaming', 'frost', 'shock', 'thundering']\",\r\n    '',\r\n    'const WEAPON_GREATER_RUNES = [',\r\n    \"    'anarchic',\",\r\n    \"    'axiomatic',\",\r\n    \"    'greaterCorrosive',\",\r\n    \"    'greaterDisrupting',\",\r\n    \"    'greaterFlaming',\",\r\n    \"    'greaterFrost',\",\r\n    \"    'greaterShock',\",\r\n    \"    'greaterThundering',\",\r\n    \"    'holy',\",\r\n    \"    'unholy',\",\r\n    ']',\r\n    '',\r\n    '/** @type {Daily<MindGenerics>} */',\r\n    'const mindSmith = {',\r\n    \"    key: 'mindsmith',\",\r\n    '    item: {',\r\n    \"        uuid: 'Compendium.pf2e.feats-srd.juikoiIA0Jy8PboY', // Mind Smith Dedication\",\r\n    '    },',\r\n    '    children: [',\r\n    '        {',\r\n    \"            slug: 'weapon',\",\r\n    '            uuid: MIND_WEAPON_UUID, // Mind Weapon',\r\n    '        },',\r\n    '        {',\r\n    \"            slug: 'mental',\",\r\n    \"            uuid: 'Compendium.pf2e.feats-srd.PccekOihIbRWdDky', // Malleable Mental Forge\",\r\n    '        },',\r\n    '        {',\r\n    \"            slug: 'runic',\",\r\n    \"            uuid: 'Compendium.pf2e.feats-srd.2uQbQgz1AbjzcFSp', // Runic Mind Smithing\",\r\n    '        },',\r\n    '        {',\r\n    \"            slug: 'advanced',\",\r\n    \"            uuid: 'Compendium.pf2e.feats-srd.fgnfXwFcn9jZlXGD', // Advanced Runic Mind Smithing\",\r\n    '        },',\r\n    '    ],',\r\n    '    rows: [',\r\n    '        {',\r\n    \"            type: 'alert',\",\r\n    \"            slug: 'alert',\",\r\n    \"            message: 'Missing Mind Weapon',\",\r\n    '            fix,',\r\n    \"            childPredicate: [{ not: 'weapon' }],\",\r\n    '        },',\r\n    '        {',\r\n    \"            type: 'select',\",\r\n    \"            slug: 'smith',\",\r\n    \"            label: 'Mind Smith',\",\r\n    '            options: WEAPON_DAMAGE_TYPES,',\r\n    '            labelizer: ({ utils }) => utils.damageLabel,',\r\n    \"            childPredicate: ['weapon'],\",\r\n    '        },',\r\n    '        {',\r\n    \"            type: 'select',\",\r\n    \"            slug: 'mental',\",\r\n    \"            label: 'Mental Forge',\",\r\n    '            options: WEAPON_TRAITS,',\r\n    '            labelizer: ({ utils }) => utils.weaponTraitLabel,',\r\n    \"            childPredicate: ['weapon', 'mental'],\",\r\n    '        },',\r\n    '        {',\r\n    \"            type: 'select',\",\r\n    \"            slug: 'runic',\",\r\n    \"            label: 'Runic Smithing',\",\r\n    '            options: WEAPON_RUNES,',\r\n    '            labelizer: ({ utils }) => utils.weaponPropertyRunesLabel,',\r\n    \"            childPredicate: ['weapon', 'runic', { not: 'advanced' }],\",\r\n    '            condition: ({ children, utils }) => utils.hasFreePropertySlot(children.weapon),',\r\n    '        },',\r\n    '        {',\r\n    \"            type: 'select',\",\r\n    \"            slug: 'advanced',\",\r\n    \"            label: 'Runic Smithing',\",\r\n    '            options: WEAPON_GREATER_RUNES,',\r\n    '            labelizer: ({ utils }) => utils.weaponPropertyRunesLabel,',\r\n    \"            childPredicate: ['weapon', 'advanced'],\",\r\n    '            condition: ({ children, utils }) => utils.hasFreePropertySlot(children.weapon),',\r\n    '        },',\r\n    '    ],',\r\n    '    process: ({ children, updateItem, fields, messages, item, utils }) => {',\r\n    '        const weapon = children.weapon',\r\n    '        if (!weapon) return',\r\n    '',\r\n    \"        messages.addGroup('mindsmith')\",\r\n    '',\r\n    '        const selected = /** @type {WeaponDamage} */ fields.smith.value',\r\n    \"        updateItem({ _id: weapon.id, 'system.damage.damageType': selected, 'system.group': WEAPON_GROUPS[selected] })\",\r\n    \"        messages.add('mindsmith', { selected: utils.damageLabel(selected), uuid: item.uuid, label: 'mindsmith' })\",\r\n    '',\r\n    '        if (children.mental) {',\r\n    '            const selected = fields.mental.value',\r\n    '            const traits = deepClone(weapon._source.system.traits?.value ?? [])',\r\n    '            if (!traits.includes(selected)) traits.push(selected)',\r\n    \"            updateItem({ _id: weapon.id, 'system.traits.value': traits })\",\r\n    \"            messages.add('mindsmith', {\",\r\n    '                selected: utils.weaponTraitLabel(selected),',\r\n    '                uuid: children.mental.uuid,',\r\n    \"                label: 'mentalforge',\",\r\n    '            })',\r\n    '        }',\r\n    '',\r\n    '        if ((children.advanced || children.runic) && utils.hasFreePropertySlot(weapon)) {',\r\n    '            const child = children.advanced ?? children.runic',\r\n    '            const freeSlot = utils.getFreePropertyRuneSlot(weapon)',\r\n    '            const field = fields.advanced ?? fields.runic',\r\n    '            const selected = field.value',\r\n    '',\r\n    '            if (!weapon.system.runes.property.includes(selected)) {',\r\n    '                updateItem({ _id: weapon.id, [`system.${freeSlot}.value`]: selected, [`flags.world.runeSlot`]: freeSlot })',\r\n    \"                messages.add('mindsmith', {\",\r\n    '                    selected: utils.weaponPropertyRunesLabel(selected),',\r\n    '                    uuid: child.uuid,',\r\n    \"                    label: 'runicmind',\",\r\n    '                })',\r\n    '            }',\r\n    '        }',\r\n    '    },',\r\n    '    rest: ({ item, sourceId, updateItem }) => {',\r\n    '        if (sourceId !== MIND_WEAPON_UUID) return',\r\n    '',\r\n    '        let traits = item._source.system.traits?.value ?? []',\r\n    '        traits = traits.filter(trait => !WEAPON_TRAITS.includes(trait))',\r\n    \"        updateItem({ _id: item.id, 'system.traits.value': traits })\",\r\n    '',\r\n    \"        const runeSlot = item.getFlag('world', 'runeSlot')\",\r\n    '        if (runeSlot) {',\r\n    '            updateItem({ _id: item.id, [`system.${runeSlot}.value`]: null, [`flags.world.-=runeSlot`]: true })',\r\n    '        }',\r\n    '    },',\r\n    '}',\r\n    '',\r\n    'const OPTIONS = {',\r\n    \"    0: 'A one-handed weapon that deals <strong>1d4</strong> damage and has the <strong>agile</strong> and <strong>finesse</strong> traits',\",\r\n    \"    1: 'A one-handed weapon that deals <strong>1d6</strong> damage and has the <strong>finesse</strong> trait',\",\r\n    \"    2: 'A one-handed weapon that deals <strong>1d8</strong> damage',\",\r\n    \"    3: 'A two-handed weapon that deals <strong>1d10</strong> damage and has the <strong>reach</strong> trait',\",\r\n    '}',\r\n    '',\r\n    '/** * @param {DailyValueArgs<MindGenerics>} args */',\r\n    'async function fix({ actor }) {',\r\n    '    let content =',\r\n    \"        `<p>This character doesn't have a mind weapon in their inventory.</p><p>Please select one of the following options to create one.</p>`\",\r\n    '',\r\n    '    for (const [key, label] of Object.entries(OPTIONS)) {',\r\n    \"        content += `<label><input type='radio' name='type' value='${key}'>${label}</label>`\",\r\n    '    }',\r\n    '',\r\n    '    const weapon = await Dialog.wait(',\r\n    '        {',\r\n    \"            title: 'Mind Weapon',\",\r\n    '            content,',\r\n    '            buttons: {',\r\n    '                yes: {',\r\n    \"                    icon: `<i class='fas fa-save'></i>`,\",\r\n    \"                    label: 'Accept',\",\r\n    '                    callback: onWeaponSelected,',\r\n    '                },',\r\n    '                no: {',\r\n    \"                    icon: `<i class='fas fa-times'></i>`,\",\r\n    \"                    label: 'Cancel',\",\r\n    '                    callback: () => null,',\r\n    '                },',\r\n    '            },',\r\n    '            close: () => null,',\r\n    '        },',\r\n    '        {},',\r\n    \"        { id: 'pf2e-dailies-weapon', width: 600 }\",\r\n    '    )',\r\n    '',\r\n    '    if (weapon) {',\r\n    \"        await actor.createEmbeddedDocuments('Item', [weapon])\",\r\n    '        return true',\r\n    '    }',\r\n    '',\r\n    '    return false',\r\n    '}',\r\n    '',\r\n    '/** @params {JQuery} html */',\r\n    'async function onWeaponSelected(html) {',\r\n    \"    const selection = html.find('[name=type]:checked').val()\",\r\n    '    if (!selection) {',\r\n    \"        ui.notifications.warn('You must select one weapon base type.')\",\r\n    '        return',\r\n    '    }',\r\n    '',\r\n    '    const weapon = (await fromUuid(MIND_WEAPON_UUID))?.toObject()',\r\n    '    if (!weapon) {',\r\n    \"        ui.notifications.warn(`The weapon couldn't be found in the compendium.`)\",\r\n    '        return',\r\n    '    }',\r\n    '',\r\n    '    const stats = WEAPON_BASE_TYPES[selection]',\r\n    '',\r\n    \"    setProperty(weapon, 'system.damage.die', stats.die)\",\r\n    \"    setProperty(weapon, 'system.traits.value', stats.traits.slice())\",\r\n    \"    setProperty(weapon, 'system.usage.value', stats.usage)\",\r\n    '',\r\n    '    return weapon',\r\n    '}',\r\n    '',\r\n    'return mindSmith',\r\n].join('\\n')\r\n","import { createFeatDaily } from '@src/data/feat'\r\nimport { createLanguageDaily } from '@src/data/language'\r\nimport { createResistancelDaily } from '@src/data/resistance'\r\nimport { createTrainedLoreDaily, createTrainedSkillDaily } from '@src/data/skill'\r\nimport { createSpellDaily } from '@src/data/spell'\r\nimport { subLocalize } from '@utils/foundry/localize'\r\nimport { templatePath } from '@utils/foundry/path'\r\nimport { getSetting, setSetting } from '@utils/foundry/settings'\r\nimport { getModule } from '@utils/foundry/module'\r\nimport { AsyncFunction } from '@utils/function'\r\nimport { error, warn } from '@utils/foundry/notification'\r\nimport { tome } from './customs/tome'\r\nimport { flexibility } from './customs/flexibility'\r\nimport { savant } from './customs/savant'\r\nimport { mind } from './customs/mind'\r\nimport { EXT_VERSION } from '@src/main'\r\n\r\nconst localize = subLocalize('customs')\r\n\r\ntype DailyExampleType = 'tome' | 'flexibility' | 'savant' | 'mind'\r\ntype DailyTemplateType = 'default' | 'trainedSkill' | 'trainedLore' | 'language' | 'resistance' | 'feat' | 'spell'\r\ntype DailyData = {\r\n    key: string\r\n    uuid: ItemUUID\r\n    label: string\r\n    resistances: string\r\n    resistance: string\r\n    traits: string\r\n    level: string\r\n    category: string\r\n    traditions: string\r\n    levels: string\r\n}\r\n\r\nconst TEMPLATES = ['default', 'trainedSkill', 'trainedLore', 'language', 'resistance', 'feat', 'spell']\r\nconst EXAMPLES = ['flexibility', 'savant', 'tome', 'mind']\r\n\r\nexport class DailyCustoms extends FormApplication {\r\n    private _selectedTemplate: DailyTemplateType | DailyExampleType = 'default'\r\n    private _selectedDaily: string = ''\r\n    private _monaco: any | null = null\r\n\r\n    constructor() {\r\n        super()\r\n    }\r\n\r\n    static get defaultOptions(): FormApplicationOptions {\r\n        return mergeObject(super.defaultOptions, {\r\n            id: 'pf2e-dailies-customs',\r\n            title: localize('title'),\r\n            template: templatePath('customs.hbs'),\r\n            submitOnChange: false,\r\n            submitOnClose: false,\r\n            closeOnSubmit: false,\r\n            scrollY: ['.left .list'],\r\n        })\r\n    }\r\n\r\n    async _updateObject(event: Event, formData: Record<string, unknown>) {}\r\n\r\n    async getData(options?: Partial<FormApplicationOptions> | undefined) {\r\n        const customs = getSetting<SavedCustomDaily[]>('customDailies')\r\n        const code = customs.find(custom => custom.key === this._selectedDaily)?.code\r\n        const template = this._selectedTemplate\r\n        const extension = getModule<PF2eDailiesExtApi>('pf2e-dailies-ext')\r\n        const newVersion = extension?.active && isNewerVersion(EXT_VERSION, extension.version) ? { version: EXT_VERSION } : ''\r\n\r\n        return mergeObject(super.getData(options), {\r\n            i18n: localize,\r\n            template,\r\n            templates: TEMPLATES,\r\n            daily: this._selectedDaily,\r\n            code,\r\n            customs,\r\n            examples: EXAMPLES,\r\n            isExample: EXAMPLES.includes(template),\r\n            monaco: extension?.active,\r\n            newVersion,\r\n        })\r\n    }\r\n\r\n    activateListeners(html: JQuery<HTMLElement>) {\r\n        super.activateListeners(html)\r\n\r\n        this._monaco?.dispose()\r\n\r\n        const monaco = getModule<PF2eDailiesExtApi>('pf2e-dailies-ext')?.api\r\n        const area = html.find<HTMLTextAreaElement>('.code')[0]\r\n        if (monaco && area) {\r\n            const element = html.find('.monaco .placeholder')[0]!\r\n            this._monaco = monaco.createEditor(element, area.value)\r\n            this._monaco.onDidChangeModelContent(debounce(() => (area.value = this._monaco.getValue()), 200))\r\n        } else {\r\n            this._monaco = null\r\n        }\r\n\r\n        html.find<HTMLSelectElement>('[data-action=select-template]').on('change', this.#onSelectTemplate.bind(this))\r\n        html.find('[data-action=create-template]').on('click', this.#onCreateTemplate.bind(this))\r\n        html.find('[data-action=create-daily]').on('click', this.#onCreateDaily.bind(this))\r\n\r\n        html.find('.row[data-key]').on('click', this.#onSelectDaily.bind(this))\r\n        html.find('[data-action=delete-daily]').on('click', this.#onDeleteDaily.bind(this))\r\n\r\n        html.find('[data-action=save-code]').on('click', this.#onSaveCode.bind(this))\r\n    }\r\n\r\n    get code() {\r\n        const element = this.form.querySelector<HTMLTextAreaElement>('.window-content .code')\r\n        return element?.value\r\n    }\r\n\r\n    async #onSaveCode(event: JQuery.ClickEvent) {\r\n        event.preventDefault()\r\n\r\n        const code = this.code\r\n        const selected = this._selectedDaily\r\n\r\n        if (!selected || !code) return\r\n\r\n        const customs = getSetting<SavedCustomDaily[]>('customDailies')\r\n        const stipped = customs.filter(custom => custom.key !== selected)\r\n\r\n        try {\r\n            const fn = new AsyncFunction(code)\r\n            const daily = await fn()\r\n            const key = daily.key\r\n\r\n            if (typeof key !== 'string') return warn('invalidKey')\r\n            if (stipped.find(custom => custom.key === key)) return warn('duplicate')\r\n\r\n            const index = customs.findIndex(custom => custom.key === selected)\r\n            if (index < 0) return\r\n\r\n            customs.splice(index, 1, { key, code })\r\n            await setSetting('customDailies', customs)\r\n\r\n            localize.info('saved', { daily: key })\r\n            this._selectedDaily = key\r\n            this.render()\r\n        } catch (err) {\r\n            error('error.unexpected')\r\n            console.error(err)\r\n            console.error(`The error occured while testing the custom daily ${selected}`)\r\n        }\r\n    }\r\n\r\n    async #onDeleteDaily(event: JQuery.ClickEvent) {\r\n        event.preventDefault()\r\n        event.stopPropagation()\r\n\r\n        const remove = await Dialog.confirm({\r\n            title: localize('delete.title'),\r\n            content: localize('delete.content'),\r\n        })\r\n\r\n        if (!remove) return\r\n\r\n        const key = event.currentTarget.dataset.key as string\r\n        const customs = getSetting<SavedCustomDaily[]>('customDailies').filter(custom => custom.key !== key)\r\n\r\n        await setSetting('customDailies', customs)\r\n        localize.info('deleted', { daily: key })\r\n        this.#onCreateDaily()\r\n    }\r\n\r\n    #onCreateDaily() {\r\n        this._selectedDaily = ''\r\n        this._selectedTemplate = 'default'\r\n        this.render()\r\n    }\r\n\r\n    #onSelectDaily(event: JQuery.ClickEvent) {\r\n        event.preventDefault()\r\n\r\n        this._selectedDaily = event.currentTarget.dataset.key\r\n        this.render()\r\n    }\r\n\r\n    async #onCreateTemplate(event: JQuery.ClickEvent) {\r\n        event.preventDefault()\r\n        const template = this._selectedTemplate\r\n\r\n        const customs = getSetting<SavedCustomDaily[]>('customDailies')\r\n        const formData = new FormData(this.form)\r\n        const data = Object.fromEntries(formData) as DailyData\r\n        const isExample = EXAMPLES.includes(template)\r\n        let { key, uuid, label } = data\r\n\r\n        if (isExample) {\r\n            key = template\r\n        } else if (!key || !uuid) {\r\n            return localize.warn('template.noEmpty')\r\n        }\r\n\r\n        if (customs.find(custom => custom.key === key)) return warn('error.duplicate')\r\n\r\n        let code\r\n\r\n        if (template === 'trainedSkill') {\r\n            const daily = createTrainedSkillDaily(key, uuid, label)\r\n            code = this.#stringifyDaily(daily, { key, uuid, label }, 'SkillGenerics')\r\n        } else if (template === 'trainedLore') {\r\n            const daily = createTrainedLoreDaily(key, uuid, label)\r\n            code = this.#stringifyDaily(daily, { key, uuid, label }, 'SkillGenerics')\r\n        } else if (template === 'language') {\r\n            const daily = createLanguageDaily(key, uuid, label)\r\n            code = this.#stringifyDaily(daily, { key, uuid, label }, 'LanguageGenerics')\r\n        } else if (template === 'resistance') {\r\n            const resistance = simplyfiable(data.resistance)\r\n            const resistances = splitList(data.resistances)\r\n\r\n            if (resistance === '' || !resistances.length) return localize.warn('template.noEmpty')\r\n            if (typeof resistance === 'number' && resistance < 1) return localize.warn('template.badResistance')\r\n\r\n            const daily = createResistancelDaily(key, uuid, resistances, resistance, label)\r\n            code = this.#stringifyDaily(daily, { key, uuid, label, resistance, resistances }, 'ResistanceGenerics')\r\n        } else if (template === 'feat') {\r\n            const traits = splitList<FeatTrait>(data.traits)\r\n            const filter: DailyFeatFilter = {\r\n                category: splitList<FeatCategory>(data.category),\r\n                level: simplyfiable(data.level) || { min: 0, max: 20 },\r\n            }\r\n            if (traits.length) filter.traits = traits\r\n            const daily = createFeatDaily(key, uuid, filter, label)\r\n            code = this.#stringifyDaily(daily, { key, uuid, label }, 'FeatGenerics')\r\n        } else if (template === 'spell') {\r\n            const level = Number(data.level) || undefined\r\n            const traits = splitList<SpellTrait>(data.traits)\r\n            let levels: (DailySimplifiableValue | string)[] | DailySimplifiableValue = data.levels.split(',').map(x => x.trim())\r\n            if (levels.length === 1) {\r\n                levels = simplyfiable(levels[0]!) as DailySimplifiableValue\r\n            } else {\r\n                levels = levels\r\n                    .filter(x => x)\r\n                    .map(x => Number(x))\r\n                    .filter(x => !isNaN(x)) as number[]\r\n            }\r\n            const filter: DailySpellFilter = {\r\n                category: splitList(data.category),\r\n                traditions: splitList(data.traditions),\r\n                level: (levels || []) as DailySimplifiableValue | number[],\r\n            }\r\n            if (traits.length) filter.traits = traits\r\n            const daily = createSpellDaily(key, uuid, filter, level, label)\r\n            code = this.#stringifyDaily(daily, { key, uuid, label, level }, 'SpellGenerics')\r\n        } else if (template === 'tome') {\r\n            code = tome\r\n        } else if (template === 'flexibility') {\r\n            code = flexibility\r\n        } else if (template === 'savant') {\r\n            code = savant\r\n        } else if (template === 'mind') {\r\n            code = mind\r\n        } else {\r\n            const daily = { key, label, item: { uuid }, rows: [], process: () => {} }\r\n            code = this.#stringifyDaily(daily, { key, uuid, label })\r\n        }\r\n\r\n        customs.push({ key, code })\r\n        await setSetting('customDailies', customs)\r\n\r\n        this._selectedDaily = key\r\n        this.render()\r\n    }\r\n\r\n    #stringifyDaily(daily: Record<string, any>, args: Record<string, any>, type?: string) {\r\n        const placeholder = '____PLACEHOLDER____'\r\n        const fns: Function[] = []\r\n\r\n        let str = JSON.stringify(\r\n            daily,\r\n            (_, value) => {\r\n                if (typeof value === 'function') {\r\n                    fns.push(value)\r\n                    return placeholder\r\n                }\r\n                return value\r\n            },\r\n            4\r\n        )\r\n\r\n        str = str.replace(new RegExp('\"' + placeholder + '\"', 'g'), () => {\r\n            const fn = fns.shift()?.toString()\r\n            return fn?.replace(/( {5,})/g, match => match.slice(4)) ?? ''\r\n        })\r\n\r\n        let strArgs = ''\r\n        for (const [key, value] of Object.entries(args)) {\r\n            if (typeof value === 'string') strArgs += `const ${key} = '${value}';\\n`\r\n            else if (typeof value === 'object') strArgs += `const ${key} = ${JSON.stringify(value)};\\n`\r\n            else strArgs += `const ${key} = ${value};\\n`\r\n        }\r\n\r\n        const typing = type ? `Daily<${type}>` : 'Daily'\r\n        return `${strArgs}\\n/** @type {${typing}} */\\nconst daily = ${str};\\n\\nreturn daily;`\r\n    }\r\n\r\n    #onSelectTemplate(event: JQuery.ChangeEvent<any, any, HTMLSelectElement>) {\r\n        event.preventDefault()\r\n\r\n        this._selectedDaily = ''\r\n        this._selectedTemplate = event.currentTarget.value as DailyTemplateType\r\n\r\n        this.render()\r\n    }\r\n}\r\n\r\nfunction splitList<T extends string>(list: string) {\r\n    return list\r\n        .split(',')\r\n        .map(x => x.trim())\r\n        .filter(x => x) as T[]\r\n}\r\n\r\nfunction simplyfiable(value: string | number) {\r\n    if (typeof value === 'number') return value\r\n    value = value.trim()\r\n    if (value === 'level' || value === 'half') return value\r\n    const numbered = Number(value)\r\n    return isNaN(numbered) ? '' : numbered\r\n}\r\n","export function getFamiliarPack() {\r\n    return game.packs.get('pf2e.familiar-abilities')! as CompendiumCollection<EffectPF2e>\r\n}\r\n\r\nexport function familiarUUID(id: string) {\r\n    return `Compendium.pf2e.familiar-abilities.${id}` as ItemUUID\r\n}\r\n","import { MODULE_ID } from '@utils/module'\r\n\r\nexport function hasModuleFlag(doc: FoundryDocument) {\r\n    return getProperty(doc, `flags.${MODULE_ID}`) !== undefined\r\n}\r\n\r\nexport function flagPath(key: string) {\r\n    return `flags.${MODULE_ID}.key`\r\n}\r\n\r\nexport function getFlag<T extends unknown>(doc: FoundryDocument, key: string): T | undefined\r\nexport function getFlag<T extends unknown>(doc: FoundryDocument, key: string, fallback: T): T\r\nexport function getFlag<T extends unknown>(doc: FoundryDocument, key: string, fallback?: T): T | undefined {\r\n    return (doc.getFlag(MODULE_ID, key) as T | undefined) ?? fallback\r\n}\r\n\r\n/**\r\n * @template {foundry.Document} T\r\n * @param {T} doc\r\n * @param {string} key\r\n * @param {any} value\r\n * @returns T\r\n */\r\nexport function setFlag(doc: FoundryDocument, key: string, value: unknown) {\r\n    return doc.setFlag(MODULE_ID, key, value)\r\n}\r\n\r\nexport function getSourceId(doc: ClientDocumentMixin) {\r\n    return doc.getFlag<ItemUUID>('core', 'sourceId')\r\n}\r\n\r\nexport function hasSourceId(doc: ClientDocumentMixin, sourceId: DocumentUUID) {\r\n    return getSourceId(doc) === sourceId\r\n}\r\n\r\nexport function includesSourceId(doc: ClientDocumentMixin, list: DocumentUUID[]) {\r\n    const sourceId = getSourceId(doc)\r\n    return sourceId ? list.includes(sourceId) : false\r\n}\r\n","import { findItemWithSourceId } from '@utils/foundry/item'\r\n\r\nconst RATION_UUID = 'Compendium.pf2e.equipment-srd.L9ZV076913otGtiB'\r\n\r\nexport function getRations(actor: CharacterPF2e) {\r\n    return findItemWithSourceId(actor, RATION_UUID) as ConsumablePF2e | undefined\r\n}\r\n","import { getSourceId, includesSourceId } from '@utils/foundry/flags'\r\n\r\ntype ActorItemTypes<A extends Actor> = (keyof A['itemTypes'])[]\r\n\r\nfunction getItemSourceIdCondition(sourceId: ItemUUID | ItemUUID[]) {\r\n    return Array.isArray(sourceId)\r\n        ? (item: Item) => includesSourceId(item, sourceId)\r\n        : (item: Item) => getSourceId(item) === sourceId\r\n}\r\n\r\nexport function getItems<A extends Actor, I extends Item = CollectionValue<A['items']>>(actor: A, itemTypes?: ActorItemTypes<A>) {\r\n    return (itemTypes ? itemTypes.flatMap(type => actor.itemTypes[type as string]) : actor.items) as Embedded<I>[]\r\n}\r\n\r\nexport function findItemWithSourceId<A extends Actor, I extends Item = CollectionValue<A['items']>>(\r\n    actor: A,\r\n    sourceId: ItemUUID,\r\n    itemTypes?: ActorItemTypes<A>\r\n) {\r\n    return getItems<A, I>(actor, itemTypes).find(getItemSourceIdCondition(sourceId))\r\n}\r\n\r\nexport function hasItemWithSourceId<A extends Actor, I extends Item = CollectionValue<A['items']>>(\r\n    actor: A,\r\n    sourceId: ItemUUID | ItemUUID[],\r\n    itemTypes?: ActorItemTypes<A>\r\n) {\r\n    return getItems<A, I>(actor, itemTypes).some(getItemSourceIdCondition(sourceId))\r\n}\r\n\r\nexport function filterItemsWithSourceId<A extends Actor, I extends Item = CollectionValue<A['items']>>(\r\n    actor: A,\r\n    sourceId: ItemUUID | ItemUUID[],\r\n    itemTypes?: ActorItemTypes<A>\r\n) {\r\n    return getItems<A, I>(actor, itemTypes).filter(getItemSourceIdCondition(sourceId))\r\n}\r\n","import { localizePath } from '@utils/foundry/localize'\r\nimport { createSpellDaily, SpellGenerics } from './spell'\r\n\r\nexport const TricksterAce = (() => {\r\n    const daily = createSpellDaily(\r\n        'ace',\r\n        'Compendium.pf2e.feats-srd.POrE3ZgBRdBL9MsW',\r\n        {\r\n            category: ['cantrip', 'spell'],\r\n            level: 4,\r\n        },\r\n        4\r\n    )\r\n\r\n    const row = daily.rows![0] as DailyRowDropSpell<SpellGenerics>\r\n    row.filter.drop = item => {\r\n        const castTime = item.system.time.value\r\n        if (castTime.includes('hour') || (castTime.includes('min') && parseInt(castTime) > 10)) {\r\n            return { error: localizePath('interface.error.drop.wrongSpellTime'), data: { time: '10 min' } }\r\n        }\r\n        return true\r\n    }\r\n\r\n    return daily\r\n})()\r\n","type ChainRow = typeof rows[number]\r\ntype ChainChild = 'expert' | 'master'\r\ntype ChainGenerics = [ChainRow, {}, ChainChild]\r\n\r\nconst rows = ['first', 'second', 'third', 'fourth', 'fifth', 'sixth', 'seventh'] as const\r\n\r\nexport function createScrollChain(key: string, uuids: [ItemUUID, ItemUUID, ItemUUID], label?: string) {\r\n    const daily: Daily<ChainGenerics> = {\r\n        key,\r\n        label,\r\n        item: {\r\n            uuid: uuids[0],\r\n        },\r\n        children: [\r\n            {\r\n                slug: 'expert',\r\n                uuid: uuids[1],\r\n            },\r\n            {\r\n                slug: 'master',\r\n                uuid: uuids[2],\r\n            },\r\n        ],\r\n        rows: [\r\n            createRow('first', 1), //\r\n            createRow('second', 2, 8),\r\n            createRow('third', 3, undefined, 'expert'), //\r\n            createRow('fourth', 4, 14, 'expert'),\r\n            createRow('fifth', 5, 16, 'expert'),\r\n            createRow('sixth', 6, undefined, 'master'), //\r\n            createRow('seventh', 7, 20, 'master'),\r\n        ],\r\n        process: async ({ utils, fields, addItem, messages }) => {\r\n            for (const field of Object.values(fields)) {\r\n                const uuid = field.uuid!\r\n                const level = (rows.indexOf(field.row) + 1) as OneToTen\r\n                const source = await utils.createSpellScrollSource({ uuid, level })\r\n                addItem(source)\r\n                messages.add('scrolls', { uuid, label: source.name })\r\n            }\r\n        },\r\n    }\r\n    return daily\r\n}\r\n\r\nfunction createRow(slug: ChainRow, level: OneToTen, minActorLevel?: number, child?: ChainChild) {\r\n    const row: DailyRow<ChainGenerics> = {\r\n        type: 'drop',\r\n        slug,\r\n        label: `PF2E.SpellLevel${level}`,\r\n        filter: {\r\n            type: 'spell',\r\n            search: {\r\n                category: ['spell'],\r\n                level,\r\n            },\r\n        },\r\n    }\r\n    if (minActorLevel) row.condition = ({ actor }) => actor.level >= minActorLevel\r\n    if (child) row.childPredicate = [child]\r\n    return row\r\n}\r\n","type FlexibilityRow = 'flexibility' | 'improved'\r\ntype FlexibilityChild = 'improved'\r\ntype FlexibilityGenerics = [FlexibilityRow, {}, FlexibilityChild]\r\n\r\nexport const combatFlexibility: Daily<FlexibilityGenerics> = {\r\n    key: 'flexibility',\r\n    item: {\r\n        uuid: 'Compendium.pf2e.classfeatures.8g6HzARbhfcgilP8', // Combat Flexibility\r\n    },\r\n    children: [\r\n        {\r\n            slug: 'improved',\r\n            uuid: 'Compendium.pf2e.classfeatures.W2rwudMNcAxs8VoX', // Improved Flexibility\r\n        },\r\n    ],\r\n    rows: [\r\n        createRow('flexibility', 8), //\r\n        createRow('improved', 14, 'improved'),\r\n    ],\r\n    process: async ({ utils, fields, addFeat, messages, children }) => {\r\n        const uuid = fields.flexibility.uuid!\r\n        const source = await utils.createFeatSource(uuid)\r\n        addFeat(source)\r\n        messages.add('feats', { uuid })\r\n\r\n        if (children.improved) {\r\n            const uuid = fields.improved.uuid!\r\n            const source = await utils.createFeatSource(uuid)\r\n            addFeat(source, children.improved)\r\n            messages.add('feats', { uuid })\r\n        }\r\n    },\r\n}\r\n\r\nfunction createRow(slug: FlexibilityRow, level: number, child?: FlexibilityChild) {\r\n    const row: DailyRowDrop<FlexibilityGenerics> = {\r\n        type: 'drop',\r\n        label: `PF2E.Level${level}`,\r\n        slug,\r\n        filter: {\r\n            type: 'feat',\r\n            search: {\r\n                category: ['class'],\r\n                traits: ['fighter'],\r\n                level,\r\n            },\r\n        },\r\n    }\r\n    if (child) row.childPredicate = [child]\r\n    return row\r\n}\r\n","import { MODULE_ID } from '@src/main'\r\nimport { localize, subLocalize } from '@utils/foundry/localize'\r\nimport { getFlag } from '@utils/foundry/flags'\r\n\r\ntype MindRow = 'alert' | 'smith' | 'mental' | 'runic' | 'advanced'\r\ntype MindChild = 'weapon' | 'mental' | 'runic' | 'advanced'\r\ntype MindGenerics = [MindRow, {}, MindChild]\r\n\r\nconst MIND_WEAPON_UUID = 'Compendium.pf2e-dailies.equipment.VpmEozw21aRxX15P'\r\n\r\nconst WEAPON_BASE_TYPES = {\r\n    '0': { die: 'd4', traits: ['finesse', 'agile'], usage: 'held-in-one-hand' },\r\n    '1': { die: 'd6', traits: ['finesse'], usage: 'held-in-one-hand' },\r\n    '2': { die: 'd8', traits: [], usage: 'held-in-one-hand' },\r\n    '3': { die: 'd10', traits: ['reach'], usage: 'held-in-two-hands' },\r\n}\r\n\r\nconst WEAPON_GROUPS = {\r\n    slashing: 'sword',\r\n    piercing: 'spear',\r\n    bludgeoning: 'club',\r\n} as Record<WeaponDamageType, string>\r\n\r\nconst WEAPON_TRAITS = ['grapple', 'nonlethal', 'shove', 'trip', 'modular']\r\n\r\nconst WEAPON_DAMAGE_TYPES = Object.keys(WEAPON_GROUPS)\r\n\r\nconst WEAPON_RUNES = ['corrosive', 'disrupting', 'flaming', 'frost', 'shock', 'thundering']\r\n\r\nconst WEAPON_GREATER_RUNES = [\r\n    'anarchic',\r\n    'axiomatic',\r\n    'greaterCorrosive',\r\n    'greaterDisrupting',\r\n    'greaterFlaming',\r\n    'greaterFrost',\r\n    'greaterShock',\r\n    'greaterThundering',\r\n    'holy',\r\n    'unholy',\r\n]\r\n\r\nexport const mindSmith: Daily<MindGenerics> = {\r\n    key: 'mindsmith',\r\n    item: {\r\n        uuid: 'Compendium.pf2e.feats-srd.juikoiIA0Jy8PboY', // Mind Smith Dedication\r\n    },\r\n    children: [\r\n        {\r\n            slug: 'weapon',\r\n            uuid: MIND_WEAPON_UUID, // Mind Weapon\r\n        },\r\n        {\r\n            slug: 'mental',\r\n            uuid: 'Compendium.pf2e.feats-srd.PccekOihIbRWdDky', // Malleable Mental Forge\r\n        },\r\n        {\r\n            slug: 'runic',\r\n            uuid: 'Compendium.pf2e.feats-srd.2uQbQgz1AbjzcFSp', // Runic Mind Smithing\r\n        },\r\n        {\r\n            slug: 'advanced',\r\n            uuid: 'Compendium.pf2e.feats-srd.fgnfXwFcn9jZlXGD', // Advanced Runic Mind Smithing\r\n        },\r\n    ],\r\n    rows: [\r\n        {\r\n            type: 'alert',\r\n            slug: 'alert',\r\n            message: () => localize('interface.alert.weapon'),\r\n            fix,\r\n            childPredicate: [{ not: 'weapon' }],\r\n        },\r\n        {\r\n            type: 'select',\r\n            slug: 'smith',\r\n            label: () => localize('label.mindsmith'),\r\n            options: WEAPON_DAMAGE_TYPES,\r\n            labelizer: ({ utils }) => utils.damageLabel,\r\n            childPredicate: ['weapon'],\r\n        },\r\n        {\r\n            type: 'select',\r\n            slug: 'mental',\r\n            label: () => localize('label.mentalforge'),\r\n            options: WEAPON_TRAITS,\r\n            labelizer: ({ utils }) => utils.weaponTraitLabel,\r\n            childPredicate: ['weapon', 'mental'],\r\n        },\r\n        {\r\n            type: 'select',\r\n            slug: 'runic',\r\n            label: () => localize('label.runicmind'),\r\n            options: WEAPON_RUNES,\r\n            labelizer: ({ utils }) => utils.weaponPropertyRunesLabel,\r\n            childPredicate: ['weapon', 'runic', { not: 'advanced' }],\r\n            condition: ({ children, utils }) => utils.hasFreePropertySlot(children.weapon as WeaponPF2e),\r\n        },\r\n        {\r\n            type: 'select',\r\n            slug: 'advanced',\r\n            label: () => localize('label.runicmind'),\r\n            options: WEAPON_GREATER_RUNES,\r\n            labelizer: ({ utils }) => utils.weaponPropertyRunesLabel,\r\n            childPredicate: ['weapon', 'advanced'],\r\n            condition: ({ children, utils }) => utils.hasFreePropertySlot(children.weapon as WeaponPF2e),\r\n        },\r\n    ],\r\n    process: ({ children, updateItem, fields, messages, item, utils }) => {\r\n        const weapon = children.weapon as WeaponPF2e | undefined\r\n        if (!weapon) return\r\n\r\n        messages.addGroup('mindsmith')\r\n\r\n        const selected = fields.smith.value as WeaponDamageType\r\n        updateItem({ _id: weapon.id, 'system.damage.damageType': selected, 'system.group': WEAPON_GROUPS[selected] })\r\n        messages.add('mindsmith', { selected: utils.damageLabel(selected), uuid: item.uuid, label: 'mindsmith' })\r\n\r\n        if (children.mental) {\r\n            const selected = fields.mental.value as WeaponTrait\r\n            const traits = deepClone(weapon._source.system.traits?.value ?? [])\r\n            if (!traits.includes(selected)) traits.push(selected)\r\n            updateItem({ _id: weapon.id, 'system.traits.value': traits })\r\n            messages.add('mindsmith', {\r\n                selected: utils.weaponTraitLabel(selected),\r\n                uuid: children.mental.uuid,\r\n                label: 'mentalforge',\r\n            })\r\n        }\r\n\r\n        if ((children.advanced || children.runic) && utils.hasFreePropertySlot(weapon)) {\r\n            const child = (children.advanced ?? children.runic) as ItemPF2e\r\n            const freeSlot = utils.getFreePropertyRuneSlot(weapon)\r\n            const field = fields.advanced ?? fields.runic\r\n            const selected = field.value as WeaponPropertyRuneType\r\n\r\n            if (!weapon.system.runes.property.includes(selected)) {\r\n                updateItem({ _id: weapon.id, [`system.${freeSlot}.value`]: selected, [`flags.${MODULE_ID}.runeSlot`]: freeSlot })\r\n                messages.add('mindsmith', {\r\n                    selected: utils.weaponPropertyRunesLabel(selected),\r\n                    uuid: child.uuid,\r\n                    label: 'runicmind',\r\n                })\r\n            }\r\n        }\r\n    },\r\n    rest: ({ item, sourceId, updateItem }) => {\r\n        if (sourceId !== MIND_WEAPON_UUID) return\r\n\r\n        let traits = item._source.system.traits?.value ?? []\r\n        traits = traits.filter(trait => !WEAPON_TRAITS.includes(trait))\r\n        updateItem({ _id: item.id, 'system.traits.value': traits })\r\n\r\n        const runeSlot = getFlag<string>(item, 'runeSlot')\r\n        if (runeSlot) {\r\n            updateItem({ _id: item.id, [`system.${runeSlot}.value`]: null, [`flags.${MODULE_ID}.-=runeSlot`]: true })\r\n        }\r\n    },\r\n}\r\n\r\nasync function fix({ actor }: DailyValueArgs<MindGenerics>) {\r\n    const localize = subLocalize('dialog.weapon')\r\n\r\n    let content = localize('flavor')\r\n\r\n    for (const key of ['0', '1', '2', '3']) {\r\n        const label = localize(`option.${key}`)\r\n        content += `<label><input type=\"radio\" name=\"type\" value=\"${key}\">${label}</label>`\r\n    }\r\n\r\n    const weapon = await Dialog.wait(\r\n        {\r\n            title: localize('title'),\r\n            content,\r\n            buttons: {\r\n                yes: {\r\n                    icon: '<i class=\"fas fa-save\"></i>',\r\n                    label: localize('accept'),\r\n                    callback: onWeaponSelected,\r\n                },\r\n                no: {\r\n                    icon: '<i class=\"fas fa-times\"></i>',\r\n                    label: localize('cancel'),\r\n                    callback: () => null,\r\n                },\r\n            },\r\n            close: () => null,\r\n        },\r\n        {},\r\n        { id: 'pf2e-dailies-weapon', width: 600 }\r\n    )\r\n\r\n    if (weapon) {\r\n        await actor.createEmbeddedDocuments('Item', [weapon])\r\n        return true\r\n    }\r\n\r\n    return false\r\n}\r\n\r\nasync function onWeaponSelected(html: JQuery) {\r\n    const localize = subLocalize('dialog.weapon')\r\n\r\n    const selection = html.find('[name=type]:checked').val() as keyof typeof WEAPON_BASE_TYPES\r\n    if (!selection) {\r\n        localize.warn('error.noSelection')\r\n        return\r\n    }\r\n\r\n    const weapon = (await fromUuid<WeaponPF2e>(MIND_WEAPON_UUID))?.toObject()\r\n    if (!weapon) {\r\n        localize.warn('error.missing')\r\n        return\r\n    }\r\n\r\n    const stats = WEAPON_BASE_TYPES[selection]\r\n\r\n    setProperty(weapon, 'system.damage.die', stats.die)\r\n    setProperty(weapon, 'system.traits.value', stats.traits.slice())\r\n    setProperty(weapon, 'system.usage.value', stats.usage)\r\n\r\n    return weapon\r\n}\r\n","type SavantRow = 'first' | 'second' | 'third' | 'fourth'\r\ntype SavantCustom = Record<SavantRow, { level: OneToTen; condition: boolean }>\r\ntype SavantGenerics = [SavantRow, SavantCustom, '']\r\n\r\nexport const scrollSavant: Daily<SavantGenerics> = {\r\n    key: 'savant',\r\n    item: {\r\n        uuid: 'Compendium.pf2e.feats-srd.u5DBg0LrBUKP0JsJ', // Scroll Savant\r\n    },\r\n    prepare: ({ actor }) => {\r\n        const { maxSlot, maxTradition } = getSpellcastingTraditionDetails(actor, 'arcane')\r\n\r\n        return {\r\n            first: { level: maxSlot - 2, condition: true },\r\n            second: { level: maxSlot - 3, condition: true },\r\n            third: { level: maxSlot - 4, condition: maxTradition >= 3 && maxSlot >= 5 },\r\n            fourth: { level: maxSlot - 5, condition: maxTradition >= 4 && maxSlot >= 6 },\r\n        } as SavantCustom\r\n    },\r\n    rows: (['first', 'second', 'third', 'fourth'] as const).map(rowName => {\r\n        const row: DailyRowDrop<SavantGenerics> = {\r\n            type: 'drop',\r\n            slug: rowName,\r\n            label: ({ custom }) => `PF2E.SpellLevel${custom[rowName].level}`,\r\n            filter: {\r\n                type: 'spell',\r\n                search: ({ custom }) => ({\r\n                    category: ['spell'],\r\n                    traditions: ['arcane'],\r\n                    level: custom[rowName].level,\r\n                }),\r\n            },\r\n            condition: ({ custom }) => custom[rowName].condition,\r\n        }\r\n        return row\r\n    }),\r\n    process: async ({ utils, fields, custom, addItem, messages }) => {\r\n        for (const field of Object.values(fields)) {\r\n            const uuid = field.uuid!\r\n            const source = await utils.createSpellScrollSource({ uuid, level: custom[field.row].level })\r\n            addItem(source)\r\n            messages.add('scrolls', { uuid, label: source.name })\r\n        }\r\n    },\r\n}\r\n\r\nfunction getSpellcastingTraditionDetails(actor: CharacterPF2e, tradition: MagicTradition) {\r\n    let maxSlot: OneToTen = 1\r\n    let maxTradition: ZeroToFour = 0\r\n\r\n    for (const entry of actor.spellcasting) {\r\n        if ('pf2e-staves' in entry.flags) continue // we skip staff entries\r\n\r\n        const slots = entry.system.slots\r\n        for (const key in slots) {\r\n            const slot = slots[key as SlotKey]\r\n            if (slot.max) maxSlot = Math.max(maxSlot, Number(key.slice(4))) as OneToTen\r\n        }\r\n\r\n        if (entry.tradition === tradition) maxTradition = Math.max(maxTradition, entry.rank) as ZeroToFour\r\n    }\r\n\r\n    return { maxSlot: Math.min(maxSlot, 10) as OneToTen, maxTradition }\r\n}\r\n","type TomeRow = 'first' | 'second'\r\ntype TomeChild = 'adept' | 'second' | 'intense' | 'paragon'\r\ntype TomeCustom = Record<TomeRow, { rank: OneToFour; options: string[] }>\r\ntype TomeGenerics = [TomeRow, TomeCustom, TomeChild]\r\n\r\nexport const thaumaturgeTome: Daily<TomeGenerics> = {\r\n    key: 'tome',\r\n    item: {\r\n        uuid: 'Compendium.pf2e.classfeatures.MyN1cQgE0HsLF20e', // Tome\r\n    },\r\n    children: [\r\n        {\r\n            slug: 'adept',\r\n            uuid: 'Compendium.pf2e.classfeatures.Obm4ItMIIr0whYeO', // Implement Adept\r\n            condition: createChildCondition('adept'),\r\n        },\r\n        {\r\n            slug: 'second',\r\n            uuid: 'Compendium.pf2e.classfeatures.ZEUxZ4Ta1kDPHiq5', // Second Adept\r\n            condition: createChildCondition('adept'),\r\n        },\r\n        {\r\n            slug: 'intense',\r\n            uuid: 'Compendium.pf2e.feats-srd.yRRM1dsY6jakEMaC', // Intense Implement\r\n        },\r\n        {\r\n            slug: 'paragon',\r\n            uuid: 'Compendium.pf2e.classfeatures.QEtgbY8N2V4wTbsI', // Implement Paragon\r\n            condition: createChildCondition('paragon'),\r\n        },\r\n    ],\r\n    prepare: ({ utils, actor, children }) => {\r\n        const skillNames = utils.skillNames\r\n        const actorLevel = actor.level\r\n        const actorSkills = actor.skills as Record<SkillLongForm, { rank: ZeroToFour }>\r\n\r\n        const custom: TomeCustom = {\r\n            first: { options: [], rank: 1 },\r\n            second: { options: [], rank: 1 },\r\n        }\r\n\r\n        // Implement Paragon\r\n        if (children.paragon) {\r\n            const skills = skillNames.filter(x => actorSkills[x].rank < 4)\r\n            custom.first = { rank: 4, options: skills }\r\n            custom.second = { rank: 4, options: skills }\r\n        }\r\n        // Intense Implement or Second Adept or Implement Adept\r\n        else if (children.intense || children.adept || children.second) {\r\n            const masters = skillNames.filter(x => actorSkills[x].rank < 3)\r\n\r\n            if (actorLevel >= 9) {\r\n                custom.first = { rank: 3, options: masters }\r\n                custom.second = { rank: 3, options: masters }\r\n            } else {\r\n                const experts = skillNames.filter(x => actorSkills[x].rank < 2)\r\n                custom.first = { rank: 2, options: experts }\r\n                custom.second = { rank: 3, options: masters }\r\n            }\r\n        }\r\n        // Tome\r\n        else {\r\n            if (actorLevel >= 5) {\r\n                const experts = skillNames.filter(x => actorSkills[x].rank < 2)\r\n                custom.first = { rank: 2, options: experts }\r\n                custom.second = { rank: 2, options: experts }\r\n            } else if (actorLevel >= 3) {\r\n                const trained = skillNames.filter(x => actorSkills[x].rank < 1)\r\n                const experts = skillNames.filter(x => actorSkills[x].rank < 2)\r\n                custom.first = { rank: 1, options: trained }\r\n                custom.second = { rank: 2, options: experts }\r\n            } else {\r\n                const trained = skillNames.filter(x => actorSkills[x].rank < 1)\r\n                custom.first = { rank: 1, options: trained }\r\n                custom.second = { rank: 1, options: trained }\r\n            }\r\n        }\r\n\r\n        return custom\r\n    },\r\n    rows: (['first', 'second'] as const).map(rowName => {\r\n        const row: DailyRow<TomeGenerics> = {\r\n            type: 'combo',\r\n            slug: rowName,\r\n            label: ({ custom, utils }) => utils.proficiencyLabel(custom[rowName].rank),\r\n            options: ({ custom }) => custom[rowName].options,\r\n            labelizer: ({ utils }) => utils.skillLabel,\r\n        }\r\n        return row\r\n    }),\r\n    process: ({ custom, fields, utils, messages, addItem, addRule }) => {\r\n        messages.addGroup('tome', 65)\r\n\r\n        for (const rowName of ['first', 'second'] as const) {\r\n            const rank = custom[rowName].rank\r\n            let value = fields[rowName].value\r\n\r\n            if (fields[rowName].input === 'true') {\r\n                const source = utils.createLoreSource({ name: value, rank })\r\n                addItem(source)\r\n            } else {\r\n                const source = utils.createSkillRuleElement({ skill: value, value: rank })\r\n                value = utils.skillLabel(value)\r\n                addRule(source)\r\n            }\r\n\r\n            messages.add('tome', { label: utils.proficiencyLabel(rank), selected: value })\r\n        }\r\n    },\r\n}\r\n\r\nfunction createChildCondition(option: 'adept' | 'paragon') {\r\n    return function ({ item, utils }: BaseDailyValueArgs<TomeGenerics>) {\r\n        return utils.getChoiSetRuleSelection(item, option) === 'tome'\r\n    }\r\n}\r\n","import { getSourceId } from '@utils/foundry/flags'\r\nimport { error } from '@utils/foundry/notification'\r\nimport { getSetting } from '@utils/foundry/settings'\r\nimport { utils } from './api'\r\nimport { TricksterAce } from './data/ace'\r\nimport { createScrollChain } from './data/chain'\r\nimport { createFeatDaily } from './data/feat'\r\nimport { combatFlexibility } from './data/flexibility'\r\nimport { createLanguageDaily } from './data/language'\r\nimport { mindSmith } from './data/mind'\r\nimport { getRations } from './data/rations'\r\nimport { createResistancelDaily } from './data/resistance'\r\nimport { scrollSavant } from './data/savant'\r\nimport { createTrainedLoreDaily, createTrainedSkillDaily } from './data/skill'\r\nimport { thaumaturgeTome } from './data/tome'\r\nimport { AsyncFunction } from '@utils/function'\r\n\r\nconst BUILTINS = [\r\n    thaumaturgeTome,\r\n    createTrainedSkillDaily('longevity', 'Compendium.pf2e.feats-srd.WoLh16gyDp8y9WOZ'), // Ancestral Longevity\r\n    createTrainedSkillDaily('ageless', 'Compendium.pf2e.feats-srd.wylnETwIz32Au46y'), // Ageless Spirit\r\n    createTrainedSkillDaily('memories', 'Compendium.pf2e.feats-srd.ptEOt3lqjxUnAW62'), // Ancient Memories\r\n    createTrainedSkillDaily('studies', 'Compendium.pf2e.feats-srd.9bgl6qYWKHzqWZj0'), // Flexible Studies\r\n    createTrainedLoreDaily('study', 'Compendium.pf2e.feats-srd.aLJsBBZzlUK3G8MW'), // Quick Study\r\n    createLanguageDaily('linguistics', 'Compendium.pf2e.feats-srd.eCWQU16hRLfN1KaX'), // Ancestral Linguistics\r\n    createLanguageDaily('borts', 'Compendium.pf2e.equipment-srd.iS7hAQMAaThHYE8g'), // Bort's Blessing\r\n    createResistancelDaily(\r\n        'elementalist',\r\n        'Compendium.pf2e.feats-srd.tx9pkrpmtqe4FnvS',\r\n        ['air', 'earth', 'fire', 'water'],\r\n        'half',\r\n        'elementalist'\r\n    ), // Elementalist Dedication\r\n    createResistancelDaily(\r\n        'ganzi',\r\n        'Compendium.pf2e.heritages.3reGfXH0S82hM7Gp',\r\n        ['acid', 'electricity', 'sonic'],\r\n        'half',\r\n        'ganzi',\r\n        true\r\n    ), // Ganzi\r\n    createFeatDaily('metamagical', 'Compendium.pf2e.classfeatures.89zWKD2CN7nRu2xp', {\r\n        category: ['class'],\r\n        traits: { selected: ['metamagic', 'wizard'], conjunction: 'and' },\r\n        level: 'half',\r\n    }), // Metamagical Experimentation\r\n    combatFlexibility,\r\n    scrollSavant,\r\n    createScrollChain('esoterica', [\r\n        'Compendium.pf2e.feats-srd.OqObuRB8oVSAEKFR', // Scroll Esoterica\r\n        'Compendium.pf2e.feats-srd.nWd7m0yRcIEVUy7O', // Elaborate Scroll Esoterica\r\n        'Compendium.pf2e.feats-srd.LHjPTV5vP3MOsPPJ', // Grand Scroll Esoterica\r\n    ]),\r\n    createScrollChain('trickster', [\r\n        'Compendium.pf2e.feats-srd.ROAUR1GhC19Pjk9C', // Basic Scroll Cache\r\n        'Compendium.pf2e.feats-srd.UrOj9TROtn8nuxPf', // Expert Scroll Cache\r\n        'Compendium.pf2e.feats-srd.lIg5Gzz7W70jfbk1', // Master Scroll Cache\r\n    ]),\r\n    TricksterAce,\r\n    mindSmith,\r\n] as unknown as Daily[]\r\n\r\ntype DailiesUUIDS = Map<ItemUUID, { daily: Daily; index?: number; condition?: BaseDailyConditionFunction }>\r\n\r\nconst BUILTINS_UUIDS: DailiesUUIDS = parseDailies(BUILTINS, 'dailies')\r\nconst UUIDS: DailiesUUIDS = new Map()\r\n\r\nfunction parseDailies(dailies: Daily[], prefix: 'dailies' | 'custom') {\r\n    const uuids: DailiesUUIDS = new Map()\r\n\r\n    for (const original of dailies) {\r\n        const daily = deepClone(original)\r\n\r\n        try {\r\n            const keyWithPrefix = `${prefix}.${daily.key}`\r\n\r\n            uuids.set(daily.item.uuid, { daily, condition: daily.item.condition })\r\n\r\n            daily.key = keyWithPrefix\r\n\r\n            if (daily.children) {\r\n                for (let i = 0; i < daily.children.length; i++) {\r\n                    const { uuid, condition } = daily.children[i]!\r\n                    uuids.set(uuid, { daily, index: i, condition })\r\n                }\r\n            }\r\n        } catch (err) {\r\n            error('error.unexpected')\r\n            console.error(err)\r\n            console.error(`The error occured during data gathering of ${prefix}.${daily.key}`)\r\n        }\r\n    }\r\n\r\n    return uuids\r\n}\r\n\r\nexport async function parseCustomDailies() {\r\n    UUIDS.clear()\r\n\r\n    const CUSTOM_DAILIES: Daily[] = []\r\n\r\n    const customs = getSetting<SavedCustomDaily[]>('customDailies')\r\n    for (const { key, code } of customs) {\r\n        try {\r\n            const fn = new AsyncFunction(code)\r\n            const daily = await fn()\r\n            CUSTOM_DAILIES.push(daily)\r\n        } catch (err) {\r\n            error('error.unexpected')\r\n            console.error(err)\r\n            console.error(`The error occured during call of custom function for ${key}`)\r\n        }\r\n    }\r\n\r\n    for (const [uuid, daily] of BUILTINS_UUIDS.entries()) {\r\n        UUIDS.set(uuid, daily)\r\n    }\r\n\r\n    const CUSTOM_UUIDS = parseDailies(CUSTOM_DAILIES, 'custom')\r\n    for (const [uuid, daily] of CUSTOM_UUIDS.entries()) {\r\n        UUIDS.set(uuid, daily)\r\n    }\r\n}\r\n\r\nexport function getDailies(actor: CharacterPF2e) {\r\n    const dailies: Record<string, ReturnedDaily> = {}\r\n\r\n    for (const item of actor.items) {\r\n        const sourceId = getSourceId(item)\r\n        if (!sourceId || (item.isOfType('physical') && item.isInvested === false)) continue\r\n\r\n        const entry = UUIDS.get(sourceId)\r\n        if (!entry) continue\r\n\r\n        const { daily, index, condition } = entry\r\n        try {\r\n            if (typeof condition === 'function' && !condition({ actor, item, utils })) continue\r\n\r\n            dailies[daily.key] ??= deepClone(daily) as ReturnedDaily\r\n\r\n            if (index === undefined) {\r\n                dailies[daily.key]!.item = item\r\n            } else {\r\n                dailies[daily.key]!.children![index]!.item = item\r\n            }\r\n        } catch (err) {\r\n            error('error.unexpected')\r\n            console.error(err)\r\n            console.error(`The error occured during data gathering of ${daily.key}`)\r\n        }\r\n    }\r\n\r\n    return Object.values(dailies).filter(daily => daily.item && daily.item instanceof Item)\r\n}\r\n\r\nexport function getDailyFromSourceId(sourceId: ItemUUID) {\r\n    return UUIDS.get(sourceId)?.daily\r\n}\r\n\r\nexport function hasAnyDaily(actor: CharacterPF2e) {\r\n    return actor.familiar || getRations(actor)?.uses.value || getDailies(actor).length\r\n}\r\n","/** Short form of type and non-null check */\r\nfunction isObject<T extends object>(value: unknown): value is DeepPartial<T>\r\nfunction isObject<T extends string>(value: unknown): value is { [K in T]?: unknown }\r\nfunction isObject(value: unknown): boolean {\r\n    return typeof value === 'object' && value !== null\r\n}\r\n\r\n/**\r\n * Encapsulates logic to determine if a modifier should be active or not for a specific roll based\r\n * on a list of string values. This will often be based on traits, but that is not required - sneak\r\n * attack could be an option that is not a trait.\r\n * @category PF2\r\n */\r\nexport class PredicatePF2e extends Array<PredicateStatement> {\r\n    /** Is the predicate data structurally valid? */\r\n    readonly isValid: boolean\r\n\r\n    constructor(...statements: PredicateStatement[] | [PredicateStatement[]]) {\r\n        if (Array.isArray(statements[0])) {\r\n            super(...statements[0])\r\n        } else {\r\n            super(...(statements as PredicateStatement[]))\r\n        }\r\n        this.isValid = PredicatePF2e.isValid(this)\r\n    }\r\n\r\n    /** Structurally validate the predicates */\r\n    static isValid(statements: unknown): statements is PredicateStatement[] {\r\n        return this.isArray(statements)\r\n    }\r\n\r\n    /** Is this an array of predicatation statements? */\r\n    static override isArray(statements: unknown): statements is PredicateStatement[] {\r\n        return super.isArray(statements) && statements.every(s => StatementValidator.isStatement(s))\r\n    }\r\n\r\n    /** Test if the given predicate passes for the given list of options. */\r\n    static test(predicate: PredicateStatement[] = [], options: Set<string> | string[]): boolean {\r\n        return predicate instanceof PredicatePF2e ? predicate.test(options) : new PredicatePF2e(...predicate).test(options)\r\n    }\r\n\r\n    /** Create a predicate from unknown data, with deprecation support for legacy objects */\r\n    static create(data: unknown, warn = false): PredicatePF2e {\r\n        if (data instanceof PredicatePF2e) return data.clone()\r\n        if (Array.isArray(data)) return new PredicatePF2e(data)\r\n        if (isObject<OldRawPredicate>(data)) {\r\n            if (warn) {\r\n                foundry.utils.logCompatibilityWarning('Predicate data must be an array', {\r\n                    mode: CONST.COMPATIBILITY_MODES.WARNING,\r\n                    since: '4.2.0',\r\n                    until: '4.5.0',\r\n                })\r\n            }\r\n\r\n            return new PredicatePF2e(convertLegacyData(data))\r\n        }\r\n\r\n        return new PredicatePF2e()\r\n    }\r\n\r\n    /** Test this predicate against a domain of discourse */\r\n    test(options: Set<string> | string[]): boolean {\r\n        if (this.length === 0) {\r\n            return true\r\n        } else if (!this.isValid) {\r\n            console.error('PF2e System | The provided predicate set is malformed.')\r\n            return false\r\n        }\r\n\r\n        const domain = options instanceof Set ? options : new Set(options)\r\n        return this.every(s => this.isTrue(s, domain))\r\n    }\r\n\r\n    toObject(): RawPredicate {\r\n        return deepClone([...this])\r\n    }\r\n\r\n    clone(): PredicatePF2e {\r\n        return new PredicatePF2e(this.toObject())\r\n    }\r\n\r\n    /** Is the provided statement true? */\r\n    private isTrue(statement: PredicateStatement, domain: Set<string>): boolean {\r\n        return (\r\n            (typeof statement === 'string' && domain.has(statement)) ||\r\n            (StatementValidator.isBinaryOp(statement) && this.testBinaryOp(statement, domain)) ||\r\n            (StatementValidator.isCompound(statement) && this.testCompound(statement, domain))\r\n        )\r\n    }\r\n\r\n    private testBinaryOp(statement: BinaryOperation, domain: Set<string>): boolean {\r\n        if ('eq' in statement) {\r\n            return domain.has(`${statement.eq[0]}:${statement.eq[1]}`)\r\n        } else {\r\n            const operator = Object.keys(statement)[0]\r\n\r\n            // Allow for tests of partial statements against numeric values\r\n            // E.g., `{ \"gt\": [\"actor:level\", 5] }` would match against \"actor:level:6\" and \"actor:level:7\"\r\n            const [left, right] = Object.values(statement)[0]\r\n            const domainArray = Array.from(domain)\r\n            const leftValues =\r\n                typeof left === 'number' || !Number.isNaN(Number(left))\r\n                    ? [Number(left)]\r\n                    : domainArray.flatMap(d => (d.startsWith(left) ? Number(/:(-?\\d+)$/.exec(d)?.[1]) : []))\r\n            const rightValues =\r\n                typeof right === 'number' || !Number.isNaN(Number(right))\r\n                    ? [Number(right)]\r\n                    : domainArray.flatMap(d => (d.startsWith(right) ? Number(/:(-?\\d+)$/.exec(d)?.[1]) : []))\r\n\r\n            switch (operator) {\r\n                case 'gt':\r\n                    return leftValues.some(l => rightValues.every(r => l > r))\r\n                case 'gte':\r\n                    return leftValues.some(l => rightValues.every(r => l >= r))\r\n                case 'lt':\r\n                    return leftValues.some(l => rightValues.every(r => l < r))\r\n                case 'lte':\r\n                    return leftValues.some(l => rightValues.every(r => l <= r))\r\n                default:\r\n                    console.warn('PF2e System | Malformed binary operation encounter')\r\n                    return false\r\n            }\r\n        }\r\n    }\r\n\r\n    /** Is the provided compound statement true? */\r\n    private testCompound(statement: Exclude<PredicateStatement, Atom>, domain: Set<string>): boolean {\r\n        return (\r\n            ('and' in statement && statement.and.every(subProp => this.isTrue(subProp, domain))) ||\r\n            ('nand' in statement && !statement.nand.every(subProp => this.isTrue(subProp, domain))) ||\r\n            ('or' in statement && statement.or.some(subProp => this.isTrue(subProp, domain))) ||\r\n            ('nor' in statement && !statement.nor.some(subProp => this.isTrue(subProp, domain))) ||\r\n            ('not' in statement && !this.isTrue(statement.not, domain)) ||\r\n            ('if' in statement && !(this.isTrue(statement.if, domain) && !this.isTrue(statement.then, domain)))\r\n        )\r\n    }\r\n}\r\n\r\nclass StatementValidator {\r\n    static isStatement(statement: unknown): statement is PredicateStatement {\r\n        return statement instanceof Object\r\n            ? this.isCompound(statement) || this.isBinaryOp(statement)\r\n            : typeof statement === 'string'\r\n            ? this.isAtomic(statement)\r\n            : false\r\n    }\r\n\r\n    static isAtomic(statement: unknown): statement is Atom {\r\n        return (typeof statement === 'string' && statement.length > 0) || this.isBinaryOp(statement)\r\n    }\r\n\r\n    private static binaryOperators = new Set(['eq', 'gt', 'gte', 'lt', 'lte'])\r\n\r\n    static isBinaryOp(statement: unknown): statement is BinaryOperation {\r\n        if (!isObject(statement)) return false\r\n        const entries = Object.entries(statement)\r\n        if (entries.length > 1) return false\r\n        const [operator, operands]: [string, unknown] = entries[0]\r\n        return (\r\n            this.binaryOperators.has(operator) &&\r\n            Array.isArray(operands) &&\r\n            operands.length === 2 &&\r\n            typeof operands[0] === 'string' &&\r\n            ['string', 'number'].includes(typeof operands[1])\r\n        )\r\n    }\r\n\r\n    static isCompound(statement: unknown): statement is CompoundStatement {\r\n        return (\r\n            isObject(statement) &&\r\n            (this.isAnd(statement) ||\r\n                this.isOr(statement) ||\r\n                this.isNand(statement) ||\r\n                this.isNor(statement) ||\r\n                this.isNot(statement) ||\r\n                this.isIf(statement))\r\n        )\r\n    }\r\n\r\n    static isAnd(statement: { and?: unknown }): statement is Conjunction {\r\n        return (\r\n            Object.keys(statement).length === 1 &&\r\n            Array.isArray(statement.and) &&\r\n            statement.and.every(subProp => this.isStatement(subProp))\r\n        )\r\n    }\r\n\r\n    static isNand(statement: { nand?: unknown }): statement is AlternativeDenial {\r\n        return (\r\n            Object.keys(statement).length === 1 &&\r\n            Array.isArray(statement.nand) &&\r\n            statement.nand.every(subProp => this.isStatement(subProp))\r\n        )\r\n    }\r\n\r\n    static isOr(statement: { or?: unknown }): statement is Disjunction {\r\n        return (\r\n            Object.keys(statement).length === 1 &&\r\n            Array.isArray(statement.or) &&\r\n            statement.or.every(subProp => this.isStatement(subProp))\r\n        )\r\n    }\r\n\r\n    static isNor(statement: { nor?: unknown }): statement is JointDenial {\r\n        return (\r\n            Object.keys(statement).length === 1 &&\r\n            Array.isArray(statement.nor) &&\r\n            statement.nor.every(subProp => this.isStatement(subProp))\r\n        )\r\n    }\r\n\r\n    static isNot(statement: { not?: unknown }): statement is Negation {\r\n        return Object.keys(statement).length === 1 && !!statement.not && this.isStatement(statement.not)\r\n    }\r\n\r\n    static isIf(statement: { if?: unknown; then?: unknown }): statement is Conditional {\r\n        return Object.keys(statement).length === 2 && this.isStatement(statement.if) && this.isStatement(statement.then)\r\n    }\r\n}\r\n\r\nfunction convertLegacyData(predicate: OldRawPredicate): RawPredicate {\r\n    const keys = Object.keys(predicate)\r\n    if (keys.length === 0) return []\r\n    if (keys.length === 1 && Array.isArray(predicate.all)) {\r\n        return deepClone(predicate.all)\r\n    }\r\n    if (keys.length === 1 && Array.isArray(predicate.any) && predicate.any.length === 1) {\r\n        return deepClone(predicate.any)\r\n    }\r\n\r\n    return deepClone(\r\n        [\r\n            predicate.all ?? [],\r\n            Array.isArray(predicate.any) ? { or: predicate.any } : [],\r\n            Array.isArray(predicate.not)\r\n                ? predicate.not.length === 1\r\n                    ? { not: predicate.not[0]! }\r\n                    : { nor: predicate.not }\r\n                : [],\r\n        ].flat()\r\n    )\r\n}\r\n","export function cleanSplit(str: string | undefined) {\r\n    if (!str) return []\r\n    return str\r\n        .split(',')\r\n        .map(x => x.trim())\r\n        .filter(x => x)\r\n}\r\n\r\nexport function capitalize(str?: string) {\r\n    if (!str) return ''\r\n    return str[0].toUpperCase() + str.slice(1)\r\n}\r\n","import { DailiesInterface } from '@apps/interface'\r\nimport { utils } from '@src/api'\r\nimport { getFlag } from '@utils/foundry/flags'\r\nimport { hasLocalization, localize } from '@utils/foundry/localize'\r\nimport { PredicatePF2e } from '@utils/pf2e/predicate'\r\nimport { capitalize } from '@utils/string'\r\n\r\nconst templateOrders: Record<DailyRowType, number> = {\r\n    select: 100,\r\n    combo: 80,\r\n    random: 60,\r\n    alert: 40,\r\n    input: 20,\r\n    drop: 0,\r\n}\r\n\r\nexport async function getTemplate(\r\n    this: DailiesInterface,\r\n    { children = [], key, item, prepare, label, rows = [] }: ReturnedDaily\r\n) {\r\n    const actor = this.actor\r\n    const saved = (this.saved[key] = getFlag<DailySaved>(actor, key) ?? {})\r\n    const rowsObj: Record<string, DailyRow> = (this.rows[key] = {})\r\n    const childrenObj = (this.children[key] = children.reduce((children, { slug, item }) => {\r\n        children[slug] = item\r\n        return children\r\n    }, {} as DailyValueArgs['children']))\r\n\r\n    const prepareArgs: DailyPrepareArgs = {\r\n        actor,\r\n        item,\r\n        children: childrenObj,\r\n        utils,\r\n    }\r\n\r\n    const custom = (this.custom[key] = (prepare && (await prepare(prepareArgs))) || {})\r\n\r\n    const dailyArgs = (this.dailyArgs[key] = {\r\n        ...prepareArgs,\r\n        custom,\r\n    })\r\n\r\n    let groupLabel = await getProcessedValue(label, dailyArgs)\r\n    const labeled = groupLabel ? `label.${groupLabel}` : key.startsWith('dailies.') ? `label.${key.slice(8)}` : undefined\r\n    if (labeled && hasLocalization(labeled)) groupLabel = localize(labeled)\r\n\r\n    const predicates = (this.predicate[key] = children.filter(child => child.item).map(child => child.slug))\r\n\r\n    const template: DailyTemplate = {\r\n        label: groupLabel ? game.i18n.localize(groupLabel) : item.name,\r\n        rows: [],\r\n    }\r\n\r\n    for (const row of rows) {\r\n        rowsObj[row.slug] = row\r\n\r\n        const { type, slug, childPredicate = [], condition, label, save } = row\r\n\r\n        if (childPredicate.length && !PredicatePF2e.test(childPredicate, predicates)) continue\r\n        if (condition && !(await condition(dailyArgs))) continue\r\n\r\n        const savedRow = save === false || type === 'random' ? undefined : saved[slug]\r\n        const rowLabel = await getProcessedValue(label, dailyArgs)\r\n        const value =\r\n            savedRow === undefined\r\n                ? ''\r\n                : typeof savedRow !== 'object'\r\n                ? savedRow\r\n                : 'name' in savedRow\r\n                ? savedRow.name\r\n                : savedRow.selected\r\n\r\n        const rowTemplate: DailyRowTemplate = {\r\n            label: rowLabel ? game.i18n.localize(rowLabel) : '',\r\n            value,\r\n            order: templateOrders[type],\r\n            data: {\r\n                type,\r\n                daily: key,\r\n                row: slug,\r\n            },\r\n        }\r\n\r\n        if (isComboRow(row) || isSelectRow(row) || isRandomRow(row)) {\r\n            const tmp = (await getProcessedValue(row.options, dailyArgs)) ?? []\r\n            if (type !== 'combo' && !tmp.length) continue\r\n\r\n            const labelize =\r\n                (typeof row.labelizer === 'function' && row.labelizer(dailyArgs)) || ((value: string) => capitalize(value))\r\n            rowTemplate.options = tmp.map(value => (typeof value === 'string' ? { value, label: labelize(value) } : value))\r\n\r\n            if (isComboRow(row)) {\r\n                rowTemplate.selected = rowTemplate.value\r\n                rowTemplate.data.input = (savedRow as DailySavedCombo | undefined)?.input ?? true\r\n\r\n                if (!rowTemplate.data.input && tmp.includes(rowTemplate.selected)) {\r\n                    rowTemplate.value = labelize(rowTemplate.selected)\r\n                }\r\n            }\r\n        } else if (isDropRow(row)) {\r\n            rowTemplate.data.uuid = (savedRow as DailySavedDrop | undefined)?.uuid ?? ''\r\n        } else if (isAlerRow(row)) {\r\n            rowTemplate.value = typeof row.message === 'function' ? await row.message(dailyArgs) : row.message\r\n        }\r\n\r\n        template.rows.push(rowTemplate)\r\n    }\r\n\r\n    return template\r\n}\r\n\r\nasync function getProcessedValue<T extends any, R = T extends (...args: any[]) => infer R ? R : T>(obj: T, args: DailyValueArgs) {\r\n    if (typeof obj === 'function') return (await obj(args)) as Promise<R>\r\n    return obj as R\r\n}\r\n\r\nfunction isComboRow(row: DailyRow): row is DailyRowCombo {\r\n    return row.type === 'combo'\r\n}\r\n\r\nfunction isSelectRow(row: DailyRow): row is DailyRowSelect {\r\n    return row.type === 'select'\r\n}\r\n\r\nfunction isRandomRow(row: DailyRow): row is DailyRowRandom {\r\n    return row.type === 'random'\r\n}\r\n\r\nfunction isDropRow(row: DailyRow): row is DailyRowDrop {\r\n    return row.type === 'drop'\r\n}\r\n\r\nfunction isAlerRow(row: DailyRow): row is DailyRowAlert {\r\n    return row.type === 'alert'\r\n}\r\n","export const SKILL_DICTIONARY = {\r\n    acr: 'acrobatics',\r\n    arc: 'arcana',\r\n    ath: 'athletics',\r\n    cra: 'crafting',\r\n    dec: 'deception',\r\n    dip: 'diplomacy',\r\n    itm: 'intimidation',\r\n    med: 'medicine',\r\n    nat: 'nature',\r\n    occ: 'occultism',\r\n    prf: 'performance',\r\n    rel: 'religion',\r\n    soc: 'society',\r\n    ste: 'stealth',\r\n    sur: 'survival',\r\n    thi: 'thievery',\r\n} as const\r\n\r\nexport const SKILL_ABBREVIATIONS = Object.keys(SKILL_DICTIONARY) as (keyof typeof SKILL_DICTIONARY)[]\r\n\r\nexport const SKILL_LONG_FORMS = Object.values(SKILL_DICTIONARY)\r\n\r\nexport function getTranslatedSkills() {\r\n    const skillList = (CONFIG as unknown as ConfigPF2e).PF2E.skillList\r\n    return Object.entries(skillList).reduce((result: Record<string, string>, [key, value]) => {\r\n        return {\r\n            ...result,\r\n            [key]: game.i18n.localize(value).toLocaleLowerCase(game.i18n.lang),\r\n        }\r\n    }, {})\r\n}\r\n","const wordCharacter = String.raw`[\\p{Alphabetic}\\p{Mark}\\p{Decimal_Number}\\p{Join_Control}]`\r\nconst nonWordCharacter = String.raw`[^\\p{Alphabetic}\\p{Mark}\\p{Decimal_Number}\\p{Join_Control}]`\r\nconst nonWordCharacterRE = new RegExp(nonWordCharacter, 'gu')\r\n\r\nconst wordBoundary = String.raw`(?:${wordCharacter})(?=${nonWordCharacter})|(?:${nonWordCharacter})(?=${wordCharacter})`\r\nconst nonWordBoundary = String.raw`(?:${wordCharacter})(?=${wordCharacter})`\r\nconst lowerCaseLetter = String.raw`\\p{Lowercase_Letter}`\r\nconst upperCaseLetter = String.raw`\\p{Uppercase_Letter}`\r\nconst lowerCaseThenUpperCaseRE = new RegExp(`(${lowerCaseLetter})(${upperCaseLetter}${nonWordBoundary})`, 'gu')\r\n\r\nconst nonWordCharacterHyphenOrSpaceRE = /[^-\\p{White_Space}\\p{Alphabetic}\\p{Mark}\\p{Decimal_Number}\\p{Join_Control}]/gu\r\nconst upperOrWordBoundariedLowerRE = new RegExp(`${upperCaseLetter}|(?:${wordBoundary})${lowerCaseLetter}`, 'gu')\r\n\r\n/**\r\n * The system's sluggification algorithm for labels and other terms.\r\n * @param text The text to sluggify\r\n * @param [options.camel=null] The sluggification style to use\r\n */\r\nexport function sluggify(text: string, { camel = null }: { camel?: 'dromedary' | 'bactrian' | null } = {}): string {\r\n    // Sanity check\r\n    if (typeof text !== 'string') {\r\n        console.warn('Non-string argument passed to `sluggify`')\r\n        return ''\r\n    }\r\n\r\n    switch (camel) {\r\n        case null:\r\n            return text\r\n                .replace(lowerCaseThenUpperCaseRE, '$1-$2')\r\n                .toLowerCase()\r\n                .replace(/['’]/g, '')\r\n                .replace(nonWordCharacterRE, ' ')\r\n                .trim()\r\n                .replace(/[-\\s]+/g, '-')\r\n        case 'bactrian': {\r\n            const dromedary = sluggify(text, { camel: 'dromedary' })\r\n            return dromedary.charAt(0).toUpperCase() + dromedary.slice(1)\r\n        }\r\n        case 'dromedary':\r\n            return text\r\n                .replace(nonWordCharacterHyphenOrSpaceRE, '')\r\n                .replace(/[-_]+/g, ' ')\r\n                .replace(upperOrWordBoundariedLowerRE, (part, index) => (index === 0 ? part.toLowerCase() : part.toUpperCase()))\r\n                .replace(/\\s+/g, '')\r\n        default:\r\n            throw ErrorPF2e(\"I don't think that's a real camel.\")\r\n    }\r\n}\r\n\r\nexport function ErrorPF2e(message: string): Error {\r\n    return Error(`PF2e System | ${message}`)\r\n}\r\n\r\n/** Check if an element is present in the provided set. Especially useful for checking against literal sets */\r\nexport function setHasElement<T extends Set<unknown>>(set: T, value: unknown): value is SetElement<T> {\r\n    return set.has(value)\r\n}\r\n","export function sequenceArray<N extends number = number>(start: number, end: number) {\r\n    const levels: number[] = []\r\n\r\n    if (start <= end) {\r\n        for (let i = start; i <= end; i++) levels.push(i)\r\n    } else {\r\n        for (let i = start; i >= end; i--) levels.push(i)\r\n    }\r\n\r\n    return levels as N[]\r\n}\r\n","import { DailiesInterface } from '@apps/interface'\r\nimport { sequenceArray } from '@utils/utils'\r\n\r\nexport function getSimplifiableValue(actor: CharacterPF2e, value: number | 'half' | 'level' | undefined, fallback: number): number\r\nexport function getSimplifiableValue(\r\n    actor: CharacterPF2e,\r\n    value: number | 'half' | 'level' | undefined,\r\n    fallback?: number\r\n): number | undefined\r\nexport function getSimplifiableValue(\r\n    actor: CharacterPF2e,\r\n    value: number | 'half' | 'level' | undefined,\r\n    fallback?: number\r\n): number | undefined {\r\n    if (value === undefined) return fallback\r\n    if (typeof value === 'number') return value\r\n    if (value === 'level') return actor.level\r\n    if (value === 'half') return Math.max(1, Math.floor(actor.level / 2))\r\n    const numbered = Number(value)\r\n    return isNaN(numbered) ? fallback : numbered\r\n}\r\n\r\nexport async function parseFilter(this: DailiesInterface, filter: DailyDropResultFilter) {\r\n    return {\r\n        type: filter.type,\r\n        search: await (filter.type === 'feat'\r\n            ? parseFeatFilter(this.actor, filter.search)\r\n            : parseSpellFilter(this.actor, filter.search)),\r\n        drop: filter.drop,\r\n    } as DailyDropParsedFilter\r\n}\r\n\r\nfunction checkFilter(selected: (string | number)[] | undefined, checkbox: CheckboxData) {\r\n    if (!selected?.length) return\r\n\r\n    checkbox.selected = selected\r\n    checkbox.isExpanded = true\r\n    selected.forEach(x => (checkbox.options[x]!.selected = true))\r\n}\r\n\r\nfunction setTraits(searchTraits: BaseDailyFilter['traits'], dataTraits: MultiselectData) {\r\n    const traits = getFilterTraits(searchTraits)\r\n    if (traits?.selected.length) {\r\n        dataTraits.conjunction = traits.conjunction\r\n        dataTraits.selected = traits.selected\r\n    }\r\n}\r\n\r\nexport function getFilterTraits<V extends string>(traits: BaseDailyFilter<V>['traits']) {\r\n    if (!traits) return\r\n\r\n    const selected = Array.isArray(traits) ? traits : traits.selected\r\n    if (!selected?.length) return\r\n\r\n    return {\r\n        selected: selected.map(x => (typeof x === 'string' ? { value: x } : x)),\r\n        conjunction: (!Array.isArray(traits) && traits.conjunction) || 'and',\r\n    }\r\n}\r\n\r\nasync function parseSpellFilter(actor: CharacterPF2e, search: DailySpellFilter) {\r\n    const data = await game.pf2e.compendiumBrowser.tabs.spell.getFilterData()\r\n\r\n    checkFilter(search.category, data.checkboxes.category)\r\n    checkFilter(search.school, data.checkboxes.school)\r\n    checkFilter(search.traditions, data.checkboxes.traditions)\r\n    checkFilter(search.rarity, data.checkboxes.rarity)\r\n    checkFilter(search.source, data.checkboxes.source)\r\n\r\n    setTraits(search.traits, data.multiselects.traits)\r\n\r\n    const level = getSpellFilterLevel(actor, search.level)\r\n    if (level?.length) checkFilter(level, data.checkboxes.level)\r\n\r\n    return data\r\n}\r\n\r\nasync function parseFeatFilter(actor: CharacterPF2e, search: DailyFeatFilter) {\r\n    const data = await game.pf2e.compendiumBrowser.tabs.feat.getFilterData()\r\n\r\n    checkFilter(search.category, data.checkboxes.category)\r\n    checkFilter(search.skills, data.checkboxes.skills)\r\n    checkFilter(search.rarity, data.checkboxes.rarity)\r\n    checkFilter(search.source, data.checkboxes.source)\r\n\r\n    setTraits(search.traits, data.multiselects.traits)\r\n\r\n    const level = getFeatFilterLevel(actor, search.level)\r\n    if (level) {\r\n        data.sliders.level.values.min = level.min\r\n        data.sliders.level.values.max = level.max\r\n        data.sliders.level.isExpanded = true\r\n    }\r\n\r\n    return data\r\n}\r\n\r\nexport function getSpellFilterLevel(actor: CharacterPF2e, level: DailySpellFilter['level']) {\r\n    if (Array.isArray(level)) return level\r\n\r\n    const simplified = getSimplifiableValue(actor, level)\r\n    if (simplified) return sequenceArray(1, simplified)\r\n}\r\n\r\nexport function getFeatFilterLevel(actor: CharacterPF2e, level: DailyFeatFilter['level']) {\r\n    if (level === undefined) return\r\n\r\n    if (typeof level === 'object') {\r\n        return {\r\n            min: getSimplifiableValue(actor, level.min, 0),\r\n            max: getSimplifiableValue(actor, level.min, 20),\r\n        }\r\n    } else {\r\n        return { min: 0, max: getSimplifiableValue(actor, level, 20) }\r\n    }\r\n}\r\n","import { DailiesInterface } from '@apps/interface'\r\nimport { subLocalize } from '@utils/foundry/localize'\r\nimport { getTranslatedSkills } from '@utils/pf2e/skills'\r\nimport { sluggify } from '@utils/pf2e/utils'\r\nimport { getFeatFilterLevel, getFilterTraits, getSpellFilterLevel } from './shared'\r\n\r\nconst localize = subLocalize('interface.error.drop')\r\n\r\nexport async function onDropFeat(\r\n    this: DailiesInterface,\r\n    item: ItemPF2e,\r\n    target: HTMLInputElement,\r\n    filter: DailyDropFeatResultFilter\r\n) {\r\n    if (!item.isOfType('feat')) return localize('notFeat')\r\n\r\n    const { search, drop } = filter\r\n\r\n    if (search.category?.length && !search.category.includes(item.category)) {\r\n        return localize.warn('wrongType', { types: localizeAll('featCategories', search.category) })\r\n    }\r\n\r\n    if (search.traits) {\r\n        const traits = getFilterTraits(search.traits)\r\n\r\n        if (traits?.selected.length) {\r\n            const testFn = traits.conjunction === 'or' ? 'some' : 'every'\r\n            const test = traits.selected[testFn](trait => Number(trait.not ?? false) - Number(item.traits.has(trait.value)))\r\n            if (!test) return localize.warn('wrongTraits')\r\n        }\r\n    }\r\n\r\n    if (search.skills?.length) {\r\n        const translatedSkills = getTranslatedSkills()\r\n        const prerequisites = item.system.prerequisites.value.map(prerequisite => prerequisite.value.toLocaleLowerCase())\r\n        const test = search.skills.some(skill =>\r\n            prerequisites.some(prerequisite => prerequisite.includes(skill) || prerequisite.includes(translatedSkills[skill]!))\r\n        )\r\n        if (!test) return localize.warn('wrongSkill', { skills: localizeAll('skillList', search.skills) })\r\n    }\r\n\r\n    if (search.rarity?.length && !search.rarity.includes(item.system.traits.rarity)) {\r\n        return localize.warn('wrongRarity', { rarities: localizeAll('rarityTraits', search.rarity) })\r\n    }\r\n\r\n    if (search.source?.length && !search.source.includes(sluggify(item.system.source.value))) {\r\n        return localize.warn('wrongSource', { sources: search.source.join(', ') })\r\n    }\r\n\r\n    const level = getFeatFilterLevel(this.actor, search.level)\r\n    if (level) {\r\n        const itemLevel = item.level\r\n        if (itemLevel < level.min) return localize.warn('wrongLevelLow', { level: `min: ${level.min}` })\r\n        else if (itemLevel > level.max) return localize.warn('wrongLevelHigh', { level: `max: ${level.max}` })\r\n    }\r\n\r\n    if (drop) {\r\n        const args = this.dailyArgs[target.dataset.daily!]\r\n        if (args) {\r\n            const result = await drop(item, args)\r\n            if (typeof result === 'object') {\r\n                if (result.data) return game.i18n.format(result.error, result.data)\r\n                else return game.i18n.localize(result.error)\r\n            } else if (result === false) {\r\n                return localize.warn('wrongCustom')\r\n            }\r\n        }\r\n    }\r\n\r\n    onDropItem(item, target)\r\n}\r\n\r\nexport async function onDropSpell(\r\n    this: DailiesInterface,\r\n    item: ItemPF2e,\r\n    target: HTMLInputElement,\r\n    filter: DailyDropSpellResultFilter\r\n) {\r\n    if (!item.isOfType('spell')) return localize('notSpell')\r\n\r\n    const { search, drop } = filter\r\n\r\n    if (search.category?.length) {\r\n        const categories = search.category\r\n            .map(x => game.i18n.localize(x === 'cantrip' ? 'PF2E.SpellCantripLabel' : CONFIG.PF2E.spellCategories[x]))\r\n            .join(', ')\r\n\r\n        if (\r\n            (item.isCantrip && !search.category.includes('cantrip')) ||\r\n            (item.isFocusSpell && !search.category.includes('focus')) ||\r\n            (item.isRitual && !search.category.includes('ritual')) ||\r\n            (!item.isCantrip && !item.isFocusSpell && !item.isRitual && !search.category.includes('spell'))\r\n        ) {\r\n            return localize.warn('wrongCategory', { categories })\r\n        }\r\n    }\r\n\r\n    if (search.traits) {\r\n        const traits = getFilterTraits(search.traits)\r\n\r\n        if (traits?.selected.length) {\r\n            const testFn = traits.conjunction === 'or' ? 'some' : 'every'\r\n            const test = traits.selected[testFn](trait => Number(trait.not ?? false) - Number(item.traits.has(trait.value)))\r\n            if (!test) return localize.warn('wrongTraits')\r\n        }\r\n    }\r\n\r\n    if (search.traditions?.length) {\r\n        if (!search.traditions.some(tradition => item.traditions.has(tradition))) {\r\n            return localize.warn('wrongTradition', { traditions: localizeAll('magicTraditions', search.traditions) })\r\n        }\r\n    }\r\n\r\n    const level = getSpellFilterLevel(this.actor, search.level)\r\n    if (level?.length && !level.includes(item.level)) {\r\n        return localize.warn('wrongLevel', { levels: level.join(', ') })\r\n    }\r\n\r\n    if (search.school?.length && !search.school.includes(item.school)) {\r\n        return localize.warn('wrongSchool', { schools: localizeAll('magicSchools', search.school) })\r\n    }\r\n\r\n    if (search.rarity?.length && !search.rarity.includes(item.system.traits.rarity)) {\r\n        return localize.warn('wrongRarity', { rarities: localizeAll('rarityTraits', search.rarity) })\r\n    }\r\n\r\n    if (search.source?.length && !search.source.includes(sluggify(item.system.source.value))) {\r\n        return localize.warn('wrongSource', { sources: search.source.join(', ') })\r\n    }\r\n\r\n    if (drop) {\r\n        const args = this.dailyArgs[target.dataset.daily!]\r\n        if (args) {\r\n            const result = await drop(item, args)\r\n            if (typeof result === 'object') {\r\n                if (result.data) return ui.notifications.warn(game.i18n.format(result.error, result.data))\r\n                else return ui.notifications.warn(game.i18n.localize(result.error))\r\n            } else if (result === false) {\r\n                return localize.warn('wrongCustom')\r\n            }\r\n        }\r\n    }\r\n\r\n    onDropItem(item, target)\r\n}\r\n\r\nfunction localizeAll<C extends keyof typeof CONFIG.PF2E, K extends keyof typeof CONFIG.PF2E[C]>(config: C, list: K[]): string {\r\n    const localized = list.map(key => game.i18n.localize(CONFIG.PF2E[config][key] as unknown as string))\r\n    return localized.join(', ')\r\n}\r\n\r\nexport function onDropItem(item: ItemPF2e, target: HTMLInputElement) {\r\n    target.value = item.name\r\n    target.dataset.uuid = item.uuid\r\n    target.nextElementSibling!.nextElementSibling!.classList.remove('disabled')\r\n}\r\n","export function chatUUID(uuid: string, name?: string) {\r\n    if (name) return `@UUID[${uuid}]{${name}}`\r\n    return `@UUID[${uuid}]`\r\n}\r\n\r\nexport function fakeChatUUID(name: string) {\r\n    return `<span style=\"background: #DDD;\r\n    padding: 1px 4px;\r\n    border: 1px solid var(--color-border-dark-tertiary);\r\n    border-radius: 2px;\r\n    white-space: nowrap;\r\n    word-break: break-all;\">${name}</span>`\r\n}\r\n\r\nexport function documentUuidFromTableResult(result: TableResult) {\r\n    if (result.type === CONST.TABLE_RESULT_TYPES.DOCUMENT) return `${result.documentCollection}.${result.documentId}`\r\n    if (result.type === CONST.TABLE_RESULT_TYPES.COMPENDIUM) return `Compendium.${result.documentCollection}.${result.documentId}`\r\n    return undefined\r\n}\r\n","import { DailiesInterface } from '@apps/interface'\r\nimport { familiarUUID, getFamiliarPack } from '@data/familiar'\r\nimport { getRations } from '@data/rations'\r\nimport { MODULE_ID } from '@src/main'\r\nimport { getFlag } from '@utils/foundry/flags'\r\nimport { hasLocalization, localize, subLocalize } from '@utils/foundry/localize'\r\nimport { error } from '@utils/foundry/notification'\r\nimport { chatUUID, fakeChatUUID } from '@utils/foundry/uuid'\r\nimport { sluggify } from '@utils/pf2e/utils'\r\n\r\nexport async function processData(this: DailiesInterface) {\r\n    const actor = this.actor\r\n    const dailies = this.dailies\r\n    const fields = getFields.call(this)\r\n    const addItems: DeepPartial<BaseItemSourcePF2e>[] = []\r\n    const addRules: Map<string, DailyRuleSource[]> = new Map()\r\n    const updateItems: EmbeddedDocumentUpdateData<ItemPF2e>[] = []\r\n    const flags: Record<string, DailySaved> = {}\r\n    const msg = subLocalize('message')\r\n\r\n    let addedSpells: boolean = false\r\n    let message = ''\r\n\r\n    const getRules = (item: ItemPF2e) => {\r\n        const id = item.id\r\n        const existing = addRules.get(id)\r\n        if (existing) return existing\r\n\r\n        const rules = deepClone(item._source.system.rules)\r\n\r\n        for (let i = rules.length - 1; i >= 0; i--) {\r\n            if (MODULE_ID in rules[i]!) rules.splice(i, 1)\r\n        }\r\n\r\n        addRules.set(id, rules)\r\n        return rules\r\n    }\r\n\r\n    const messages: DailyMessageGroups = {\r\n        languages: { order: 80, messages: [] },\r\n        skills: { order: 70, messages: [] },\r\n        resistances: { order: 60, messages: [] },\r\n        feats: { order: 50, messages: [] },\r\n        spells: { order: 40, messages: [] },\r\n        scrolls: { order: 30, messages: [] },\r\n    }\r\n\r\n    const messageObj = {\r\n        add: (group: string, options: DailyMessage) => {\r\n            messages[group] ??= { order: 0, messages: [] }\r\n            messages[group]!.messages.push(options)\r\n        },\r\n        addGroup: (group: string, order = 1, label?: string) => {\r\n            messages[group] ??= { label, order, messages: [] }\r\n        },\r\n    }\r\n\r\n    if (actor.familiar && fields['dailies.familiar']) {\r\n        const familiar = actor.familiar\r\n        const pack = getFamiliarPack()\r\n        const abilities: EffectSource[] = []\r\n\r\n        // we remove old abilities\r\n        const ids = familiar.itemTypes.effect.map(effect => effect.id)\r\n        if (ids.length) familiar.deleteEmbeddedDocuments('Item', ids)\r\n\r\n        messageObj.addGroup('familiar', 20)\r\n\r\n        for (const field of Object.values(fields['dailies.familiar'])) {\r\n            const value = field.value as ItemUUID\r\n            const isCustom = value.includes('.')\r\n            const item = await (isCustom ? fromUuid<ItemPF2e>(value) : pack.getDocument(value))\r\n            if (!item || !item.isOfType('effect')) continue\r\n\r\n            const source = item.toObject()\r\n            if (source) {\r\n                abilities.push(source)\r\n                messageObj.add('familiar', { uuid: isCustom ? (value as ItemUUID) : familiarUUID(value) })\r\n            }\r\n        }\r\n\r\n        if (abilities.length) familiar.createEmbeddedDocuments('Item', abilities)\r\n    }\r\n\r\n    if (fields['dailies.rations']?.rations!.value === 'true') {\r\n        const rations = getRations(actor)\r\n\r\n        if (rations?.uses.value) {\r\n            const quantity = rations.quantity\r\n            const { value, max } = rations.uses\r\n\r\n            if (value <= 1) {\r\n                if (quantity <= 1) {\r\n                    rations.delete()\r\n                } else {\r\n                    updateItems.push({\r\n                        _id: rations.id,\r\n                        'system.quantity': Math.max(rations.quantity - 1, 0),\r\n                        'system.charges.value': max,\r\n                    })\r\n                }\r\n            } else {\r\n                updateItems.push({\r\n                    _id: rations.id,\r\n                    'system.charges.value': Math.max(value - 1, 0),\r\n                })\r\n            }\r\n\r\n            const remaining = (quantity - 1) * max + value\r\n            const name = remaining <= 1 ? fakeChatUUID(rations.name) : chatUUID(rations.uuid)\r\n\r\n            if (remaining <= 1) message += msg('rations.last', { name })\r\n            else if (remaining <= 3) message += msg('rations.almost', { name, nb: remaining - 1 })\r\n            else message += msg('rations.used', { name, nb: remaining - 1 })\r\n        }\r\n    }\r\n\r\n    for (const { item, key, process } of dailies) {\r\n        if (!fields[key]) continue\r\n\r\n        const dailyArgs = this.dailyArgs[key]!\r\n\r\n        try {\r\n            await process({\r\n                ...dailyArgs,\r\n                fields: fields[key]!,\r\n                messages: messageObj,\r\n                addItem: source => addItems.push(source),\r\n                updateItem: data => updateItems.push(data),\r\n                addRule: (source, parent) => getRules(parent ?? item).push(source),\r\n                addFeat: (source, parent) => {\r\n                    if (item.isOfType('feat')) {\r\n                        const parentId = (parent ?? item).id\r\n                        setProperty(source, 'flags.pf2e.grantedBy', { id: parentId, onDelete: 'cascade' })\r\n                        setProperty(source, `flags.${MODULE_ID}.grantedBy`, parentId)\r\n                    }\r\n                    addItems.push(source)\r\n                },\r\n                addSpell: (source, level) => {\r\n                    setProperty(source, `flags.${MODULE_ID}.entry`, { level: level })\r\n                    addItems.push(source)\r\n                    addedSpells = true\r\n                },\r\n            })\r\n        } catch (err) {\r\n            error('error.unexpected')\r\n            console.error(err)\r\n            console.error(`The error occured during processing of ${key}`)\r\n        }\r\n    }\r\n\r\n    for (const [key, rowFields] of Object.entries(fields)) {\r\n        const rows = this.rows[key]\r\n        if (!rows) continue\r\n\r\n        for (const { row, type, input, value, uuid } of Object.values(rowFields)) {\r\n            if (type === 'random' || rows[row]?.save === false) continue\r\n\r\n            const flag = (flags[key] ??= {})\r\n\r\n            if (type === 'combo') {\r\n                flag[row] = { input: input === 'true', selected: value }\r\n            } else if (type === 'drop') {\r\n                flag[row] = { uuid: uuid as ItemUUID, name: value }\r\n            } else {\r\n                flag[row] = value\r\n            }\r\n        }\r\n    }\r\n\r\n    for (const [id, rules] of addRules) {\r\n        rules.forEach(x => (x[MODULE_ID] = true))\r\n        updateItems.push({ _id: id, 'system.rules': rules })\r\n    }\r\n\r\n    if (addedSpells) {\r\n        const entry: DeepPartial<SpellcastingEntrySource> = {\r\n            type: 'spellcastingEntry',\r\n            name: localize('spellEntry.name'),\r\n            system: {\r\n                prepared: { value: 'innate' },\r\n                showSlotlessLevels: { value: false },\r\n                showUnpreparedSpells: { value: false },\r\n                proficiency: { value: 1, slug: actor.classDC?.slug || actor.class?.slug || undefined },\r\n            },\r\n        }\r\n        addItems.push(entry)\r\n    }\r\n\r\n    for (const source of addItems) {\r\n        const alreadyTemp = getProperty(source, 'system.temporary') === true\r\n        if (!alreadyTemp) setProperty(source, `flags.${MODULE_ID}.temporary`, true)\r\n    }\r\n\r\n    if (addItems.length) {\r\n        const items = (await actor.createEmbeddedDocuments('Item', addItems)) as ItemPF2e[]\r\n\r\n        for (const item of items) {\r\n            if (item.isOfType('feat')) {\r\n                // we add itemGrants flag to the parent feat to have the cascade effect in the tab\r\n                const parentId = getFlag<string>(item, 'grantedBy')\r\n                if (parentId) {\r\n                    const slug = sluggify(item.name, { camel: 'dromedary' })\r\n                    const path = `flags.pf2e.itemGrants.${slug}`\r\n                    updateItems.push({ _id: parentId, [path]: { id: item.id, onDelete: 'detach' } })\r\n                }\r\n            } else if (item.isOfType('spellcastingEntry')) {\r\n                // we add all the newly created spells with 'addSpell' to this spellcasting entry\r\n                const spells = items.filter(item => item.isOfType('spell') && getFlag(item, 'entry'))\r\n                for (const spell of spells) {\r\n                    const { level } = getFlag<{ level?: number }>(spell, 'entry')!\r\n                    const data: EmbeddedDocumentUpdateData<ItemPF2e> = { _id: spell.id, 'system.location.value': item.id }\r\n                    if (level !== undefined) data['system.location.heightenedLevel'] = level\r\n                    updateItems.push(data)\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    await actor.update({ [`flags.${MODULE_ID}`]: { ...expandObject(flags), rested: false } })\r\n\r\n    if (updateItems.length) await actor.updateEmbeddedDocuments('Item', updateItems)\r\n\r\n    message = parseMessages(messages, message)\r\n    message = message ? `${msg('changes')}<hr />${message}` : msg('noChanges')\r\n    ChatMessage.create({ content: message, speaker: ChatMessage.getSpeaker({ actor }) })\r\n}\r\n\r\nfunction parseMessages(messages: DailyMessageGroups, message: string) {\r\n    const msg = subLocalize('message')\r\n\r\n    const messageList = Object.entries(messages).map(([type, options]) => {\r\n        options.label ??= msg.has(type) ? msg(type) : msg('gained', { type })\r\n        return options\r\n    })\r\n    messageList.sort((a, b) => b.order - a.order)\r\n\r\n    for (const { label, messages } of messageList) {\r\n        if (!messages.length) continue\r\n\r\n        if (message) message += '<hr />'\r\n\r\n        if (label) message += `<p><strong>${label}</strong></p>`\r\n\r\n        for (let { uuid, selected, label, random } of messages) {\r\n            const key = `label.${label}`\r\n            label = label && hasLocalization(key) ? localize(key) : label || ''\r\n\r\n            message += '<p>'\r\n            message += uuid ? `${chatUUID(uuid, label)}` : `<strong>${label}</strong>`\r\n            if (selected) message += ` <span>${selected}</span>`\r\n            if (random) message += ' <i class=\"fa-solid fa-dice-d20\"></i>'\r\n            message += '</p>'\r\n        }\r\n    }\r\n\r\n    return message\r\n}\r\n\r\nfunction getFields(this: DailiesInterface) {\r\n    const elements = this.element\r\n        .find('.window-content .content')\r\n        .find<HTMLInputElement | HTMLSelectElement>('input:not(.alert), select[data-type]')\r\n        .toArray()\r\n\r\n    const fields: Record<string, DailyRowFields> = {}\r\n\r\n    for (const element of elements) {\r\n        const field = {\r\n            ...element.dataset,\r\n            value: element.value,\r\n        } as DailyRowField\r\n\r\n        if (field.type === 'combo' && field.input === 'false') {\r\n            const select = element.previousElementSibling as HTMLSelectElement\r\n            field.value = select.value\r\n        }\r\n\r\n        fields[field.daily] ??= {}\r\n        fields[field.daily]![field.row] = field\r\n    }\r\n\r\n    return fields\r\n}\r\n","import { getFamiliarPack } from '@data/familiar'\r\nimport { getRations } from '@data/rations'\r\nimport { getDailies } from '@src/dailies'\r\nimport { getFlag } from '@utils/foundry/flags'\r\nimport { subLocalize } from '@utils/foundry/localize'\r\nimport { templatePath } from '@utils/foundry/path'\r\nimport { getSetting } from '@utils/foundry/settings'\r\nimport { getTemplate } from './interface/data'\r\nimport { onDropFeat, onDropItem, onDropSpell } from './interface/drop'\r\nimport { processData } from './interface/process'\r\nimport { parseFilter } from './interface/shared'\r\n\r\nconst localize = subLocalize('interface')\r\n\r\nexport class DailiesInterface extends Application {\r\n    private _actor: CharacterPF2e\r\n    private _randomInterval?: NodeJS.Timer\r\n    private _dailies: ReturnedDaily[] = []\r\n    private _dailyArgs: Record<string, DailyValueArgs> = {}\r\n    private _saved: Record<string, DailySaved> = {}\r\n    private _children: Record<string, DailyValueArgs['children']> = {}\r\n    private _custom: Record<string, DailyCustom> = {}\r\n    private _predicate: Record<string, string[]> = {}\r\n    private _rows: Record<string, Record<string, DailyRow>> = {}\r\n\r\n    constructor(actor: CharacterPF2e, options?: Partial<ApplicationOptions>) {\r\n        super(options)\r\n        this._actor = actor\r\n    }\r\n\r\n    static get defaultOptions() {\r\n        return mergeObject(super.defaultOptions, {\r\n            id: 'pf2e-dailies-interface',\r\n            template: templatePath('interface.hbs'),\r\n            height: 'auto',\r\n            width: 400,\r\n            submitOnClose: false,\r\n            submitOnChange: false,\r\n            dragDrop: [\r\n                {\r\n                    dropSelector: '[data-droppable=\"true\"]',\r\n                },\r\n            ],\r\n        })\r\n    }\r\n\r\n    get actor() {\r\n        return this._actor\r\n    }\r\n\r\n    get dailies() {\r\n        return this._dailies\r\n    }\r\n\r\n    get dailyArgs() {\r\n        return this._dailyArgs\r\n    }\r\n\r\n    get saved() {\r\n        return this._saved\r\n    }\r\n\r\n    get children() {\r\n        return this._children\r\n    }\r\n\r\n    get custom() {\r\n        return this._custom\r\n    }\r\n\r\n    get predicate() {\r\n        return this._predicate\r\n    }\r\n\r\n    get rows() {\r\n        return this._rows\r\n    }\r\n\r\n    async getData(options?: Partial<FormApplicationOptions> | undefined) {\r\n        const templates: DailyTemplate[] = []\r\n        const actor = this._actor\r\n        this._dailies = getDailies(actor)\r\n\r\n        if (actor.familiar) {\r\n            const type = 'dailies.familiar'\r\n            const localize = subLocalize('label')\r\n            const nbAbilityies = actor.attributes.familiarAbilities.value\r\n            const pack = getFamiliarPack()\r\n            const flags = getFlag<Record<`${number}`, string>>(actor, type) ?? {}\r\n\r\n            const template: DailyTemplate = {\r\n                label: localize('familiar'),\r\n                rows: [],\r\n            }\r\n\r\n            const options: SelectOption[] = pack.index.map(({ _id, name }) => ({ value: _id, label: name }))\r\n\r\n            const customUUIDS = getSetting<string>('familiar').split(',') as ItemUUID[]\r\n            for (let uuid of customUUIDS) {\r\n                uuid = uuid.trim() as ItemUUID\r\n                const item = await fromUuid<ItemPF2e>(uuid)\r\n                if (item && item.isOfType('effect')) options.push({ value: uuid, label: item.name })\r\n            }\r\n\r\n            options.sort((a, b) => (a.label < b.label ? -1 : b.label < a.label ? 1 : 0))\r\n\r\n            for (let index = 0; index < nbAbilityies; index++) {\r\n                template.rows.push({\r\n                    label: localize('ability', { nb: index + 1 }),\r\n                    value: flags[`${index}`] ?? '',\r\n                    order: 100,\r\n                    options,\r\n                    data: {\r\n                        type: 'select',\r\n                        daily: type,\r\n                        row: index.toString(),\r\n                    },\r\n                })\r\n            }\r\n\r\n            if (template.rows.length) {\r\n                this._rows[type] = template.rows.reduce((rows, { data }) => {\r\n                    rows[data.row] = { save: true } as DailyRow\r\n                    return rows\r\n                }, {} as Record<string, DailyRow>)\r\n                templates.push(template)\r\n            }\r\n        }\r\n\r\n        const rations = getRations(actor)\r\n        if (rations?.uses.value) {\r\n            const type = 'dailies.rations'\r\n            const row = 'rations'\r\n            const { value, max } = rations.uses\r\n            const quantity = rations.quantity\r\n            const remaining = (quantity - 1) * max + value\r\n            const last = remaining <= 1\r\n\r\n            const options = [\r\n                {\r\n                    value: 'false',\r\n                    label: localize('rations.no'),\r\n                },\r\n                {\r\n                    value: 'true',\r\n                    label: last ? localize('rations.last') : localize('rations.yes', { nb: remaining }),\r\n                },\r\n            ]\r\n\r\n            templates.push({\r\n                label: rations.name,\r\n                rows: [\r\n                    {\r\n                        label: '',\r\n                        order: 200,\r\n                        value: 'false',\r\n                        options,\r\n                        data: {\r\n                            type: 'select',\r\n                            daily: type,\r\n                            row: row,\r\n                        },\r\n                    },\r\n                ],\r\n            })\r\n\r\n            this._rows[type] = { [row]: { save: false } as DailyRow }\r\n        }\r\n\r\n        for (const daily of this._dailies) {\r\n            try {\r\n                const template = await getTemplate.call(this, daily)\r\n                templates.push(template)\r\n            } catch (error) {\r\n                localize.error('error.unexpected')\r\n                console.error(error)\r\n                console.error(`The error occured during templating of ${daily.key}`)\r\n            }\r\n        }\r\n\r\n        const rows: DailyTemplate[] = []\r\n        const groups: DailyTemplate[] = []\r\n        for (const template of templates) {\r\n            if (template.rows.length > 1) groups.push(template)\r\n            else if (template.rows.length) rows.push(template)\r\n        }\r\n\r\n        rows.sort((a, b) => b.rows[0]!.order - a.rows[0]!.order)\r\n        groups.sort((a, b) => a.rows.length - b.rows.length)\r\n\r\n        return mergeObject(super.getData(options), {\r\n            i18n: localize,\r\n            dump: ({ value, placeholder, data }: DailyRowTemplate) => {\r\n                let msg = ''\r\n                if (value) msg += ` value=\"${value}\"`\r\n                if (placeholder) msg += ` placeholder=\"${placeholder}\"`\r\n                Object.entries(data).forEach(([key, value]) => (msg += ` data-${key}=\"${value}\"`))\r\n                if (msg) msg += ' '\r\n                return msg\r\n            },\r\n            rows,\r\n            groups,\r\n        })\r\n    }\r\n\r\n    render(force?: boolean | undefined, options?: RenderOptions | undefined) {\r\n        if (this._randomInterval) clearInterval(this._randomInterval)\r\n\r\n        if (this.element.find('select.random')) {\r\n            this._randomInterval = setInterval(() => {\r\n                const randoms = this.element.find<HTMLSelectElement>('select.random')\r\n                randoms.each((_, select) => {\r\n                    select.selectedIndex = (select.selectedIndex + 1) % select.options.length\r\n                })\r\n            }, 2000)\r\n        }\r\n\r\n        return super.render(force, options)\r\n    }\r\n\r\n    close(options?: ({ force?: boolean | undefined } & Record<string, unknown>) | undefined) {\r\n        if (this._randomInterval) clearInterval(this._randomInterval)\r\n        return super.close(options)\r\n    }\r\n\r\n    activateListeners(html: JQuery<HTMLElement>): void {\r\n        super.activateListeners(html)\r\n\r\n        html.find<HTMLAnchorElement>('[data-action=clear]').on('click', this.#onClear.bind(this))\r\n        html.find<HTMLButtonElement>('[data-action=accept]').on('click', this.#onAccept.bind(this))\r\n        html.find<HTMLButtonElement>('[data-action=cancel]').on('click', this.#onCancel.bind(this))\r\n\r\n        html.find<HTMLSelectElement>('.combo select').on('change', this.#onComboSelectChange.bind(this))\r\n        html.find<HTMLInputElement>('.combo input').on('change', this.#onComboInputChange.bind(this))\r\n\r\n        html.find<HTMLAnchorElement>('[data-action=search]').on('click', this.#onSearch.bind(this))\r\n\r\n        html.find<HTMLAnchorElement>('[data-action=alert]').on('click', this.#onAlert.bind(this))\r\n    }\r\n\r\n    protected async _onDrop(event: ElementDragEvent) {\r\n        const localize = subLocalize('interface.error.drop')\r\n        let target = event.target as HTMLInputElement | HTMLLabelElement\r\n        if (target instanceof HTMLLabelElement) target = target.nextElementSibling as HTMLInputElement\r\n\r\n        try {\r\n            const dataString = event.dataTransfer?.getData('text/plain')\r\n            const data = JSON.parse(dataString) as { type: string; uuid: ItemUUID }\r\n\r\n            if (!data || data.type !== 'Item' || typeof data.uuid !== 'string') return localize.warn('wrongDataType')\r\n\r\n            const item = await fromUuid<ItemPF2e>(data.uuid)\r\n            if (!item) return localize.warn('wrongDataType')\r\n\r\n            const filter = await this.#getfilterFromElement(target)\r\n            if (!filter) return onDropItem(item, target)\r\n\r\n            if (filter.type === 'feat') onDropFeat.call(this, item, target, filter)\r\n            else if (filter.type === 'spell') onDropSpell.call(this, item, target, filter)\r\n            else onDropItem(item, target)\r\n        } catch (error) {\r\n            localize.error('error.unexpected')\r\n            console.error(error)\r\n            console.error(`The error occured during _onDrop`)\r\n        }\r\n    }\r\n\r\n    async #onAlert(event: JQuery.ClickEvent<any, any, HTMLAnchorElement>) {\r\n        event.preventDefault()\r\n        this.#lock()\r\n\r\n        const data = event.currentTarget.dataset as { daily: string; row: string }\r\n        const row = this.rows[data.daily]![data.row]! as DailyRowAlert\r\n        const args = this.dailyArgs[data.daily]!\r\n\r\n        let fixed\r\n        try {\r\n            fixed = await row.fix(args)\r\n        } catch (error) {\r\n            localize.error('error.unexpected')\r\n            console.error(error)\r\n            console.error(`The error occured during an alert fix of '${data.daily}'`)\r\n        }\r\n\r\n        this.#unlock()\r\n        if (fixed) this.render()\r\n    }\r\n\r\n    async #onSearch(event: JQuery.ClickEvent<any, any, HTMLAnchorElement>) {\r\n        event.preventDefault()\r\n        const filter = await this.#getfilterFromElement(event.currentTarget, true)\r\n        if (filter) game.pf2e.compendiumBrowser.openTab(filter.type, filter.search)\r\n        else game.pf2e.compendiumBrowser.render(true)\r\n    }\r\n\r\n    async #getfilterFromElement(element: HTMLElement, parsed: true): Promise<DailyDropParsedFilter | void>\r\n    async #getfilterFromElement(element: HTMLElement, parsed?: false): Promise<DailyDropResultFilter | void>\r\n    async #getfilterFromElement(\r\n        element: HTMLElement,\r\n        parsed?: boolean\r\n    ): Promise<DailyDropResultFilter | DailyDropParsedFilter | void> {\r\n        const { daily, row } = element.dataset as { daily: string; row: string }\r\n        const filter = (this.rows[daily]?.[row] as DailyRowDrop | undefined)?.filter\r\n        const args = this.dailyArgs[daily]\r\n\r\n        if (!args || !filter) return\r\n\r\n        if (typeof filter.search === 'function') filter.search = await filter.search(args)\r\n\r\n        if (!parsed) return filter as DailyDropResultFilter\r\n\r\n        return parseFilter.call(this, filter)\r\n    }\r\n\r\n    #onComboSelectChange(event: JQuery.ChangeEvent) {\r\n        const select = event.currentTarget as HTMLSelectElement\r\n        const input = select.nextElementSibling as HTMLInputElement\r\n        input.dataset.input = 'false'\r\n        input.value = select.options[select.selectedIndex]!.text\r\n    }\r\n\r\n    #onComboInputChange(event: JQuery.ChangeEvent<any, any, HTMLInputElement>) {\r\n        const input = event.currentTarget\r\n        const select = input.previousElementSibling as HTMLSelectElement\r\n        const value = input.value.toLowerCase()\r\n        const options = Array.from(select.options).map(x => x.value)\r\n\r\n        const index = options.indexOf(value)\r\n        if (index !== -1) {\r\n            select.value = value\r\n            input.value = select.options[index]!.text\r\n            input.dataset.input = 'false'\r\n        } else {\r\n            select.value = ''\r\n            input.dataset.input = 'true'\r\n        }\r\n    }\r\n\r\n    #lock() {\r\n        this.element.addClass('disabled')\r\n    }\r\n\r\n    #unlock() {\r\n        this.element.removeClass('disabled')\r\n    }\r\n\r\n    #validate() {\r\n        const warns: string[] = []\r\n        const emptyInputs = this.element.find('input').filter((_, input) => !input.value)\r\n        const alertInputs = this.element.find('input.alert')\r\n\r\n        if (emptyInputs.length) warns.push('error.empty')\r\n        if (alertInputs.length) warns.push('error.unattended')\r\n\r\n        warns.forEach(x => localize.warn(x))\r\n\r\n        return !warns.length\r\n    }\r\n\r\n    async #onAccept(event: JQuery.ClickEvent) {\r\n        event.preventDefault()\r\n        if (!this.#validate()) return\r\n        this.#lock()\r\n        await processData.call(this)\r\n        this.close()\r\n    }\r\n\r\n    #onClear(event: JQuery.ClickEvent<any, any, HTMLAnchorElement>) {\r\n        event.preventDefault()\r\n        const target = $(event.currentTarget)\r\n        const input = target.prevAll('input').first()\r\n        input.val('')\r\n        input.attr('value', '')\r\n        input.attr('data-uuid', '')\r\n        target.addClass('disabled')\r\n    }\r\n\r\n    #onCancel(event: JQuery.ClickEvent) {\r\n        event.preventDefault()\r\n        this.close()\r\n    }\r\n}\r\n","const dcByLevel = new Map<number, number>()\r\ndcByLevel.set(-1, 13)\r\ndcByLevel.set(0, 14)\r\ndcByLevel.set(1, 15)\r\ndcByLevel.set(2, 16)\r\ndcByLevel.set(3, 18)\r\ndcByLevel.set(4, 19)\r\ndcByLevel.set(5, 20)\r\ndcByLevel.set(6, 22)\r\ndcByLevel.set(7, 23)\r\ndcByLevel.set(8, 24)\r\ndcByLevel.set(9, 26)\r\ndcByLevel.set(10, 27)\r\ndcByLevel.set(11, 28)\r\ndcByLevel.set(12, 30)\r\ndcByLevel.set(13, 31)\r\ndcByLevel.set(14, 32)\r\ndcByLevel.set(15, 34)\r\ndcByLevel.set(16, 35)\r\ndcByLevel.set(17, 36)\r\ndcByLevel.set(18, 38)\r\ndcByLevel.set(19, 39)\r\ndcByLevel.set(20, 40)\r\ndcByLevel.set(21, 42)\r\ndcByLevel.set(22, 44)\r\ndcByLevel.set(23, 46)\r\ndcByLevel.set(24, 48)\r\ndcByLevel.set(25, 50)\r\n\r\nconst dcAdjustments = new Map<DCAdjustment, number>()\r\ndcAdjustments.set('incredibly easy', -10)\r\ndcAdjustments.set('very easy', -5)\r\ndcAdjustments.set('easy', -2)\r\ndcAdjustments.set('normal', 0)\r\ndcAdjustments.set('hard', 2)\r\ndcAdjustments.set('very hard', 5)\r\ndcAdjustments.set('incredibly hard', 10)\r\n\r\n/**\r\n * Normal Level Based DCs\r\n * @param level\r\n * @param proficiencyWithoutLevel\r\n */\r\nexport function calculateDC(level: number, { proficiencyWithoutLevel = false, rarity = 'common' }: DCOptions = {}): number {\r\n    // assume level 0 if garbage comes in. We cast level to number because the backing data may actually have it\r\n    // stored as a string, which we can't catch at compile time\r\n    const dc = dcByLevel.get(level) ?? 14\r\n    if (proficiencyWithoutLevel) {\r\n        // -1 shouldn't be subtracted since it's just\r\n        // a creature level and not related to PC levels\r\n        return adjustDCByRarity(dc - Math.max(level, 0), rarity)\r\n    } else {\r\n        return adjustDCByRarity(dc, rarity)\r\n    }\r\n}\r\n\r\nexport function adjustDCByRarity(dc: number, rarity: Rarity = 'common') {\r\n    return adjustDC(dc, rarityToDCAdjustment(rarity))\r\n}\r\n\r\nexport function adjustDC(dc: number, adjustment: DCAdjustment = 'normal') {\r\n    return dc + (dcAdjustments.get(adjustment) ?? 0)\r\n}\r\n\r\nexport function rarityToDCAdjustment(rarity: Rarity = 'common'): PositiveDCAdjustment {\r\n    if (rarity === 'uncommon') {\r\n        return 'hard'\r\n    } else if (rarity === 'rare') {\r\n        return 'very hard'\r\n    } else if (rarity === 'unique') {\r\n        return 'incredibly hard'\r\n    } else {\r\n        return 'normal'\r\n    }\r\n}\r\n","import { chatUUID } from '@utils/foundry/uuid'\r\n\r\nexport const MAGIC_TRADITIONS = new Set(['arcane', 'divine', 'occult', 'primal'] as const)\r\n\r\nexport const SPELL_COMPONENTS = ['focus', 'material', 'somatic', 'verbal'] as const\r\n\r\nconst scrolls: (ConsumablePF2e | null)[] = []\r\nexport async function createSpellScroll(uuid: ItemUUID, level: OneToTen | false, temp = false) {\r\n    const spell = (await fromUuid<SpellPF2e>(uuid))?.toObject()\r\n    if (!spell) return null\r\n\r\n    if (level === false) level = spell.system.level.value\r\n\r\n    const scrollUUID = getScrollCompendiumUUID(level)\r\n    scrolls[level] ??= await fromUuid<ConsumablePF2e>(scrollUUID)\r\n\r\n    const scroll = scrolls[level]?.toObject()\r\n    if (!scroll) return null\r\n\r\n    spell.system.location.heightenedLevel = level\r\n\r\n    scroll.name = `Scroll of ${spell.name} (Level ${level})`\r\n    scroll.system.temporary = temp\r\n    scroll.system.spell = spell\r\n    scroll.system.traits.value.push(...spell.system.traditions.value)\r\n\r\n    const sourceId = spell.flags.core?.sourceId\r\n    if (sourceId) scroll.system.description.value = `${chatUUID(sourceId)}\\n<hr />${scroll.system.description.value}`\r\n\r\n    return scroll\r\n}\r\n\r\nfunction getScrollCompendiumUUID(level: OneToTen): ItemUUID {\r\n    return `Compendium.pf2e.equipment-srd.${scrollCompendiumIds[level]}`\r\n}\r\n\r\nconst scrollCompendiumIds: Record<number, string> = {\r\n    1: 'RjuupS9xyXDLgyIr', // Compendium.pf2e.equipment-srd.RjuupS9xyXDLgyIr\r\n    2: 'Y7UD64foDbDMV9sx',\r\n    3: 'ZmefGBXGJF3CFDbn',\r\n    4: 'QSQZJ5BC3DeHv153',\r\n    5: 'tjLvRWklAylFhBHQ',\r\n    6: '4sGIy77COooxhQuC',\r\n    7: 'fomEZZ4MxVVK3uVu',\r\n    8: 'iPki3yuoucnj7bIt',\r\n    9: 'cFHomF3tty8Wi1e5',\r\n    10: 'o1XIHJ4MJyroAHfF',\r\n}\r\n","import { adjustDCByRarity, calculateDC } from '@utils/pf2e/dc'\r\nimport { MAGIC_TRADITIONS } from '@utils/pf2e/spell'\r\nimport { setHasElement } from '@utils/pf2e/utils'\r\n\r\nexport function identifyItem(\r\n    item: PhysicalItemPF2e,\r\n    { proficiencyWithoutLevel = false, notMatchingTraditionModifier }: IdentifyItemOptions\r\n): GenericIdentifyDCs | IdentifyMagicDCs | IdentifyAlchemyDCs {\r\n    const baseDC = calculateDC(item.level, { proficiencyWithoutLevel })\r\n    const rarity = getDcRarity(item)\r\n    const dc = adjustDCByRarity(baseDC, rarity)\r\n    if (item.isMagical) {\r\n        return identifyMagic(item, dc, notMatchingTraditionModifier)\r\n    } else if (item.isAlchemical) {\r\n        return { cra: dc }\r\n    } else {\r\n        return { dc: dc }\r\n    }\r\n}\r\n\r\n/** All cursed items are incredibly hard to identify */\r\nfunction getDcRarity(item: PhysicalItemPF2e): Rarity {\r\n    return item.traits.has('cursed') ? 'unique' : item.rarity\r\n}\r\n\r\nfunction identifyMagic(item: PhysicalItemPF2e, baseDc: number, notMatchingTraditionModifier: number) {\r\n    const result = {\r\n        occult: baseDc,\r\n        primal: baseDc,\r\n        divine: baseDc,\r\n        arcane: baseDc,\r\n    }\r\n    const traditions = getMagicTraditions(item)\r\n    for (const key of MAGIC_TRADITIONS) {\r\n        // once an item has a magic tradition, all skills\r\n        // that don't match the tradition are hard\r\n        if (traditions.size > 0 && !traditions.has(key)) {\r\n            result[key] = baseDc + notMatchingTraditionModifier\r\n        }\r\n    }\r\n    return { arc: result.arcane, nat: result.primal, rel: result.divine, occ: result.occult }\r\n}\r\n\r\n/**\r\n * Extract all traits from an item, that match a magic tradition\r\n */\r\nfunction getMagicTraditions(item: PhysicalItemPF2e): Set<MagicTradition> {\r\n    const traits: string[] = item.system.traits.value\r\n    return new Set(traits.filter((t): t is MagicTradition => setHasElement(MAGIC_TRADITIONS, t)))\r\n}\r\n\r\nexport function getChoiSetRuleSelection<T extends unknown>(item: ItemPF2e, option: string) {\r\n    const rules = item._source.system.rules as ChoiceSetSource[]\r\n    const rule = rules.find(rule => rule.key === 'ChoiceSet' && rule.rollOption === option)\r\n    return rule?.selection as T | undefined\r\n}\r\n\r\nconst RUNE_PROPERTY_KEYS = ['propertyRune1', 'propertyRune2', 'propertyRune3', 'propertyRune4'] as const\r\n\r\nexport function getFreePropertyRuneSlot(item: WeaponPF2e | ArmorPF2e): null | typeof RUNE_PROPERTY_KEYS[number] {\r\n    const potency = item.system.potencyRune.value\r\n    if (potency === null) return null\r\n\r\n    for (let i = 0; i < potency; i++) {\r\n        const property = RUNE_PROPERTY_KEYS[i]\r\n        if (!item.system[property].value) return property\r\n    }\r\n\r\n    return null\r\n}\r\n\r\nconst PHYSICAL_ITEM_TYPES = new Set(['armor', 'backpack', 'book', 'consumable', 'equipment', 'treasure', 'weapon'] as const)\r\n\r\n/** Checks if the given item data is a physical item with a quantity and other physical fields. */\r\nexport function isPhysicalData(source: ItemSourcePF2e): source is PhysicalItemSource\r\nexport function isPhysicalData(source: PreCreate<ItemSourcePF2e>): source is PreCreate<PhysicalItemSource>\r\nexport function isPhysicalData(source: ItemSourcePF2e | PreCreate<ItemSourcePF2e>): boolean {\r\n    return setHasElement(PHYSICAL_ITEM_TYPES, source.type)\r\n}\r\n\r\nexport function hasInvestedProperty(source: ItemSourcePF2e): source is MagicItemSource {\r\n    return isPhysicalData(source) && 'invested' in source.system.equipped\r\n}\r\n","export const LANGUAGE_LIST = [\r\n    'common',\r\n    'draconic',\r\n    'dwarven',\r\n    'elven',\r\n    'gnomish',\r\n    'goblin',\r\n    'halfling',\r\n    'jotun',\r\n    'orcish',\r\n    'sylvan',\r\n    'undercommon',\r\n    'ysoki',\r\n    'abyssal',\r\n    'adlet',\r\n    'aklo',\r\n    'akitonian',\r\n    'alghollthu',\r\n    'amurrun',\r\n    'anadi',\r\n    'ancient-osiriani',\r\n    'anugobu',\r\n    'arcadian',\r\n    'aquan',\r\n    'arboreal',\r\n    'auran',\r\n    'boggard',\r\n    'calda',\r\n    'caligni',\r\n    'celestial',\r\n    'cyclops',\r\n    'daemonic',\r\n    'destrachan',\r\n    'drooni',\r\n    'dziriak',\r\n    'ekujae',\r\n    'erutaki',\r\n    'formian',\r\n    'garundi',\r\n    'girtablilu',\r\n    'gnoll',\r\n    'goloma',\r\n    'grippli',\r\n    'hallit',\r\n    'hwan',\r\n    'iblydan',\r\n    'ignan',\r\n    'ikeshti',\r\n    'immolis',\r\n    'infernal',\r\n    'iruxi',\r\n    'jistkan',\r\n    'jyoti',\r\n    'kaava',\r\n    'kashrishi',\r\n    'kibwani',\r\n    'kitsune',\r\n    'kelish',\r\n    'lirgeni',\r\n    'mahwek',\r\n    'minaten',\r\n    'minkaian',\r\n    'mwangi',\r\n    'mzunu',\r\n    'nagaji',\r\n    'necril',\r\n    'ocotan',\r\n    'okaiyan',\r\n    'osiriani',\r\n    'protean',\r\n    'rasu',\r\n    'ratajin',\r\n    'razatlani',\r\n    'requian',\r\n    'russian',\r\n    'senzar',\r\n    'shadowtongue',\r\n    'shobhad',\r\n    'shisk',\r\n    'shoanti',\r\n    'shoony',\r\n    'skald',\r\n    'sphinx',\r\n    'strix',\r\n    'taldane',\r\n    'tekritanin',\r\n    'tengu',\r\n    'terran',\r\n    'thassilonian',\r\n    'tien',\r\n    'utopian',\r\n    'vanara',\r\n    'varisian',\r\n    'varki',\r\n    'vishkanyan',\r\n    'vudrani',\r\n    'wyrwood',\r\n    'xanmba',\r\n    'androffan',\r\n    'azlanti',\r\n    'grioth',\r\n    'kovintal',\r\n    'migo',\r\n    'munavri',\r\n    'samsaran',\r\n    'sasquatch',\r\n    'shae',\r\n    'yithian',\r\n    'druidic',\r\n] as const\r\n","import { localize } from '@utils/foundry/localize'\r\nimport { getFlag } from '@utils/foundry/flags'\r\nimport { MODULE_ID } from './main'\r\nimport { openDailiesInterface } from './api'\r\n\r\nexport function renderChatMessage(message: ChatMessagePF2e, html: JQuery) {\r\n    const flag = getFlag<boolean>(message, 'isWatch')\r\n    if (!flag) return\r\n    html.find('.message-content button').on('click', () => openDailiesInterface())\r\n}\r\n\r\nexport function createWatchChatMessage() {\r\n    let content = `<div>${localize('message.dailiesRequest.content')}</div>`\r\n    content += `<button type=\"button\" style=\"margin-top: 8px;\">${localize('message.dailiesRequest.button')}</button>`\r\n    ChatMessage.create({ content, flags: { [MODULE_ID]: { isWatch: true } } })\r\n}\r\n","import { DailiesInterface } from '@apps/interface'\r\nimport { getFlag } from '@utils/foundry/flags'\r\nimport { localize } from '@utils/foundry/localize'\r\nimport { warn } from '@utils/foundry/notification'\r\nimport { getChoiSetRuleSelection, getFreePropertyRuneSlot } from '@utils/pf2e/item'\r\nimport { LANGUAGE_LIST } from '@utils/pf2e/languages'\r\nimport { SKILL_LONG_FORMS } from '@utils/pf2e/skills'\r\nimport { createSpellScroll } from '@utils/pf2e/spell'\r\nimport { capitalize } from '@utils/string'\r\nimport { sequenceArray } from '@utils/utils'\r\nimport { createWatchChatMessage } from './chat'\r\nimport { hasAnyDaily } from './dailies'\r\n\r\nconst halfLevelString = 'max(1,floor(@actor.level/2))'\r\n\r\ntype CreateSkillArgs = { skill: string; value: ZeroToFour | string; mode?: AELikeChangeMode; predicate?: RawPredicate }\r\ntype CreateLanguageArgs = { language: string; mode?: AELikeChangeMode; predicate?: RawPredicate }\r\ntype CreateLoreArgs = { name: string; rank: OneToFour }\r\ntype CreateResistanceArgs = { type: string; value: number | string | 'half'; predicate?: RawPredicate }\r\ntype CreateScrollArgs = { uuid: ItemUUID; level?: OneToTen }\r\n\r\nexport const utils = {\r\n    // Skills\r\n    get skillNames() {\r\n        return SKILL_LONG_FORMS.slice()\r\n    },\r\n    skillLabel: (skill: string) => {\r\n        return game.i18n.localize(CONFIG.PF2E.skillList[skill as SkillLongForm])\r\n    },\r\n    createSkillRuleElement: ({ skill, value, mode = 'upgrade', predicate }: CreateSkillArgs) => {\r\n        const rule: AELikeSource = {\r\n            key: 'ActiveEffectLike',\r\n            mode,\r\n            path: `system.skills.${skill}.rank`,\r\n            value,\r\n        }\r\n        if (predicate && predicate.length) rule.predicate = predicate\r\n        return rule\r\n    },\r\n    createLoreSource: ({ name, rank }: CreateLoreArgs) => {\r\n        const data: DeepPartial<LoreSource> = {\r\n            type: 'lore',\r\n            img: 'systems/pf2e/icons/default-icons/lore.svg',\r\n            name,\r\n            system: { proficient: { value: rank as OneToFour } },\r\n        }\r\n        return data\r\n    },\r\n    // Languages\r\n    get languageNames() {\r\n        return LANGUAGE_LIST.slice()\r\n    },\r\n    languageLabel: (language: string) => {\r\n        return game.i18n.localize(CONFIG.PF2E.languages[language as Language])\r\n    },\r\n    createLanguageRuleElement: ({ language, mode = 'add', predicate }: CreateLanguageArgs) => {\r\n        const rule: AELikeSource = {\r\n            key: 'ActiveEffectLike',\r\n            mode,\r\n            path: 'system.traits.languages.value',\r\n            value: language,\r\n        }\r\n        if (predicate && predicate.length) rule.predicate = predicate\r\n        return rule\r\n    },\r\n    // resistances\r\n    resistanceLabel: (resistance: string, value?: number) => {\r\n        let str = game.i18n.localize(`PF2E.Trait${capitalize(resistance)}`)\r\n        if (value) str += ` ${value}`\r\n        return str\r\n    },\r\n    createResistanceRuleElement: ({ type, value, predicate }: CreateResistanceArgs) => {\r\n        if (value === 'half') value = halfLevelString\r\n        const rule: IWRRuleElementSource = {\r\n            key: 'Resistance',\r\n            type,\r\n            value,\r\n        }\r\n        if (predicate && predicate.length) rule.predicate = predicate\r\n        return rule\r\n    },\r\n    // feats\r\n    createFeatSource: async (uuid: ItemUUID) => {\r\n        const source = (await fromUuid<FeatPF2e>(uuid))?.toObject()\r\n        if (!source) throw new Error(`An error occured while trying to create a feat source with uuid: ${uuid}`)\r\n        return source\r\n    },\r\n    // spells\r\n    createSpellScrollSource: async ({ uuid, level }: CreateScrollArgs) => {\r\n        const source = await createSpellScroll(uuid, level ?? false, true)\r\n        if (!source) throw new Error(`An error occured while trying to create a spell scroll source with uuid: ${uuid}`)\r\n        return source\r\n    },\r\n    createSpellSource: async (uuid: ItemUUID) => {\r\n        const source = (await fromUuid<SpellPF2e>(uuid))?.toObject()\r\n        if (!source) throw new Error(`An error occured while trying to create a spell source with uuid: ${uuid}`)\r\n        return source\r\n    },\r\n    // Rule Elements\r\n    get halfLevelString() {\r\n        return halfLevelString\r\n    },\r\n    getChoiSetRuleSelection,\r\n    //\r\n    proficiencyLabel: (rank: ZeroToFour) => {\r\n        return game.i18n.localize(CONFIG.PF2E.proficiencyLevels[rank])\r\n    },\r\n    randomOption: async <T extends string | { value: string }>(options: T[]) => {\r\n        const roll = (await new Roll(`1d${options.length}`).evaluate({ async: true })).total\r\n        const result = options[roll - 1]!\r\n        if (typeof result === 'string') return result\r\n        return result.value\r\n    },\r\n    halfLevelValue: (actor: CharacterPF2e) => Math.max(1, Math.floor(actor.level / 2)),\r\n    sequenceArray,\r\n    // equipment\r\n    damageLabel: (damage: string) => {\r\n        return game.i18n.localize(CONFIG.PF2E.weaponDamage[damage as WeaponDamageType])\r\n    },\r\n    weaponTraitLabel: (trait: string) => {\r\n        return game.i18n.localize(CONFIG.PF2E.weaponTraits[trait as WeaponTrait])\r\n    },\r\n    weaponPropertyRunesLabel: (rune: string) => {\r\n        return game.i18n.localize(CONFIG.PF2E.weaponPropertyRunes[rune as WeaponPropertyRuneType])\r\n    },\r\n    hasFreePropertySlot: (item: WeaponPF2e | ArmorPF2e) => {\r\n        const potency = item.system.runes.potency\r\n        return potency > 0 && item.system.runes.property.length < potency\r\n    },\r\n    getFreePropertyRuneSlot,\r\n}\r\n\r\nexport function openDailiesInterface(actor?: ActorPF2e | CharacterPF2e | null, force?: boolean) {\r\n    if (!actor || !actor.isOfType('character') || !actor.isOwner) {\r\n        const controlled = canvas.tokens.controlled\r\n        actor = controlled.find(token => token.actor?.isOfType('character') && token.actor.isOwner)?.actor as\r\n            | CharacterPF2e\r\n            | undefined\r\n        if (!actor) actor = game.user.character\r\n    }\r\n\r\n    if (!actor || !actor.isOfType('character') || !actor.isOwner) return warn('error.noCharacterSelected')\r\n\r\n    if (getFlag(actor, 'rested') !== true) return warn('error.unrested')\r\n    if (!force && !hasAnyDaily(actor)) return warn('error.noDailies')\r\n\r\n    new DailiesInterface(actor, { title: localize('interface.title', { name: actor.name }) }).render(true)\r\n}\r\n\r\nexport function requestDailies() {\r\n    if (!game.user.isGM) return warn('error.notGM')\r\n    createWatchChatMessage()\r\n}\r\n","import { DailyCustoms } from '@apps/customs'\r\nimport { getCurrentModule } from '@utils/foundry/module'\r\nimport { warn } from '@utils/foundry/notification'\r\nimport { getSetting, registerSetting, registerSettingMenu } from '@utils/foundry/settings'\r\nimport { registerWrapper } from '@utils/libwrapper'\r\nimport { setModuleID } from '@utils/module'\r\nimport { openDailiesInterface, requestDailies } from './api'\r\nimport { renderChatMessage } from './chat'\r\nimport { parseCustomDailies } from './dailies'\r\nimport { restForTheNight } from './rest'\r\nimport { renderCharacterSheetPF2e } from './sheet'\r\n\r\nexport const MODULE_ID = 'pf2e-dailies'\r\nsetModuleID(MODULE_ID)\r\n\r\nexport const EXT_VERSION = '1.3.0'\r\n\r\nHooks.on('pf2e.restForTheNight', restForTheNight)\r\n\r\nHooks.on('renderCharacterSheetPF2e', renderCharacterSheetPF2e)\r\n\r\nHooks.once('setup', () => {\r\n    registerSetting({\r\n        name: 'customDailies',\r\n        type: Array,\r\n        default: [],\r\n        onChange: parseCustomDailies,\r\n    })\r\n\r\n    registerSetting({\r\n        name: 'familiar',\r\n        type: String,\r\n        default: '',\r\n        config: true,\r\n    })\r\n\r\n    registerSetting({\r\n        name: 'watch',\r\n        type: Boolean,\r\n        default: false,\r\n        config: true,\r\n        onChange: enableWatchHook,\r\n    })\r\n\r\n    registerSettingMenu({\r\n        name: 'customs',\r\n        type: DailyCustoms,\r\n    })\r\n\r\n    getCurrentModule<PF2eDailiesAPI>().api = {\r\n        openDailiesInterface: actor => openDailiesInterface(actor),\r\n        requestDailies,\r\n    }\r\n\r\n    if (getSetting('watch')) enableWatchHook(true)\r\n})\r\n\r\nHooks.once('ready', async () => {\r\n    await parseCustomDailies()\r\n\r\n    if (!game.modules.get('lib-wrapper')?.active && game.user.isGM) {\r\n        warn('error.noLibwrapper', true)\r\n        return\r\n    }\r\n\r\n    registerWrapper(\r\n        'CONFIG.PF2E.Actor.documentClasses.character.prototype.performDailyCrafting',\r\n        onPerformDailyCrafting,\r\n        'OVERRIDE'\r\n    )\r\n})\r\n\r\nfunction enableWatchHook(enabled: boolean) {\r\n    Hooks[enabled ? 'on' : 'off']('renderChatMessage', renderChatMessage)\r\n}\r\n\r\nasync function onPerformDailyCrafting(this: CharacterPF2e) {\r\n    const entries = (await this.getCraftingEntries()).filter(e => e.isDailyPrep)\r\n    const alchemicalEntries = entries.filter(e => e.isAlchemical)\r\n    const reagentCost = alchemicalEntries.reduce((sum, entry) => sum + entry.reagentCost, 0)\r\n    const reagentValue = (this.system.resources.crafting.infusedReagents.value || 0) - reagentCost\r\n\r\n    if (reagentValue < 0) {\r\n        ui.notifications.warn(game.i18n.localize('PF2E.CraftingTab.Alerts.MissingReagents'))\r\n        return\r\n    } else {\r\n        await this.update({ 'system.resources.crafting.infusedReagents.value': reagentValue })\r\n    }\r\n\r\n    for (const entry of entries) {\r\n        for (const formula of entry.preparedCraftingFormulas) {\r\n            const itemSource: PhysicalItemSource = formula.item.toObject()\r\n            itemSource.system.quantity = formula.quantity\r\n            itemSource.system.temporary = true\r\n            itemSource.system.size = this.ancestry?.size === 'tiny' ? 'tiny' : 'med'\r\n\r\n            if (\r\n                entry.isAlchemical &&\r\n                (itemSource.type === 'consumable' || itemSource.type === 'weapon' || itemSource.type === 'equipment')\r\n            ) {\r\n                itemSource.system.traits.value.push('infused')\r\n            }\r\n            await this.addToInventory(itemSource)\r\n        }\r\n    }\r\n}\r\n","import { getFlag, getSourceId, setFlag } from '@utils/foundry/flags'\r\nimport { sluggify } from '@utils/pf2e/utils'\r\nimport { getDailyFromSourceId } from './dailies'\r\nimport { MODULE_ID } from './main'\r\n\r\nexport async function restForTheNight(actor: CharacterPF2e) {\r\n    const update: EmbeddedDocumentUpdateData<ItemPF2e>[] = []\r\n    const remove: string[] = []\r\n\r\n    for (const item of actor.items) {\r\n        if (getFlag(item, 'temporary')) {\r\n            remove.push(item.id)\r\n\r\n            // we remove the itemGrants flag from the parent feat\r\n            if (item.isOfType('feat')) {\r\n                const parentId = getFlag<string>(item, 'grantedBy')\r\n                if (parentId) {\r\n                    const slug = sluggify(item.name, { camel: 'dromedary' })\r\n                    const path = `flags.pf2e.itemGrants.-=${slug}`\r\n                    update.push({ _id: parentId, [path]: true })\r\n                }\r\n            }\r\n\r\n            // we don't need to do more work because the item is being deleted\r\n            continue\r\n        }\r\n\r\n        const sourceId = getSourceId(item)\r\n\r\n        // We run the daily rest function if it exists\r\n        if (sourceId) {\r\n            const daily = getDailyFromSourceId(sourceId)\r\n            if (daily?.rest) {\r\n                await daily.rest({ item, sourceId, updateItem: data => update.push(data) })\r\n            }\r\n        }\r\n\r\n        // we clean temporary rule elements\r\n        const rules = deepClone(item._source.system.rules)\r\n        let modifiedRules = false\r\n        for (let i = rules.length - 1; i >= 0; i--) {\r\n            if (MODULE_ID in rules[i]!) {\r\n                rules.splice(i, 1)\r\n                modifiedRules = true\r\n            }\r\n        }\r\n        if (modifiedRules) update.push({ _id: item.id, 'system.rules': rules })\r\n    }\r\n\r\n    if (update.length) await actor.updateEmbeddedDocuments('Item', update)\r\n    if (remove.length) await actor.deleteEmbeddedDocuments('Item', remove)\r\n\r\n    await setFlag(actor, 'rested', true)\r\n}\r\n","import { localize } from '@utils/foundry/localize'\r\nimport { openDailiesInterface } from './api'\r\nimport { hasAnyDaily } from './dailies'\r\n\r\nexport function renderCharacterSheetPF2e(sheet: CharacterSheetPF2e, html: JQuery) {\r\n    const actor = sheet.actor\r\n    if (!actor.isOwner || !hasAnyDaily(actor)) return\r\n\r\n    const small = html.find('aside .sidebar .hitpoints .hp-small')\r\n    small\r\n        .append(`<a class=\"roll-icon dailies\" data-tooltip=\"${localize('sheet.title')}\"><i class=\"fas fa-mug-saucer\"></i></a>`)\r\n        .find('.dailies')\r\n        .on('click', () => openDailiesInterface(actor, true))\r\n}\r\n","import { MODULE_ID } from '@utils/module'\r\n\r\nexport function registerWrapper(target: string, fn: libWrapper.OverrideFunction, type: 'OVERRIDE'): number\r\nexport function registerWrapper(target: string, fn: libWrapper.WrappedFunction, type: 'WRAPPER' | 'MIXED'): number\r\nexport function registerWrapper(\r\n    target: string,\r\n    fn: libWrapper.WrappedFunction | libWrapper.OverrideFunction,\r\n    type: 'WRAPPER' | 'MIXED' | 'OVERRIDE' = 'WRAPPER'\r\n): number {\r\n    return libWrapper.register(MODULE_ID, target, fn, type)\r\n}\r\n"],"names":["__webpack_require__","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","createFeatDaily","uuid","filter","label","daily","item","rows","type","slug","search","process","async","utils","fields","addFeat","messages","feat","createFeatSource","add","createLanguageDaily","options","actor","actorLanguages","system","traits","languages","value","languageNames","x","includes","sort","labelizer","languageLabel","addRule","language","createLanguageRuleElement","selected","createResistancelDaily","resistances","resistance","random","resistanceLabel","randomOption","halfLevelValue","level","createResistanceRuleElement","createTrainedSkillDaily","actorSkills","skills","skillNames","rank","skillLabel","addItem","skill","input","createLoreSource","name","source","createSkillRuleElement","createTrainedLoreDaily","createSpellDaily","addSpell","spell","createSpellSource","notify","str","arg1","arg2","arg3","data","undefined","permanent","ui","notifications","localize","warn","args","error","game","i18n","format","hasLocalization","has","localizePath","subLocalize","subKey","fn","defineProperties","configurable","info","path","template","hash","getSettingLocalizationPath","join","templatePath","getSetting","settings","setSetting","set","registerSetting","scope","config","hint","Array","isArray","choices","reduce","choice","register","getModule","id","modules","AsyncFunction","constructor","tome","flexibility","savant","mind","TEMPLATES","EXAMPLES","DailyCustoms","FormApplication","_selectedTemplate","_selectedDaily","_monaco","super","defaultOptions","mergeObject","title","submitOnChange","submitOnClose","closeOnSubmit","scrollY","event","formData","customs","code","find","custom","this","extension","newVersion","active","isNewerVersion","EXT_VERSION","version","getData","templates","examples","isExample","monaco","activateListeners","html","dispose","api","area","element","createEditor","onDidChangeModelContent","debounce","getValue","on","bind","form","querySelector","preventDefault","stipped","index","findIndex","splice","render","err","console","stopPropagation","Dialog","confirm","content","currentTarget","dataset","FormData","fromEntries","simplyfiable","splitList","length","category","min","max","Number","levels","split","map","trim","isNaN","traditions","push","placeholder","fns","JSON","stringify","_","replace","RegExp","shift","toString","match","slice","strArgs","entries","list","numbered","getFamiliarPack","packs","getFlag","doc","fallback","getSourceId","RATION_UUID","getRations","sourceId","itemTypes","flatMap","items","getItems","findItemWithSourceId","includesSourceId","getItemSourceIdCondition","TricksterAce","drop","castTime","time","parseInt","createScrollChain","uuids","children","createRow","field","values","indexOf","row","createSpellScrollSource","minActorLevel","child","condition","childPredicate","combatFlexibility","improved","MIND_WEAPON_UUID","WEAPON_BASE_TYPES","die","usage","WEAPON_GROUPS","slashing","piercing","bludgeoning","WEAPON_TRAITS","WEAPON_DAMAGE_TYPES","keys","mindSmith","message","fix","weapon","wait","buttons","yes","icon","callback","onWeaponSelected","no","close","width","createEmbeddedDocuments","not","damageLabel","weaponTraitLabel","weaponPropertyRunesLabel","hasFreePropertySlot","updateItem","addGroup","smith","_id","mental","deepClone","_source","advanced","runic","freeSlot","getFreePropertyRuneSlot","runes","property","rest","trait","runeSlot","selection","val","fromUuid","toObject","stats","setProperty","scrollSavant","prepare","maxSlot","maxTradition","tradition","entry","spellcasting","flags","slots","Math","getSpellcastingTraditionDetails","first","second","third","fourth","rowName","thaumaturgeTome","createChildCondition","actorLevel","paragon","intense","adept","masters","experts","trained","proficiencyLabel","option","getChoiSetRuleSelection","BUILTINS_UUIDS","parseDailies","conjunction","UUIDS","Map","dailies","prefix","original","keyWithPrefix","i","parseCustomDailies","clear","CUSTOM_DAILIES","CUSTOM_UUIDS","getDailies","isOfType","isInvested","Item","getDailyFromSourceId","hasAnyDaily","familiar","uses","isObject","PredicatePF2e","isValid","statements","static","every","s","StatementValidator","isStatement","predicate","test","clone","foundry","logCompatibilityWarning","mode","CONST","COMPATIBILITY_MODES","WARNING","since","until","all","any","or","nor","flat","convertLegacyData","domain","Set","isTrue","statement","isBinaryOp","testBinaryOp","isCompound","testCompound","eq","operator","left","right","domainArray","from","leftValues","d","startsWith","exec","rightValues","some","l","r","and","subProp","nand","if","then","isAtomic","operands","binaryOperators","isAnd","isOr","isNand","isNor","isNot","isIf","capitalize","toUpperCase","templateOrders","select","combo","alert","getTemplate","saved","rowsObj","childrenObj","prepareArgs","dailyArgs","groupLabel","getProcessedValue","labeled","predicates","save","savedRow","rowLabel","rowTemplate","order","isComboRow","isSelectRow","isRandomRow","tmp","labelize","isDropRow","isAlerRow","SKILL_DICTIONARY","acr","arc","ath","cra","dec","dip","itm","med","nat","occ","prf","rel","soc","ste","sur","thi","SKILL_LONG_FORMS","wordCharacter","String","raw","nonWordCharacter","nonWordCharacterRE","wordBoundary","nonWordBoundary","lowerCaseLetter","upperCaseLetter","lowerCaseThenUpperCaseRE","nonWordCharacterHyphenOrSpaceRE","upperOrWordBoundariedLowerRE","sluggify","text","camel","toLowerCase","dromedary","charAt","part","Error","sequenceArray","start","end","getSimplifiableValue","floor","parseFilter","parseFeatFilter","parseSpellFilter","checkFilter","checkbox","isExpanded","forEach","setTraits","searchTraits","dataTraits","getFilterTraits","pf2e","compendiumBrowser","tabs","getFilterData","checkboxes","school","rarity","multiselects","getSpellFilterLevel","getFeatFilterLevel","sliders","simplified","onDropFeat","target","types","localizeAll","testFn","translatedSkills","skillList","CONFIG","PF2E","result","toLocaleLowerCase","lang","getTranslatedSkills","prerequisites","prerequisite","rarities","sources","itemLevel","onDropItem","onDropSpell","categories","spellCategories","isCantrip","isFocusSpell","isRitual","schools","nextElementSibling","classList","remove","chatUUID","processData","getFields","addItems","addRules","updateItems","msg","addedSpells","getRules","existing","rules","feats","spells","scrolls","messageObj","group","pack","abilities","ids","effect","deleteEmbeddedDocuments","isCustom","getDocument","rations","quantity","delete","remaining","fakeChatUUID","nb","parent","parentId","onDelete","rowFields","prepared","showSlotlessLevels","showUnpreparedSpells","proficiency","classDC","class","getProperty","update","expandObject","rested","updateEmbeddedDocuments","messageList","a","b","parseMessages","ChatMessage","create","speaker","getSpeaker","elements","toArray","previousElementSibling","DailiesInterface","Application","_actor","_randomInterval","_dailies","_dailyArgs","_saved","_children","_custom","_predicate","_rows","height","dragDrop","dropSelector","nbAbilityies","attributes","familiarAbilities","customUUIDS","last","groups","dump","force","clearInterval","setInterval","each","selectedIndex","HTMLLabelElement","dataString","dataTransfer","parse","fixed","openTab","parsed","addClass","removeClass","warns","emptyInputs","alertInputs","$","prevAll","attr","dcByLevel","dcAdjustments","scrollCompendiumIds","RUNE_PROPERTY_KEYS","LANGUAGE_LIST","renderChatMessage","openDailiesInterface","halfLevelString","rule","img","proficient","temp","scrollUUID","getScrollCompendiumUUID","scroll","location","heightenedLevel","temporary","core","description","createSpellScroll","rollOption","proficiencyLevels","Roll","evaluate","total","damage","weaponDamage","weaponTraits","rune","weaponPropertyRunes","potency","potencyRune","isOwner","canvas","tokens","controlled","token","user","character","requestDailies","isGM","isWatch","createWatchChatMessage","isSystem","setModuleID","enableWatchHook","enabled","Hooks","onPerformDailyCrafting","getCraftingEntries","e","isDailyPrep","reagentCost","isAlchemical","sum","reagentValue","resources","crafting","infusedReagents","formula","preparedCraftingFormulas","itemSource","size","ancestry","addToInventory","modifiedRules","setFlag","sheet","append","once","default","onChange","Boolean","restricted","registerMenu","registerSettingMenu","libWrapper","registerWrapper"],"sourceRoot":""}