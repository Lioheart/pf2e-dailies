{"version":3,"file":"main.js","mappings":"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","sources":["webpack:///../../../../foundryVTT-projects/@utils/module.ts","webpack:///../../../../foundryVTT-projects/@utils/foundry/flags.ts","webpack:///../../../../foundryVTT-projects/@utils/pf2e/utils.ts","webpack:///../../../../foundryVTT-projects/@utils/foundry/item.ts","webpack:///../../../../foundryVTT-projects/@utils/foundry/notification.ts","webpack:///../../../../foundryVTT-projects/@utils/foundry/localize.ts","webpack:///./src/categories.ts","webpack:///../../../../foundryVTT-projects/@utils/foundry/path.ts","webpack:///../../../../foundryVTT-projects/@utils/foundry/uuid.ts","webpack:///../../../../foundryVTT-projects/@utils/pf2e/actor.ts","webpack:///../../../../foundryVTT-projects/@utils/pf2e/spell.ts","webpack:///./src/apps/interface/accept.ts","webpack:///../../../../foundryVTT-projects/@utils/pf2e/languages.ts","webpack:///../../../../foundryVTT-projects/@utils/pf2e/skills.ts","webpack:///./src/apps/interface/data.ts","webpack:///../../../../foundryVTT-projects/@utils/utils.ts","webpack:///./src/apps/interface/search.ts","webpack:///./src/apps/interface/drop.ts","webpack:///./src/apps/interface.ts","webpack:///./src/main.ts","webpack:///./src/rest.ts","webpack:///./src/sheet.ts"],"sourcesContent":["export let MODULE_ID = ''\r\n\r\nexport function setModuleID(id: string) {\r\n    if (!MODULE_ID) MODULE_ID = id\r\n}\r\n","import { MODULE_ID } from '@utils/module'\r\n\r\nexport function hasModuleFlag(doc: foundry.abstract.Document) {\r\n    return getProperty(doc, `flags.${MODULE_ID}`) !== undefined\r\n}\r\n\r\nexport function getFlag<T extends unknown>(doc: foundry.abstract.Document, key: string): T | undefined\r\nexport function getFlag<T extends unknown>(doc: foundry.abstract.Document, key: string, fallback: T): T\r\nexport function getFlag<T extends unknown>(doc: foundry.abstract.Document, key: string, fallback?: T): T | undefined {\r\n    return (doc.getFlag(MODULE_ID, key) as T | undefined) ?? fallback\r\n}\r\n\r\n/**\r\n * @template {foundry.Document} T\r\n * @param {T} doc\r\n * @param {string} key\r\n * @param {any} value\r\n * @returns T\r\n */\r\nexport function setFlag(doc: foundry.abstract.Document, key: string, value: unknown) {\r\n    return doc.setFlag(MODULE_ID, key, value)\r\n}\r\n\r\nexport function getSourceId<T extends DocumentUUID>(doc: ClientDocument) {\r\n    return doc.getFlag('core', 'sourceId') as T | undefined\r\n}\r\n\r\nexport function hasSourceId(doc: ClientDocument, sourceId: DocumentUUID) {\r\n    return getSourceId(doc) === sourceId\r\n}\r\n\r\nexport function includesSourceId(doc: ClientDocument, list: DocumentUUID[]) {\r\n    const sourceId = getSourceId(doc)\r\n    return sourceId ? list.includes(sourceId) : false\r\n}\r\n","const wordCharacter = String.raw`[\\p{Alphabetic}\\p{Mark}\\p{Decimal_Number}\\p{Join_Control}]`\r\nconst nonWordCharacter = String.raw`[^\\p{Alphabetic}\\p{Mark}\\p{Decimal_Number}\\p{Join_Control}]`\r\nconst nonWordCharacterRE = new RegExp(nonWordCharacter, 'gu')\r\n\r\nconst wordBoundary = String.raw`(?:${wordCharacter})(?=${nonWordCharacter})|(?:${nonWordCharacter})(?=${wordCharacter})`\r\nconst nonWordBoundary = String.raw`(?:${wordCharacter})(?=${wordCharacter})`\r\nconst lowerCaseLetter = String.raw`\\p{Lowercase_Letter}`\r\nconst upperCaseLetter = String.raw`\\p{Uppercase_Letter}`\r\nconst lowerCaseThenUpperCaseRE = new RegExp(`(${lowerCaseLetter})(${upperCaseLetter}${nonWordBoundary})`, 'gu')\r\n\r\nconst nonWordCharacterHyphenOrSpaceRE = /[^-\\p{White_Space}\\p{Alphabetic}\\p{Mark}\\p{Decimal_Number}\\p{Join_Control}]/gu\r\nconst upperOrWordBoundariedLowerRE = new RegExp(`${upperCaseLetter}|(?:${wordBoundary})${lowerCaseLetter}`, 'gu')\r\n\r\n/** Check if an element is present in the provided set. Especially useful for checking against literal sets */\r\nexport function setHasElement<T extends Set<unknown>>(set: T, value: unknown): value is SetElement<T> {\r\n    return set.has(value)\r\n}\r\n\r\n/**\r\n * The system's sluggification algorithm for labels and other terms.\r\n * @param text The text to sluggify\r\n * @param [options.camel=null] The sluggification style to use\r\n */\r\nexport function sluggify(text: string, { camel = null }: { camel?: 'dromedary' | 'bactrian' | null } = {}): string {\r\n    // Sanity check\r\n    if (typeof text !== 'string') {\r\n        console.warn('Non-string argument passed to `sluggify`')\r\n        return ''\r\n    }\r\n\r\n    switch (camel) {\r\n        case null:\r\n            return text\r\n                .replace(lowerCaseThenUpperCaseRE, '$1-$2')\r\n                .toLowerCase()\r\n                .replace(/['’]/g, '')\r\n                .replace(nonWordCharacterRE, ' ')\r\n                .trim()\r\n                .replace(/[-\\s]+/g, '-')\r\n        case 'bactrian': {\r\n            const dromedary = sluggify(text, { camel: 'dromedary' })\r\n            return dromedary.charAt(0).toUpperCase() + dromedary.slice(1)\r\n        }\r\n        case 'dromedary':\r\n            return text\r\n                .replace(nonWordCharacterHyphenOrSpaceRE, '')\r\n                .replace(/[-_]+/g, ' ')\r\n                .replace(upperOrWordBoundariedLowerRE, (part, index) => (index === 0 ? part.toLowerCase() : part.toUpperCase()))\r\n                .replace(/\\s+/g, '')\r\n        default:\r\n            throw ErrorPF2e(\"I don't think that's a real camel.\")\r\n    }\r\n}\r\n\r\nexport function ErrorPF2e(message: string): Error {\r\n    return Error(`PF2e System | ${message}`)\r\n}\r\n","import { getSourceId, includesSourceId } from '@utils/foundry/flags'\r\n\r\ntype ActorItemTypes<A extends Actor> = (keyof A['itemTypes'])[]\r\n\r\nfunction getItemSourceIdCondition(sourceId: ItemUUID | ItemUUID[]) {\r\n    return Array.isArray(sourceId)\r\n        ? (item: Item) => includesSourceId(item, sourceId)\r\n        : (item: Item) => getSourceId(item) === sourceId\r\n}\r\n\r\nfunction getItems<A extends Actor, I extends Item = CollectionValue<A['items']>>(actor: A, itemTypes?: ActorItemTypes<A>) {\r\n    return (itemTypes ? itemTypes.flatMap(type => actor.itemTypes[type as string]) : actor.items) as Embedded<I>[]\r\n}\r\n\r\nexport function findItemWithSourceId<A extends Actor, I extends Item = CollectionValue<A['items']>>(\r\n    actor: A,\r\n    sourceId: ItemUUID,\r\n    itemTypes?: ActorItemTypes<A>\r\n) {\r\n    return getItems<A, I>(actor, itemTypes).find(getItemSourceIdCondition(sourceId))\r\n}\r\n\r\nexport function hasItemWithSourceId<A extends Actor, I extends Item = CollectionValue<A['items']>>(\r\n    actor: A,\r\n    sourceId: ItemUUID | ItemUUID[],\r\n    itemTypes?: ActorItemTypes<A>\r\n) {\r\n    return getItems<A, I>(actor, itemTypes).some(getItemSourceIdCondition(sourceId))\r\n}\r\n\r\nexport function filterItemsWithSourceId<A extends Actor, I extends Item = CollectionValue<A['items']>>(\r\n    actor: A,\r\n    sourceId: ItemUUID | ItemUUID[],\r\n    itemTypes?: ActorItemTypes<A>\r\n) {\r\n    return getItems<A, I>(actor, itemTypes).filter(getItemSourceIdCondition(sourceId))\r\n}\r\n","import { localize } from '@utils/foundry/localize'\r\n\r\nexport type NotifyArgs = [str: string, arg1?: boolean | Record<string, string>, arg2?: boolean]\r\n\r\nfunction notify(\r\n    str: string,\r\n    arg1?: 'warning' | 'info' | 'error' | boolean | Record<string, string>,\r\n    arg2?: boolean | Record<string, string>,\r\n    arg3?: boolean\r\n) {\r\n    const type = typeof arg1 === 'string' ? arg1 : 'info'\r\n    const data = typeof arg1 === 'object' ? arg1 : typeof arg2 === 'object' ? arg2 : undefined\r\n    const permanent = typeof arg1 === 'boolean' ? arg1 : typeof arg2 === 'boolean' ? arg2 : arg3 ?? false\r\n\r\n    ui.notifications.notify(localize(str, data), type, { permanent })\r\n}\r\n\r\nexport function warn(...args: NotifyArgs) {\r\n    const [str, arg1, arg2] = args\r\n    notify(str, 'warning', arg1, arg2)\r\n}\r\n\r\nexport function info(...args: NotifyArgs) {\r\n    const [str, arg1, arg2] = args\r\n    notify(str, 'info', arg1, arg2)\r\n}\r\n\r\nexport function error(...args: NotifyArgs) {\r\n    const [str, arg1, arg2] = args\r\n    notify(str, 'error', arg1, arg2)\r\n}\r\n","import { MODULE_ID } from '@utils/module'\r\nimport { warn, NotifyArgs, info, error } from '@utils/foundry/notification'\r\n\r\nexport type LocalizeArgs = [key: string, data?: Record<string, string | number>]\r\n\r\nexport function localize(...args: LocalizeArgs) {\r\n    let [key, data] = args\r\n    key = `${MODULE_ID}.${key}`\r\n    if (data) return game.i18n.format(key, data)\r\n    return game.i18n.localize(key)\r\n}\r\n\r\nexport function hasLocalization(key: string) {\r\n    return game.i18n.has(`${MODULE_ID}.${key}`, false)\r\n}\r\n\r\nexport function localizePath(key: string) {\r\n    return `${MODULE_ID}.${key}`\r\n}\r\n\r\nexport function subLocalize(subKey: string) {\r\n    const fn = (...args: LocalizeArgs) => localize(`${subKey}.${args[0]}`, args[1])\r\n\r\n    Object.defineProperties(fn, {\r\n        warn: {\r\n            value: (...args: NotifyArgs) => warn(`${subKey}.${args[0]}`, args[1], args[2]),\r\n            enumerable: false,\r\n            configurable: false,\r\n        },\r\n        info: {\r\n            value: (...args: NotifyArgs) => info(`${subKey}.${args[0]}`, args[1], args[2]),\r\n            enumerable: false,\r\n            configurable: false,\r\n        },\r\n        error: {\r\n            value: (...args: NotifyArgs) => error(`${subKey}.${args[0]}`, args[1], args[2]),\r\n            enumerable: false,\r\n            configurable: false,\r\n        },\r\n        has: {\r\n            value: (key: string) => hasLocalization(`${subKey}.${key}`),\r\n            enumerable: false,\r\n            configurable: false,\r\n        },\r\n    })\r\n\r\n    return fn as ((...args: LocalizeArgs) => string) & {\r\n        warn: (...args: NotifyArgs) => void\r\n        info: (...args: NotifyArgs) => void\r\n        error: (...args: NotifyArgs) => void\r\n        has: (key: string) => boolean\r\n    }\r\n}\r\n","import { getSourceId, includesSourceId } from '@utils/foundry/flags'\r\nimport { filterItemsWithSourceId } from '@utils/foundry/item'\r\nimport { hasLocalization, localize } from '@utils/foundry/localize'\r\n\r\nexport const RULE_TYPES = ['addedLanguage', 'trainedSkill', 'addedResistance', 'thaumaturgeTome'] as const\r\n\r\nexport const CATEGORIES = [\r\n    // ThaumaturgeTome\r\n    {\r\n        type: 'thaumaturgeTome',\r\n        category: 'tome',\r\n        uuids: [\r\n            'Compendium.pf2e.classfeatures.MyN1cQgE0HsLF20e', // Tome\r\n            'Compendium.pf2e.classfeatures.Obm4ItMIIr0whYeO', // Implement Adept\r\n            'Compendium.pf2e.classfeatures.ZEUxZ4Ta1kDPHiq5', // Second Adept\r\n            'Compendium.pf2e.feats-srd.yRRM1dsY6jakEMaC', // Intense Implement\r\n            'Compendium.pf2e.classfeatures.QEtgbY8N2V4wTbsI', // Implement Paragon\r\n        ],\r\n    },\r\n    // Redistsance\r\n    {\r\n        type: 'addedResistance',\r\n        category: 'elementalist',\r\n        uuids: ['Compendium.pf2e.feats-srd.tx9pkrpmtqe4FnvS'],\r\n    },\r\n    {\r\n        type: 'addedResistance',\r\n        category: 'ganzi',\r\n        uuids: ['Compendium.pf2e.heritages.3reGfXH0S82hM7Gp'],\r\n    },\r\n    // TrainedLore\r\n    {\r\n        type: 'trainedLore',\r\n        category: 'study',\r\n        uuids: ['Compendium.pf2e.feats-srd.aLJsBBZzlUK3G8MW'],\r\n    },\r\n    // TrainedSkill\r\n    {\r\n        type: 'trainedSkill',\r\n        category: 'ageless',\r\n        uuids: ['Compendium.pf2e.feats-srd.wylnETwIz32Au46y'],\r\n    },\r\n    {\r\n        type: 'trainedSkill',\r\n        category: 'longevity',\r\n        uuids: ['Compendium.pf2e.feats-srd.WoLh16gyDp8y9WOZ'],\r\n    },\r\n    {\r\n        type: 'trainedSkill',\r\n        category: 'memories',\r\n        uuids: ['Compendium.pf2e.feats-srd.ptEOt3lqjxUnAW62'],\r\n    },\r\n    {\r\n        type: 'trainedSkill',\r\n        category: 'studies',\r\n        uuids: ['Compendium.pf2e.feats-srd.9bgl6qYWKHzqWZj0'],\r\n    },\r\n    // AddedLanguage\r\n    {\r\n        type: 'addedLanguage',\r\n        category: 'linguistics',\r\n        uuids: ['Compendium.pf2e.feats-srd.eCWQU16hRLfN1KaX'],\r\n    },\r\n    {\r\n        type: 'addedLanguage',\r\n        category: 'borts',\r\n        uuids: ['Compendium.pf2e.equipment-srd.iS7hAQMAaThHYE8g'],\r\n    },\r\n    // CombatFlexibility\r\n    {\r\n        type: 'combatFlexibility',\r\n        category: 'flexibility',\r\n        uuids: [\r\n            'Compendium.pf2e.classfeatures.8g6HzARbhfcgilP8', // Combat Flexibility\r\n            'Compendium.pf2e.classfeatures.W2rwudMNcAxs8VoX', // Improved Flexibility\r\n        ],\r\n    },\r\n    // ScrollSavant\r\n    {\r\n        type: 'scrollSavant',\r\n        category: 'savant',\r\n        uuids: ['Compendium.pf2e.feats-srd.u5DBg0LrBUKP0JsJ'],\r\n    },\r\n    // ScrollChain\r\n    {\r\n        type: 'scrollChain',\r\n        category: 'esoterica',\r\n        uuids: [\r\n            'Compendium.pf2e.feats-srd.OqObuRB8oVSAEKFR', // Scroll Esoterica\r\n            'Compendium.pf2e.feats-srd.nWd7m0yRcIEVUy7O', // Elaborate Scroll Esoterica\r\n            'Compendium.pf2e.feats-srd.LHjPTV5vP3MOsPPJ', // Grand Scroll Esoterica\r\n        ],\r\n    },\r\n    {\r\n        type: 'scrollChain',\r\n        category: 'trickster',\r\n        uuids: [\r\n            'Compendium.pf2e.feats-srd.ROAUR1GhC19Pjk9C', // Basic Scroll Cache\r\n            'Compendium.pf2e.feats-srd.UrOj9TROtn8nuxPf', // Expert Scroll Cache\r\n            'Compendium.pf2e.feats-srd.lIg5Gzz7W70jfbk1', // Master Scroll Cache\r\n        ],\r\n    },\r\n] as const\r\n\r\ntype UuidsType = [ItemUUID, Omit<Category, 'uuids'> & { index: number }]\r\nconst [UUIDS, EQUIP_UUID, FEATS_UUID, HERITAGES_UUID, RULES_UUIDS, FLATTENED] = (() => {\r\n    const UUIDS: UuidsType[] = []\r\n    const FLATTENED = {} as Record<CategoryName, ItemUUID[]>\r\n    const FEATS: ItemUUID[] = []\r\n    const EQUIP: ItemUUID[] = []\r\n    const HERITAGES: ItemUUID[] = []\r\n    const RULES: ItemUUID[] = []\r\n\r\n    for (const { type, category, uuids } of CATEGORIES) {\r\n        FLATTENED[category] ??= []\r\n        FLATTENED[category].push(...uuids)\r\n        UUIDS.push(...uuids.map((uuid, index) => [uuid, { type, category, index }] as UuidsType))\r\n\r\n        if (RULE_TYPES.includes(type as typeof RULE_TYPES[number])) RULES.push(...uuids)\r\n\r\n        // for fast check on any category\r\n        const firstUUID = uuids[0]\r\n        if (firstUUID.includes('equipment-srd')) EQUIP.push(firstUUID)\r\n        else if (firstUUID.includes('heritages')) HERITAGES.push(firstUUID)\r\n        else FEATS.push(firstUUID)\r\n    }\r\n\r\n    return [new Map(UUIDS), EQUIP, FEATS, HERITAGES, RULES, FLATTENED]\r\n})()\r\n\r\nexport function hasAnyCategory(actor: CharacterPF2e) {\r\n    const itemTypes = actor.itemTypes\r\n    return (\r\n        itemTypes.heritage.some(item => includesSourceId(item, HERITAGES_UUID)) ||\r\n        itemTypes.feat.some(item => includesSourceId(item, FEATS_UUID)) ||\r\n        itemTypes.equipment.some(item => !(item.isInvested === false) && includesSourceId(item, EQUIP_UUID))\r\n    )\r\n}\r\n\r\nexport function getCategoryUUIDS(category: CategoryName) {\r\n    return FLATTENED[category]\r\n}\r\n\r\nexport function getRuleItems(actor: CharacterPF2e) {\r\n    return filterItemsWithSourceId(actor, RULES_UUIDS, ['feat', 'equipment', 'heritage'])\r\n}\r\n\r\nexport function isRuleItem(item: ItemPF2e) {\r\n    return includesSourceId(item, RULES_UUIDS)\r\n}\r\n\r\nexport function hasCategories(actor: CharacterPF2e) {\r\n    const itemTypes = actor.itemTypes\r\n    const categories = {} as Record<CategoryName, Omit<ReturnedCategory, 'items'> & { items: (undefined | ItemPF2e)[] }>\r\n    const items = [...itemTypes.heritage, ...itemTypes.feat, ...itemTypes.equipment]\r\n\r\n    for (const item of items) {\r\n        const sourceId = getSourceId<ItemUUID>(item)\r\n        if (!sourceId || (item.isOfType('equipment') && !item.isInvested)) continue\r\n\r\n        const entry = UUIDS.get(sourceId)\r\n        if (!entry) continue\r\n\r\n        const { category, index, type } = entry\r\n        categories[category] ??= { category, type, label: '', items: [] }\r\n        categories[category].items[index] = item\r\n        if (index === 0) {\r\n            const key = `label.${category}`\r\n            const label = hasLocalization(key) ? localize(key) : item.name\r\n            categories[category].label = label\r\n        }\r\n    }\r\n\r\n    return Object.values(categories).filter(x => x.items[0]) as ReturnedCategory[]\r\n}\r\n\r\nexport function isCategory<N extends CategoryType, C extends Category = ExtractedCategory<N>>(\r\n    object: ReturnedCategory,\r\n    category: N\r\n): object is ReturnedCategory<C> {\r\n    return object.type === category\r\n}\r\n","import { MODULE_ID } from '@utils/module'\r\n\r\nexport function getSettingLocalizationPath(...path: string[]) {\r\n    return `${MODULE_ID}.settings.${path.join('.')}`\r\n}\r\n\r\nexport function flagsUpdatePath(...path: string[]) {\r\n    return `flags.${MODULE_ID}.${path.join('/')}`\r\n}\r\n\r\nexport function templatePath(...path: string[]) {\r\n    path = path.filter(x => typeof x === 'string')\r\n    return `modules/${MODULE_ID}/templates/${path.join('/')}`\r\n}\r\n\r\nexport function imagePath(...path: string[]) {\r\n    return `modules/${MODULE_ID}/images/${path.join('/')}`\r\n}\r\n","export function chatUUID(uuid: string, name?: string) {\r\n    if (name) return `@UUID[${uuid}]{${name}}`\r\n    return `@UUID[${uuid}]`\r\n}\r\n\r\nexport function fakeChatUUID(name: string) {\r\n    return `<span style=\"background: #DDD;\r\n    padding: 1px 4px;\r\n    border: 1px solid var(--color-border-dark-tertiary);\r\n    border-radius: 2px;\r\n    white-space: nowrap;\r\n    word-break: break-all;\">${name}</span>`\r\n}\r\n","export function getHighestSpellSlot(actor: ActorPF2e) {\r\n    let maxSlot = 0\r\n    for (const entry of actor.spellcasting) {\r\n        if (entry.flags['pf2e-staves']) continue // we skip staff entries\r\n        const slots = entry.system.slots\r\n        for (const key in slots) {\r\n            const slot = slots[key as SlotKey]\r\n            if (slot.max) maxSlot = Math.max(maxSlot, Number(key.slice(4)))\r\n        }\r\n    }\r\n    return maxSlot as ZeroToEleven\r\n}\r\n\r\nexport const PROFICIENCY_RANKS = ['untrained', 'trained', 'expert', 'master', 'legendary'] as const\r\n","import { chatUUID } from '@utils/foundry/uuid'\r\n\r\nexport const MAGIC_TRADITIONS = new Set(['arcane', 'divine', 'occult', 'primal'] as const)\r\n\r\nexport const SPELL_COMPONENTS = ['focus', 'material', 'somatic', 'verbal'] as const\r\n\r\nconst scrolls: (ConsumablePF2e | null)[] = []\r\nexport async function createSpellScroll(uuid: ItemUUID, level: OneToTen | false, temp = false) {\r\n    const spell = (await fromUuid<SpellPF2e>(uuid))?.toObject()\r\n    if (!spell) return null\r\n\r\n    if (level === false) level = spell.system.level.value\r\n\r\n    const scrollUUID = getScrollCompendiumUUID(level)\r\n    scrolls[level] ??= await fromUuid<ConsumablePF2e>(scrollUUID)\r\n\r\n    const scroll = scrolls[level]?.toObject()\r\n    if (!scroll) return null\r\n\r\n    spell.system.location.heightenedLevel = level\r\n\r\n    scroll.name = `Scroll of ${spell.name} (Level ${level})`\r\n    scroll.system.temporary = temp\r\n    scroll.system.spell = spell\r\n    scroll.system.traits.value.push(...spell.system.traditions.value)\r\n\r\n    const sourceId = spell.flags.core?.sourceId\r\n    if (sourceId) scroll.system.description.value = `${chatUUID(sourceId)}\\n<hr />${scroll.system.description.value}`\r\n\r\n    return scroll\r\n}\r\n\r\nfunction getScrollCompendiumUUID(level: OneToTen): ItemUUID {\r\n    return `Compendium.pf2e.equipment-srd.${scrollCompendiumIds[level]}`\r\n}\r\n\r\nconst scrollCompendiumIds: Record<number, string> = {\r\n    1: 'RjuupS9xyXDLgyIr', // Compendium.pf2e.equipment-srd.RjuupS9xyXDLgyIr\r\n    2: 'Y7UD64foDbDMV9sx',\r\n    3: 'ZmefGBXGJF3CFDbn',\r\n    4: 'QSQZJ5BC3DeHv153',\r\n    5: 'tjLvRWklAylFhBHQ',\r\n    6: '4sGIy77COooxhQuC',\r\n    7: 'fomEZZ4MxVVK3uVu',\r\n    8: 'iPki3yuoucnj7bIt',\r\n    9: 'cFHomF3tty8Wi1e5',\r\n    10: 'o1XIHJ4MJyroAHfF',\r\n}\r\n","import { getCategoryUUIDS, getRuleItems, RULE_TYPES } from '@src/categories'\r\nimport { hasSourceId, setFlag } from '@utils/foundry/flags'\r\nimport { findItemWithSourceId } from '@utils/foundry/item'\r\nimport { hasLocalization, localize, subLocalize } from '@utils/foundry/localize'\r\nimport { chatUUID } from '@utils/foundry/uuid'\r\nimport { MODULE_ID } from '@utils/module'\r\nimport { PROFICIENCY_RANKS } from '@utils/pf2e/actor'\r\nimport { createSpellScroll } from '@utils/pf2e/spell'\r\nimport { sluggify } from '@utils/pf2e/utils'\r\n\r\nconst msg = subLocalize('interface.message')\r\n\r\ntype ReturnedMessage = { uuid: ItemUUID; selected?: string; category?: CategoryName; label?: string }\r\n\r\nexport async function accept(html: JQuery, actor: CharacterPF2e) {\r\n    let message = ''\r\n    const flags = {} as SavedCategories\r\n    const fields = html.find('.window-content .content').find('input, select').toArray() as TemplateField[]\r\n    const ruleItems = fields.some(field => RULE_TYPES.includes(field.dataset.type as RulesName)) ? getRuleItems(actor) : []\r\n    const addData: Partial<BaseItemSourcePF2e>[] = []\r\n    const updateData: EmbeddedDocumentUpdateData<ItemPF2e>[] = []\r\n    const rulesToAdd: Map<string, RuleElementSource[]> = new Map()\r\n\r\n    const getRules = (item: ItemPF2e) => {\r\n        const id = item.id\r\n        const existing = rulesToAdd.get(id)\r\n        if (existing) return existing\r\n\r\n        const rules = deepClone(item._source.system.rules)\r\n\r\n        for (let i = rules.length - 1; i >= 0; i--) {\r\n            const rule = rules[i]\r\n            if ('pf2e-dailies' in rule) rules.splice(i, 1)\r\n        }\r\n\r\n        rulesToAdd.set(id, rules)\r\n        return rules\r\n    }\r\n\r\n    const messages = {\r\n        languages: [] as ReturnedMessage[],\r\n        skills: [] as ReturnedMessage[],\r\n        tome: [] as ReturnedMessage[],\r\n        resistances: [] as ReturnedMessage[],\r\n        feats: [] as ReturnedMessage[],\r\n        scrolls: [] as ReturnedMessage[],\r\n    }\r\n\r\n    for (const field of fields) {\r\n        const type = field.dataset.type\r\n\r\n        if (type === 'scrollChain' || type === 'scrollSavant') {\r\n            const { uuid, category } = field.dataset\r\n            const level = Number(field.dataset.level) as OneToTen\r\n            const name = field.value\r\n\r\n            if (uuid) {\r\n                const scroll = await createSpellScroll(uuid, level, true)\r\n                if (scroll) addData.push(scroll)\r\n            }\r\n\r\n            flags[category] ??= []\r\n            flags[category]!.push({ name, uuid })\r\n        } else if (type === 'combatFlexibility') {\r\n            const { category, uuid, level } = field.dataset\r\n            const name = field.value\r\n            const index = level === '8' ? 0 : 1\r\n            const parentUUID = getCategoryUUIDS(category)[index]\r\n\r\n            if (parentUUID) {\r\n                const parent = findItemWithSourceId(actor, parentUUID) as FeatPF2e\r\n                const feat = await createTemporaryFeat(uuid, parent)\r\n                if (feat) addData.push(feat)\r\n            }\r\n\r\n            flags[category] ??= []\r\n            flags[category]!.push({ name, uuid })\r\n        } else if (type === 'trainedLore') {\r\n            const category = field.dataset.category\r\n            const uuid = getCategoryUUIDS(category)[0]\r\n            const selected = field.value\r\n\r\n            if (uuid) {\r\n                const lore = createTemporaryLore(selected, 1)\r\n                addData.push(lore)\r\n                messages.skills.push({ uuid, selected, category })\r\n            }\r\n\r\n            flags[category] = selected\r\n        } else {\r\n            const category = field.dataset.category\r\n            const uuid = getCategoryUUIDS(category)[0]\r\n            const ruleItem = ruleItems.find(item => hasSourceId(item, uuid))\r\n            if (!ruleItem) continue\r\n\r\n            const selected = field.value\r\n            const rules = getRules(ruleItem)\r\n\r\n            if (type === 'addedLanguage') {\r\n                rules.push(createLanguageRule(selected))\r\n                messages.languages.push({ uuid, selected, category })\r\n            } else if (type === 'trainedSkill') {\r\n                rules.push(createSkillRule(selected, 1))\r\n                messages.skills.push({ uuid, selected, category })\r\n            } else if (type === 'addedResistance') {\r\n                rules.push(createResistanceRule(selected, 'half'))\r\n                messages.resistances.push({ uuid, selected, category })\r\n            } else if (type === 'thaumaturgeTome') {\r\n                const rank = field.dataset.rank\r\n                rules.push(createSkillRule(selected, rank))\r\n                messages.tome.push({ uuid, selected, category, label: PROFICIENCY_RANKS[rank] })\r\n            }\r\n\r\n            if (type === 'thaumaturgeTome') {\r\n                const category = field.dataset.category\r\n                flags[category] ??= []\r\n                flags[category]!.push(selected as SkillLongForm)\r\n            } else {\r\n                // @ts-ignore\r\n                flags[category] = selected\r\n            }\r\n        }\r\n    }\r\n\r\n    for (const [id, rules] of rulesToAdd) {\r\n        updateData.push({ _id: id, 'system.rules': rules })\r\n    }\r\n\r\n    const pushMessages = (type: string, list: ReturnedMessage[]) => {\r\n        if (!list.length) return\r\n\r\n        if (message) message += '<hr />'\r\n\r\n        const title = msg.has(type) ? msg(type) : msg('gained', { type })\r\n        message += `<p><strong>${title}</strong></p>`\r\n\r\n        for (const { uuid, selected, category, label } of list) {\r\n            if (label) {\r\n                message += `<p><strong>${label}:</strong>`\r\n            } else {\r\n                const label = category && hasLocalization(`label.${category}`) ? localize(`label.${category}`) : undefined\r\n                message += `<p>${chatUUID(uuid, label)}`\r\n            }\r\n\r\n            if (selected) message += ` <span style=\"text-transform: capitalize;\">${selected}</span>`\r\n            message += '</p>'\r\n        }\r\n    }\r\n\r\n    if (addData.length) {\r\n        const items = (await actor.createEmbeddedDocuments('Item', addData)) as ItemPF2e[]\r\n        for (const item of items) {\r\n            const uuid = item.uuid\r\n\r\n            if (item.type === 'feat') messages.feats.push({ uuid })\r\n            else if (item.type !== 'lore') messages.scrolls.push({ uuid })\r\n\r\n            // we add a flag to the parent feat to have the cascade effect in the tab\r\n            const parentId = item.getFlag<string>('pf2e', 'grantedBy.id')\r\n            if (parentId) {\r\n                const slug = sluggify(item.name, { camel: 'dromedary' })\r\n                const path = `flags.pf2e.itemGrants.${slug}`\r\n                updateData.push({ _id: parentId, [path]: { id: item.id, onDelete: 'detach' } })\r\n            }\r\n        }\r\n    }\r\n\r\n    pushMessages('languages', messages.languages)\r\n    pushMessages('skills', messages.skills)\r\n    pushMessages('tome', messages.tome)\r\n    pushMessages('resistances', messages.resistances)\r\n    pushMessages('feats', messages.feats)\r\n    pushMessages('scrolls', messages.scrolls)\r\n\r\n    if (updateData.length) await actor.updateEmbeddedDocuments('Item', updateData)\r\n\r\n    await setFlag(actor, 'saved', flags)\r\n\r\n    message = `${msg('changes')}<hr>${message}`\r\n    ChatMessage.create({ content: message, speaker: ChatMessage.getSpeaker({ actor }) })\r\n}\r\n\r\nfunction createTemporaryLore(name: string, rank: OneToFour) {\r\n    const data: Partial<BaseItemSourcePF2e> = {\r\n        type: 'lore',\r\n        img: 'systems/pf2e/icons/default-icons/lore.svg',\r\n        name: name,\r\n    }\r\n\r\n    setProperty(data, `flags.${MODULE_ID}.temporary`, true)\r\n    setProperty(data, 'system.proficient.value', rank)\r\n\r\n    return data\r\n}\r\n\r\nasync function createTemporaryFeat(uuid: ItemUUID, parent: FeatPF2e) {\r\n    const feat = ((await fromUuid(uuid)) as FeatPF2e | null)?.toObject()\r\n    if (!feat) return\r\n\r\n    setProperty(feat, 'flags.pf2e.grantedBy', { id: parent.id, onDelete: 'cascade' })\r\n    setProperty(feat, `flags.${MODULE_ID}.temporary`, true)\r\n\r\n    return feat\r\n}\r\n\r\nfunction createLanguageRule(language: string) {\r\n    return {\r\n        key: 'ActiveEffectLike',\r\n        mode: 'add',\r\n        path: 'system.traits.languages.value',\r\n        value: language,\r\n        [MODULE_ID]: true,\r\n    } as const\r\n}\r\n\r\nfunction createSkillRule(skill: string, rank: OneToFour | `${OneToFour}`) {\r\n    return {\r\n        key: 'ActiveEffectLike',\r\n        mode: 'upgrade',\r\n        path: `system.skills.${skill}.rank`,\r\n        value: Number(rank),\r\n        [MODULE_ID]: true,\r\n    } as const\r\n}\r\n\r\nfunction createResistanceRule(type: string, value: number | string | 'half') {\r\n    if (value === 'half') value = 'max(1,floor(@actor.level/2))'\r\n    return {\r\n        key: 'Resistance',\r\n        type,\r\n        value,\r\n        [MODULE_ID]: true,\r\n    } as const\r\n}\r\n","export const LANGUAGE_LIST = [\r\n    'common',\r\n    'draconic',\r\n    'dwarven',\r\n    'elven',\r\n    'gnomish',\r\n    'goblin',\r\n    'halfling',\r\n    'jotun',\r\n    'orcish',\r\n    'sylvan',\r\n    'undercommon',\r\n    'ysoki',\r\n    'abyssal',\r\n    'adlet',\r\n    'aklo',\r\n    'akitonian',\r\n    'alghollthu',\r\n    'amurrun',\r\n    'anadi',\r\n    'ancient-osiriani',\r\n    'anugobu',\r\n    'arcadian',\r\n    'aquan',\r\n    'arboreal',\r\n    'auran',\r\n    'boggard',\r\n    'calda',\r\n    'caligni',\r\n    'celestial',\r\n    'cyclops',\r\n    'daemonic',\r\n    'destrachan',\r\n    'drooni',\r\n    'dziriak',\r\n    'ekujae',\r\n    'erutaki',\r\n    'formian',\r\n    'garundi',\r\n    'girtablilu',\r\n    'gnoll',\r\n    'goloma',\r\n    'grippli',\r\n    'hallit',\r\n    'hwan',\r\n    'iblydan',\r\n    'ignan',\r\n    'ikeshti',\r\n    'immolis',\r\n    'infernal',\r\n    'iruxi',\r\n    'jistkan',\r\n    'jyoti',\r\n    'kaava',\r\n    'kashrishi',\r\n    'kibwani',\r\n    'kitsune',\r\n    'kelish',\r\n    'lirgeni',\r\n    'mahwek',\r\n    'minaten',\r\n    'minkaian',\r\n    'mwangi',\r\n    'mzunu',\r\n    'nagaji',\r\n    'necril',\r\n    'ocotan',\r\n    'okaiyan',\r\n    'osiriani',\r\n    'protean',\r\n    'rasu',\r\n    'ratajin',\r\n    'razatlani',\r\n    'requian',\r\n    'russian',\r\n    'senzar',\r\n    'shadowtongue',\r\n    'shobhad',\r\n    'shisk',\r\n    'shoanti',\r\n    'shoony',\r\n    'skald',\r\n    'sphinx',\r\n    'strix',\r\n    'taldane',\r\n    'tekritanin',\r\n    'tengu',\r\n    'terran',\r\n    'thassilonian',\r\n    'tien',\r\n    'utopian',\r\n    'vanara',\r\n    'varisian',\r\n    'varki',\r\n    'vishkanyan',\r\n    'vudrani',\r\n    'wyrwood',\r\n    'xanmba',\r\n    'androffan',\r\n    'azlanti',\r\n    'grioth',\r\n    'kovintal',\r\n    'migo',\r\n    'munavri',\r\n    'samsaran',\r\n    'sasquatch',\r\n    'shae',\r\n    'yithian',\r\n    'druidic',\r\n] as const\r\n","export const SKILL_DICTIONARY = {\r\n    acr: 'acrobatics',\r\n    arc: 'arcana',\r\n    ath: 'athletics',\r\n    cra: 'crafting',\r\n    dec: 'deception',\r\n    dip: 'diplomacy',\r\n    itm: 'intimidation',\r\n    med: 'medicine',\r\n    nat: 'nature',\r\n    occ: 'occultism',\r\n    prf: 'performance',\r\n    rel: 'religion',\r\n    soc: 'society',\r\n    ste: 'stealth',\r\n    sur: 'survival',\r\n    thi: 'thievery',\r\n} as const\r\n\r\nexport const SKILL_ABBREVIATIONS = Object.keys(SKILL_DICTIONARY) as (keyof typeof SKILL_DICTIONARY)[]\r\n\r\nexport const SKILL_LONG_FORMS = Object.values(SKILL_DICTIONARY)\r\n","import { hasCategories, isCategory } from '@src/categories'\r\nimport { getFlag } from '@utils/foundry/flags'\r\nimport { PROFICIENCY_RANKS } from '@utils/pf2e/actor'\r\nimport { LANGUAGE_LIST } from '@utils/pf2e/languages'\r\nimport { SKILL_LONG_FORMS } from '@utils/pf2e/skills'\r\n\r\nconst FOUR_ELEMENTS = ['air', 'earth', 'fire', 'water'] as const\r\nconst GANZI_RESISTANCES = ['acid', 'electricity', 'sonic'] as const\r\n\r\nconst sortOrder = new Proxy(\r\n    {\r\n        addedLanguage: 0,\r\n        trainedSkill: 1,\r\n        addedResistance: 2,\r\n        trainedLore: 3,\r\n        combatFlexibility: 4,\r\n    } as Partial<Record<CategoryType | symbol, number>>,\r\n    {\r\n        get(obj, prop) {\r\n            return prop in obj ? obj[prop as CategoryType] : 99\r\n        },\r\n    }\r\n) as Record<CategoryType, number>\r\n\r\nexport function getData(actor: CharacterPF2e) {\r\n    const actorLevel = actor.level\r\n    const flags = (getFlag(actor, 'saved') ?? {}) as SavedCategories\r\n    const categories = hasCategories(actor)\r\n    const templates: BaseCategoryTemplate[] = []\r\n\r\n    for (const entry of categories) {\r\n        if (isCategory(entry, 'scrollChain')) {\r\n            const { type, category, label, items } = entry\r\n            const slots: DropTemplate[] = []\r\n\r\n            const spellSlot = (level: OneToTen) => {\r\n                const { name, uuid } = flags[category]?.[level - 1] ?? { name: '', uuid: '' }\r\n                slots.push({ type: 'drop', level, name, uuid, label: game.i18n.localize(`PF2E.SpellLevel${level}`) })\r\n            }\r\n\r\n            // first feat\r\n            spellSlot(1)\r\n            if (actorLevel >= 8) spellSlot(2)\r\n\r\n            // second feat\r\n            if (items[1]) {\r\n                spellSlot(3)\r\n                if (actorLevel >= 14) spellSlot(4)\r\n                if (actorLevel >= 16) spellSlot(5)\r\n            }\r\n\r\n            // third feat\r\n            if (items[2]) {\r\n                spellSlot(6)\r\n                if (actorLevel >= 20) spellSlot(7)\r\n            }\r\n\r\n            const template: ScrollChainTemplate = { type, category, label, rows: slots }\r\n            templates.push(template)\r\n        } else if (isCategory(entry, 'scrollSavant')) {\r\n            const { maxSlot, maxTradition } = getSpellcastingDetails(actor, 'arcane')\r\n            if (maxSlot < 4) continue\r\n\r\n            const { type, category, label } = entry\r\n            const slots: DropTemplate[] = []\r\n            const spellSlot = (index: number, level: number): DropTemplate => {\r\n                const { name, uuid } = flags[category]?.[index] ?? { name: '', uuid: '' }\r\n                return { type: 'drop', level, name, uuid, label: game.i18n.localize(`PF2E.SpellLevel${level}`) }\r\n            }\r\n\r\n            // legendary arcane\r\n            if (maxTradition >= 4 && maxSlot >= 6) slots.push(spellSlot(3, maxSlot - 5))\r\n\r\n            // master arcane\r\n            if (maxTradition >= 3 && maxSlot >= 5) slots.push(spellSlot(2, maxSlot - 4))\r\n\r\n            // no proficiency\r\n            slots.push(spellSlot(1, maxSlot - 3))\r\n            slots.push(spellSlot(0, maxSlot - 2))\r\n\r\n            const template: ScrollSavantTemplate = { type, category, label, rows: slots }\r\n            templates.push(template)\r\n        } else if (isCategory(entry, 'trainedSkill')) {\r\n            const options = SKILL_LONG_FORMS.filter(x => actor.skills[x]!.rank! < 1)\r\n            if (!options.length) continue\r\n\r\n            const { type, category, label } = entry\r\n            const selected = flags[category] ?? ''\r\n            const template: TrainedSkillTemplate = {\r\n                type,\r\n                category,\r\n                label,\r\n                rows: [{ type: 'select', options, selected }],\r\n            }\r\n            templates.push(template)\r\n        } else if (isCategory(entry, 'thaumaturgeTome')) {\r\n            const { type, category, label, items } = entry\r\n            const slots: ThaumaturgeTomeTemplateItem[] = []\r\n            const actorSkills = actor.skills as Record<SkillLongForm, { rank: OneToFour }>\r\n\r\n            const skillSlot = (index: number, rank: OneToFour, options: SkillLongForm[]) => {\r\n                const selected = flags[category]?.[index] ?? ''\r\n                slots.push({ type: 'select', label: PROFICIENCY_RANKS[rank], options, selected, rank })\r\n            }\r\n\r\n            const isTomeSelected = (index: number, option: 'adept' | 'paragon' = 'adept') => {\r\n                const item = items[index]\r\n                return item ? getRuleSelection(item, option) === 'tome' : false\r\n            }\r\n\r\n            // Implement Paragon\r\n            if (isTomeSelected(4, 'paragon')) {\r\n                const skills = SKILL_LONG_FORMS.filter(x => actorSkills[x].rank < 4)\r\n                if (!skills.length) continue\r\n\r\n                skillSlot(0, 4, skills)\r\n                skillSlot(1, 4, skills)\r\n            }\r\n            // Intense Implement or Second Adept or Implement Adept\r\n            else if (items[3] || isTomeSelected(2) || isTomeSelected(1)) {\r\n                const masters = SKILL_LONG_FORMS.filter(x => actorSkills[x].rank < 3)\r\n\r\n                if (actorLevel >= 9) {\r\n                    if (!masters.length) continue\r\n\r\n                    skillSlot(0, 3, masters)\r\n                    skillSlot(1, 3, masters)\r\n                } else {\r\n                    const experts = SKILL_LONG_FORMS.filter(x => actorSkills[x].rank < 2)\r\n                    if (!experts.length) continue\r\n\r\n                    skillSlot(0, 2, experts)\r\n                    if (masters.length) skillSlot(1, 3, masters)\r\n                }\r\n            } else {\r\n                if (actorLevel >= 5) {\r\n                    const experts = SKILL_LONG_FORMS.filter(x => actorSkills[x].rank < 2)\r\n                    if (!experts.length) continue\r\n\r\n                    skillSlot(0, 2, experts)\r\n                    skillSlot(1, 2, experts)\r\n                } else if (actorLevel >= 3) {\r\n                    const trained = SKILL_LONG_FORMS.filter(x => actorSkills[x].rank < 1)\r\n                    if (!trained.length) continue\r\n\r\n                    skillSlot(0, 1, trained)\r\n\r\n                    const experts = SKILL_LONG_FORMS.filter(x => actorSkills[x].rank < 2)\r\n                    if (experts.length) skillSlot(1, 2, experts)\r\n                } else {\r\n                    const trained = SKILL_LONG_FORMS.filter(x => actorSkills[x].rank < 1)\r\n                    if (!trained.length) continue\r\n\r\n                    skillSlot(0, 1, trained)\r\n                    skillSlot(1, 1, trained)\r\n                }\r\n            }\r\n\r\n            const template: ThaumaturgeTomeTemplate = {\r\n                type,\r\n                category,\r\n                label,\r\n                rows: slots,\r\n            }\r\n            templates.push(template)\r\n        } else if (isCategory(entry, 'trainedLore')) {\r\n            const { type, category, label } = entry\r\n            const selected = flags[category] ?? ''\r\n            const template: TrainedLoreTemplate = {\r\n                type,\r\n                category,\r\n                label,\r\n                rows: [{ type: 'input', selected, placeholder: game.i18n.localize('PF2E.NewPlaceholders.Lore') }],\r\n            }\r\n            templates.push(template)\r\n        } else if (isCategory(entry, 'addedLanguage')) {\r\n            const actorLanguages = actor.system.traits.languages.value\r\n            const options = LANGUAGE_LIST.filter(x => !actorLanguages.includes(x)).sort()\r\n            if (!options.length) continue\r\n\r\n            const { type, category, label } = entry\r\n            const selected = flags[category] ?? ''\r\n\r\n            const template: AddedLanguageTemplate = {\r\n                type,\r\n                category,\r\n                label,\r\n                rows: [{ type: 'select', options, selected }],\r\n            }\r\n            templates.push(template)\r\n        } else if (isCategory(entry, 'addedResistance')) {\r\n            const { type, category, label } = entry\r\n            const selected = flags[category] ?? ''\r\n            const options = category === 'elementalist' ? FOUR_ELEMENTS : GANZI_RESISTANCES\r\n            const template: AddedResistanceTemplate = {\r\n                type,\r\n                category,\r\n                label,\r\n                rows: [{ type: 'select', options, selected }],\r\n            }\r\n            templates.push(template)\r\n        } else if (isCategory(entry, 'combatFlexibility')) {\r\n            const { type, category, label, items } = entry\r\n            const selected = flags[category] ?? []\r\n            // first feat\r\n            const slots: DropTemplate[] = [\r\n                {\r\n                    type: 'drop',\r\n                    label: game.i18n.localize(`PF2E.Level8`),\r\n                    name: selected[0]?.name ?? '',\r\n                    uuid: selected[0]?.uuid ?? '',\r\n                    level: 8,\r\n                },\r\n            ]\r\n            // second feat\r\n            if (items[1])\r\n                slots.push({\r\n                    type: 'drop',\r\n                    label: game.i18n.localize(`PF2E.Level14`),\r\n                    name: selected[1]?.name ?? '',\r\n                    uuid: selected[1]?.uuid ?? '',\r\n                    level: 14,\r\n                })\r\n            const template: CombatFlexibilityTemplate = { type, category, label, rows: slots }\r\n            templates.push(template)\r\n        }\r\n    }\r\n\r\n    const rows: BaseCategoryTemplate[] = []\r\n    const groups: BaseCategoryTemplate[] = []\r\n    for (const template of templates) {\r\n        if (template.rows.length > 1) groups.push(template)\r\n        else rows.push(template)\r\n    }\r\n\r\n    rows.sort((a, b) => sortOrder[a.type] - sortOrder[b.type])\r\n    groups.sort((a, b) => a.rows.length - b.rows.length)\r\n\r\n    return { rows, groups }\r\n}\r\n\r\nfunction getRuleSelection<T extends unknown>(item: ItemPF2e, option: string) {\r\n    const rules = item._source.system.rules as ChoiceSetSource[]\r\n    const rule = rules.find(rule => rule.key === 'ChoiceSet' && rule.rollOption === option)\r\n    return rule?.selection as T | undefined\r\n}\r\n\r\nfunction getSpellcastingDetails(actor: ActorPF2e, tradition: MagicTradition) {\r\n    let maxSlot = 0\r\n    let maxTradition = 0\r\n\r\n    for (const entry of actor.spellcasting) {\r\n        if ('pf2e-staves' in entry.flags) continue // we skip staff entries\r\n\r\n        const slots = entry.system.slots\r\n        for (const key in slots) {\r\n            const slot = slots[key as SlotKey]\r\n            if (slot.max) maxSlot = Math.max(maxSlot, Number(key.slice(4)))\r\n        }\r\n\r\n        if (entry.tradition === tradition) maxTradition = Math.max(maxTradition, entry.rank)\r\n    }\r\n\r\n    return { maxSlot: Math.clamped(maxSlot, 1, 10), maxTradition }\r\n}\r\n","export function sequenceArray<N extends number = number>(start: number, end: number) {\r\n    const levels: number[] = []\r\n\r\n    if (start <= end) {\r\n        for (let i = start; i <= end; i++) levels.push(i)\r\n    } else {\r\n        for (let i = start; i >= end; i--) levels.push(i)\r\n    }\r\n\r\n    return levels as N[]\r\n}\r\n","import { sequenceArray } from '@utils/utils'\r\n\r\nexport const CATEGORY_SEARCH = {\r\n    scrollChain: { category: ['spell'] } as InitialSpellFilters,\r\n    combatFlexibility: { feattype: ['class'], traits: ['fighter'] } as InitialFeatFilters,\r\n    scrollSavant: { category: ['spell'], traditions: ['arcane'] } as InitialSpellFilters,\r\n} as const\r\n\r\nexport function search(event: JQuery.ClickEvent<any, any, SearchTemplateButton>) {\r\n    event.preventDefault()\r\n\r\n    const data = event.currentTarget.dataset\r\n    const level = Number(data.level)\r\n\r\n    switch (data.type) {\r\n        case 'scrollChain':\r\n            searchSpell({\r\n                ...CATEGORY_SEARCH.scrollChain,\r\n                level: sequenceArray<OneToTen>(1, level),\r\n            })\r\n            break\r\n        case 'combatFlexibility':\r\n            searchFeat({\r\n                ...CATEGORY_SEARCH.combatFlexibility,\r\n                level: { min: 1, max: level },\r\n            })\r\n            break\r\n        case 'scrollSavant':\r\n            searchSpell({\r\n                ...CATEGORY_SEARCH.scrollSavant,\r\n                level: sequenceArray<OneToTen>(1, level),\r\n            })\r\n            break\r\n    }\r\n}\r\n\r\nfunction searchSpell({ category = [], level = [], traditions = [] }: InitialSpellFilters = {}) {\r\n    const filter: InitialSpellFilters = {\r\n        category,\r\n        classes: [],\r\n        level,\r\n        rarity: [],\r\n        school: [],\r\n        source: [],\r\n        traditions,\r\n        traits: [],\r\n    }\r\n    game.pf2e.compendiumBrowser.openTab('spell', filter)\r\n}\r\n\r\nfunction searchFeat({ feattype = [], level = {}, traits = [] }: InitialFeatFilters = {}) {\r\n    const filter: InitialFeatFilters = {\r\n        feattype,\r\n        skills: [],\r\n        rarity: [],\r\n        source: [],\r\n        traits,\r\n        level,\r\n    }\r\n    game.pf2e.compendiumBrowser.openTab('feat', filter)\r\n}\r\n","import { subLocalize } from '@utils/foundry/localize'\r\nimport { CATEGORY_SEARCH } from './search'\r\n\r\nconst localize = subLocalize('interface.error.drop')\r\n\r\nexport async function dropped(event: ElementDragEvent) {\r\n    let target = $(event.target)\r\n    if (target.is('label')) target = target.next()\r\n\r\n    const categoryType = target.attr('data-type') as CategoryType | undefined\r\n    if (!categoryType) return\r\n\r\n    try {\r\n        const dataString = event.dataTransfer?.getData('text/plain')\r\n        const typeError = () => localize.warn('wrongDataType')\r\n\r\n        const data: { type: string; uuid: string } = JSON.parse(dataString)\r\n        if (!data || data.type !== 'Item' || typeof data.uuid !== 'string') return typeError()\r\n\r\n        const item = await fromUuid<ItemPF2e>(data.uuid)\r\n        if (!item) return typeError()\r\n\r\n        switch (categoryType) {\r\n            case 'scrollChain':\r\n                droppedSpell(target, item, CATEGORY_SEARCH.scrollChain)\r\n                break\r\n            case 'combatFlexibility':\r\n                droppedFeat(target, item, CATEGORY_SEARCH.combatFlexibility)\r\n                break\r\n            case 'scrollSavant':\r\n                droppedSpell(target, item, CATEGORY_SEARCH.scrollSavant)\r\n                break\r\n        }\r\n    } catch (error) {}\r\n}\r\n\r\nfunction droppedSpell(target: JQuery, item: ItemPF2e, { category = [], traditions = [] }: InitialSpellFilters = {}) {\r\n    if (!item.isOfType('spell')) return localize.warn('wrongType', { type: 'spell' })\r\n\r\n    if (item.isCantrip && !category.includes('cantrip')) return localize.warn('cannotBe', { type: 'spell', not: 'cantrip' })\r\n    if (item.isRitual && !category.includes('ritual')) return localize.warn('cannotBe', { type: 'spell', not: 'ritual' })\r\n    if (item.isFocusSpell && !category.includes('focus')) return localize.warn('cannotBe', { type: 'spell', not: 'focus' })\r\n\r\n    if (traditions.length) {\r\n        const itemTraditions = item.system.traditions.value\r\n        for (const tradition of traditions) {\r\n            if (!itemTraditions.includes(tradition))\r\n                return localize.warn('wrongTrait', { type: 'spell', trait: tradition, category: 'tradition' })\r\n        }\r\n    }\r\n\r\n    if (item.level > Number(target.attr('data-level'))) return localize.warn('wrongLevel', { type: 'spell' })\r\n\r\n    droppedItem(target, item)\r\n}\r\n\r\nfunction droppedFeat(target: JQuery, item: ItemPF2e, { feattype = [], traits = [] }: InitialFeatFilters) {\r\n    if (!item.isOfType('feat') || item.isFeature) return localize.warn('wrongType', { type: 'feat' })\r\n    if (!feattype.includes(item.featType)) return localize.warn('cannotBe', { type: 'feat', not: item.featType })\r\n\r\n    if (traits.length) {\r\n        const itemTraits = item.system.traits.value\r\n        for (const trait of traits) {\r\n            if (!itemTraits.includes(trait)) return localize.warn('wrongTrait', { type: 'feat', trait, category: 'trait' })\r\n        }\r\n    }\r\n\r\n    if (item.level > Number(target.attr('data-level'))) return localize.warn('wrongLevel', { type: 'feat' })\r\n\r\n    droppedItem(target, item)\r\n}\r\n\r\nfunction droppedItem(target: JQuery, item: ItemPF2e) {\r\n    target.val(item.name)\r\n    target.attr('value', item.name)\r\n    target.attr('data-uuid', item.uuid)\r\n    target.nextAll('[data-action=\"clear\"]').first().removeClass('disabled')\r\n}\r\n","import { subLocalize } from '@utils/foundry/localize'\r\nimport { templatePath } from '@utils/foundry/path'\r\nimport { accept } from './interface/accept'\r\nimport { getData } from './interface/data'\r\nimport { dropped } from './interface/drop'\r\nimport { search } from './interface/search'\r\n\r\nconst localize = subLocalize('interface')\r\n\r\nexport class DailiesInterface extends Application {\r\n    private _actor: CharacterPF2e\r\n\r\n    constructor(actor: CharacterPF2e, options?: Partial<ApplicationOptions>) {\r\n        super(options)\r\n        this._actor = actor\r\n    }\r\n\r\n    static get defaultOptions() {\r\n        return mergeObject(super.defaultOptions, {\r\n            title: localize('title'),\r\n            template: templatePath('interface.hbs'),\r\n            height: 'auto',\r\n            submitOnClose: false,\r\n            submitOnChange: false,\r\n            dragDrop: [\r\n                {\r\n                    dropSelector: '[data-droppable=\"true\"]',\r\n                },\r\n            ],\r\n        })\r\n    }\r\n\r\n    getData(options?: Partial<FormApplicationOptions> | undefined) {\r\n        return mergeObject(super.getData(options), {\r\n            i18n: localize,\r\n            ...getData(this._actor),\r\n        })\r\n    }\r\n\r\n    activateListeners(html: JQuery<HTMLElement>): void {\r\n        super.activateListeners(html)\r\n\r\n        html.find<SearchTemplateButton>('[data-action=search]').on('click', search)\r\n        html.find<HTMLAnchorElement>('[data-action=clear]').on('click', this.#onClear.bind(this))\r\n        html.find<HTMLButtonElement>('[data-action=accept]').on('click', this.#onAccept.bind(this))\r\n        html.find<HTMLButtonElement>('[data-action=cancel]').on('click', this.#onCancel.bind(this))\r\n    }\r\n\r\n    protected async _onDrop(event: ElementDragEvent) {\r\n        dropped(event)\r\n    }\r\n\r\n    #lock() {\r\n        this.element.addClass('disabled')\r\n    }\r\n\r\n    #validate() {\r\n        const warns: string[] = []\r\n        const emptyInputs = this.element.find('input').filter((_, input) => !input.value)\r\n\r\n        if (emptyInputs.length) warns.push('error.empty')\r\n\r\n        warns.forEach(x => localize.warn(x))\r\n\r\n        return !warns.length\r\n    }\r\n\r\n    async #onAccept(event: JQuery.ClickEvent) {\r\n        event.preventDefault()\r\n\r\n        if (!this.#validate()) return\r\n\r\n        this.#lock()\r\n\r\n        try {\r\n            await accept(this.element, this._actor)\r\n        } catch (error) {\r\n            localize.error('error.unexpected')\r\n            console.error(error)\r\n        }\r\n\r\n        this.close()\r\n    }\r\n\r\n    #onClear(event: JQuery.ClickEvent<any, any, HTMLAnchorElement>) {\r\n        event.preventDefault()\r\n        const target = $(event.currentTarget)\r\n        const input = target.prevAll('input').first()\r\n        input.val('')\r\n        input.attr('value', '')\r\n        input.attr('data-uuid', '')\r\n        target.addClass('disabled')\r\n    }\r\n\r\n    #onCancel(event: JQuery.ClickEvent) {\r\n        event.preventDefault()\r\n        this.close()\r\n    }\r\n}\r\n","import { setModuleID } from '@utils/module'\r\nimport { wrapRestForTheNight } from './rest'\r\nimport { renderCharacterSheetPF2e } from './sheet'\r\n\r\nsetModuleID('pf2e-dailies')\r\n\r\nHooks.once('ready', () => {\r\n    wrapRestForTheNight()\r\n})\r\n\r\nHooks.on('renderCharacterSheetPF2e', renderCharacterSheetPF2e)\r\n","import { getFlag } from '@utils/foundry/flags'\r\nimport { sluggify } from '@utils/pf2e/utils'\r\nimport { isRuleItem } from './categories'\r\n\r\nexport function wrapRestForTheNight() {\r\n    const original = game.pf2e.actions.restForTheNight\r\n    game.pf2e.actions.restForTheNight = async (options: ActionDefaultOptions) => {\r\n        const result = await original(options)\r\n        if (result.length && options.actors) afterRest(options.actors)\r\n        return result\r\n    }\r\n}\r\n\r\nasync function afterRest(actors: ActorPF2e | ActorPF2e[]) {\r\n    actors = Array.isArray(actors) ? actors : [actors]\r\n\r\n    const characters = actors.filter(x => x.isOfType('character')) as CharacterPF2e[]\r\n    for (const actor of characters) {\r\n        const update: EmbeddedDocumentUpdateData<ItemPF2e>[] = []\r\n        const remove: string[] = []\r\n        const itemTypes = actor.itemTypes\r\n\r\n        const cleanRuleItem = (item: ItemPF2e) => {\r\n            const rules = deepClone(item._source.system.rules)\r\n\r\n            let modified = false\r\n            for (let i = rules.length - 1; i >= 0; i--) {\r\n                if (!('pf2e-dailies' in rules[i])) continue\r\n                rules.splice(i, 1)\r\n                modified = true\r\n            }\r\n\r\n            if (modified) update.push({ _id: item.id, 'system.rules': rules })\r\n        }\r\n\r\n        for (const item of itemTypes.feat) {\r\n            if (isRuleItem(item)) cleanRuleItem(item)\r\n\r\n            if (getFlag(item, 'temporary')) {\r\n                const parentId = item.getFlag<string>('pf2e', 'grantedBy.id')\r\n                if (parentId) {\r\n                    const slug = sluggify(item.name, { camel: 'dromedary' })\r\n                    const path = `flags.pf2e.itemGrants.-=${slug}`\r\n                    update.push({ _id: parentId, [path]: true })\r\n                }\r\n                remove.push(item.id)\r\n            }\r\n        }\r\n\r\n        for (const item of itemTypes.lore) {\r\n            if (getFlag(item, 'temporary')) remove.push(item.id)\r\n        }\r\n\r\n        for (const item of itemTypes.equipment) {\r\n            if (isRuleItem(item)) cleanRuleItem(item)\r\n        }\r\n\r\n        for (const item of itemTypes.heritage) {\r\n            if (isRuleItem(item)) cleanRuleItem(item)\r\n        }\r\n\r\n        if (update.length) actor.updateEmbeddedDocuments('Item', update)\r\n        if (remove.length) actor.deleteEmbeddedDocuments('Item', remove)\r\n    }\r\n}\r\n","import { DailiesInterface } from '@apps/interface'\r\nimport { localize } from '@utils/foundry/localize'\r\nimport { hasAnyCategory } from './categories'\r\n\r\nexport function renderCharacterSheetPF2e(sheet: CharacterSheetPF2e, html: JQuery) {\r\n    const actor = sheet.actor\r\n    if (!actor.isOwner || !hasAnyCategory(actor)) return\r\n\r\n    const small = html.find('aside .sidebar .hitpoints .hp-small')\r\n    small\r\n        .append(`<a class=\"roll-icon dailies\" title=\"${localize('sheet.title')}\"><i class=\"fas fa-mug-saucer\"></i></a>`)\r\n        .find('.dailies')\r\n        .on('click', () => new DailiesInterface(actor).render(true, { id: `pf2e-dailies-interface-${actor.id}` }))\r\n\r\n    // TODO remove with next system update\r\n    small\r\n        .find('[data-action=rest]')\r\n        .off('click')\r\n        .on('click', event => game.pf2e.actions.restForTheNight({ event, actors: actor }))\r\n}\r\n"],"names":["getFlag","doc","key","fallback","getSourceId","includesSourceId","list","sourceId","includes","wordCharacter","String","raw","nonWordCharacter","nonWordCharacterRE","RegExp","wordBoundary","nonWordBoundary","lowerCaseLetter","upperCaseLetter","lowerCaseThenUpperCaseRE","nonWordCharacterHyphenOrSpaceRE","upperOrWordBoundariedLowerRE","sluggify","text","camel","console","warn","replace","toLowerCase","trim","dromedary","charAt","toUpperCase","slice","part","index","Error","getItemSourceIdCondition","Array","isArray","item","getItems","actor","itemTypes","flatMap","type","items","findItemWithSourceId","find","notify","str","arg1","arg2","arg3","data","undefined","permanent","ui","notifications","localize","args","game","i18n","format","hasLocalization","has","subLocalize","subKey","fn","Object","defineProperties","value","enumerable","configurable","info","error","RULE_TYPES","CATEGORIES","category","uuids","UUIDS","EQUIP_UUID","FEATS_UUID","HERITAGES_UUID","RULES_UUIDS","FLATTENED","FEATS","EQUIP","HERITAGES","RULES","push","map","uuid","firstUUID","Map","getCategoryUUIDS","isRuleItem","isCategory","object","templatePath","path","filter","x","join","chatUUID","name","PROFICIENCY_RANKS","scrolls","Set","async","createSpellScroll","level","temp","spell","fromUuid","toObject","system","scrollUUID","scrollCompendiumIds","getScrollCompendiumUUID","scroll","location","heightenedLevel","temporary","traits","traditions","flags","core","description","msg","accept","html","message","fields","toArray","ruleItems","some","field","dataset","filterItemsWithSourceId","getRuleItems","addData","updateData","rulesToAdd","getRules","id","existing","get","rules","deepClone","_source","i","length","splice","set","messages","languages","skills","tome","resistances","feats","Number","parentUUID","parent","feat","createTemporaryFeat","selected","lore","createTemporaryLore","ruleItem","hasSourceId","mode","createSkillRule","createResistanceRule","rank","label","_id","pushMessages","title","createEmbeddedDocuments","parentId","onDelete","updateEmbeddedDocuments","setFlag","ChatMessage","create","content","speaker","getSpeaker","img","setProperty","skill","LANGUAGE_LIST","SKILL_DICTIONARY","acr","arc","ath","cra","dec","dip","itm","med","nat","occ","prf","rel","soc","ste","sur","thi","SKILL_LONG_FORMS","keys","values","FOUR_ELEMENTS","GANZI_RESISTANCES","sortOrder","Proxy","addedLanguage","trainedSkill","addedResistance","trainedLore","combatFlexibility","obj","prop","getData","actorLevel","categories","heritage","equipment","isOfType","isInvested","entry","hasCategories","templates","slots","spellSlot","template","rows","maxSlot","maxTradition","getSpellcastingDetails","options","actorSkills","skillSlot","isTomeSelected","option","getRuleSelection","masters","experts","trained","placeholder","actorLanguages","sort","groups","a","b","rule","rollOption","selection","tradition","spellcasting","max","Math","clamped","sequenceArray","start","end","levels","CATEGORY_SEARCH","scrollChain","feattype","scrollSavant","search","event","preventDefault","currentTarget","searchSpell","rarity","source","pf2e","compendiumBrowser","openTab","searchFeat","min","classes","school","droppedSpell","target","isCantrip","not","isRitual","isFocusSpell","itemTraditions","trait","attr","droppedItem","val","nextAll","first","removeClass","DailiesInterface","Application","_actor","constructor","super","this","defaultOptions","mergeObject","height","submitOnClose","submitOnChange","dragDrop","dropSelector","activateListeners","on","bind","$","is","next","categoryType","dataString","dataTransfer","typeError","JSON","parse","isFeature","featType","itemTraits","droppedFeat","dropped","element","addClass","warns","_","input","forEach","close","prevAll","Hooks","once","original","actions","restForTheNight","result","actors","characters","update","remove","cleanRuleItem","modified","deleteEmbeddedDocuments","afterRest","wrapRestForTheNight","sheet","isOwner","hasAnyCategory","small","append","render","off"],"sourceRoot":""}