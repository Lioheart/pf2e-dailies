{"version":3,"file":"main.js","mappings":"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0I,GAAc1I,IAAI,kBAAmB,IEpC9B,MAAMiJ,GAAgB,CACzB,SACA,WACA,UACA,QACA,UACA,SACA,WACA,QACA,SACA,SACA,cACA,QACA,UACA,QACA,OACA,YACA,aACA,UACA,QACA,mBACA,UACA,WACA,QACA,WACA,QACA,UACA,QACA,UACA,YACA,UACA,WACA,aACA,SACA,UACA,SACA,UACA,UACA,UACA,aACA,QACA,SACA,UACA,SACA,OACA,UACA,QACA,UACA,UACA,WACA,QACA,UACA,QACA,QACA,YACA,UACA,UACA,SACA,UACA,SACA,UACA,WACA,SACA,QACA,SACA,SACA,SACA,UACA,WACA,UACA,OACA,UACA,YACA,UACA,UACA,SACA,eACA,UACA,QACA,UACA,SACA,QACA,SACA,QACA,UACA,aACA,QACA,SACA,eACA,OACA,UACA,SACA,WACA,QACA,aACA,UACA,UACA,SACA,YACA,UACA,SACA,WACA,OACA,UACA,WACA,YACA,OACA,UACA,WC1FEC,GAAgB,CAAC,MAAO,QAAS,OAAQ,SACzCC,GAAoB,CAAC,OAAQ,cAAe,SAE5CC,GAAY,IAAIC,MAClB,CACIC,cAAe,EACfC,aAAc,EACdC,gBAAiB,EACjBC,YAAa,GAEjB,CACIlG,IAAG,CAACmG,EAAKC,IACEA,KAAQD,EAAMA,EAAIC,GAAwB,KAKtD,SAASC,GAAQzO,GACpB,MAAM0O,EAAa1O,EAAM6I,MACnBa,EAAQ3K,EAAyBiB,EAAO,UAAY,CAAC,EACrD2O,EduJH,SAAuB3O,GAC1B,MAAM2O,EAAoC,CAAC,EACrCvO,EAAQL,EAASC,EAAO,CAAC,WAAY,OAAQ,YAAa,WAEhE,IAAK,MAAMF,KAAQM,EAAO,CACtB,MAAMb,EAAWF,EAAsBS,GACvC,IAAKP,GAAaO,EAAK8O,SAAS,eAAoC,IAApB9O,EAAK+O,WAAuB,SAE5E,MAAM5D,EAAQ9G,EAAMiE,IAAI7I,GACxB,IAAK0L,EAAO,SAEZ,MAAM,SAAEjH,EAAQ,MAAE/B,EAAK,KAAE9B,GAAS8K,EAIlC,GAHA0D,EAAW3K,KAAc,CAAEA,WAAU7D,O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","sources":["webpack:///../../../../foundryVTT-projects/@utils/module.ts","webpack:///../../../../foundryVTT-projects/@utils/foundry/flags.ts","webpack:///../../../../foundryVTT-projects/@utils/foundry/item.ts","webpack:///../../../../foundryVTT-projects/@utils/pf2e/utils.ts","webpack:///../../../../foundryVTT-projects/@utils/foundry/notification.ts","webpack:///../../../../foundryVTT-projects/@utils/foundry/localize.ts","webpack:///./src/categories.ts","webpack:///./src/data/weapon.ts","webpack:///../../../../foundryVTT-projects/@utils/foundry/path.ts","webpack:///../../../../foundryVTT-projects/@utils/pf2e/actor.ts","webpack:///../../../../foundryVTT-projects/@utils/pf2e/skills.ts","webpack:///../../../../foundryVTT-projects/@utils/string.ts","webpack:///./src/data/familiar.ts","webpack:///../../../../foundryVTT-projects/@utils/foundry/uuid.ts","webpack:///../../../../foundryVTT-projects/@utils/pf2e/spell.ts","webpack:///./src/apps/interface/accept.ts","webpack:///./src/apps/interface/alert.ts","webpack:///../../../../foundryVTT-projects/@utils/pf2e/dc.ts","webpack:///../../../../foundryVTT-projects/@utils/pf2e/item.ts","webpack:///../../../../foundryVTT-projects/@utils/pf2e/languages.ts","webpack:///./src/apps/interface/data.ts","webpack:///../../../../foundryVTT-projects/@utils/utils.ts","webpack:///./src/apps/interface/search.ts","webpack:///./src/apps/interface/drop.ts","webpack:///./src/apps/interface.ts","webpack:///./src/main.ts","webpack:///./src/rest.ts","webpack:///./src/sheet.ts"],"sourcesContent":["export let MODULE_ID = ''\r\n\r\nexport function setModuleID(id: string) {\r\n    if (!MODULE_ID) MODULE_ID = id\r\n}\r\n","import { MODULE_ID } from '@utils/module'\r\n\r\nexport function hasModuleFlag(doc: foundry.abstract.Document) {\r\n    return getProperty(doc, `flags.${MODULE_ID}`) !== undefined\r\n}\r\n\r\nexport function getFlag<T extends unknown>(doc: foundry.abstract.Document, key: string): T | undefined\r\nexport function getFlag<T extends unknown>(doc: foundry.abstract.Document, key: string, fallback: T): T\r\nexport function getFlag<T extends unknown>(doc: foundry.abstract.Document, key: string, fallback?: T): T | undefined {\r\n    return (doc.getFlag(MODULE_ID, key) as T | undefined) ?? fallback\r\n}\r\n\r\n/**\r\n * @template {foundry.Document} T\r\n * @param {T} doc\r\n * @param {string} key\r\n * @param {any} value\r\n * @returns T\r\n */\r\nexport function setFlag(doc: foundry.abstract.Document, key: string, value: unknown) {\r\n    return doc.setFlag(MODULE_ID, key, value)\r\n}\r\n\r\nexport function getSourceId<T extends DocumentUUID>(doc: ClientDocument) {\r\n    return doc.getFlag('core', 'sourceId') as T | undefined\r\n}\r\n\r\nexport function hasSourceId(doc: ClientDocument, sourceId: DocumentUUID) {\r\n    return getSourceId(doc) === sourceId\r\n}\r\n\r\nexport function includesSourceId(doc: ClientDocument, list: DocumentUUID[]) {\r\n    const sourceId = getSourceId(doc)\r\n    return sourceId ? list.includes(sourceId) : false\r\n}\r\n","import { getSourceId, includesSourceId } from '@utils/foundry/flags'\r\n\r\ntype ActorItemTypes<A extends Actor> = (keyof A['itemTypes'])[]\r\n\r\nfunction getItemSourceIdCondition(sourceId: ItemUUID | ItemUUID[]) {\r\n    return Array.isArray(sourceId)\r\n        ? (item: Item) => includesSourceId(item, sourceId)\r\n        : (item: Item) => getSourceId(item) === sourceId\r\n}\r\n\r\nexport function getItems<A extends Actor, I extends Item = CollectionValue<A['items']>>(actor: A, itemTypes?: ActorItemTypes<A>) {\r\n    return (itemTypes ? itemTypes.flatMap(type => actor.itemTypes[type as string]) : actor.items) as Embedded<I>[]\r\n}\r\n\r\nexport function findItemWithSourceId<A extends Actor, I extends Item = CollectionValue<A['items']>>(\r\n    actor: A,\r\n    sourceId: ItemUUID,\r\n    itemTypes?: ActorItemTypes<A>\r\n) {\r\n    return getItems<A, I>(actor, itemTypes).find(getItemSourceIdCondition(sourceId))\r\n}\r\n\r\nexport function hasItemWithSourceId<A extends Actor, I extends Item = CollectionValue<A['items']>>(\r\n    actor: A,\r\n    sourceId: ItemUUID | ItemUUID[],\r\n    itemTypes?: ActorItemTypes<A>\r\n) {\r\n    return getItems<A, I>(actor, itemTypes).some(getItemSourceIdCondition(sourceId))\r\n}\r\n\r\nexport function filterItemsWithSourceId<A extends Actor, I extends Item = CollectionValue<A['items']>>(\r\n    actor: A,\r\n    sourceId: ItemUUID | ItemUUID[],\r\n    itemTypes?: ActorItemTypes<A>\r\n) {\r\n    return getItems<A, I>(actor, itemTypes).filter(getItemSourceIdCondition(sourceId))\r\n}\r\n","const wordCharacter = String.raw`[\\p{Alphabetic}\\p{Mark}\\p{Decimal_Number}\\p{Join_Control}]`\r\nconst nonWordCharacter = String.raw`[^\\p{Alphabetic}\\p{Mark}\\p{Decimal_Number}\\p{Join_Control}]`\r\nconst nonWordCharacterRE = new RegExp(nonWordCharacter, 'gu')\r\n\r\nconst wordBoundary = String.raw`(?:${wordCharacter})(?=${nonWordCharacter})|(?:${nonWordCharacter})(?=${wordCharacter})`\r\nconst nonWordBoundary = String.raw`(?:${wordCharacter})(?=${wordCharacter})`\r\nconst lowerCaseLetter = String.raw`\\p{Lowercase_Letter}`\r\nconst upperCaseLetter = String.raw`\\p{Uppercase_Letter}`\r\nconst lowerCaseThenUpperCaseRE = new RegExp(`(${lowerCaseLetter})(${upperCaseLetter}${nonWordBoundary})`, 'gu')\r\n\r\nconst nonWordCharacterHyphenOrSpaceRE = /[^-\\p{White_Space}\\p{Alphabetic}\\p{Mark}\\p{Decimal_Number}\\p{Join_Control}]/gu\r\nconst upperOrWordBoundariedLowerRE = new RegExp(`${upperCaseLetter}|(?:${wordBoundary})${lowerCaseLetter}`, 'gu')\r\n\r\n/** Check if an element is present in the provided set. Especially useful for checking against literal sets */\r\nexport function setHasElement<T extends Set<unknown>>(set: T, value: unknown): value is SetElement<T> {\r\n    return set.has(value)\r\n}\r\n\r\n/**\r\n * The system's sluggification algorithm for labels and other terms.\r\n * @param text The text to sluggify\r\n * @param [options.camel=null] The sluggification style to use\r\n */\r\nexport function sluggify(text: string, { camel = null }: { camel?: 'dromedary' | 'bactrian' | null } = {}): string {\r\n    // Sanity check\r\n    if (typeof text !== 'string') {\r\n        console.warn('Non-string argument passed to `sluggify`')\r\n        return ''\r\n    }\r\n\r\n    switch (camel) {\r\n        case null:\r\n            return text\r\n                .replace(lowerCaseThenUpperCaseRE, '$1-$2')\r\n                .toLowerCase()\r\n                .replace(/['’]/g, '')\r\n                .replace(nonWordCharacterRE, ' ')\r\n                .trim()\r\n                .replace(/[-\\s]+/g, '-')\r\n        case 'bactrian': {\r\n            const dromedary = sluggify(text, { camel: 'dromedary' })\r\n            return dromedary.charAt(0).toUpperCase() + dromedary.slice(1)\r\n        }\r\n        case 'dromedary':\r\n            return text\r\n                .replace(nonWordCharacterHyphenOrSpaceRE, '')\r\n                .replace(/[-_]+/g, ' ')\r\n                .replace(upperOrWordBoundariedLowerRE, (part, index) => (index === 0 ? part.toLowerCase() : part.toUpperCase()))\r\n                .replace(/\\s+/g, '')\r\n        default:\r\n            throw ErrorPF2e(\"I don't think that's a real camel.\")\r\n    }\r\n}\r\n\r\nexport function ErrorPF2e(message: string): Error {\r\n    return Error(`PF2e System | ${message}`)\r\n}\r\n","import { localize } from '@utils/foundry/localize'\r\n\r\nexport type NotifyArgs = [str: string, arg1?: boolean | Record<string, string>, arg2?: boolean]\r\n\r\nfunction notify(\r\n    str: string,\r\n    arg1?: 'warning' | 'info' | 'error' | boolean | Record<string, string>,\r\n    arg2?: boolean | Record<string, string>,\r\n    arg3?: boolean\r\n) {\r\n    const type = typeof arg1 === 'string' ? arg1 : 'info'\r\n    const data = typeof arg1 === 'object' ? arg1 : typeof arg2 === 'object' ? arg2 : undefined\r\n    const permanent = typeof arg1 === 'boolean' ? arg1 : typeof arg2 === 'boolean' ? arg2 : arg3 ?? false\r\n\r\n    ui.notifications.notify(localize(str, data), type, { permanent })\r\n}\r\n\r\nexport function warn(...args: NotifyArgs) {\r\n    const [str, arg1, arg2] = args\r\n    notify(str, 'warning', arg1, arg2)\r\n}\r\n\r\nexport function info(...args: NotifyArgs) {\r\n    const [str, arg1, arg2] = args\r\n    notify(str, 'info', arg1, arg2)\r\n}\r\n\r\nexport function error(...args: NotifyArgs) {\r\n    const [str, arg1, arg2] = args\r\n    notify(str, 'error', arg1, arg2)\r\n}\r\n","import { MODULE_ID } from '@utils/module'\r\nimport { warn, NotifyArgs, info, error } from '@utils/foundry/notification'\r\n\r\nexport type LocalizeArgs = [key: string, data?: Record<string, string | number>]\r\n\r\nexport function localize(...args: LocalizeArgs) {\r\n    let [key, data] = args\r\n    key = `${MODULE_ID}.${key}`\r\n    if (data) return game.i18n.format(key, data)\r\n    return game.i18n.localize(key)\r\n}\r\n\r\nexport function hasLocalization(key: string) {\r\n    return game.i18n.has(`${MODULE_ID}.${key}`, false)\r\n}\r\n\r\nexport function localizePath(key: string) {\r\n    return `${MODULE_ID}.${key}`\r\n}\r\n\r\nexport function subLocalize(subKey: string) {\r\n    const fn = (...args: LocalizeArgs) => localize(`${subKey}.${args[0]}`, args[1])\r\n\r\n    Object.defineProperties(fn, {\r\n        warn: {\r\n            value: (...args: NotifyArgs) => warn(`${subKey}.${args[0]}`, args[1], args[2]),\r\n            enumerable: false,\r\n            configurable: false,\r\n        },\r\n        info: {\r\n            value: (...args: NotifyArgs) => info(`${subKey}.${args[0]}`, args[1], args[2]),\r\n            enumerable: false,\r\n            configurable: false,\r\n        },\r\n        error: {\r\n            value: (...args: NotifyArgs) => error(`${subKey}.${args[0]}`, args[1], args[2]),\r\n            enumerable: false,\r\n            configurable: false,\r\n        },\r\n        has: {\r\n            value: (key: string) => hasLocalization(`${subKey}.${key}`),\r\n            enumerable: false,\r\n            configurable: false,\r\n        },\r\n    })\r\n\r\n    return fn as ((...args: LocalizeArgs) => string) & {\r\n        warn: (...args: NotifyArgs) => void\r\n        info: (...args: NotifyArgs) => void\r\n        error: (...args: NotifyArgs) => void\r\n        has: (key: string) => boolean\r\n    }\r\n}\r\n","import { getSourceId, includesSourceId } from '@utils/foundry/flags'\r\nimport { filterItemsWithSourceId, getItems } from '@utils/foundry/item'\r\nimport { hasLocalization, localize } from '@utils/foundry/localize'\r\n\r\nexport const RULE_TYPES = ['addedLanguage', 'trainedSkill', 'addedResistance', 'ganziHeritage', 'thaumaturgeTome'] as const\r\nexport const MINDSMITH_WEAPON_UUID = 'Compendium.pf2e-dailies.equipment.VpmEozw21aRxX15P'\r\n\r\nexport const CATEGORY_DATA = [\r\n    // AddedFeat\r\n    {\r\n        type: 'addedFeat',\r\n        category: 'metamagical',\r\n        uuids: ['Compendium.pf2e.classfeatures.89zWKD2CN7nRu2xp'], // Metamagical Experimentation\r\n    },\r\n    // MindSmith\r\n    {\r\n        type: 'mindSmith',\r\n        category: 'mindsmith',\r\n        uuids: [\r\n            'Compendium.pf2e.feats-srd.juikoiIA0Jy8PboY', // Mind Smith Dedication\r\n            MINDSMITH_WEAPON_UUID, // Mind Weapon\r\n            'Compendium.pf2e.feats-srd.PccekOihIbRWdDky', // Malleable Mental Forge\r\n            'Compendium.pf2e.feats-srd.2uQbQgz1AbjzcFSp', // Runic Mind Smithing\r\n            'Compendium.pf2e.feats-srd.fgnfXwFcn9jZlXGD', // Advanced Runic Mind Smithing\r\n        ],\r\n    },\r\n    // TricksterAce\r\n    {\r\n        type: 'tricksterAce',\r\n        category: 'ace',\r\n        uuids: ['Compendium.pf2e.feats-srd.POrE3ZgBRdBL9MsW'], // Trickster's Ace\r\n    },\r\n    // ThaumaturgeTome\r\n    {\r\n        type: 'thaumaturgeTome',\r\n        category: 'tome',\r\n        uuids: [\r\n            'Compendium.pf2e.classfeatures.MyN1cQgE0HsLF20e', // Tome\r\n            'Compendium.pf2e.classfeatures.Obm4ItMIIr0whYeO', // Implement Adept\r\n            'Compendium.pf2e.classfeatures.ZEUxZ4Ta1kDPHiq5', // Second Adept\r\n            'Compendium.pf2e.feats-srd.yRRM1dsY6jakEMaC', // Intense Implement\r\n            'Compendium.pf2e.classfeatures.QEtgbY8N2V4wTbsI', // Implement Paragon\r\n        ],\r\n    },\r\n    // AddedResistance\r\n    {\r\n        type: 'addedResistance',\r\n        category: 'elementalist',\r\n        uuids: ['Compendium.pf2e.feats-srd.tx9pkrpmtqe4FnvS'], // Elementalist Dedication\r\n    },\r\n    // GanziHeritage\r\n    {\r\n        type: 'ganziHeritage',\r\n        category: 'ganzi',\r\n        uuids: ['Compendium.pf2e.heritages.3reGfXH0S82hM7Gp'], // Ganzi\r\n    },\r\n    // TrainedLore\r\n    {\r\n        type: 'trainedLore',\r\n        category: 'study',\r\n        uuids: ['Compendium.pf2e.feats-srd.aLJsBBZzlUK3G8MW'], // Quick Study\r\n    },\r\n    // TrainedSkill\r\n    {\r\n        type: 'trainedSkill',\r\n        category: 'ageless',\r\n        uuids: ['Compendium.pf2e.feats-srd.wylnETwIz32Au46y'], // Ageless Spirit\r\n    },\r\n    {\r\n        type: 'trainedSkill',\r\n        category: 'longevity',\r\n        uuids: ['Compendium.pf2e.feats-srd.WoLh16gyDp8y9WOZ'], // Ancestral Longevity\r\n    },\r\n    {\r\n        type: 'trainedSkill',\r\n        category: 'memories',\r\n        uuids: ['Compendium.pf2e.feats-srd.ptEOt3lqjxUnAW62'], // Ancient Memories\r\n    },\r\n    {\r\n        type: 'trainedSkill',\r\n        category: 'studies',\r\n        uuids: ['Compendium.pf2e.feats-srd.9bgl6qYWKHzqWZj0'], // Flexible Studies\r\n    },\r\n    // AddedLanguage\r\n    {\r\n        type: 'addedLanguage',\r\n        category: 'linguistics',\r\n        uuids: ['Compendium.pf2e.feats-srd.eCWQU16hRLfN1KaX'], // Ancestral Linguistics\r\n    },\r\n    {\r\n        type: 'addedLanguage',\r\n        category: 'borts',\r\n        uuids: ['Compendium.pf2e.equipment-srd.iS7hAQMAaThHYE8g'], // Bort's Blessing\r\n    },\r\n    // CombatFlexibility\r\n    {\r\n        type: 'combatFlexibility',\r\n        category: 'flexibility',\r\n        uuids: [\r\n            'Compendium.pf2e.classfeatures.8g6HzARbhfcgilP8', // Combat Flexibility\r\n            'Compendium.pf2e.classfeatures.W2rwudMNcAxs8VoX', // Improved Flexibility\r\n        ],\r\n    },\r\n    // ScrollSavant\r\n    {\r\n        type: 'scrollSavant',\r\n        category: 'savant',\r\n        uuids: ['Compendium.pf2e.feats-srd.u5DBg0LrBUKP0JsJ'], // Scroll Savant\r\n    },\r\n    // ScrollChain\r\n    {\r\n        type: 'scrollChain',\r\n        category: 'esoterica',\r\n        uuids: [\r\n            'Compendium.pf2e.feats-srd.OqObuRB8oVSAEKFR', // Scroll Esoterica\r\n            'Compendium.pf2e.feats-srd.nWd7m0yRcIEVUy7O', // Elaborate Scroll Esoterica\r\n            'Compendium.pf2e.feats-srd.LHjPTV5vP3MOsPPJ', // Grand Scroll Esoterica\r\n        ],\r\n    },\r\n    {\r\n        type: 'scrollChain',\r\n        category: 'trickster',\r\n        uuids: [\r\n            'Compendium.pf2e.feats-srd.ROAUR1GhC19Pjk9C', // Basic Scroll Cache\r\n            'Compendium.pf2e.feats-srd.UrOj9TROtn8nuxPf', // Expert Scroll Cache\r\n            'Compendium.pf2e.feats-srd.lIg5Gzz7W70jfbk1', // Master Scroll Cache\r\n        ],\r\n    },\r\n] as const\r\n\r\nconst { CATEGORIES, UUIDS, FIRST_FEATS, FIRST_EQUIPMENTS, FIRST_HERITAGES, RULES } = (() => {\r\n    const CATEGORIES = {} as Record<CategoryName, ItemUUID[]>\r\n    const UUIDS: Map<ItemUUID, Category & { index: number }> = new Map()\r\n    const RULES: ItemUUID[] = []\r\n    const FIRST_FEATS: ItemUUID[] = []\r\n    const FIRST_EQUIPMENTS: ItemUUID[] = []\r\n    const FIRST_HERITAGES: ItemUUID[] = []\r\n\r\n    for (const { type, category, uuids } of CATEGORY_DATA) {\r\n        const isRule = RULE_TYPES.includes(type as typeof RULE_TYPES[number])\r\n        CATEGORIES[category] ??= []\r\n\r\n        for (let index = 0; index < uuids.length; index++) {\r\n            const uuid = uuids[index]\r\n            CATEGORIES[category].push(uuid)\r\n            UUIDS.set(uuid, { type, category, index })\r\n            if (isRule) RULES.push(uuid)\r\n        }\r\n\r\n        // for fast check on any category\r\n        const firstUUID = uuids[0]\r\n        if (firstUUID.includes('equipment-srd')) FIRST_EQUIPMENTS.push(firstUUID)\r\n        else if (firstUUID.includes('heritages')) FIRST_HERITAGES.push(firstUUID)\r\n        else FIRST_FEATS.push(firstUUID)\r\n    }\r\n\r\n    return { CATEGORIES, UUIDS, FIRST_FEATS, FIRST_EQUIPMENTS, FIRST_HERITAGES, RULES }\r\n})()\r\n\r\nexport function hasAnyCategory(actor: CharacterPF2e) {\r\n    const itemTypes = actor.itemTypes\r\n    return (\r\n        // !!getRations(actor) ||\r\n        actor.familiar ||\r\n        itemTypes.heritage.some(item => includesSourceId(item, FIRST_HERITAGES)) ||\r\n        itemTypes.feat.some(item => includesSourceId(item, FIRST_FEATS)) ||\r\n        itemTypes.equipment.some(item => !(item.isInvested === false) && includesSourceId(item, FIRST_EQUIPMENTS))\r\n    )\r\n}\r\n\r\nexport function getCategoryUUIDS(category: CategoryName) {\r\n    return CATEGORIES[category] as ItemUUID[]\r\n}\r\n\r\nexport function getRuleItems(actor: CharacterPF2e) {\r\n    return filterItemsWithSourceId(actor, RULES, ['feat', 'equipment', 'heritage'])\r\n}\r\n\r\nexport function isRuleItem(item: ItemPF2e) {\r\n    return includesSourceId(item, RULES)\r\n}\r\n\r\ntype ReturnedCategory<C extends Category = Category> = C & {\r\n    label: string\r\n    items: [ItemPF2e, ...(undefined | ItemPF2e)[]]\r\n}\r\n\r\ntype PreReturnedCategories = Partial<Record<CategoryName, Omit<ReturnedCategory, 'items'> & { items: (undefined | ItemPF2e)[] }>>\r\n\r\nexport function hasCategories(actor: CharacterPF2e) {\r\n    const categories: PreReturnedCategories = {}\r\n    const items = getItems(actor, ['heritage', 'feat', 'equipment', 'weapon'])\r\n\r\n    for (const item of items) {\r\n        const sourceId = getSourceId<ItemUUID>(item)\r\n        if (!sourceId || (item.isOfType('equipment') && item.isInvested === false)) continue\r\n\r\n        const entry = UUIDS.get(sourceId)\r\n        if (!entry) continue\r\n\r\n        const { category, index, type } = entry\r\n        categories[category] ??= { category, type, label: '', items: [] }\r\n        categories[category]!.items[index] = item\r\n\r\n        if (index === 0) {\r\n            const key = `label.${category}`\r\n            const label = hasLocalization(key) ? localize(key) : item.name\r\n            categories[category]!.label = label\r\n        }\r\n    }\r\n\r\n    return Object.values(categories).filter(x => x.items[0]) as ReturnedCategory[]\r\n}\r\n\r\nexport function isReturnedCategory<N extends CategoryType, C extends Category = ExtractedCategory<N>>(\r\n    object: ReturnedCategory,\r\n    category: N | N[]\r\n): object is ReturnedCategory<C> {\r\n    if (typeof category === 'string') return object.type === category\r\n    return category.includes(object.type as N)\r\n}\r\n","export const WEAPON_GROUPS = {\r\n    slashing: 'sword',\r\n    piercing: 'spear',\r\n    bludgeoning: 'club',\r\n} as const\r\n\r\nexport const WEAPON_DAMAGE_TYPES = Object.keys(WEAPON_GROUPS) as MindSmithDamageType[]\r\n\r\nexport const WEAPON_BASE_TYPES = {\r\n    '0': { die: 'd4', traits: ['finesse', 'agile'], usage: 'held-in-one-hand' },\r\n    '1': { die: 'd6', traits: ['finesse'], usage: 'held-in-one-hand' },\r\n    '2': { die: 'd8', traits: [], usage: 'held-in-one-hand' },\r\n    '3': { die: 'd10', traits: ['reach'], usage: 'held-in-two-hands' },\r\n} as const\r\n\r\nexport const WEAPON_TRAITS = ['grapple', 'nonlethal', 'shove', 'trip', 'modular'] as const\r\n\r\nexport const WEAPON_RUNES = ['corrosive', 'disrupting', 'flaming', 'frost', 'shock', 'thundering'] as const\r\n\r\nexport const WEAPON_GREATER_RUNES = [\r\n    'anarchic',\r\n    'axiomatic',\r\n    'greaterCorrosive',\r\n    'greaterDisrupting',\r\n    'greaterFlaming',\r\n    'greaterFrost',\r\n    'greaterShock',\r\n    'greaterThundering',\r\n    'holy',\r\n    'unholy',\r\n] as const\r\n\r\nexport const RUNE_PROPERTY_KEYS = ['propertyRune1', 'propertyRune2', 'propertyRune3', 'propertyRune4'] as const\r\n\r\nexport function getFreePropertySlot(\r\n    weapon: WeaponPF2e\r\n): null | 'propertyRune1' | 'propertyRune2' | 'propertyRune3' | 'propertyRune4' {\r\n    const potency = weapon.system.potencyRune.value\r\n    if (potency === null) return null\r\n\r\n    for (let i = 0; i < potency; i++) {\r\n        const property = RUNE_PROPERTY_KEYS[i]\r\n        if (!weapon.system[property].value) return property\r\n    }\r\n\r\n    return null\r\n}\r\n\r\nexport function runetoLabel(rune: MindSmithWeaponAllRunes | '') {\r\n    return rune.replace('greater', 'greater ') as MindSmithWeaponAllRunes\r\n}\r\n\r\nexport function labelToRune(label: string) {\r\n    return label.replace('greater ', 'greater') as MindSmithWeaponAllRunes\r\n}\r\n","import { MODULE_ID } from '@utils/module'\r\n\r\nexport function getSettingLocalizationPath(...path: string[]) {\r\n    return `${MODULE_ID}.settings.${path.join('.')}`\r\n}\r\n\r\nexport function flagsUpdatePath(...path: string[]) {\r\n    return `flags.${MODULE_ID}.${path.join('/')}`\r\n}\r\n\r\nexport function templatePath(...path: string[]) {\r\n    path = path.filter(x => typeof x === 'string')\r\n    return `modules/${MODULE_ID}/templates/${path.join('/')}`\r\n}\r\n\r\nexport function imagePath(...path: string[]) {\r\n    return `modules/${MODULE_ID}/images/${path.join('/')}`\r\n}\r\n","export function getHighestSpellSlot(actor: ActorPF2e) {\r\n    let maxSlot = 0\r\n    for (const entry of actor.spellcasting) {\r\n        if (entry.flags['pf2e-staves']) continue // we skip staff entries\r\n        const slots = entry.system.slots\r\n        for (const key in slots) {\r\n            const slot = slots[key as SlotKey]\r\n            if (slot.max) maxSlot = Math.max(maxSlot, Number(key.slice(4)))\r\n        }\r\n    }\r\n    return maxSlot as ZeroToEleven\r\n}\r\n\r\nexport const PROFICIENCY_RANKS = ['untrained', 'trained', 'expert', 'master', 'legendary'] as const\r\n","export const SKILL_DICTIONARY = {\r\n    acr: 'acrobatics',\r\n    arc: 'arcana',\r\n    ath: 'athletics',\r\n    cra: 'crafting',\r\n    dec: 'deception',\r\n    dip: 'diplomacy',\r\n    itm: 'intimidation',\r\n    med: 'medicine',\r\n    nat: 'nature',\r\n    occ: 'occultism',\r\n    prf: 'performance',\r\n    rel: 'religion',\r\n    soc: 'society',\r\n    ste: 'stealth',\r\n    sur: 'survival',\r\n    thi: 'thievery',\r\n} as const\r\n\r\nexport const SKILL_ABBREVIATIONS = Object.keys(SKILL_DICTIONARY) as (keyof typeof SKILL_DICTIONARY)[]\r\n\r\nexport const SKILL_LONG_FORMS = Object.values(SKILL_DICTIONARY)\r\n","export function cleanSplit(str: string | undefined) {\r\n    if (!str) return []\r\n    return str\r\n        .split(',')\r\n        .map(x => x.trim())\r\n        .filter(x => x)\r\n}\r\n\r\nexport function capitalize(str?: string) {\r\n    if (!str) return ''\r\n    return str[0].toUpperCase() + str.slice(1)\r\n}\r\n","export function getFamiliarPack() {\r\n    return game.packs.get<CompendiumCollection<EffectPF2e>>('pf2e.familiar-abilities')!\r\n}\r\n\r\nexport function familiarUUID(id: string) {\r\n    return `Compendium.pf2e.familiar-abilities.${id}` as ItemUUID\r\n}\r\n","export function chatUUID(uuid: string, name?: string) {\r\n    if (name) return `@UUID[${uuid}]{${name}}`\r\n    return `@UUID[${uuid}]`\r\n}\r\n\r\nexport function fakeChatUUID(name: string) {\r\n    return `<span style=\"background: #DDD;\r\n    padding: 1px 4px;\r\n    border: 1px solid var(--color-border-dark-tertiary);\r\n    border-radius: 2px;\r\n    white-space: nowrap;\r\n    word-break: break-all;\">${name}</span>`\r\n}\r\n","import { chatUUID } from '@utils/foundry/uuid'\r\n\r\nexport const MAGIC_TRADITIONS = new Set(['arcane', 'divine', 'occult', 'primal'] as const)\r\n\r\nexport const SPELL_COMPONENTS = ['focus', 'material', 'somatic', 'verbal'] as const\r\n\r\nconst scrolls: (ConsumablePF2e | null)[] = []\r\nexport async function createSpellScroll(uuid: ItemUUID, level: OneToTen | false, temp = false) {\r\n    const spell = (await fromUuid<SpellPF2e>(uuid))?.toObject()\r\n    if (!spell) return null\r\n\r\n    if (level === false) level = spell.system.level.value\r\n\r\n    const scrollUUID = getScrollCompendiumUUID(level)\r\n    scrolls[level] ??= await fromUuid<ConsumablePF2e>(scrollUUID)\r\n\r\n    const scroll = scrolls[level]?.toObject()\r\n    if (!scroll) return null\r\n\r\n    spell.system.location.heightenedLevel = level\r\n\r\n    scroll.name = `Scroll of ${spell.name} (Level ${level})`\r\n    scroll.system.temporary = temp\r\n    scroll.system.spell = spell\r\n    scroll.system.traits.value.push(...spell.system.traditions.value)\r\n\r\n    const sourceId = spell.flags.core?.sourceId\r\n    if (sourceId) scroll.system.description.value = `${chatUUID(sourceId)}\\n<hr />${scroll.system.description.value}`\r\n\r\n    return scroll\r\n}\r\n\r\nfunction getScrollCompendiumUUID(level: OneToTen): ItemUUID {\r\n    return `Compendium.pf2e.equipment-srd.${scrollCompendiumIds[level]}`\r\n}\r\n\r\nconst scrollCompendiumIds: Record<number, string> = {\r\n    1: 'RjuupS9xyXDLgyIr', // Compendium.pf2e.equipment-srd.RjuupS9xyXDLgyIr\r\n    2: 'Y7UD64foDbDMV9sx',\r\n    3: 'ZmefGBXGJF3CFDbn',\r\n    4: 'QSQZJ5BC3DeHv153',\r\n    5: 'tjLvRWklAylFhBHQ',\r\n    6: '4sGIy77COooxhQuC',\r\n    7: 'fomEZZ4MxVVK3uVu',\r\n    8: 'iPki3yuoucnj7bIt',\r\n    9: 'cFHomF3tty8Wi1e5',\r\n    10: 'o1XIHJ4MJyroAHfF',\r\n}\r\n","import { getFreePropertySlot, WEAPON_GROUPS } from '@data/weapon'\r\nimport { getCategoryUUIDS, getRuleItems, RULE_TYPES } from '@src/categories'\r\nimport { familiarUUID, getFamiliarPack } from '@src/data/familiar'\r\nimport { getFlag, hasSourceId, setFlag } from '@utils/foundry/flags'\r\nimport { findItemWithSourceId } from '@utils/foundry/item'\r\nimport { hasLocalization, localize, subLocalize } from '@utils/foundry/localize'\r\nimport { chatUUID } from '@utils/foundry/uuid'\r\nimport { MODULE_ID } from '@utils/module'\r\nimport { PROFICIENCY_RANKS } from '@utils/pf2e/actor'\r\nimport { createSpellScroll } from '@utils/pf2e/spell'\r\nimport { sluggify } from '@utils/pf2e/utils'\r\nimport { capitalize } from '@utils/string'\r\n\r\nconst msg = subLocalize('interface.message')\r\n\r\ntype ReturnedMessage = { uuid?: ItemUUID; selected?: string; label?: string; random?: boolean }\r\n\r\nexport async function accept(html: JQuery, actor: CharacterPF2e) {\r\n    let message = ''\r\n    const flags = {} as SavedCategories\r\n    const fields = html.find('.window-content .content').find('input:not(.alert), select[data-type]').toArray() as TemplateField[]\r\n    const ruleItems = fields.some(field => RULE_TYPES.includes(field.dataset.type as RulesName)) ? getRuleItems(actor) : []\r\n    const addData: Partial<BaseItemSourcePF2e>[] = []\r\n    const updateData: EmbeddedDocumentUpdateData<ItemPF2e>[] = []\r\n    const rulesToAdd: Map<string, RuleElementSource[]> = new Map()\r\n    const addToFamiliar: string[] = []\r\n\r\n    const getRules = (item: ItemPF2e) => {\r\n        const id = item.id\r\n        const existing = rulesToAdd.get(id)\r\n        if (existing) return existing\r\n\r\n        const rules = deepClone(item._source.system.rules)\r\n\r\n        for (let i = rules.length - 1; i >= 0; i--) {\r\n            const rule = rules[i]\r\n            if (MODULE_ID in rule) rules.splice(i, 1)\r\n        }\r\n\r\n        rulesToAdd.set(id, rules)\r\n        return rules\r\n    }\r\n\r\n    const messages = {\r\n        languages: [] as ReturnedMessage[],\r\n        skills: [] as ReturnedMessage[],\r\n        tome: [] as ReturnedMessage[],\r\n        resistances: [] as ReturnedMessage[],\r\n        feats: [] as ReturnedMessage[],\r\n        scrolls: [] as ReturnedMessage[],\r\n        spells: [] as ReturnedMessage[],\r\n        mind: [] as ReturnedMessage[],\r\n        familiar: [] as ReturnedMessage[],\r\n    }\r\n\r\n    for (const field of fields) {\r\n        const type = field.dataset.type\r\n\r\n        if (type === 'scrollChain' || type === 'scrollSavant') {\r\n            const { uuid, category } = field.dataset\r\n            const level = Number(field.dataset.level) as OneToTen\r\n\r\n            const scroll = await createSpellScroll(uuid, level, true)\r\n            if (scroll) addData.push(scroll)\r\n\r\n            flags[category] ??= []\r\n            flags[category]!.push({ name: field.value, uuid })\r\n        } else if (type === 'addedFeat' || type === 'combatFlexibility') {\r\n            const { category, uuid, level } = field.dataset\r\n            const index = type === 'combatFlexibility' ? (level === '8' ? 0 : 1) : 0\r\n            const parentUUID = getCategoryUUIDS(category)[index]\r\n\r\n            if (parentUUID) {\r\n                const parent = findItemWithSourceId<CharacterPF2e, FeatPF2e>(actor, parentUUID, ['feat'])\r\n                if (parent) {\r\n                    const feat = await createTemporaryFeat(uuid, parent)\r\n                    if (feat) addData.push(feat)\r\n                }\r\n            }\r\n\r\n            if (type === 'combatFlexibility') {\r\n                flags[field.dataset.category] ??= []\r\n                flags[field.dataset.category]!.push({ name: field.value, uuid })\r\n            } else {\r\n                flags[field.dataset.category] = { uuid, name: field.value }\r\n            }\r\n        } else if (type === 'trainedLore') {\r\n            const category = field.dataset.category\r\n            const uuid = getCategoryUUIDS(category)[0]\r\n            const selected = field.value\r\n\r\n            const lore = createTemporaryLore(selected, 1)\r\n            addData.push(lore)\r\n            messages.skills.push({ uuid, selected, label: category })\r\n\r\n            flags[category] = selected\r\n        } else if (type === 'tricksterAce') {\r\n            const { category, uuid } = field.dataset\r\n            const name = field.value\r\n\r\n            const entrySlug = sluggify(\"Trickster's Ace\", { camel: 'dromedary' })\r\n            const spell = await createSpellcastingSpell(uuid, 4, entrySlug)\r\n\r\n            if (spell) {\r\n                const proficiency = actor.classDC?.slug || actor.class?.slug\r\n                const entry = createSpellcastingEntry(\"Trickster's Ace\", entrySlug, proficiency)\r\n                addData.push(spell)\r\n                addData.push(entry)\r\n            }\r\n\r\n            flags[category] = { name, uuid }\r\n        } else if (type === 'trainedSkill' || type === 'thaumaturgeTome') {\r\n            const { input, category } = field.dataset\r\n            const selected = field.value\r\n            const uuid = getCategoryUUIDS(category)[0]\r\n            const rank = type === 'thaumaturgeTome' ? Number(field.dataset.rank) : 1\r\n            const isInput = input === 'true'\r\n\r\n            if (isInput) {\r\n                const lore = createTemporaryLore(selected, rank)\r\n                addData.push(lore)\r\n            } else {\r\n                const ruleItem = ruleItems.find(item => hasSourceId(item, uuid))\r\n                if (!ruleItem) continue\r\n\r\n                const rules = getRules(ruleItem)\r\n                rules.push(createSkillRule(selected.toLowerCase(), rank))\r\n            }\r\n\r\n            const toSave = { selected: isInput ? selected : selected.toLowerCase(), input: isInput }\r\n\r\n            if (type === 'trainedSkill') {\r\n                messages.skills.push({ uuid, selected, label: category })\r\n                flags[field.dataset.category] = toSave\r\n            } else if (type === 'thaumaturgeTome') {\r\n                const category = field.dataset.category\r\n                messages.tome.push({ selected, label: PROFICIENCY_RANKS[rank] })\r\n                flags[category] ??= []\r\n                flags[category].push(toSave)\r\n            }\r\n        } else if (type === 'mindSmith') {\r\n            const { category, subcategory } = field.dataset\r\n            const uuids = getCategoryUUIDS(category)\r\n            const weapon = findItemWithSourceId<CharacterPF2e, WeaponPF2e>(actor, uuids[1], ['weapon'])\r\n            if (!weapon) continue\r\n\r\n            flags[category] ??= {}\r\n\r\n            if (subcategory === 'damage') {\r\n                const selected = field.value as MindSmithDamageType\r\n                updateData.push({ _id: weapon.id, 'system.damage.damageType': selected, 'system.group': WEAPON_GROUPS[selected] })\r\n                messages.mind.push({ selected, uuid: uuids[0], label: 'mindsmith' })\r\n                flags[category]![subcategory] = selected\r\n            } else if (subcategory === 'trait') {\r\n                const selected = field.value as MindSmithWeaponTrait\r\n                const traits = deepClone(weapon._source.system.traits?.value ?? [])\r\n                if (!traits.includes(selected)) traits.push(selected)\r\n                updateData.push({ _id: weapon.id, 'system.traits.value': traits })\r\n                messages.mind.push({ selected, uuid: uuids[2], label: 'mentalforge' })\r\n                flags[category]![subcategory] = selected\r\n            } else if (subcategory === 'rune') {\r\n                const propertySlot = getFreePropertySlot(weapon)\r\n                if (!propertySlot) continue\r\n\r\n                const selected = field.value as MindSmithWeaponAllRunes\r\n                updateData.push({ _id: weapon.id, [`system.${propertySlot}.value`]: selected })\r\n                messages.mind.push({ selected, uuid: uuids[3], label: 'runicmind' })\r\n                flags[category]![subcategory] = selected\r\n                setFlag(actor, 'weapon.runeProperty', propertySlot)\r\n            }\r\n        } else if (type === 'familiarAbility') {\r\n            const category = field.dataset.category\r\n            const id = field.value\r\n\r\n            if (actor.familiar) {\r\n                addToFamiliar.push(field.value)\r\n                messages.familiar.push({ uuid: familiarUUID(id) })\r\n            }\r\n\r\n            flags[category] ??= []\r\n            flags[category].push(id)\r\n        } else {\r\n            const category = field.dataset.category\r\n            const uuid = getCategoryUUIDS(category)[0]\r\n            const ruleItem = ruleItems.find(item => hasSourceId(item, uuid))\r\n            if (!ruleItem) continue\r\n\r\n            const rules = getRules(ruleItem)\r\n\r\n            if (type === 'addedLanguage') {\r\n                const selected = field.value as Language\r\n                rules.push(createLanguageRule(selected))\r\n                messages.languages.push({ uuid, selected, label: category })\r\n                flags[field.dataset.category] = selected\r\n            } else if (type === 'addedResistance') {\r\n                const selected = field.value as ResistanceType\r\n                rules.push(createResistanceRule(selected, 'half'))\r\n                messages.resistances.push({ uuid, selected, label: category })\r\n                flags[field.dataset.category] = selected\r\n            } else if (type === 'ganziHeritage') {\r\n                const options = Array.from((field as SelectTemplateField).options).map(x => x.value) as ResistanceType[]\r\n                const selected = await randomOptions(options)\r\n                rules.push(createResistanceRule(selected, 'half'))\r\n                messages.resistances.push({ uuid, selected, label: category, random: true })\r\n                flags[field.dataset.category] = selected\r\n            }\r\n        }\r\n    }\r\n\r\n    for (const [id, rules] of rulesToAdd) {\r\n        updateData.push({ _id: id, 'system.rules': rules })\r\n    }\r\n\r\n    const pushMessages = (type: string, list: ReturnedMessage[]) => {\r\n        if (!list.length) return\r\n\r\n        if (message) message += '<hr />'\r\n\r\n        const title = msg.has(type) ? msg(type) : msg('gained', { type })\r\n        message += `<p><strong>${title}</strong></p>`\r\n\r\n        for (let { uuid, selected, label, random = false } of list) {\r\n            label = label && hasLocalization(`label.${label}`) ? localize(`label.${label}`) : label\r\n            label = capitalize(label)\r\n\r\n            message += '<p>'\r\n            message += uuid ? `${chatUUID(uuid, label)}` : `<strong>${label}</strong>`\r\n\r\n            if (selected) message += ` <span style=\"text-transform: capitalize;\">${selected}</span>`\r\n            if (random) message += ' <i class=\"fa-solid fa-dice-d20\"></i>'\r\n            message += '</p>'\r\n        }\r\n    }\r\n\r\n    if (actor.familiar) {\r\n        const familiar = actor.familiar\r\n\r\n        // we remove old abilities\r\n        const ids = familiar.itemTypes.effect.map(x => x.id)\r\n        if (ids.length) familiar.deleteEmbeddedDocuments('Item', ids)\r\n\r\n        if (addToFamiliar.length) {\r\n            const pack = getFamiliarPack()\r\n            const items: EffectSource[] = []\r\n\r\n            for (const id of addToFamiliar) {\r\n                const source = (await pack.getDocument(id))?.toObject()\r\n                if (source) items.push(source)\r\n            }\r\n\r\n            if (items.length) familiar.createEmbeddedDocuments('Item', items)\r\n        }\r\n    }\r\n\r\n    if (addData.length) {\r\n        const items = (await actor.createEmbeddedDocuments('Item', addData)) as ItemPF2e[]\r\n        for (const item of items) {\r\n            const uuid = item.uuid\r\n\r\n            if (item.type === 'feat') messages.feats.push({ uuid })\r\n            else if (item.type === 'consumable') messages.scrolls.push({ uuid })\r\n            // we populate the spellcasting entries with the spells\r\n            else if (item.type === 'spellcastingEntry') {\r\n                const slug = item.slug\r\n                const spells = items.filter(x => x.type === 'spell' && getFlag(x, 'parent') === slug) as SpellPF2e[]\r\n                for (const spell of spells) {\r\n                    const level = getFlag(spell, 'level')\r\n                    updateData.push({ _id: spell.id, 'system.location.value': item.id, 'system.location.heightenedLevel': level })\r\n                    messages.spells.push({ uuid: spell.uuid })\r\n                }\r\n            }\r\n\r\n            // we add a flag to the parent feat to have the cascade effect in the tab\r\n            const parentId = item.getFlag<string>('pf2e', 'grantedBy.id')\r\n            if (parentId) {\r\n                const slug = sluggify(item.name, { camel: 'dromedary' })\r\n                const path = `flags.pf2e.itemGrants.${slug}`\r\n                updateData.push({ _id: parentId, [path]: { id: item.id, onDelete: 'detach' } })\r\n            }\r\n        }\r\n    }\r\n\r\n    pushMessages('languages', messages.languages)\r\n    pushMessages('skills', messages.skills)\r\n    pushMessages('tome', messages.tome)\r\n    pushMessages('mindsmith', messages.mind)\r\n    pushMessages('resistances', messages.resistances)\r\n    pushMessages('feats', messages.feats)\r\n    pushMessages('spells', messages.spells)\r\n    pushMessages('scrolls', messages.scrolls)\r\n    pushMessages('familiar', messages.familiar)\r\n\r\n    if (updateData.length) await actor.updateEmbeddedDocuments('Item', updateData)\r\n\r\n    await setFlag(actor, 'saved', flags)\r\n\r\n    message = `${msg('changes')}<hr>${message}`\r\n    ChatMessage.create({ content: message, speaker: ChatMessage.getSpeaker({ actor }) })\r\n}\r\n\r\nasync function randomOptions<T extends string>(options: T[]) {\r\n    const roll = (await new Roll(`1d${options.length}`).evaluate({ async: true })).total\r\n    return options[roll - 1]\r\n}\r\n\r\nfunction createTemporaryLore(name: string, rank: number) {\r\n    const data: Partial<BaseItemSourcePF2e> = {\r\n        type: 'lore',\r\n        img: 'systems/pf2e/icons/default-icons/lore.svg',\r\n        name: name,\r\n        flags: {\r\n            [MODULE_ID]: { temporary: true },\r\n        },\r\n    }\r\n\r\n    setProperty(data, 'system.proficient.value', rank)\r\n\r\n    return data\r\n}\r\n\r\nasync function createTemporaryFeat(uuid: ItemUUID, parent: FeatPF2e) {\r\n    const feat = (await fromUuid<FeatPF2e>(uuid))?.toObject()\r\n    if (!feat) return\r\n\r\n    setProperty(feat, 'flags.pf2e.grantedBy', { id: parent.id, onDelete: 'cascade' })\r\n    setProperty(feat, `flags.${MODULE_ID}.temporary`, true)\r\n\r\n    return feat\r\n}\r\n\r\nfunction createLanguageRule(language: string) {\r\n    return {\r\n        key: 'ActiveEffectLike',\r\n        mode: 'add',\r\n        path: 'system.traits.languages.value',\r\n        value: language,\r\n        [MODULE_ID]: true,\r\n    } as const\r\n}\r\n\r\nfunction createSkillRule(skill: string, rank: number) {\r\n    return {\r\n        key: 'ActiveEffectLike',\r\n        mode: 'upgrade',\r\n        path: `system.skills.${skill}.rank`,\r\n        value: Number(rank),\r\n        [MODULE_ID]: true,\r\n    } as const\r\n}\r\n\r\nfunction createResistanceRule(type: string, value: number | string | 'half') {\r\n    if (value === 'half') value = 'max(1,floor(@actor.level/2))'\r\n    return {\r\n        key: 'Resistance',\r\n        type,\r\n        value,\r\n        [MODULE_ID]: true,\r\n    } as const\r\n}\r\n\r\nasync function createSpellcastingSpell(uuid: ItemUUID, level: OneToTen, entry: string) {\r\n    const spell = (await fromUuid<SpellPF2e>(uuid))?.toObject()\r\n    if (!spell) return\r\n\r\n    setProperty(spell, `flags.${MODULE_ID}`, { parent: entry, level })\r\n\r\n    return spell\r\n}\r\n\r\nfunction createSpellcastingEntry(name: string, slug: string, proficiency: string | undefined | null) {\r\n    const entry: Partial<BaseItemSourcePF2e> = {\r\n        type: 'spellcastingEntry',\r\n        img: 'systems/pf2e/icons/default-icons/spellcastingEntry.svg',\r\n        name,\r\n        flags: {\r\n            [MODULE_ID]: { temporary: true },\r\n        },\r\n    }\r\n\r\n    setProperty(entry, 'system', {\r\n        slug,\r\n        prepared: { value: 'innate' },\r\n        showSlotlessLevels: { value: false },\r\n        showUnpreparedSpells: { value: false },\r\n        proficiency: { value: 1, slug: proficiency },\r\n    })\r\n\r\n    return entry\r\n}\r\n","import { DailiesInterface } from '@apps/interface'\r\nimport { WEAPON_BASE_TYPES } from '@data/weapon'\r\nimport { MINDSMITH_WEAPON_UUID } from '@src/categories'\r\nimport { subLocalize } from '@utils/foundry/localize'\r\n\r\nconst localize = subLocalize('dialog')\r\n\r\nexport async function onAlert(this: DailiesInterface, event: JQuery.ClickEvent) {\r\n    event.preventDefault()\r\n\r\n    const input = event.currentTarget.previousElementSibling as AlertTemplateField\r\n    const { type } = input.dataset\r\n\r\n    if (type === 'mindSmith') {\r\n        onWeaponAlert.call(this)\r\n    }\r\n}\r\n\r\nasync function onWeaponAlert(this: DailiesInterface) {\r\n    let content = localize('weapon.flavor')\r\n    content += '<hr />'\r\n\r\n    for (const key of ['0', '1', '2', '3']) {\r\n        const label = localize(`weapon.option.${key}`)\r\n        content += `<label><input type=\"radio\" name=\"type\" value=\"${key}\">${label}</label>`\r\n    }\r\n\r\n    await Dialog.wait(\r\n        {\r\n            title: localize('weapon.title'),\r\n            content,\r\n            buttons: {\r\n                yes: {\r\n                    icon: '<i class=\"fas fa-save\"></i>',\r\n                    label: localize('weapon.accept'),\r\n                    callback: onWeaponSelected.bind(this),\r\n                },\r\n                no: {\r\n                    icon: '<i class=\"fas fa-times\"></i>',\r\n                    label: localize('weapon.cancel'),\r\n                },\r\n            },\r\n            close: () => false,\r\n        },\r\n        {},\r\n        { id: 'pf2e-dailies-weapon', width: 600 }\r\n    )\r\n}\r\n\r\nasync function onWeaponSelected(this: DailiesInterface, html: JQuery) {\r\n    const selection = html.find('[name=type]:checked').val() as keyof typeof WEAPON_BASE_TYPES\r\n    if (!selection) return localize.warn('weapon.error.noSelection')\r\n\r\n    const weapon = (await fromUuid<WeaponPF2e>(MINDSMITH_WEAPON_UUID))?.toObject()\r\n    if (!weapon) return localize.warn('weapon.error.missing')\r\n\r\n    const stats = WEAPON_BASE_TYPES[selection]\r\n\r\n    setProperty(weapon, 'system.damage.die', stats.die)\r\n    setProperty(weapon, 'system.traits.value', stats.traits.slice())\r\n    setProperty(weapon, 'system.usage.value', stats.usage)\r\n\r\n    await this.actor.createEmbeddedDocuments('Item', [weapon])\r\n\r\n    this.render()\r\n}\r\n","const dcByLevel = new Map<number, number>()\r\ndcByLevel.set(-1, 13)\r\ndcByLevel.set(0, 14)\r\ndcByLevel.set(1, 15)\r\ndcByLevel.set(2, 16)\r\ndcByLevel.set(3, 18)\r\ndcByLevel.set(4, 19)\r\ndcByLevel.set(5, 20)\r\ndcByLevel.set(6, 22)\r\ndcByLevel.set(7, 23)\r\ndcByLevel.set(8, 24)\r\ndcByLevel.set(9, 26)\r\ndcByLevel.set(10, 27)\r\ndcByLevel.set(11, 28)\r\ndcByLevel.set(12, 30)\r\ndcByLevel.set(13, 31)\r\ndcByLevel.set(14, 32)\r\ndcByLevel.set(15, 34)\r\ndcByLevel.set(16, 35)\r\ndcByLevel.set(17, 36)\r\ndcByLevel.set(18, 38)\r\ndcByLevel.set(19, 39)\r\ndcByLevel.set(20, 40)\r\ndcByLevel.set(21, 42)\r\ndcByLevel.set(22, 44)\r\ndcByLevel.set(23, 46)\r\ndcByLevel.set(24, 48)\r\ndcByLevel.set(25, 50)\r\n\r\nconst dcAdjustments = new Map<DCAdjustment, number>()\r\ndcAdjustments.set('incredibly easy', -10)\r\ndcAdjustments.set('very easy', -5)\r\ndcAdjustments.set('easy', -2)\r\ndcAdjustments.set('normal', 0)\r\ndcAdjustments.set('hard', 2)\r\ndcAdjustments.set('very hard', 5)\r\ndcAdjustments.set('incredibly hard', 10)\r\n\r\n/**\r\n * Normal Level Based DCs\r\n * @param level\r\n * @param proficiencyWithoutLevel\r\n */\r\nexport function calculateDC(level: number, { proficiencyWithoutLevel = false, rarity = 'common' }: DCOptions = {}): number {\r\n    // assume level 0 if garbage comes in. We cast level to number because the backing data may actually have it\r\n    // stored as a string, which we can't catch at compile time\r\n    const dc = dcByLevel.get(level) ?? 14\r\n    if (proficiencyWithoutLevel) {\r\n        // -1 shouldn't be subtracted since it's just\r\n        // a creature level and not related to PC levels\r\n        return adjustDCByRarity(dc - Math.max(level, 0), rarity)\r\n    } else {\r\n        return adjustDCByRarity(dc, rarity)\r\n    }\r\n}\r\n\r\nexport function adjustDCByRarity(dc: number, rarity: Rarity = 'common') {\r\n    return adjustDC(dc, rarityToDCAdjustment(rarity))\r\n}\r\n\r\nexport function adjustDC(dc: number, adjustment: DCAdjustment = 'normal') {\r\n    return dc + (dcAdjustments.get(adjustment) ?? 0)\r\n}\r\n\r\nexport function rarityToDCAdjustment(rarity: Rarity = 'common'): PositiveDCAdjustment {\r\n    if (rarity === 'uncommon') {\r\n        return 'hard'\r\n    } else if (rarity === 'rare') {\r\n        return 'very hard'\r\n    } else if (rarity === 'unique') {\r\n        return 'incredibly hard'\r\n    } else {\r\n        return 'normal'\r\n    }\r\n}\r\n","import { adjustDCByRarity, calculateDC } from '@utils/pf2e/dc'\r\nimport { MAGIC_TRADITIONS } from '@utils/pf2e/spell'\r\nimport { setHasElement } from '@utils/pf2e/utils'\r\n\r\nexport function identifyItem(\r\n    item: PhysicalItemPF2e,\r\n    { proficiencyWithoutLevel = false, notMatchingTraditionModifier }: IdentifyItemOptions\r\n): GenericIdentifyDCs | IdentifyMagicDCs | IdentifyAlchemyDCs {\r\n    const baseDC = calculateDC(item.level, { proficiencyWithoutLevel })\r\n    const rarity = getDcRarity(item)\r\n    const dc = adjustDCByRarity(baseDC, rarity)\r\n    if (item.isMagical) {\r\n        return identifyMagic(item, dc, notMatchingTraditionModifier)\r\n    } else if (item.isAlchemical) {\r\n        return { cra: dc }\r\n    } else {\r\n        return { dc: dc }\r\n    }\r\n}\r\n\r\n/** All cursed items are incredibly hard to identify */\r\nfunction getDcRarity(item: PhysicalItemPF2e): Rarity {\r\n    return item.traits.has('cursed') ? 'unique' : item.rarity\r\n}\r\n\r\nfunction identifyMagic(item: PhysicalItemPF2e, baseDc: number, notMatchingTraditionModifier: number) {\r\n    const result = {\r\n        occult: baseDc,\r\n        primal: baseDc,\r\n        divine: baseDc,\r\n        arcane: baseDc,\r\n    }\r\n    const traditions = getMagicTraditions(item)\r\n    for (const key of MAGIC_TRADITIONS) {\r\n        // once an item has a magic tradition, all skills\r\n        // that don't match the tradition are hard\r\n        if (traditions.size > 0 && !traditions.has(key)) {\r\n            result[key] = baseDc + notMatchingTraditionModifier\r\n        }\r\n    }\r\n    return { arc: result.arcane, nat: result.primal, rel: result.divine, occ: result.occult }\r\n}\r\n\r\n/**\r\n * Extract all traits from an item, that match a magic tradition\r\n */\r\nfunction getMagicTraditions(item: PhysicalItemPF2e): Set<MagicTradition> {\r\n    const traits: string[] = item.system.traits.value\r\n    return new Set(traits.filter((t): t is MagicTradition => setHasElement(MAGIC_TRADITIONS, t)))\r\n}\r\n\r\nexport function getChoiSetRuleSelection<T extends unknown>(item: ItemPF2e, option: string) {\r\n    const rules = item._source.system.rules as ChoiceSetSource[]\r\n    const rule = rules.find(rule => rule.key === 'ChoiceSet' && rule.rollOption === option)\r\n    return rule?.selection as T | undefined\r\n}\r\n","export const LANGUAGE_LIST = [\r\n    'common',\r\n    'draconic',\r\n    'dwarven',\r\n    'elven',\r\n    'gnomish',\r\n    'goblin',\r\n    'halfling',\r\n    'jotun',\r\n    'orcish',\r\n    'sylvan',\r\n    'undercommon',\r\n    'ysoki',\r\n    'abyssal',\r\n    'adlet',\r\n    'aklo',\r\n    'akitonian',\r\n    'alghollthu',\r\n    'amurrun',\r\n    'anadi',\r\n    'ancient-osiriani',\r\n    'anugobu',\r\n    'arcadian',\r\n    'aquan',\r\n    'arboreal',\r\n    'auran',\r\n    'boggard',\r\n    'calda',\r\n    'caligni',\r\n    'celestial',\r\n    'cyclops',\r\n    'daemonic',\r\n    'destrachan',\r\n    'drooni',\r\n    'dziriak',\r\n    'ekujae',\r\n    'erutaki',\r\n    'formian',\r\n    'garundi',\r\n    'girtablilu',\r\n    'gnoll',\r\n    'goloma',\r\n    'grippli',\r\n    'hallit',\r\n    'hwan',\r\n    'iblydan',\r\n    'ignan',\r\n    'ikeshti',\r\n    'immolis',\r\n    'infernal',\r\n    'iruxi',\r\n    'jistkan',\r\n    'jyoti',\r\n    'kaava',\r\n    'kashrishi',\r\n    'kibwani',\r\n    'kitsune',\r\n    'kelish',\r\n    'lirgeni',\r\n    'mahwek',\r\n    'minaten',\r\n    'minkaian',\r\n    'mwangi',\r\n    'mzunu',\r\n    'nagaji',\r\n    'necril',\r\n    'ocotan',\r\n    'okaiyan',\r\n    'osiriani',\r\n    'protean',\r\n    'rasu',\r\n    'ratajin',\r\n    'razatlani',\r\n    'requian',\r\n    'russian',\r\n    'senzar',\r\n    'shadowtongue',\r\n    'shobhad',\r\n    'shisk',\r\n    'shoanti',\r\n    'shoony',\r\n    'skald',\r\n    'sphinx',\r\n    'strix',\r\n    'taldane',\r\n    'tekritanin',\r\n    'tengu',\r\n    'terran',\r\n    'thassilonian',\r\n    'tien',\r\n    'utopian',\r\n    'vanara',\r\n    'varisian',\r\n    'varki',\r\n    'vishkanyan',\r\n    'vudrani',\r\n    'wyrwood',\r\n    'xanmba',\r\n    'androffan',\r\n    'azlanti',\r\n    'grioth',\r\n    'kovintal',\r\n    'migo',\r\n    'munavri',\r\n    'samsaran',\r\n    'sasquatch',\r\n    'shae',\r\n    'yithian',\r\n    'druidic',\r\n] as const\r\n","import { hasCategories, isReturnedCategory } from '@src/categories'\r\nimport { getFamiliarPack } from '@src/data/familiar'\r\nimport {\r\n    getFreePropertySlot,\r\n    runetoLabel,\r\n    WEAPON_DAMAGE_TYPES,\r\n    WEAPON_GREATER_RUNES,\r\n    WEAPON_RUNES,\r\n    WEAPON_TRAITS,\r\n} from '@src/data/weapon'\r\nimport { getFlag } from '@utils/foundry/flags'\r\nimport { localize } from '@utils/foundry/localize'\r\nimport { PROFICIENCY_RANKS } from '@utils/pf2e/actor'\r\nimport { getChoiSetRuleSelection } from '@utils/pf2e/item'\r\nimport { LANGUAGE_LIST } from '@utils/pf2e/languages'\r\nimport { SKILL_LONG_FORMS } from '@utils/pf2e/skills'\r\nimport { capitalize } from '@utils/string'\r\n\r\nconst FOUR_ELEMENTS = ['air', 'earth', 'fire', 'water'] as const\r\nconst GANZI_RESISTANCES = ['acid', 'electricity', 'sonic'] as const\r\n\r\nconst sortOrder = new Proxy(\r\n    {\r\n        addedLanguage: 0,\r\n        trainedSkill: 1,\r\n        addedResistance: 2,\r\n        trainedLore: 3,\r\n    } as Partial<Record<CategoryType | symbol, number>>,\r\n    {\r\n        get(obj, prop) {\r\n            return prop in obj ? obj[prop as CategoryType] : 99\r\n        },\r\n    }\r\n) as Record<CategoryType, number>\r\n\r\nexport function getData(actor: CharacterPF2e) {\r\n    const actorLevel = actor.level\r\n    const flags = getFlag<SavedCategories>(actor, 'saved') ?? {}\r\n    const categories = hasCategories(actor)\r\n    const templates: BaseCategoryTemplate[] = []\r\n\r\n    if (actor.familiar) {\r\n        const category = 'familiar'\r\n        const rows: SelectRowTemplate<FamiliarAbility, string>[] = []\r\n        const nbAbilityies = actor.attributes.familiarAbilities.value\r\n        const options: SelectOption<string>[] = []\r\n\r\n        const indexes = getFamiliarPack().index\r\n        for (const index of indexes) {\r\n            options.push({ value: index._id, label: index.name })\r\n        }\r\n\r\n        for (let index = 0; index < nbAbilityies; index++) {\r\n            rows.push({\r\n                rowType: 'select',\r\n                value: flags[category]?.[index] ?? '',\r\n                options,\r\n                label: localize('label.ability', { nb: index + 1 }),\r\n            })\r\n        }\r\n\r\n        if (rows.length) {\r\n            templates.push({\r\n                type: 'familiarAbility',\r\n                category,\r\n                label: localize('label.familiar'),\r\n                rows,\r\n            })\r\n        }\r\n    }\r\n\r\n    for (const entry of categories) {\r\n        if (isReturnedCategory(entry, ['scrollChain', 'scrollSavant'])) {\r\n            const { type, category, label, items } = entry\r\n            const rows: DropRowTemplate[] = []\r\n\r\n            const spellSlot = (level: number, index: number = level - 1) => {\r\n                const { name = '', uuid = '' } = flags[category]?.[index] ?? {}\r\n                rows.push({\r\n                    rowType: 'drop',\r\n                    value: name,\r\n                    label: game.i18n.localize(`PF2E.SpellLevel${level}`),\r\n                    dataset: { uuid, level },\r\n                })\r\n            }\r\n\r\n            if (type === 'scrollChain') {\r\n                // first feat\r\n                spellSlot(1)\r\n                if (actorLevel >= 8) spellSlot(2)\r\n\r\n                // second feat\r\n                if (items[1]) {\r\n                    spellSlot(3)\r\n                    if (actorLevel >= 14) spellSlot(4)\r\n                    if (actorLevel >= 16) spellSlot(5)\r\n                }\r\n\r\n                // third feat\r\n                if (items[2]) {\r\n                    spellSlot(6)\r\n                    if (actorLevel >= 20) spellSlot(7)\r\n                }\r\n            } else {\r\n                const { maxSlot, maxTradition } = getSpellcastingDetails(actor, 'arcane')\r\n\r\n                // legendary arcane\r\n                if (maxTradition >= 4 && maxSlot >= 6) spellSlot(maxSlot - 5, 3)\r\n\r\n                // master arcane\r\n                if (maxTradition >= 3 && maxSlot >= 5) spellSlot(maxSlot - 4, 2)\r\n\r\n                // no proficiency\r\n                spellSlot(maxSlot - 3, 1)\r\n                spellSlot(maxSlot - 2, 0)\r\n            }\r\n\r\n            templates.push({ type, category, label, rows })\r\n        } else if (isReturnedCategory(entry, 'trainedSkill')) {\r\n            const options = SKILL_LONG_FORMS.filter(x => actor.skills[x]!.rank! < 1)\r\n            if (!options.length) continue\r\n\r\n            const { type, category, label } = entry\r\n\r\n            let { selected = '', input = true } = flags[category] ?? {}\r\n            if (selected && !input && !options.includes(selected as SkillLongForm)) {\r\n                selected = ''\r\n                input = true\r\n            }\r\n\r\n            const row: TemplateRow<TrainedSkillTemplate> = {\r\n                rowType: 'combo',\r\n                options: arrayToSelectOptions(options),\r\n                value: input ? selected : capitalize(selected),\r\n                dataset: { input },\r\n            }\r\n            templates.push({ type, category, label, rows: [row] })\r\n        } else if (isReturnedCategory(entry, 'thaumaturgeTome')) {\r\n            const { type, category, label, items } = entry\r\n            const rows: TemplateRows<ThaumaturgeTomeTemplate> = []\r\n            const actorSkills = actor.skills as Record<SkillLongForm, { rank: OneToFour }>\r\n\r\n            const skillSlot = (index: number, rank: OneToFour, options: SkillLongForm[]) => {\r\n                let { selected = '', input = true } = flags[category]?.[index] ?? {}\r\n                if (selected && !input && !options.includes(selected as SkillLongForm)) {\r\n                    selected = ''\r\n                    input = true\r\n                }\r\n\r\n                rows.push({\r\n                    rowType: 'combo',\r\n                    label: PROFICIENCY_RANKS[rank],\r\n                    options: arrayToSelectOptions(options),\r\n                    value: input ? selected : capitalize(selected),\r\n                    dataset: { input, rank },\r\n                })\r\n            }\r\n\r\n            const isTomeSelected = (index: number, option: 'adept' | 'paragon' = 'adept') => {\r\n                const item = items[index]\r\n                return item ? getChoiSetRuleSelection(item, option) === 'tome' : false\r\n            }\r\n\r\n            // Implement Paragon\r\n            if (isTomeSelected(4, 'paragon')) {\r\n                const skills = SKILL_LONG_FORMS.filter(x => actorSkills[x].rank < 4)\r\n                if (!skills.length) continue\r\n                skillSlot(0, 4, skills)\r\n                skillSlot(1, 4, skills)\r\n            }\r\n\r\n            // Intense Implement or Second Adept or Implement Adept\r\n            else if (items[3] || isTomeSelected(2) || isTomeSelected(1)) {\r\n                const masters = SKILL_LONG_FORMS.filter(x => actorSkills[x].rank < 3)\r\n                if (actorLevel >= 9) {\r\n                    if (!masters.length) continue\r\n                    skillSlot(0, 3, masters)\r\n                    skillSlot(1, 3, masters)\r\n                } else {\r\n                    const experts = SKILL_LONG_FORMS.filter(x => actorSkills[x].rank < 2)\r\n                    if (!experts.length) continue\r\n                    skillSlot(0, 2, experts)\r\n                    if (masters.length) skillSlot(1, 3, masters)\r\n                }\r\n            }\r\n\r\n            // base Tome\r\n            else {\r\n                if (actorLevel >= 5) {\r\n                    const experts = SKILL_LONG_FORMS.filter(x => actorSkills[x].rank < 2)\r\n                    if (!experts.length) continue\r\n                    skillSlot(0, 2, experts)\r\n                    skillSlot(1, 2, experts)\r\n                } else if (actorLevel >= 3) {\r\n                    const trained = SKILL_LONG_FORMS.filter(x => actorSkills[x].rank < 1)\r\n                    if (!trained.length) continue\r\n                    skillSlot(0, 1, trained)\r\n                    const experts = SKILL_LONG_FORMS.filter(x => actorSkills[x].rank < 2)\r\n                    if (experts.length) skillSlot(1, 2, experts)\r\n                } else {\r\n                    const trained = SKILL_LONG_FORMS.filter(x => actorSkills[x].rank < 1)\r\n                    if (!trained.length) continue\r\n                    skillSlot(0, 1, trained)\r\n                    skillSlot(1, 1, trained)\r\n                }\r\n            }\r\n\r\n            templates.push({ type, category, label, rows })\r\n        } else if (isReturnedCategory(entry, 'trainedLore')) {\r\n            const { type, category, label } = entry\r\n            const row: TemplateRow<TrainedLoreTemplate> = {\r\n                rowType: 'input',\r\n                placeholder: game.i18n.localize('PF2E.NewPlaceholders.Lore'),\r\n                value: flags[category] ?? '',\r\n            }\r\n            templates.push({ type, category, label, rows: [row] })\r\n        } else if (isReturnedCategory(entry, 'addedLanguage')) {\r\n            const actorLanguages = actor.system.traits.languages.value\r\n            const options = LANGUAGE_LIST.filter(x => !actorLanguages.includes(x)).sort()\r\n            if (!options.length) continue\r\n\r\n            const { type, category, label } = entry\r\n            const row: TemplateRow<AddedLanguageTemplate> = {\r\n                rowType: 'select',\r\n                options: arrayToSelectOptions(options),\r\n                value: flags[category] ?? '',\r\n            }\r\n            templates.push({ type, category, label, rows: [row] })\r\n        } else if (isReturnedCategory(entry, 'addedResistance')) {\r\n            const { type, category, label } = entry\r\n            const row: TemplateRow<AddedResistanceTemplate> = {\r\n                rowType: 'select',\r\n                options: arrayToSelectOptions(FOUR_ELEMENTS),\r\n                value: flags[category] ?? '',\r\n            }\r\n            templates.push({ type, category, label, rows: [row] })\r\n        } else if (isReturnedCategory(entry, 'combatFlexibility')) {\r\n            const { type, category, label, items } = entry\r\n            const selected = flags[category] ?? []\r\n            const rows: TemplateRows<CombatFlexibilityTemplate> = []\r\n\r\n            // Combat Flexibility\r\n            rows.push({\r\n                rowType: 'drop',\r\n                value: selected[0]?.name ?? '',\r\n                label: game.i18n.localize(`PF2E.Level8`),\r\n                dataset: {\r\n                    uuid: selected[0]?.uuid ?? '',\r\n                    level: 8,\r\n                },\r\n            })\r\n\r\n            // Improved Flexibility\r\n            if (items[1]) {\r\n                rows.push({\r\n                    rowType: 'drop',\r\n                    label: game.i18n.localize(`PF2E.Level14`),\r\n                    value: selected[1]?.name ?? '',\r\n                    dataset: {\r\n                        uuid: selected[1]?.uuid ?? '',\r\n                        level: 14,\r\n                    },\r\n                })\r\n            }\r\n\r\n            templates.push({ type, category, label, rows })\r\n        } else if (isReturnedCategory(entry, 'tricksterAce')) {\r\n            const { type, category, label } = entry\r\n            const { name = '', uuid = '' } = flags[category] ?? {}\r\n            const row: TemplateRow<TricksterAceTemplate> = {\r\n                rowType: 'drop',\r\n                value: name,\r\n                dataset: {\r\n                    uuid,\r\n                    level: 4,\r\n                },\r\n            }\r\n            templates.push({ type, category, label, rows: [row] })\r\n        } else if (isReturnedCategory(entry, 'ganziHeritage')) {\r\n            const { type, category, label } = entry\r\n            const row: TemplateRow<GanziHeritageTemplate> = {\r\n                rowType: 'random',\r\n                options: arrayToSelectOptions(GANZI_RESISTANCES),\r\n            }\r\n            templates.push({ type, category, label, rows: [row] })\r\n        } else if (isReturnedCategory(entry, 'mindSmith')) {\r\n            const { type, category, label, items } = entry\r\n            const weapon = items[1] as WeaponPF2e\r\n\r\n            const template: MindSmithTemplate = {\r\n                type,\r\n                category,\r\n                label,\r\n                rows: [{ rowType: 'alert', value: localize('interface.alert.weapon') }],\r\n            }\r\n            templates.push(template)\r\n\r\n            // we missing the weapon\r\n            if (!weapon) continue\r\n            template.rows[0] = {\r\n                rowType: 'select',\r\n                options: arrayToSelectOptions(WEAPON_DAMAGE_TYPES),\r\n                value: flags[category]?.damage ?? '',\r\n                label,\r\n                dataset: {\r\n                    subcategory: 'damage',\r\n                },\r\n            }\r\n\r\n            // Malleable Mental Forge\r\n            if (items[2]) {\r\n                template.rows[1] = {\r\n                    rowType: 'select',\r\n                    options: arrayToSelectOptions(WEAPON_TRAITS),\r\n                    value: flags[category]?.trait ?? '',\r\n                    label: localize('label.mentalforge'),\r\n                    dataset: {\r\n                        subcategory: 'trait',\r\n                    },\r\n                }\r\n            }\r\n\r\n            // we don't have the next feats\r\n            if (!items[3] && !items[4]) continue\r\n\r\n            // the weapon doesn't have any free property rune slot\r\n            if (!getFreePropertySlot(weapon)) continue\r\n\r\n            const runes = (items[4] ? WEAPON_GREATER_RUNES : WEAPON_RUNES) as readonly MindSmithWeaponAllRunes[]\r\n            const selected = flags[category]?.rune ?? ''\r\n\r\n            template.rows[2] = {\r\n                rowType: 'select',\r\n                options: runes.map(x => ({ value: x, label: runetoLabel(x) })),\r\n                value: selected && runes.includes(selected) ? selected : '',\r\n                label: localize('label.runicmind'),\r\n                dataset: {\r\n                    subcategory: 'rune',\r\n                },\r\n            }\r\n        } else if (isReturnedCategory(entry, 'addedFeat')) {\r\n            const { type, category, label } = entry\r\n            const row: TemplateRow<AddedFeatTemplate> = {\r\n                rowType: 'drop',\r\n                value: flags[category]?.name ?? '',\r\n                dataset: {\r\n                    uuid: flags[category]?.uuid ?? '',\r\n                    level: Math.floor(actorLevel / 2),\r\n                },\r\n            }\r\n            templates.push({\r\n                type,\r\n                category,\r\n                label: localize('label.metamagical'),\r\n                rows: [row],\r\n            })\r\n        }\r\n    }\r\n\r\n    const rows: BaseCategoryTemplate[] = []\r\n    const groups: BaseCategoryTemplate[] = []\r\n    for (const template of templates) {\r\n        if (template.rows.length > 1) groups.push(template)\r\n        else rows.push(template)\r\n    }\r\n\r\n    rows.sort((a, b) => sortOrder[a.type] - sortOrder[b.type])\r\n    groups.sort((a, b) => a.rows.length - b.rows.length)\r\n\r\n    return { rows, groups }\r\n}\r\n\r\nfunction arrayToSelectOptions<T extends string>(arr: readonly T[] | T[]) {\r\n    return arr.map(x => ({ value: x, label: x })) as SelectOption<T>[]\r\n}\r\n\r\nfunction getSpellcastingDetails(actor: ActorPF2e, tradition: MagicTradition) {\r\n    let maxSlot = 1\r\n    let maxTradition = 0\r\n\r\n    for (const entry of actor.spellcasting) {\r\n        if ('pf2e-staves' in entry.flags) continue // we skip staff entries\r\n\r\n        const slots = entry.system.slots\r\n        for (const key in slots) {\r\n            const slot = slots[key as SlotKey]\r\n            if (slot.max) maxSlot = Math.max(maxSlot, Number(key.slice(4)))\r\n        }\r\n\r\n        if (entry.tradition === tradition) maxTradition = Math.max(maxTradition, entry.rank)\r\n    }\r\n\r\n    return { maxSlot: Math.min(maxSlot, 10), maxTradition }\r\n}\r\n","export function sequenceArray<N extends number = number>(start: number, end: number) {\r\n    const levels: number[] = []\r\n\r\n    if (start <= end) {\r\n        for (let i = start; i <= end; i++) levels.push(i)\r\n    } else {\r\n        for (let i = start; i >= end; i--) levels.push(i)\r\n    }\r\n\r\n    return levels as N[]\r\n}\r\n","import { sequenceArray } from '@utils/utils'\r\n\r\nexport const CATEGORY_SEARCH = {\r\n    scrollChain: { category: ['spell'] } as InitialSpellFilters,\r\n    combatFlexibility: { feattype: ['class'], traits: ['fighter'] } as InitialFeatFilters,\r\n    scrollSavant: { category: ['spell'], traditions: ['arcane'] } as InitialSpellFilters,\r\n    tricksterAce: { category: ['cantrip', 'spell'] } as InitialSpellFilters,\r\n    addedFeat: {\r\n        metamagical: { feattype: ['class'], traits: ['metamagic'] } as InitialFeatFilters,\r\n    },\r\n} as const\r\n\r\nexport function onSearch(event: JQuery.ClickEvent<any, any, SearchButton>) {\r\n    event.preventDefault()\r\n\r\n    const data = event.currentTarget.dataset\r\n    const level = Number(data.level)\r\n\r\n    switch (data.type) {\r\n        case 'scrollChain':\r\n            searchSpell({ ...CATEGORY_SEARCH.scrollChain, level: sequenceArray<OneToTen>(1, level) })\r\n            break\r\n        case 'combatFlexibility':\r\n            searchFeat({ ...CATEGORY_SEARCH.combatFlexibility, level: { min: 1, max: level } })\r\n            break\r\n        case 'scrollSavant':\r\n            searchSpell({ ...CATEGORY_SEARCH.scrollSavant, level: sequenceArray<OneToTen>(1, level) })\r\n            break\r\n        case 'tricksterAce':\r\n            searchSpell({ ...CATEGORY_SEARCH.tricksterAce, level: sequenceArray<OneToTen>(1, level) })\r\n            break\r\n        case 'addedFeat':\r\n            searchAddedFeat(data.category, level)\r\n            break\r\n    }\r\n}\r\n\r\nfunction searchAddedFeat(category: CategoryName, level: number) {\r\n    switch (category) {\r\n        case 'metamagical':\r\n            searchFeat({ ...CATEGORY_SEARCH.addedFeat.metamagical, level: { min: 1, max: level } })\r\n            break\r\n    }\r\n}\r\n\r\nfunction searchSpell({ category = [], level = [], traditions = [] }: InitialSpellFilters = {}) {\r\n    const filter: InitialSpellFilters = {\r\n        category,\r\n        classes: [],\r\n        level,\r\n        rarity: [],\r\n        school: [],\r\n        source: [],\r\n        traditions,\r\n        traits: [],\r\n    }\r\n    game.pf2e.compendiumBrowser.openTab('spell', filter)\r\n}\r\n\r\nfunction searchFeat({ feattype = [], level = {}, traits = [] }: InitialFeatFilters = {}) {\r\n    const filter: InitialFeatFilters = {\r\n        feattype,\r\n        skills: [],\r\n        rarity: [],\r\n        source: [],\r\n        traits,\r\n        level,\r\n    }\r\n    game.pf2e.compendiumBrowser.openTab('feat', filter)\r\n}\r\n","import { subLocalize } from '@utils/foundry/localize'\r\nimport { CATEGORY_SEARCH } from './search'\r\n\r\nconst localize = subLocalize('interface.error.drop')\r\n\r\nexport async function dropped(event: ElementDragEvent) {\r\n    let target = $(event.target)\r\n    if (target.is('label')) target = target.next()\r\n\r\n    const categoryType = target.attr('data-type') as CategoryType | undefined\r\n    if (!categoryType) return\r\n\r\n    try {\r\n        const dataString = event.dataTransfer?.getData('text/plain')\r\n        const typeError = () => localize.warn('wrongDataType')\r\n\r\n        const data: { type: string; uuid: string } = JSON.parse(dataString)\r\n        console.log(data)\r\n        if (!data || data.type !== 'Item' || typeof data.uuid !== 'string') return typeError()\r\n\r\n        const item = await fromUuid<ItemPF2e>(data.uuid)\r\n        if (!item) return typeError()\r\n\r\n        switch (categoryType) {\r\n            case 'scrollChain':\r\n                droppedSpell(target, item, CATEGORY_SEARCH.scrollChain)\r\n                break\r\n            case 'combatFlexibility':\r\n                droppedFeat(target, item, CATEGORY_SEARCH.combatFlexibility)\r\n                break\r\n            case 'scrollSavant':\r\n                droppedSpell(target, item, CATEGORY_SEARCH.scrollSavant)\r\n                break\r\n            case 'tricksterAce':\r\n                droppedSpell(target, item, CATEGORY_SEARCH.tricksterAce, tricksterAceFilter)\r\n                break\r\n            case 'addedFeat':\r\n                droppedAddedFeat(target, item)\r\n                break\r\n        }\r\n    } catch (error) {}\r\n}\r\n\r\nfunction droppedAddedFeat(target: JQuery, item: ItemPF2e) {\r\n    const category = target.attr('data-category') as CategoryName\r\n\r\n    switch (category) {\r\n        case 'metamagical':\r\n            const filters = { ...CATEGORY_SEARCH.addedFeat.metamagical }\r\n            filters.traits = (filters.traits ?? [])?.slice()\r\n            filters.traits.push('wizard')\r\n            droppedFeat(target, item, filters)\r\n            break\r\n    }\r\n}\r\n\r\nfunction tricksterAceFilter(item: SpellPF2e) {\r\n    const castTime = item.system.time.value\r\n\r\n    if (castTime.includes('hour') || (castTime.includes('min') && parseInt(castTime) > 10)) {\r\n        localize.warn('wrongSpellTime', { time: '10 min' })\r\n        return false\r\n    }\r\n\r\n    return true\r\n}\r\n\r\nfunction droppedSpell(\r\n    target: JQuery,\r\n    item: ItemPF2e,\r\n    { category = [], traditions = [] }: InitialSpellFilters = {},\r\n    filter?: (item: SpellPF2e) => boolean\r\n) {\r\n    if (!item.isOfType('spell')) return localize.warn('wrongType', { type: 'spell' })\r\n\r\n    if (item.isCantrip && !category.includes('cantrip')) return localize.warn('cannotBe', { type: 'spell', not: 'cantrip' })\r\n    if (item.isRitual && !category.includes('ritual')) return localize.warn('cannotBe', { type: 'spell', not: 'ritual' })\r\n    if (item.isFocusSpell && !category.includes('focus')) return localize.warn('cannotBe', { type: 'spell', not: 'focus' })\r\n\r\n    if (traditions.length) {\r\n        const itemTraditions = item.system.traditions.value\r\n        for (const tradition of traditions) {\r\n            if (!itemTraditions.includes(tradition))\r\n                return localize.warn('wrongTrait', { type: 'spell', trait: tradition, category: 'tradition' })\r\n        }\r\n    }\r\n\r\n    if (item.level > Number(target.attr('data-level'))) return localize.warn('wrongLevel', { type: 'spell' })\r\n\r\n    if (filter && !filter(item)) return\r\n\r\n    droppedItem(target, item)\r\n}\r\n\r\nfunction droppedFeat(target: JQuery, item: ItemPF2e, { feattype = [], traits = [] }: InitialFeatFilters) {\r\n    if (!item.isOfType('feat') || item.isFeature) return localize.warn('wrongType', { type: 'feat' })\r\n    if (!feattype.includes(item.featType)) return localize.warn('cannotBe', { type: 'feat', not: item.featType })\r\n\r\n    if (traits.length) {\r\n        const itemTraits = item.system.traits.value\r\n        for (const trait of traits) {\r\n            if (!itemTraits.includes(trait)) return localize.warn('wrongTrait', { type: 'feat', trait, category: 'trait' })\r\n        }\r\n    }\r\n\r\n    if (item.level > Number(target.attr('data-level'))) return localize.warn('wrongLevel', { type: 'feat' })\r\n\r\n    droppedItem(target, item)\r\n}\r\n\r\nfunction droppedItem(target: JQuery, item: ItemPF2e) {\r\n    target.val(item.name)\r\n    target.attr('value', item.name)\r\n    target.attr('data-uuid', item.uuid)\r\n    target.nextAll('[data-action=\"clear\"]').first().removeClass('disabled')\r\n}\r\n","import { subLocalize } from '@utils/foundry/localize'\r\nimport { templatePath } from '@utils/foundry/path'\r\nimport { PROFICIENCY_RANKS } from '@utils/pf2e/actor'\r\nimport { SKILL_LONG_FORMS } from '@utils/pf2e/skills'\r\nimport { capitalize } from '@utils/string'\r\nimport { accept } from './interface/accept'\r\nimport { onAlert } from './interface/alert'\r\nimport { getData } from './interface/data'\r\nimport { dropped } from './interface/drop'\r\nimport { onSearch } from './interface/search'\r\n\r\nconst localize = subLocalize('interface')\r\n\r\nexport class DailiesInterface extends Application {\r\n    private _actor: CharacterPF2e\r\n    private _randomInterval?: NodeJS.Timer\r\n\r\n    constructor(actor: CharacterPF2e, options?: Partial<ApplicationOptions>) {\r\n        super(options)\r\n        this._actor = actor\r\n    }\r\n\r\n    static get defaultOptions() {\r\n        return mergeObject(super.defaultOptions, {\r\n            id: 'pf2e-dailies-interface',\r\n            title: localize('title'),\r\n            template: templatePath('interface.hbs'),\r\n            height: 'auto',\r\n            submitOnClose: false,\r\n            submitOnChange: false,\r\n            dragDrop: [\r\n                {\r\n                    dropSelector: '[data-droppable=\"true\"]',\r\n                },\r\n            ],\r\n        })\r\n    }\r\n\r\n    get actor() {\r\n        return this._actor\r\n    }\r\n\r\n    getData(options?: Partial<FormApplicationOptions> | undefined) {\r\n        return mergeObject(super.getData(options), {\r\n            i18n: localize,\r\n            dump: ({\r\n                dataset,\r\n                value,\r\n                placeholder,\r\n            }: {\r\n                value?: string\r\n                placeholder?: string\r\n                dataset?: Record<string, string>\r\n            }) => {\r\n                let msg = ''\r\n                if (value) msg += ` value=\"${value}\"`\r\n                if (placeholder) msg += ` placeholder=\"${placeholder}\"`\r\n                if (dataset) Object.entries(dataset).forEach(([key, value]) => (msg += ` data-${key}=\"${value}\"`))\r\n                if (msg) msg += ' '\r\n                return msg\r\n            },\r\n            ...getData(this._actor),\r\n        })\r\n    }\r\n\r\n    render(force?: boolean | undefined, options?: RenderOptions | undefined): this | Promise<this> {\r\n        if (this._randomInterval) clearInterval(this._randomInterval)\r\n\r\n        if (this.element.find('select.random')) {\r\n            this._randomInterval = setInterval(() => {\r\n                const randoms = this.element.find<HTMLSelectElement>('select.random')\r\n                randoms.each((_, select) => {\r\n                    select.selectedIndex = (select.selectedIndex + 1) % select.options.length\r\n                })\r\n            }, 2000)\r\n        }\r\n\r\n        return super.render(force, options)\r\n    }\r\n\r\n    close(options?: ({ force?: boolean | undefined } & Record<string, unknown>) | undefined): Promise<void> {\r\n        if (this._randomInterval) clearInterval(this._randomInterval)\r\n        return super.close(options)\r\n    }\r\n\r\n    activateListeners(html: JQuery<HTMLElement>): void {\r\n        super.activateListeners(html)\r\n\r\n        html.find<HTMLAnchorElement>('[data-action=alert]').on('click', onAlert.bind(this))\r\n\r\n        html.find<HTMLSelectElement>('.combo select').on('change', this.#onComboSelectChange.bind(this))\r\n        html.find<ComboTemplateFields>('.combo input').on('change', this.#onComboInputChange.bind(this))\r\n\r\n        html.find<SearchButton>('[data-action=search]').on('click', onSearch)\r\n\r\n        html.find<HTMLAnchorElement>('[data-action=clear]').on('click', this.#onClear.bind(this))\r\n        html.find<HTMLButtonElement>('[data-action=accept]').on('click', this.#onAccept.bind(this))\r\n        html.find<HTMLButtonElement>('[data-action=cancel]').on('click', this.#onCancel.bind(this))\r\n    }\r\n\r\n    protected async _onDrop(event: ElementDragEvent) {\r\n        dropped(event)\r\n    }\r\n\r\n    #onComboSelectChange(event: JQuery.ChangeEvent) {\r\n        const select = event.currentTarget\r\n        const input = select.nextElementSibling as HTMLInputElement\r\n        input.dataset.input = 'false'\r\n        input.value = capitalize(select.value)\r\n    }\r\n\r\n    #onComboInputChange(event: JQuery.ChangeEvent<any, any, ComboTemplateFields>) {\r\n        const input = event.currentTarget\r\n        const select = input.previousElementSibling as HTMLSelectElement\r\n        const value = input.value.toLowerCase()\r\n        const type = input.dataset.type\r\n\r\n        // TODO original should be conditional on type if more are to come\r\n        const original = SKILL_LONG_FORMS as string[]\r\n        const options = Array.from(select.options).map(x => x.value)\r\n\r\n        if (options.includes(value)) {\r\n            select.value = value\r\n            input.value = capitalize(value)\r\n            input.dataset.input = 'false'\r\n        } else if (original.includes(value)) {\r\n            if (type === 'thaumaturgeTome' || type === 'trainedSkill') {\r\n                const rank = type === 'thaumaturgeTome' ? Number(input.dataset.rank) : 1\r\n                localize.warn('error.input.proficiency', { rank: PROFICIENCY_RANKS[rank], proficiency: value })\r\n            }\r\n\r\n            select.value = ''\r\n            input.value = ''\r\n            input.dataset.input = 'true'\r\n        } else {\r\n            select.value = ''\r\n            input.dataset.input = 'true'\r\n        }\r\n    }\r\n\r\n    #lock() {\r\n        this.element.addClass('disabled')\r\n    }\r\n\r\n    #validate() {\r\n        const warns: string[] = []\r\n        const emptyInputs = this.element.find('input').filter((_, input) => !input.value)\r\n        const errorInputs = this.element.find('input.alert')\r\n\r\n        if (emptyInputs.length) warns.push('error.empty')\r\n        if (errorInputs.length) warns.push('error.unattended')\r\n\r\n        warns.forEach(x => localize.warn(x))\r\n\r\n        return !warns.length\r\n    }\r\n\r\n    async #onAccept(event: JQuery.ClickEvent) {\r\n        event.preventDefault()\r\n\r\n        if (!this.#validate()) return\r\n\r\n        this.#lock()\r\n\r\n        try {\r\n            await accept(this.element, this._actor)\r\n        } catch (error) {\r\n            localize.error('error.unexpected')\r\n            console.error(error)\r\n        }\r\n\r\n        this.close()\r\n    }\r\n\r\n    #onClear(event: JQuery.ClickEvent<any, any, HTMLAnchorElement>) {\r\n        event.preventDefault()\r\n        const target = $(event.currentTarget)\r\n        const input = target.prevAll('input').first()\r\n        input.val('')\r\n        input.attr('value', '')\r\n        input.attr('data-uuid', '')\r\n        target.addClass('disabled')\r\n    }\r\n\r\n    #onCancel(event: JQuery.ClickEvent) {\r\n        event.preventDefault()\r\n        this.close()\r\n    }\r\n}\r\n","import { setModuleID } from '@utils/module'\r\nimport { wrapRestForTheNight } from './rest'\r\nimport { renderCharacterSheetPF2e } from './sheet'\r\n\r\nsetModuleID('pf2e-dailies')\r\n\r\nHooks.once('ready', () => {\r\n    wrapRestForTheNight()\r\n})\r\n\r\nHooks.on('renderCharacterSheetPF2e', renderCharacterSheetPF2e)\r\n","import { getFlag, setFlag } from '@utils/foundry/flags'\r\nimport { findItemWithSourceId } from '@utils/foundry/item'\r\nimport { MODULE_ID } from '@utils/module'\r\nimport { sluggify } from '@utils/pf2e/utils'\r\nimport { isRuleItem, MINDSMITH_WEAPON_UUID } from './categories'\r\nimport { WEAPON_TRAITS } from './data/weapon'\r\n\r\nexport function wrapRestForTheNight() {\r\n    const original = game.pf2e.actions.restForTheNight\r\n    game.pf2e.actions.restForTheNight = async (options: ActionDefaultOptions) => {\r\n        const result = await original(options)\r\n        if (result.length && options.actors) afterRest(options.actors)\r\n        return result\r\n    }\r\n}\r\n\r\nasync function afterRest(actors: ActorPF2e | ActorPF2e[]) {\r\n    actors = Array.isArray(actors) ? actors : [actors]\r\n\r\n    const characters = actors.filter(x => x.isOfType('character')) as CharacterPF2e[]\r\n    for (const actor of characters) {\r\n        const update: EmbeddedDocumentUpdateData<ItemPF2e>[] = []\r\n        const remove: string[] = []\r\n        const itemTypes = actor.itemTypes\r\n\r\n        const cleanRuleItem = (item: ItemPF2e) => {\r\n            const rules = deepClone(item._source.system.rules)\r\n\r\n            let modified = false\r\n            for (let i = rules.length - 1; i >= 0; i--) {\r\n                if (!(MODULE_ID in rules[i])) continue\r\n                rules.splice(i, 1)\r\n                modified = true\r\n            }\r\n\r\n            if (modified) update.push({ _id: item.id, 'system.rules': rules })\r\n        }\r\n\r\n        for (const item of itemTypes.feat) {\r\n            if (isRuleItem(item)) cleanRuleItem(item)\r\n\r\n            if (getFlag(item, 'temporary')) {\r\n                const parentId = item.getFlag<string>('pf2e', 'grantedBy.id')\r\n                if (parentId) {\r\n                    const slug = sluggify(item.name, { camel: 'dromedary' })\r\n                    const path = `flags.pf2e.itemGrants.-=${slug}`\r\n                    update.push({ _id: parentId, [path]: true })\r\n                }\r\n                remove.push(item.id)\r\n            }\r\n        }\r\n\r\n        for (const item of itemTypes.lore) {\r\n            if (getFlag(item, 'temporary')) remove.push(item.id)\r\n        }\r\n\r\n        for (const item of itemTypes.equipment) {\r\n            if (isRuleItem(item)) cleanRuleItem(item)\r\n        }\r\n\r\n        for (const item of itemTypes.heritage) {\r\n            if (isRuleItem(item)) cleanRuleItem(item)\r\n        }\r\n\r\n        for (const item of itemTypes.spellcastingEntry) {\r\n            if (getFlag(item, 'temporary')) remove.push(item.id)\r\n        }\r\n\r\n        const mindWeapon = findItemWithSourceId(actor, MINDSMITH_WEAPON_UUID, ['weapon'])\r\n        if (mindWeapon) {\r\n            let traits = mindWeapon._source.system.traits?.value ?? []\r\n            traits = traits.filter(x => !WEAPON_TRAITS.includes(x as MindSmithWeaponTrait))\r\n            update.push({ _id: mindWeapon.id, 'system.traits.value': traits })\r\n\r\n            const runeProperty = getFlag<RunePropertyKey | ''>(actor, 'weapon.runeProperty')\r\n            if (runeProperty) {\r\n                update.push({ _id: mindWeapon.id, [`system.${runeProperty}.value`]: null })\r\n            }\r\n        }\r\n\r\n        setFlag(actor, 'weapon.runeProperty', '')\r\n        if (update.length) actor.updateEmbeddedDocuments('Item', update)\r\n        if (remove.length) actor.deleteEmbeddedDocuments('Item', remove)\r\n    }\r\n}\r\n","import { DailiesInterface } from '@apps/interface'\r\nimport { localize } from '@utils/foundry/localize'\r\nimport { hasAnyCategory } from './categories'\r\n\r\nexport function renderCharacterSheetPF2e(sheet: CharacterSheetPF2e, html: JQuery) {\r\n    const actor = sheet.actor\r\n    if (!actor.isOwner || !hasAnyCategory(actor)) return\r\n\r\n    const small = html.find('aside .sidebar .hitpoints .hp-small')\r\n    small\r\n        .append(`<a class=\"roll-icon dailies\" title=\"${localize('sheet.title')}\"><i class=\"fas fa-mug-saucer\"></i></a>`)\r\n        .find('.dailies')\r\n        .on('click', () => new DailiesInterface(actor).render(true))\r\n\r\n    // TODO remove with next system update\r\n    small\r\n        .find('[data-action=rest]')\r\n        .off('click')\r\n        .on('click', event => game.pf2e.actions.restForTheNight({ event, actors: actor }))\r\n}\r\n"],"names":["getFlag","doc","key","fallback","setFlag","value","getSourceId","hasSourceId","sourceId","includesSourceId","list","includes","getItemSourceIdCondition","Array","isArray","item","getItems","actor","itemTypes","flatMap","type","items","findItemWithSourceId","find","wordCharacter","String","raw","nonWordCharacter","nonWordCharacterRE","RegExp","wordBoundary","nonWordBoundary","lowerCaseLetter","upperCaseLetter","lowerCaseThenUpperCaseRE","nonWordCharacterHyphenOrSpaceRE","upperOrWordBoundariedLowerRE","sluggify","text","camel","console","warn","replace","toLowerCase","trim","dromedary","charAt","toUpperCase","slice","part","index","Error","notify","str","arg1","arg2","arg3","data","undefined","permanent","ui","notifications","localize","args","game","i18n","format","hasLocalization","has","subLocalize","subKey","fn","Object","defineProperties","enumerable","configurable","info","error","RULE_TYPES","MINDSMITH_WEAPON_UUID","CATEGORY_DATA","category","uuids","CATEGORIES","UUIDS","FIRST_FEATS","FIRST_EQUIPMENTS","FIRST_HERITAGES","RULES","Map","isRule","length","uuid","push","set","firstUUID","getCategoryUUIDS","isRuleItem","isReturnedCategory","object","WEAPON_GROUPS","slashing","piercing","bludgeoning","WEAPON_DAMAGE_TYPES","keys","WEAPON_BASE_TYPES","die","traits","usage","WEAPON_TRAITS","WEAPON_RUNES","WEAPON_GREATER_RUNES","RUNE_PROPERTY_KEYS","getFreePropertySlot","weapon","potency","system","potencyRune","i","property","templatePath","path","filter","x","join","PROFICIENCY_RANKS","SKILL_DICTIONARY","acr","arc","ath","cra","dec","dip","itm","med","nat","occ","prf","rel","soc","ste","sur","thi","SKILL_LONG_FORMS","values","capitalize","getFamiliarPack","packs","get","familiarUUID","id","chatUUID","name","Set","scrolls","async","createSpellScroll","level","temp","spell","fromUuid","toObject","scrollUUID","scrollCompendiumIds","getScrollCompendiumUUID","scroll","location","heightenedLevel","temporary","traditions","flags","core","description","msg","randomOptions","options","Roll","evaluate","total","createTemporaryLore","rank","img","setProperty","createTemporaryFeat","parent","feat","onDelete","createSkillRule","skill","mode","Number","createResistanceRule","createSpellcastingSpell","entry","createSpellcastingEntry","slug","proficiency","prepared","showSlotlessLevels","showUnpreparedSpells","onAlert","event","preventDefault","input","currentTarget","previousElementSibling","dataset","onWeaponAlert","call","this","content","Dialog","wait","title","buttons","yes","icon","label","callback","onWeaponSelected","bind","no","close","width","html","selection","val","stats","createEmbeddedDocuments","render","dcByLevel","dcAdjustments","getChoiSetRuleSelection","option","_source","rules","rule","rollOption","LANGUAGE_LIST","FOUR_ELEMENTS","GANZI_RESISTANCES","sortOrder","Proxy","addedLanguage","trainedSkill","addedResistance","trainedLore","obj","prop","getData","actorLevel","categories","isOfType","isInvested","hasCategories","templates","familiar","rows","nbAbilityies","attributes","familiarAbilities","indexes","_id","rowType","nb","spellSlot","maxSlot","maxTradition","getSpellcastingDetails","skills","selected","row","arrayToSelectOptions","actorSkills","skillSlot","isTomeSelected","masters","experts","trained","placeholder","actorLanguages","languages","sort","template","damage","subcategory","trait","runes","rune","map","Math","floor","groups","a","b","arr","tradition","spellcasting","slots","max","min","sequenceArray","start","end","levels","CATEGORY_SEARCH","scrollChain","combatFlexibility","feattype","scrollSavant","tricksterAce","addedFeat","metamagical","onSearch","searchSpell","searchFeat","searchAddedFeat","classes","rarity","school","source","pf2e","compendiumBrowser","openTab","tricksterAceFilter","castTime","time","parseInt","droppedSpell","target","isCantrip","not","isRitual","isFocusSpell","itemTraditions","attr","droppedItem","droppedFeat","isFeature","featType","itemTraits","nextAll","first","removeClass","DailiesInterface","Application","_actor","_randomInterval","constructor","super","defaultOptions","mergeObject","height","submitOnClose","submitOnChange","dragDrop","dropSelector","dump","entries","forEach","force","clearInterval","element","setInterval","each","_","select","selectedIndex","activateListeners","on","$","is","next","categoryType","dataString","dataTransfer","typeError","JSON","parse","log","filters","droppedAddedFeat","dropped","nextElementSibling","original","from","addClass","warns","emptyInputs","errorInputs","message","fields","toArray","ruleItems","some","field","filterItemsWithSourceId","getRuleItems","addData","updateData","rulesToAdd","addToFamiliar","getRules","existing","deepClone","splice","messages","tome","resistances","feats","spells","mind","parentUUID","lore","entrySlug","classDC","class","isInput","ruleItem","toSave","propertySlot","random","pushMessages","ids","effect","deleteEmbeddedDocuments","pack","getDocument","parentId","updateEmbeddedDocuments","ChatMessage","create","speaker","getSpeaker","accept","prevAll","Hooks","once","actions","restForTheNight","result","actors","characters","update","remove","cleanRuleItem","modified","equipment","heritage","spellcastingEntry","mindWeapon","runeProperty","afterRest","wrapRestForTheNight","sheet","isOwner","hasAnyCategory","small","append","off"],"sourceRoot":""}