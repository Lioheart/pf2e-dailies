{"version":3,"file":"main.js","mappings":"mBAAO,IAAI,EAAY,GCQhB,SAASA,EAA2BC,EAAgCC,EAAaC,GACpF,OAAQF,EAAID,QAAQ,EAAWE,IAA0BC,CAC7D,CAaO,SAASC,EAAoCH,GAChD,OAAOA,EAAID,QAAQ,OAAQ,WAC/B,CAEO,SAASK,EAAYJ,EAAqBK,GAC7C,OAAOF,EAAYH,KAASK,CAChC,CAEO,SAASC,EAAiBN,EAAqBO,GAClD,MAAMF,EAAWF,EAAYH,GAC7B,QAAOK,GAAWE,EAAKC,SAASH,EACpC,CClCA,MAAMI,EAAgBC,OAAOC,GAAG,6DAC1BC,EAAmBF,OAAOC,GAAG,8DAC7BE,EAAqB,IAAIC,OAAOF,EAAkB,MAElDG,EAAeL,OAAOC,GAAG,MAAMF,QAAoBG,SAAwBA,QAAuBH,KAClGO,EAAkBN,OAAOC,GAAG,MAAMF,QAAoBA,KACtDQ,EAAkBP,OAAOC,GAAG,uBAC5BO,EAAkBR,OAAOC,GAAG,uBAC5BQ,EAA2B,IAAIL,OAAO,IAAIG,MAAoBC,IAAkBF,KAAoB,MAEpGI,EAAkC,gFAClCC,EAA+B,IAAIP,OAAO,GAAGI,QAAsBH,KAAgBE,IAAmB,MAYrG,SAASK,EAASC,GAAc,MAAEC,EAAQ,MAAsD,CAAC,GAEpG,GAAoB,iBAATD,EAEP,OADAE,QAAQC,KAAK,4CACN,GAGX,OAAQF,GACJ,KAAK,KACD,OAAOD,EACFI,QAAQR,EAA0B,SAClCS,cACAD,QAAQ,QAAS,IACjBA,QAAQd,EAAoB,KAC5BgB,OACAF,QAAQ,UAAW,KAC5B,IAAK,WAAY,CACb,MAAMG,EAAYR,EAASC,EAAM,CAAEC,MAAO,cAC1C,OAAOM,EAAUC,OAAO,GAAGC,cAAgBF,EAAUG,MAAM,E,CAE/D,IAAK,YACD,OAAOV,EACFI,QAAQP,EAAiC,IACzCO,QAAQ,SAAU,KAClBA,QAAQN,GAA8B,CAACa,EAAMC,IAAqB,IAAVA,EAAcD,EAAKN,cAAgBM,EAAKF,gBAChGL,QAAQ,OAAQ,IACzB,QACI,MAKDS,MAAM,oDAHjB,CChDA,SAASC,EAAyBhC,GAC9B,OAAOiC,MAAMC,QAAQlC,GACdmC,GAAelC,EAAiBkC,EAAMnC,GACtCmC,GAAerC,EAAYqC,KAAUnC,CAChD,CAEA,SAASoC,EAAwEC,EAAUC,GACvF,OAAQA,EAAYA,EAAUC,SAAQC,GAAQH,EAAMC,UAAUE,KAAmBH,EAAMI,KAC3F,CAEO,SAASC,EACZL,EACArC,EACAsC,GAEA,OAAOF,EAAeC,EAAOC,GAAWK,KAAKX,EAAyBhC,GAC1E,CChBA,SAAS4C,EACLC,EACAC,EACAC,EACAC,GAEA,MAAMR,EAAuB,iBAATM,EAAoBA,EAAO,OACzCG,EAAuB,iBAATH,EAAoBA,EAAuB,iBAATC,EAAoBA,OAAOG,EAC3EC,EAA4B,kBAATL,EAAqBA,EAAuB,kBAATC,EAAqBA,EAAOC,IAAQ,EAEhGI,GAAGC,cAAcT,OAAOU,EAAST,EAAKI,GAAOT,EAAM,CAAEW,aACzD,CCVO,SAASG,KAAYC,GACxB,IAAK3D,EAAKqD,GAAQM,EAElB,OADA3D,EAAM,GAAG,KAAaA,IAClBqD,EAAaO,KAAKC,KAAKC,OAAO9D,EAAKqD,GAChCO,KAAKC,KAAKH,SAAS1D,EAC9B,CAEO,SAAS+D,EAAgB/D,GAC5B,OAAO4D,KAAKC,KAAKG,IAAI,GAAG,KAAahE,KAAO,EAChD,CAMO,SAASiE,EAAYC,GACxB,MAAMC,EAAK,IAAIR,IAAuBD,EAAS,GAAGQ,KAAUP,EAAK,KAAMA,EAAK,IAyB5E,OAvBAS,OAAOC,iBAAiBF,EAAI,CACxB1C,KAAM,CACF6C,MAAO,IAAIX,IDRhB,YAAiBA,GACpB,MAAOV,EAAKC,EAAMC,GAAQQ,EAC1BX,EAAOC,EAAK,UAAWC,EAAMC,EACjC,CCK4C1B,CAAK,GAAGyC,KAAUP,EAAK,KAAMA,EAAK,GAAIA,EAAK,IAC3EY,YAAY,EACZC,cAAc,GAElBC,KAAM,CACFH,MAAO,IAAIX,IDRhB,YAAiBA,GACpB,MAAOV,EAAKC,EAAMC,GAAQQ,EAC1BX,EAAOC,EAAK,OAAQC,EAAMC,EAC9B,CCK4CsB,CAAK,GAAGP,KAAUP,EAAK,KAAMA,EAAK,GAAIA,EAAK,IAC3EY,YAAY,EACZC,cAAc,GAElBE,MAAO,CACHJ,MAAO,IAAIX,IDRhB,YAAkBA,GACrB,MAAOV,EAAKC,EAAMC,GAAQQ,EAC1BX,EAAOC,EAAK,QAASC,EAAMC,EAC/B,CCK4CuB,CAAM,GAAGR,KAAUP,EAAK,KAAMA,EAAK,GAAIA,EAAK,IAC5EY,YAAY,EACZC,cAAc,GAElBR,IAAK,CACDM,MAAQtE,GAAgB+D,EAAgB,GAAGG,KAAUlE,KACrDuE,YAAY,EACZC,cAAc,KAIfL,CAMX,CChDO,MAAMQ,EAAa,CAAC,gBAAiB,eAAgB,kBAAmB,gBAAiB,mBAEnFC,EAAa,CAEtB,CACIhC,KAAM,eACNiC,SAAU,MACVC,MAAO,CAAC,+CAGZ,CACIlC,KAAM,kBACNiC,SAAU,OACVC,MAAO,CACH,iDACA,iDACA,iDACA,6CACA,mDAIR,CACIlC,KAAM,kBACNiC,SAAU,eACVC,MAAO,CAAC,+CAGZ,CACIlC,KAAM,gBACNiC,SAAU,QACVC,MAAO,CAAC,+CAGZ,CACIlC,KAAM,cACNiC,SAAU,QACVC,MAAO,CAAC,+CAGZ,CACIlC,KAAM,eACNiC,SAAU,UACVC,MAAO,CAAC,+CAEZ,CACIlC,KAAM,eACNiC,SAAU,YACVC,MAAO,CAAC,+CAEZ,CACIlC,KAAM,eACNiC,SAAU,WACVC,MAAO,CAAC,+CAEZ,CACIlC,KAAM,eACNiC,SAAU,UACVC,MAAO,CAAC,+CAGZ,CACIlC,KAAM,gBACNiC,SAAU,cACVC,MAAO,CAAC,+CAEZ,CACIlC,KAAM,gBACNiC,SAAU,QACVC,MAAO,CAAC,mDAGZ,CACIlC,KAAM,oBACNiC,SAAU,cACVC,MAAO,CACH,iDACA,mDAIR,CACIlC,KAAM,eACNiC,SAAU,SACVC,MAAO,CAAC,+CAGZ,CACIlC,KAAM,cACNiC,SAAU,YACVC,MAAO,CACH,6CACA,6CACA,+CAGR,CACIlC,KAAM,cACNiC,SAAU,YACVC,MAAO,CACH,6CACA,6CACA,iDAMLC,EAAOC,EAAYC,EAAYC,EAAgBC,EAAaC,GAAa,MAC5E,MAAML,EAAqB,GACrBK,EAAY,CAAC,EACbC,EAAoB,GACpBC,EAAoB,GACpBC,EAAwB,GACxBC,EAAoB,GAE1B,IAAK,MAAM,KAAE5C,EAAI,SAAEiC,EAAQ,MAAEC,KAAWF,EAAY,CAChDQ,EAAUP,KAAc,GACxBO,EAAUP,GAAUY,QAAQX,GAC5BC,EAAMU,QAAQX,EAAMY,KAAI,CAACC,EAAMzD,IAAU,CAACyD,EAAM,CAAE/C,OAAMiC,WAAU3C,aAE9DyC,EAAWpE,SAASqC,IAAoC4C,EAAMC,QAAQX,GAG1E,MAAMc,EAAYd,EAAM,GACpBc,EAAUrF,SAAS,iBAAkB+E,EAAMG,KAAKG,GAC3CA,EAAUrF,SAAS,aAAcgF,EAAUE,KAAKG,GACpDP,EAAMI,KAAKG,E,CAGpB,MAAO,CAAC,IAAIC,IAAId,GAAQO,EAAOD,EAAOE,EAAWC,EAAOJ,EAC3D,EAvB+E,GAkCzE,SAASU,EAAiBjB,GAC7B,OAAOO,EAAUP,EACrB,CAMO,SAASkB,EAAWxD,GACvB,OAAOlC,EAAiBkC,EAAM4C,EAClC,CA2BO,SAASa,EACZC,EACApB,GAEA,OAAOoB,EAAOrD,OAASiC,CAC3B,CClLO,SAASqB,KAAgBC,GAE5B,OADAA,EAAOA,EAAKC,QAAOC,GAAkB,iBAANA,IACxB,WAAW,eAAuBF,EAAKG,KAAK,MACvD,CCbO,MAAMC,EAAmB,CAC5BC,IAAK,aACLC,IAAK,SACLC,IAAK,YACLC,IAAK,WACLC,IAAK,YACLC,IAAK,YACLC,IAAK,eACLC,IAAK,WACLC,IAAK,SACLC,IAAK,YACLC,IAAK,cACLC,IAAK,WACLC,IAAK,UACLC,IAAK,UACLC,IAAK,WACLC,IAAK,YAKIC,GAFsBpD,OAAOqD,KAAKlB,GAEfnC,OAAOsD,OAAOnB,ICRjCoB,EAAoB,CAAC,YAAa,UAAW,SAAU,SAAU,aCbvE,SAASC,EAASjC,EAAckC,GACnC,OAAIA,EAAa,SAASlC,MAASkC,KAC5B,SAASlC,IACpB,CCDgC,IAAImC,IAAI,CAAC,SAAU,SAAU,SAAU,WAAhE,MAIDC,EAAqC,GACpCC,eAAeC,EAAkBtC,EAAgBuC,EAAyBC,GAAO,GACpF,MAAMC,SAAeC,SAAoB1C,KAAQ2C,WACjD,IAAKF,EAAO,OAAO,MAEL,IAAVF,IAAiBA,EAAQE,EAAMG,OAAOL,MAAM5D,OAEhD,MAAMkE,EAmBV,SAAiCN,GAC7B,MAAO,iCAAiCO,EAAoBP,IAChE,CArBuBQ,CAAwBR,GAC3CH,EAAQG,WAAiBG,SAAyBG,GAElD,MAAMG,EAASZ,EAAQG,IAAQI,WAC/B,IAAKK,EAAQ,OAAO,KAEpBP,EAAMG,OAAOK,SAASC,gBAAkBX,EAExCS,EAAOd,KAAO,aAAaO,EAAMP,eAAeK,KAChDS,EAAOJ,OAAOO,UAAYX,EAC1BQ,EAAOJ,OAAOH,MAAQA,EACtBO,EAAOJ,OAAOQ,OAAOzE,MAAMmB,QAAQ2C,EAAMG,OAAOS,WAAW1E,OAE3D,MAAMlE,EAAWgI,EAAMa,MAAMC,MAAM9I,SAGnC,OAFIA,IAAUuI,EAAOJ,OAAOY,YAAY7E,MAAQ,GAAGsD,EAASxH,aAAoBuI,EAAOJ,OAAOY,YAAY7E,SAEnGqE,CACX,CAMA,MAAMF,EAA8C,CAChD,EAAG,mBACH,EAAG,mBACH,EAAG,mBACH,EAAG,mBACH,EAAG,mBACH,EAAG,mBACH,EAAG,mBACH,EAAG,mBACH,EAAG,mBACH,GAAI,oBCtCD,SAASW,EAAWnG,GACvB,OAAKA,EACEA,EAAI,GAAGlB,cAAgBkB,EAAIjB,MAAM,GADvB,EAErB,CCAA,MAAMqH,EAAMpF,EAAY,qBAIjB+D,eAAesB,EAAOC,EAAc9G,GACvC,IAAI+G,EAAU,GACd,MAAMP,EAAQ,CAAC,EACTQ,EAASF,EAAKxG,KAAK,4BAA4BA,KAAK,4BAA4B2G,UAChFC,EAAYF,EAAOG,MAAKC,GAASlF,EAAWpE,SAASsJ,EAAMC,QAAQlH,QPmItE,SAAsBH,GACzB,OHzHG,SACHA,EACArC,EACAsC,GAEA,OAAOF,EAAeC,EGoH6B,CAAC,OAAQ,YAAa,aHpHjC2D,OAAOhE,EAAyBhC,GAC5E,CGmHW2J,CAAwBtH,EAAO0C,EAC1C,COrImG6E,CAAavH,GAAS,GAC/GwH,EAAyC,GACzCC,EAAqD,GACrDC,EAA+C,IAAItE,IAEnDuE,EAAY7H,IACd,MAAM8H,EAAK9H,EAAK8H,GACVC,EAAWH,EAAWI,IAAIF,GAChC,GAAIC,EAAU,OAAOA,EAErB,MAAME,EAAQC,UAAUlI,EAAKmI,QAAQnC,OAAOiC,OAE5C,IAAK,IAAIG,EAAIH,EAAMI,OAAS,EAAGD,GAAK,EAAGA,IAE/B,iBADSH,EAAMG,IACSH,EAAMK,OAAOF,EAAG,GAIhD,OADAR,EAAWW,IAAIT,EAAIG,GACZA,CAAK,EAGVO,EAAW,CACbC,UAAW,GACXC,OAAQ,GACRC,KAAM,GACNC,YAAa,GACbC,MAAO,GACPrD,QAAS,GACTsD,OAAQ,IAGZ,IAAK,MAAMxB,KAASJ,EAAQ,CACxB,MAAM7G,EAAOiH,EAAMC,QAAQlH,KAE3B,GAAa,gBAATA,GAAmC,iBAATA,EAAyB,CACnD,MAAM,KAAE+C,EAAI,SAAEd,GAAagF,EAAMC,QAC3B5B,EAAQoD,OAAOzB,EAAMC,QAAQ5B,OAC7BL,EAAOgC,EAAMvF,MAEbqE,QAAeV,EAAkBtC,EAAMuC,GAAO,GAChDS,GAAQsB,EAAQxE,KAAKkD,GAEzBM,EAAMpE,KAAc,GACpBoE,EAAMpE,GAAWY,KAAK,CAAEoC,OAAMlC,Q,MAC3B,GAAa,sBAAT/C,EAA8B,CACrC,MAAM,SAAEiC,EAAQ,KAAEc,EAAI,MAAEuC,GAAU2B,EAAMC,QAClCjC,EAAOgC,EAAMvF,MACbpC,EAAkB,MAAVgG,EAAgB,EAAI,EAC5BqD,EAAazF,EAAiBjB,GAAU3C,GAE9C,GAAIqJ,EAAY,CACZ,MAAMC,EAAS1I,EAAqBL,EAAO8I,GACrCE,QAAaC,EAAoB/F,EAAM6F,GACzCC,GAAMxB,EAAQxE,KAAKgG,E,CAG3BxC,EAAMpE,KAAc,GACpBoE,EAAMpE,GAAWY,KAAK,CAAEoC,OAAMlC,Q,MAC3B,GAAa,gBAAT/C,EAAwB,CAC/B,MAAMiC,EAAWgF,EAAMC,QAAQjF,SACzBc,EAAOG,EAAiBjB,GAAU,GAClC8G,EAAW9B,EAAMvF,MAEjBsH,EAAOC,EAAoBF,EAAU,GAC3C1B,EAAQxE,KAAKmG,GACbb,EAASE,OAAOxF,KAAK,CAAEE,OAAMgG,WAAU9G,aAEvCoE,EAAMpE,GAAY8G,C,MACf,GAAa,iBAAT/I,EAAyB,CAChC,MAAM,SAAEiC,EAAQ,KAAEc,GAASkE,EAAMC,QAC3BjC,EAAOgC,EAAMvF,MAEbwH,EAAYzK,EAAS,kBAAmB,CAAEE,MAAO,cACjD6G,QAAc2D,EAAwBpG,EAAM,EAAGmG,GAErD,GAAI1D,EAAO,CACP,MACM4D,EAAQC,EAAwB,kBAAmBH,EADrCrJ,EAAMyJ,SAASC,MAAQ1J,EAAM2J,OAAOD,MAExDlC,EAAQxE,KAAK2C,GACb6B,EAAQxE,KAAKuG,E,CAGjB/C,EAAMpE,GAAY,CAAEgD,OAAMlC,O,MACvB,GAAa,iBAAT/C,GAAoC,oBAATA,EAA4B,CAC9D,MAAMkH,EAAUD,EAAMC,QAChBjF,EAAWiF,EAAQjF,SACnBc,EAAOG,EAAiBjB,GAAU,GAClC8G,EAAW9B,EAAMvF,MACjB+H,EAAOf,OAAOxB,EAAQuC,MAAQ,KAC9BC,EAA4B,SAAlBxC,EAAQyC,MAExB,GAAID,EAAS,CACT,MAAMV,EAAOC,EAAoBF,EAAUU,GAC3CpC,EAAQxE,KAAKmG,E,KACV,CACH,MAAMY,EAAW7C,EAAU5G,MAAKR,GAAQpC,EAAYoC,EAAMoD,KAC1D,IAAK6G,EAAU,SAEDpC,EAASoC,GACjB/G,KAAKgH,EAAgBd,EAAShK,cAAe0K,G,CAGvD,MAAMK,EAAS,CAAEf,SAAUW,EAAUX,EAAWA,EAAShK,cAAe4K,MAAOD,GAE/E,GAAa,iBAAT1J,EACAmI,EAASE,OAAOxF,KAAK,CAAEE,OAAMgG,WAAU9G,aACvCoE,EAAMY,EAAMC,QAAQjF,UAAY6H,OAC7B,GAAa,oBAAT9J,EAA4B,CACnC,MAAMiC,EAAWgF,EAAMC,QAAQjF,SAC/BkG,EAASG,KAAKzF,KAAK,CAAEE,OAAMgG,WAAU9G,WAAU8H,MAAOhF,EAAkB0E,KACxEpD,EAAMpE,KAAc,GACpBoE,EAAMpE,GAAUY,KAAKiH,E,MAEtB,CACH,MAAM7H,EAAWgF,EAAMC,QAAQjF,SACzBc,EAAOG,EAAiBjB,GAAU,GAClC2H,EAAW7C,EAAU5G,MAAKR,GAAQpC,EAAYoC,EAAMoD,KAC1D,IAAK6G,EAAU,SAEf,MAAMb,EAAW9B,EAAMvF,MACjBkG,EAAQJ,EAASoC,GAEvB,GAAa,kBAAT5J,EACA4H,EAAM/E,KAsHX,CACHzF,IAAK,mBACL4M,KAAM,MACNzG,KAAM,gCACN7B,MA1HsCqH,EA2HtC,CAAC,IAAY,IA1HLZ,EAASC,UAAUvF,KAAK,CAAEE,OAAMgG,WAAU9G,kBACvC,GAAa,oBAATjC,EACP4H,EAAM/E,KAAKoH,EAAqBlB,EAAU,SAC1CZ,EAASI,YAAY1F,KAAK,CAAEE,OAAMgG,WAAU9G,kBACzC,GAAa,kBAATjC,EAA0B,CACjC,MAAMkK,EAAUzK,MAAM0K,KAAMlD,EAA4BiD,SAASpH,KAAIW,GAAKA,EAAE/B,QACtEqH,QAAiBqB,EAAcF,GACrCtC,EAAM/E,KAAKoH,EAAqBlB,EAAU,SAC1CZ,EAASI,YAAY1F,KAAK,CAAEE,OAAMgG,WAAU9G,WAAUoI,QAAQ,G,CAIlEhE,EAAMpE,GAAY8G,C,EAI1B,IAAK,MAAOtB,EAAIG,KAAUL,EACtBD,EAAWzE,KAAK,CAAEyH,IAAK7C,EAAI,eAAgBG,IAG/C,MAAM2C,EAAe,CAACvK,EAActC,KAChC,IAAKA,EAAKsK,OAAQ,OAEdpB,IAASA,GAAW,UAExB,MAAM4D,EAAQ/D,EAAIrF,IAAIpB,GAAQyG,EAAIzG,GAAQyG,EAAI,SAAU,CAAEzG,SAC1D4G,GAAW,cAAc4D,iBAEzB,IAAK,MAAM,KAAEzH,EAAI,SAAEgG,EAAQ,SAAE9G,EAAQ,MAAE8H,EAAK,OAAEM,GAAS,KAAW3M,EAAM,CACpE,GAAIqM,EACAnD,GAAW,cAAcJ,EAAWuD,mBACjC,CACH,MAAMA,EAAQ9H,GAAYd,EAAgB,SAASc,KAAcnB,EAAS,SAASmB,UAAcvB,EACjGkG,GAAW,MAAM5B,EAASjC,EAAMgH,I,CAGhChB,IAAUnC,GAAW,8CAA8CmC,YACnEsB,IAAQzD,GAAW,yCACvBA,GAAW,M,GAInB,GAAIS,EAAQW,OAAQ,CAChB,MAAM/H,QAAeJ,EAAM4K,wBAAwB,OAAQpD,GAC3D,IAAK,MAAM1H,KAAQM,EAAO,CACtB,MAAM8C,EAAOpD,EAAKoD,KAElB,GAAkB,SAAdpD,EAAKK,KAAiBmI,EAASK,MAAM3F,KAAK,CAAEE,cAC3C,GAAkB,eAAdpD,EAAKK,KAAuBmI,EAAShD,QAAQtC,KAAK,CAAEE,cAExD,GAAkB,sBAAdpD,EAAKK,KAA8B,CACxC,MAAMuJ,EAAO5J,EAAK4J,KACZd,EAASxI,EAAMuD,QAAOC,GAAgB,UAAXA,EAAEzD,MAAoB9C,EAAQuG,EAAG,YAAc8F,IAChF,IAAK,MAAM/D,KAASiD,EAAQ,CACxB,MAAMnD,EAAQpI,EAAQsI,EAAO,SAC7B8B,EAAWzE,KAAK,CAAEyH,IAAK9E,EAAMiC,GAAI,wBAAyB9H,EAAK8H,GAAI,kCAAmCnC,IACtG6C,EAASM,OAAO5F,KAAK,CAAEE,KAAMyC,EAAMzC,M,EAK3C,MAAM2H,EAAW/K,EAAKzC,QAAgB,OAAQ,gBAC9C,GAAIwN,EAAU,CACV,MACMnH,EAAO,yBADA9E,EAASkB,EAAKsF,KAAM,CAAEtG,MAAO,gBAE1C2I,EAAWzE,KAAK,CAAEyH,IAAKI,EAAU,CAACnH,GAAO,CAAEkE,GAAI9H,EAAK8H,GAAIkD,SAAU,W,GZ7L3E,IAAiBxN,EAA6CuE,EYkMjE6I,EAAa,YAAapC,EAASC,WACnCmC,EAAa,SAAUpC,EAASE,QAChCkC,EAAa,OAAQpC,EAASG,MAC9BiC,EAAa,cAAepC,EAASI,aACrCgC,EAAa,QAASpC,EAASK,OAC/B+B,EAAa,SAAUpC,EAASM,QAChC8B,EAAa,UAAWpC,EAAShD,SAE7BmC,EAAWU,cAAcnI,EAAM+K,wBAAwB,OAAQtD,SZ1M/CnK,EY4MN0C,EAAO,QZ5M4C6B,EY4MnC2E,EZ3MvBlJ,EAAI0N,QAAQ,EY2ME,QZ3McnJ,IY6MnCkF,EAAU,GAAGH,EAAI,iBAAiBG,IAClCkE,YAAYC,OAAO,CAAEC,QAASpE,EAASqE,QAASH,YAAYI,WAAW,CAAErL,WAC7E,CAEAuF,eAAegF,EAAgCF,GAE3C,OAAOA,SADa,IAAIiB,KAAK,KAAKjB,EAAQlC,UAAUoD,SAAS,CAAEhG,OAAO,KAASiG,MACzD,EAC1B,CAEA,SAASpC,EAAoBhE,EAAcwE,GACvC,MAAMhJ,EAAoC,CACtCT,KAAM,OACNsL,IAAK,4CACLrG,KAAMA,EACNoB,MAAO,CACH,CAAC,GAAY,CAAEH,WAAW,KAMlC,OAFAqF,YAAY9K,EAAM,0BAA2BgJ,GAEtChJ,CACX,CAEA2E,eAAe0D,EAAoB/F,EAAgB6F,GAC/C,MAAMC,SAAepD,SAAS1C,KAA4B2C,WAC1D,GAAKmD,EAKL,OAHA0C,YAAY1C,EAAM,uBAAwB,CAAEpB,GAAImB,EAAOnB,GAAIkD,SAAU,YACrEY,YAAY1C,EAAM,SAAS,eAAuB,GAE3CA,CACX,CAYA,SAASgB,EAAgB2B,EAAe/B,GACpC,MAAO,CACHrM,IAAK,mBACL4M,KAAM,UACNzG,KAAM,iBAAiBiI,SACvB9J,MAAOgH,OAAOe,GACd,CAAC,IAAY,EAErB,CAEA,SAASQ,EAAqBjK,EAAc0B,GAExC,MADc,SAAVA,IAAkBA,EAAQ,gCACvB,CACHtE,IAAK,aACL4C,OACA0B,QACA,CAAC,IAAY,EAErB,CAEA0D,eAAe+D,EAAwBpG,EAAgBuC,EAAiB8D,GACpE,MAAM5D,SAAeC,SAAoB1C,KAAQ2C,WACjD,GAAKF,EAIL,OAFA+F,YAAY/F,EAAO,SAAS,IAAa,CAAEoD,OAAQQ,EAAO9D,MAAO,IAE1DE,CACX,CAEA,SAAS6D,EAAwBpE,EAAcsE,EAAckC,GACzD,MAAMrC,EAAqC,CACvCpJ,KAAM,oBACNsL,IAAK,yDACLrG,OACAoB,MAAO,CACH,CAAC,GAAY,CAAEH,WAAW,KAYlC,OARAqF,YAAYnC,EAAO,SAAU,CACzBG,OACAmC,SAAU,CAAEhK,MAAO,UACnBiK,mBAAoB,CAAEjK,OAAO,GAC7BkK,qBAAsB,CAAElK,OAAO,GAC/B+J,YAAa,CAAE/J,MAAO,EAAG6H,KAAMkC,KAG5BrC,CACX,CC7TO,MAAMyC,EAAgB,CACzB,SACA,WACA,UACA,QACA,UACA,SACA,WACA,QACA,SACA,SACA,cACA,QACA,UACA,QACA,OACA,YACA,aACA,UACA,QACA,mBACA,UACA,WACA,QACA,WACA,QACA,UACA,QACA,UACA,YACA,UACA,WACA,aACA,SACA,UACA,SACA,UACA,UACA,UACA,aACA,QACA,SACA,UACA,SACA,OACA,UACA,QACA,UACA,UACA,WACA,QACA,UACA,QACA,QACA,YACA,UACA,UACA,SACA,UACA,SACA,UACA,WACA,SACA,QACA,SACA,SACA,SACA,UACA,WACA,UACA,OACA,UACA,YACA,UACA,UACA,SACA,eACA,UACA,QACA,UACA,SACA,QACA,SACA,QACA,UACA,aACA,QACA,SACA,eACA,OACA,UACA,SACA,WACA,QACA,aACA,UACA,UACA,SACA,YACA,UACA,SACA,WACA,OACA,UACA,WACA,YACA,OACA,UACA,WCrGEC,GAAgB,CAAC,MAAO,QAAS,OAAQ,SACzCC,GAAoB,CAAC,OAAQ,cAAe,SAE5CC,GAAY,IAAIC,MAClB,CACIC,cAAe,EACfC,aAAc,EACdC,gBAAiB,EACjBC,YAAa,GAEjB,CACI1E,IAAG,CAAC2E,EAAKC,IACEA,KAAQD,EAAMA,EAAIC,GAAwB,KAKtD,SAASC,GAAQ3M,GACpB,MAAM4M,EAAa5M,EAAMyF,MACnBe,EAASnJ,EAAQ2C,EAAO,UAAY,CAAC,EACrC6M,ETmIH,SAAuB7M,GAC1B,MAAMC,EAAYD,EAAMC,UAClB4M,EAAa,CAAC,EACdzM,EAAQ,IAAIH,EAAU6M,YAAa7M,EAAU+I,QAAS/I,EAAU8M,WAEtE,IAAK,MAAMjN,KAAQM,EAAO,CACtB,MAAMzC,EAAWF,EAAsBqC,GACvC,IAAKnC,GAAamC,EAAKkN,SAAS,eAAiBlN,EAAKmN,WAAa,SAEnE,MAAM1D,EAAQjH,EAAMwF,IAAInK,GACxB,IAAK4L,EAAO,SAEZ,MAAM,SAAEnH,EAAQ,MAAE3C,EAAK,KAAEU,GAASoJ,EAGlC,GAFAsD,EAAWzK,KAAc,CAAEA,WAAUjC,OAAM+J,MAAO,GAAI9J,MAAO,IAC7DyM,EAAWzK,GAAUhC,MAAMX,GAASK,EACtB,IAAVL,EAAa,CACb,MAAMlC,EAAM,SAAS6E,IACf8H,EAAQ5I,EAAgB/D,GAAO0D,EAAS1D,GAAOuC,EAAKsF,KAC1DyH,EAAWzK,GAAU8H,MAAQA,C,EAIrC,OAAOvI,OAAOsD,OAAO4H,GAAYlJ,QAAOC,GAAKA,EAAExD,MAAM,IACzD,CS1JuB8M,CAAclN,GAC3BmN,EAAoC,GAE1C,IAAK,MAAM5D,KAASsD,EAChB,GAAItJ,EAAWgG,EAAO,eAAgB,CAClC,MAAM,KAAEpJ,EAAI,SAAEiC,EAAQ,MAAE8H,EAAK,MAAE9J,GAAUmJ,EACnC6D,EAAwB,GAExBC,EAAa5H,IACf,MAAM,KAAEL,EAAO,GAAE,KAAElC,EAAO,IAAOsD,EAAMpE,KAAYqD,EAAQ,IAAM,CAAC,EAClE2H,EAAMpK,KAAK,CAAE7C,KAAM,OAAQsF,QAAOL,OAAMlC,OAAMgH,MAAO/I,KAAKC,KAAKH,SAAS,kBAAkBwE,MAAW,EAIzG4H,EAAU,GACNT,GAAc,GAAGS,EAAU,GAG3BjN,EAAM,KACNiN,EAAU,GACNT,GAAc,IAAIS,EAAU,GAC5BT,GAAc,IAAIS,EAAU,IAIhCjN,EAAM,KACNiN,EAAU,GACNT,GAAc,IAAIS,EAAU,IAGpC,MAAMC,EAAgC,CAAEnN,OAAMiC,WAAU8H,QAAOqD,KAAMH,GACrED,EAAUnK,KAAKsK,E,MACZ,GAAI/J,EAAWgG,EAAO,gBAAiB,CAC1C,MAAM,QAAEiE,EAAO,aAAEC,GAAiBC,GAAuB1N,EAAO,UAChE,GAAIwN,EAAU,EAAG,SAEjB,MAAM,KAAErN,EAAI,SAAEiC,EAAQ,MAAE8H,GAAUX,EAC5B6D,EAAwB,GACxBC,EAAY,CAAC5N,EAAegG,KAC9B,MAAM,KAAEL,EAAI,KAAElC,GAASsD,EAAMpE,KAAY3C,IAAU,CAAE2F,KAAM,GAAIlC,KAAM,IACrE,MAAO,CAAE/C,KAAM,OAAQsF,QAAOL,OAAMlC,OAAMgH,MAAO/I,KAAKC,KAAKH,SAAS,kBAAkBwE,KAAU,EAIhGgI,GAAgB,GAAKD,GAAW,GAAGJ,EAAMpK,KAAKqK,EAAU,EAAGG,EAAU,IAGrEC,GAAgB,GAAKD,GAAW,GAAGJ,EAAMpK,KAAKqK,EAAU,EAAGG,EAAU,IAGzEJ,EAAMpK,KAAKqK,EAAU,EAAGG,EAAU,IAClCJ,EAAMpK,KAAKqK,EAAU,EAAGG,EAAU,IAElC,MAAMF,EAAiC,CAAEnN,OAAMiC,WAAU8H,QAAOqD,KAAMH,GACtED,EAAUnK,KAAKsK,E,MACZ,GAAI/J,EAAWgG,EAAO,gBAAiB,CAC1C,MAAMc,EAAUtF,EAAiBpB,QAAOC,GAAK5D,EAAMwI,OAAO5E,GAAIgG,KAAQ,IACtE,IAAKS,EAAQlC,OAAQ,SAErB,MAAM,KAAEhI,EAAI,SAAEiC,EAAQ,MAAE8H,GAAUX,EAClC,IAAI,SAAEL,EAAW,GAAE,MAAEY,GAAQ,GAAStD,EAAMpE,IAAa,CAAC,GAEtD8G,GAAaY,GAAUO,EAAQvM,SAASoL,KACxCA,EAAW,GACXY,GAAQ,GAGZ,MAAMwD,EAAiC,CACnCnN,OACAiC,WACA8H,QACAqD,KAAM,CAAC,CAAEpN,KAAM,QAASkK,UAASnB,SAAUY,EAAQZ,EAAWvC,EAAWuC,GAAWY,WAExFqD,EAAUnK,KAAKsK,E,MACZ,GAAI/J,EAAWgG,EAAO,mBAAoB,CAC7C,MAAM,KAAEpJ,EAAI,SAAEiC,EAAQ,MAAE8H,EAAK,MAAE9J,GAAUmJ,EACnC6D,EAAyC,GACzCO,EAAc3N,EAAMwI,OAEpBoF,EAAY,CAACnO,EAAemK,EAAiBS,KAC/C,IAAI,SAAEnB,EAAW,GAAE,MAAEY,GAAQ,GAAStD,EAAMpE,KAAY3C,IAAU,CAAC,GAE/DyJ,GAAaY,GAAUO,EAAQvM,SAASoL,KACxCA,EAAW,GACXY,GAAQ,GAGZsD,EAAMpK,KAAK,CACP7C,KAAM,QACN+J,MAAOhF,EAAkB0E,GACzBS,UACAnB,SAAUY,EAAQZ,EAAWvC,EAAWuC,GACxCU,OACAE,SACF,EAGA+D,EAAiB,CAACpO,EAAeqO,EAA8B,WACjE,MAAMhO,EAAOM,EAAMX,GACnB,QAAOK,GAA0C,SAAnCiO,GAAiBjO,EAAMgO,EAA0B,EAInE,GAAID,EAAe,EAAG,WAAY,CAC9B,MAAMrF,EAASzD,EAAiBpB,QAAOC,GAAK+J,EAAY/J,GAAGgG,KAAO,IAClE,IAAKpB,EAAOL,OAAQ,SAEpByF,EAAU,EAAG,EAAGpF,GAChBoF,EAAU,EAAG,EAAGpF,E,MAGf,GAAIpI,EAAM,IAAMyN,EAAe,IAAMA,EAAe,GAAI,CACzD,MAAMG,EAAUjJ,EAAiBpB,QAAOC,GAAK+J,EAAY/J,GAAGgG,KAAO,IAEnE,GAAIgD,GAAc,EAAG,CACjB,IAAKoB,EAAQ7F,OAAQ,SACrByF,EAAU,EAAG,EAAGI,GAChBJ,EAAU,EAAG,EAAGI,E,KACb,CACH,MAAMC,EAAUlJ,EAAiBpB,QAAOC,GAAK+J,EAAY/J,GAAGgG,KAAO,IACnE,IAAKqE,EAAQ9F,OAAQ,SACrByF,EAAU,EAAG,EAAGK,GACZD,EAAQ7F,QAAQyF,EAAU,EAAG,EAAGI,E,OAGxC,GAAIpB,GAAc,EAAG,CACjB,MAAMqB,EAAUlJ,EAAiBpB,QAAOC,GAAK+J,EAAY/J,GAAGgG,KAAO,IACnE,IAAKqE,EAAQ9F,OAAQ,SAErByF,EAAU,EAAG,EAAGK,GAChBL,EAAU,EAAG,EAAGK,E,MACb,GAAIrB,GAAc,EAAG,CACxB,MAAMsB,EAAUnJ,EAAiBpB,QAAOC,GAAK+J,EAAY/J,GAAGgG,KAAO,IACnE,IAAKsE,EAAQ/F,OAAQ,SAErByF,EAAU,EAAG,EAAGM,GAEhB,MAAMD,EAAUlJ,EAAiBpB,QAAOC,GAAK+J,EAAY/J,GAAGgG,KAAO,IAC/DqE,EAAQ9F,QAAQyF,EAAU,EAAG,EAAGK,E,KACjC,CACH,MAAMC,EAAUnJ,EAAiBpB,QAAOC,GAAK+J,EAAY/J,GAAGgG,KAAO,IACnE,IAAKsE,EAAQ/F,OAAQ,SAErByF,EAAU,EAAG,EAAGM,GAChBN,EAAU,EAAG,EAAGM,E,CAGxB,MAAMZ,EAAoC,CACtCnN,OACAiC,WACA8H,QACAqD,KAAMH,GAEVD,EAAUnK,KAAKsK,E,MACZ,GAAI/J,EAAWgG,EAAO,eAAgB,CACzC,MAAM,KAAEpJ,EAAI,SAAEiC,EAAQ,MAAE8H,GAAUX,EAE5B+D,EAAgC,CAClCnN,OACAiC,WACA8H,QACAqD,KAAM,CAAC,CAAEpN,KAAM,QAAS+I,SALX1C,EAAMpE,IAAa,GAKE+L,YAAahN,KAAKC,KAAKH,SAAS,gCAEtEkM,EAAUnK,KAAKsK,E,MACZ,GAAI/J,EAAWgG,EAAO,iBAAkB,CAC3C,MAAM6E,EAAiBpO,EAAM8F,OAAOQ,OAAOiC,UAAU1G,MAC/CwI,EAAU2B,EAAcrI,QAAOC,IAAMwK,EAAetQ,SAAS8F,KAAIyK,OACvE,IAAKhE,EAAQlC,OAAQ,SAErB,MAAM,KAAEhI,EAAI,SAAEiC,EAAQ,MAAE8H,GAAUX,EAG5B+D,EAAkC,CACpCnN,OACAiC,WACA8H,QACAqD,KAAM,CAAC,CAAEpN,KAAM,SAAUkK,UAASnB,SANrB1C,EAAMpE,IAAa,MAQpC+K,EAAUnK,KAAKsK,E,MACZ,GAAI/J,EAAWgG,EAAO,mBAAoB,CAC7C,MAAM,KAAEpJ,EAAI,SAAEiC,EAAQ,MAAE8H,GAAUX,EAC5BL,EAAW1C,EAAMpE,IAAa,GAC9BkL,EAAoC,CACtCnN,OACAiC,WACA8H,QACAqD,KAAM,CAAC,CAAEpN,KAAM,SAAUkK,QAAS4B,GAAe/C,cAErDiE,EAAUnK,KAAKsK,E,MACZ,GAAI/J,EAAWgG,EAAO,qBAAsB,CAC/C,MAAM,KAAEpJ,EAAI,SAAEiC,EAAQ,MAAE8H,EAAK,MAAE9J,GAAUmJ,EACnCL,EAAW1C,EAAMpE,IAAa,GAE9BgL,EAAwB,CAC1B,CACIjN,KAAM,OACN+J,MAAO/I,KAAKC,KAAKH,SAAS,eAC1BmE,KAAM8D,EAAS,IAAI9D,MAAQ,GAC3BlC,KAAMgG,EAAS,IAAIhG,MAAQ,GAC3BuC,MAAO,IAIXrF,EAAM,IACNgN,EAAMpK,KAAK,CACP7C,KAAM,OACN+J,MAAO/I,KAAKC,KAAKH,SAAS,gBAC1BmE,KAAM8D,EAAS,IAAI9D,MAAQ,GAC3BlC,KAAMgG,EAAS,IAAIhG,MAAQ,GAC3BuC,MAAO,KAEf,MAAM6H,EAAsC,CAAEnN,OAAMiC,WAAU8H,QAAOqD,KAAMH,GAC3ED,EAAUnK,KAAKsK,E,MACZ,GAAI/J,EAAWgG,EAAO,gBAAiB,CAC1C,MAAM,KAAEpJ,EAAI,SAAEiC,EAAQ,MAAE8H,GAAUX,GAC5B,KAAEnE,EAAO,GAAE,KAAElC,EAAO,IAAOsD,EAAMpE,IAAa,CAAC,EAC/CkL,EAAiC,CACnCnN,OACAiC,WACA8H,QACAqD,KAAM,CAAC,CAAEpN,KAAM,OAAQsF,MAAO,EAAGL,OAAMlC,UAE3CiK,EAAUnK,KAAKsK,E,MACZ,GAAI/J,EAAWgG,EAAO,iBAAkB,CAC3C,MAAM,KAAEpJ,EAAI,SAAEiC,EAAQ,MAAE8H,GAAUX,EAC5B+D,EAAkC,CACpCnN,OACAiC,WACA8H,QACAqD,KAAM,CAAC,CAAEpN,KAAM,SAAUkK,QAAS6B,MAEtCiB,EAAUnK,KAAKsK,E,CAIvB,MAAMC,EAA+B,GAC/Be,EAAiC,GACvC,IAAK,MAAMhB,KAAYH,EACfG,EAASC,KAAKpF,OAAS,EAAGmG,EAAOtL,KAAKsK,GACrCC,EAAKvK,KAAKsK,GAMnB,OAHAC,EAAKc,MAAK,CAACE,EAAGC,IAAMrC,GAAUoC,EAAEpO,MAAQgM,GAAUqC,EAAErO,QACpDmO,EAAOD,MAAK,CAACE,EAAGC,IAAMD,EAAEhB,KAAKpF,OAASqG,EAAEjB,KAAKpF,SAEtC,CAAEoF,OAAMe,SACnB,CAEA,SAASP,GAAoCjO,EAAgBgO,GAGzD,OAFchO,EAAKmI,QAAQnC,OAAOiC,MACfzH,MAAKmO,GAAqB,cAAbA,EAAKlR,KAAuBkR,EAAKC,aAAeZ,KACnEa,SACjB,CAEA,SAASjB,GAAuB1N,EAAkB4O,GAC9C,IAAIpB,EAAU,EACVC,EAAe,EAEnB,IAAK,MAAMlE,KAASvJ,EAAM6O,aAAc,CACpC,GAAI,gBAAiBtF,EAAM/C,MAAO,SAElC,MAAM4G,EAAQ7D,EAAMzD,OAAOsH,MAC3B,IAAK,MAAM7P,KAAO6P,EACDA,EAAM7P,GACVuR,MAAKtB,EAAUuB,KAAKD,IAAItB,EAAS3E,OAAOtL,EAAIgC,MAAM,MAG3DgK,EAAMqF,YAAcA,IAAWnB,EAAesB,KAAKD,IAAIrB,EAAclE,EAAMK,M,CAGnF,MAAO,CAAE4D,QAASuB,KAAKC,QAAQxB,EAAS,EAAG,IAAKC,eACpD,CC1SO,SAASwB,GAAyCC,EAAeC,GACpE,MAAMC,EAAmB,GAEzB,GAAIF,GAASC,EACT,IAAK,IAAIjH,EAAIgH,EAAOhH,GAAKiH,EAAKjH,IAAKkH,EAAOpM,KAAKkF,QAE/C,IAAK,IAAIA,EAAIgH,EAAOhH,GAAKiH,EAAKjH,IAAKkH,EAAOpM,KAAKkF,GAGnD,OAAOkH,CACX,CCRO,MAAMC,GAAkB,CAC3BC,YAAa,CAAElN,SAAU,CAAC,UAC1BmN,kBAAmB,CAAEC,SAAU,CAAC,SAAUlJ,OAAQ,CAAC,YACnDmJ,aAAc,CAAErN,SAAU,CAAC,SAAUmE,WAAY,CAAC,WAClDmJ,aAAc,CAAEtN,SAAU,CAAC,UAAW,WAGnC,SAASuN,GAAOC,GACnBA,EAAMC,iBAEN,MAAMjP,EAAOgP,EAAME,cAAczI,QAC3B5B,EAAQoD,OAAOjI,EAAK6E,OAE1B,OAAQ7E,EAAKT,MACT,IAAK,cACD4P,GAAY,IAAKV,GAAgBC,YAAa7J,MAAOwJ,GAAwB,EAAGxJ,KAChF,MACJ,IAAK,qBA0Bb,UAAoB,SAAE+J,EAAW,GAAE,MAAE/J,EAAQ,CAAC,EAAC,OAAEa,EAAS,IAA2B,CAAC,GAClF,MAAM3C,EAA6B,CAC/B6L,WACAhH,OAAQ,GACRwH,OAAQ,GACRC,OAAQ,GACR3J,SACAb,SAEJtE,KAAK+O,KAAKC,kBAAkBC,QAAQ,OAAQzM,EAChD,CAnCY0M,CAAW,IAAKhB,GAAgBE,kBAAmB9J,MAAO,CAAE6K,IAAK,EAAGxB,IAAKrJ,KACzE,MACJ,IAAK,eACDsK,GAAY,IAAKV,GAAgBI,aAAchK,MAAOwJ,GAAwB,EAAGxJ,KACjF,MACJ,IAAK,eACDsK,GAAY,IAAKV,GAAgBK,aAAcjK,MAAOwJ,GAAwB,EAAGxJ,KAG7F,CAEA,SAASsK,IAAY,SAAE3N,EAAW,GAAE,MAAEqD,EAAQ,GAAE,WAAEc,EAAa,IAA4B,CAAC,GACxF,MAAM5C,EAA8B,CAChCvB,WACAmO,QAAS,GACT9K,QACAuK,OAAQ,GACRQ,OAAQ,GACRP,OAAQ,GACR1J,aACAD,OAAQ,IAEZnF,KAAK+O,KAAKC,kBAAkBC,QAAQ,QAASzM,EACjD,CCxCA,MAAM,GAAWnC,EAAY,wBAoC7B,SAASiP,GAAmB3Q,GACxB,MAAM4Q,EAAW5Q,EAAKgG,OAAO6K,KAAK9O,MAElC,QAAI6O,EAAS5S,SAAS,SAAY4S,EAAS5S,SAAS,QAAU8S,SAASF,GAAY,MAC/E,GAAS1R,KAAK,iBAAkB,CAAE2R,KAAM,YACjC,EAIf,CAEA,SAASE,GACLC,EACAhR,GACA,SAAEsC,EAAW,GAAE,WAAEmE,EAAa,IAA4B,CAAC,EAC3D5C,GAEA,IAAK7D,EAAKkN,SAAS,SAAU,OAAO,GAAShO,KAAK,YAAa,CAAEmB,KAAM,UAEvE,GAAIL,EAAKiR,YAAc3O,EAAStE,SAAS,WAAY,OAAO,GAASkB,KAAK,WAAY,CAAEmB,KAAM,QAAS6Q,IAAK,YAC5G,GAAIlR,EAAKmR,WAAa7O,EAAStE,SAAS,UAAW,OAAO,GAASkB,KAAK,WAAY,CAAEmB,KAAM,QAAS6Q,IAAK,WAC1G,GAAIlR,EAAKoR,eAAiB9O,EAAStE,SAAS,SAAU,OAAO,GAASkB,KAAK,WAAY,CAAEmB,KAAM,QAAS6Q,IAAK,UAE7G,GAAIzK,EAAW4B,OAAQ,CACnB,MAAMgJ,EAAiBrR,EAAKgG,OAAOS,WAAW1E,MAC9C,IAAK,MAAM+M,KAAarI,EACpB,IAAK4K,EAAerT,SAAS8Q,GACzB,OAAO,GAAS5P,KAAK,aAAc,CAAEmB,KAAM,QAASiR,MAAOxC,EAAWxM,SAAU,a,CAI5F,GAAItC,EAAK2F,MAAQoD,OAAOiI,EAAOO,KAAK,eAAgB,OAAO,GAASrS,KAAK,aAAc,CAAEmB,KAAM,UAE3FwD,IAAWA,EAAO7D,IAEtBwR,GAAYR,EAAQhR,EACxB,CAkBA,SAASwR,GAAYR,EAAgBhR,GACjCgR,EAAOS,IAAIzR,EAAKsF,MAChB0L,EAAOO,KAAK,QAASvR,EAAKsF,MAC1B0L,EAAOO,KAAK,YAAavR,EAAKoD,MAC9B4N,EAAOU,QAAQ,yBAAyBC,QAAQC,YAAY,WAChE,CCxFA,MAAM,GAAWlQ,EAAY,aAEtB,MAAMmQ,yBAAyBC,YAC1BC,OACAC,gBAERC,YAAY/R,EAAsBqK,GAC9B2H,MAAM3H,GACN4H,KAAKJ,OAAS7R,CAClB,CAEWkS,4BACP,OAAOC,YAAYH,MAAME,eAAgB,CACrCtK,GAAI,yBACJ+C,MAAO,GAAS,SAChB2C,SAAU7J,EAAa,iBACvB2O,OAAQ,OACRC,eAAe,EACfC,gBAAgB,EAChBC,SAAU,CACN,CACIC,aAAc,6BAI9B,CAEA7F,QAAQtC,GACJ,OAAO8H,YAAYH,MAAMrF,QAAQtC,GAAU,CACvCjJ,KAAM,MACHuL,GAAQsF,KAAKJ,SAExB,CAEAY,OAAOC,EAA6BrI,GAYhC,OAXI4H,KAAKH,iBAAiBa,cAAcV,KAAKH,iBAEzCG,KAAKW,QAAQtS,KAAK,mBAClB2R,KAAKH,gBAAkBe,aAAY,KACfZ,KAAKW,QAAQtS,KAAwB,iBAC7CwS,MAAK,CAACC,EAAGC,KACbA,EAAOC,eAAiBD,EAAOC,cAAgB,GAAKD,EAAO3I,QAAQlC,MAAM,GAC3E,GACH,MAGA6J,MAAMS,OAAOC,EAAOrI,EAC/B,CAEA6I,MAAM7I,GAEF,OADI4H,KAAKH,iBAAiBa,cAAcV,KAAKH,iBACtCE,MAAMkB,MAAM7I,EACvB,CAEA8I,kBAAkBrM,GACdkL,MAAMmB,kBAAkBrM,GAExBA,EAAKxG,KAAwB,iBAAiB8S,GAAG,SAAUnB,MAAK,EAAqBoB,KAAKpB,OAC1FnL,EAAKxG,KAAyB,gBAAgB8S,GAAG,SAAUnB,MAAK,EAAoBoB,KAAKpB,OAEzFnL,EAAKxG,KAA2B,wBAAwB8S,GAAG,QAASzD,IAEpE7I,EAAKxG,KAAwB,uBAAuB8S,GAAG,QAASnB,MAAK,EAASoB,KAAKpB,OACnFnL,EAAKxG,KAAwB,wBAAwB8S,GAAG,QAASnB,MAAK,EAAUoB,KAAKpB,OACrFnL,EAAKxG,KAAwB,wBAAwB8S,GAAG,QAASnB,MAAK,EAAUoB,KAAKpB,MACzF,CAEU1M,cAAcqK,IDxErBrK,eAAuBqK,GAC1B,IAAIkB,EAASwC,EAAE1D,EAAMkB,QACjBA,EAAOyC,GAAG,WAAUzC,EAASA,EAAO0C,QAExC,MAAMC,EAAe3C,EAAOO,KAAK,aACjC,GAAKoC,EAEL,IACI,MAAMC,EAAa9D,EAAM+D,cAAchH,QAAQ,cACzCiH,EAAY,IAAM,GAAS5U,KAAK,iBAEhC4B,EAAuCiT,KAAKC,MAAMJ,GACxD,IAAK9S,GAAsB,SAAdA,EAAKT,MAAwC,iBAAdS,EAAKsC,KAAmB,OAAO0Q,IAE3E,MAAM9T,QAAa8F,SAAmBhF,EAAKsC,MAC3C,IAAKpD,EAAM,OAAO8T,IAElB,OAAQH,GACJ,IAAK,cACD5C,GAAaC,EAAQhR,EAAMuP,GAAgBC,aAC3C,MACJ,IAAK,qBAmDjB,SAAqBwB,EAAgBhR,GAAgB,SAAE0P,EAAW,GAAE,OAAElJ,EAAS,KAC3E,IAAKxG,EAAKkN,SAAS,SAAWlN,EAAKiU,UAAW,OAAO,GAAS/U,KAAK,YAAa,CAAEmB,KAAM,SACxF,IAAKqP,EAAS1R,SAASgC,EAAKkU,UAAW,OAAO,GAAShV,KAAK,WAAY,CAAEmB,KAAM,OAAQ6Q,IAAKlR,EAAKkU,WAElG,GAAI1N,EAAO6B,OAAQ,CACf,MAAM8L,EAAanU,EAAKgG,OAAOQ,OAAOzE,MACtC,IAAK,MAAMuP,KAAS9K,EAChB,IAAK2N,EAAWnW,SAASsT,GAAQ,OAAO,GAASpS,KAAK,aAAc,CAAEmB,KAAM,OAAQiR,QAAOhP,SAAU,S,CAI7G,GAAItC,EAAK2F,MAAQoD,OAAOiI,EAAOO,KAAK,eAAgB,OAAO,GAASrS,KAAK,aAAc,CAAEmB,KAAM,SAE/FmR,GAAYR,EAAQhR,EACxB,CAhEgBoU,CAAYpD,EAAQhR,EAAMuP,GAAgBE,mBAC1C,MACJ,IAAK,eACDsB,GAAaC,EAAQhR,EAAMuP,GAAgBI,cAC3C,MACJ,IAAK,eACDoB,GAAaC,EAAQhR,EAAMuP,GAAgBK,aAAce,IAGrD,CAAd,MAAOxO,GAAO,CACpB,CCyCQkS,CAAQvE,EACZ,CAEA,GAAqBA,GACjB,MAAMoD,EAASpD,EAAME,cACfhG,EAAQkJ,EAAOoB,mBACrBtK,EAAMzC,QAAQyC,MAAQ,QACtBA,EAAMjI,MAAQ8E,EAAWqM,EAAOnR,MACpC,CAEA,GAAoB+N,GAChB,MAAM9F,EAAQ8F,EAAME,cACdkD,EAASlJ,EAAMuK,uBACfxS,EAAQiI,EAAMjI,MAAM3C,cACpBiB,EAAO2J,EAAMzC,QAAQlH,KAGrBmU,EAAWvP,EAGjB,GAFgBnF,MAAM0K,KAAK0I,EAAO3I,SAASpH,KAAIW,GAAKA,EAAE/B,QAE1C/D,SAAS+D,GACjBmR,EAAOnR,MAAQA,EACfiI,EAAMjI,MAAQ8E,EAAW9E,GACzBiI,EAAMzC,QAAQyC,MAAQ,aACnB,GAAIwK,EAASxW,SAAS+D,GAAQ,CACjC,GAAa,iBAAT1B,EAAyB,CACzB,MAAMyJ,EAAOf,OAAOiB,EAAMzC,QAAQuC,MAAQ,KAC1C,GAAS5K,KAAK,0BAA2B,CAAE4K,KAAM1E,EAAkB0E,GAAOgC,YAAa/J,G,CAG3FmR,EAAOnR,MAAQ,GACfiI,EAAMjI,MAAQ,GACdiI,EAAMzC,QAAQyC,MAAQ,M,MAEtBkJ,EAAOnR,MAAQ,GACfiI,EAAMzC,QAAQyC,MAAQ,MAE9B,CAEA,KACImI,KAAKW,QAAQ2B,SAAS,WAC1B,CAEA,KACI,MAAMC,EAAkB,GAOxB,OANoBvC,KAAKW,QAAQtS,KAAK,SAASqD,QAAO,CAACoP,EAAGjJ,KAAWA,EAAMjI,QAE3DsG,QAAQqM,EAAMxR,KAAK,eAEnCwR,EAAMC,SAAQ7Q,GAAK,GAAS5E,KAAK4E,MAEzB4Q,EAAMrM,MAClB,CAEA5C,QAAgBqK,GAGZ,GAFAA,EAAMC,iBAEDoC,MAAK,IAAV,CAEAA,MAAK,IAEL,UACUpL,EAAOoL,KAAKW,QAASX,KAAKJ,O,CAClC,MAAO5P,GACL,GAASA,MAAM,oBACflD,QAAQkD,MAAMA,E,CAGlBgQ,KAAKiB,OAXwB,CAYjC,CAEA,GAAStD,GACLA,EAAMC,iBACN,MAAMiB,EAASwC,EAAE1D,EAAME,eACjBhG,EAAQgH,EAAO4D,QAAQ,SAASjD,QACtC3H,EAAMyH,IAAI,IACVzH,EAAMuH,KAAK,QAAS,IACpBvH,EAAMuH,KAAK,YAAa,IACxBP,EAAOyD,SAAS,WACpB,CAEA,GAAU3E,GACNA,EAAMC,iBACNoC,KAAKiB,OACT,EnB/JK,IAAW,EoBCR,gBAEZyB,MAAMC,KAAK,SAAS,MCFb,WACH,MAAMN,EAAWnT,KAAK+O,KAAK2E,QAAQC,gBACnC3T,KAAK+O,KAAK2E,QAAQC,gBAAkBvP,MAAO8E,IACvC,MAAM0K,QAAeT,EAASjK,GAE9B,OADI0K,EAAO5M,QAAUkC,EAAQ2K,QAKrCzP,eAAyByP,GAGrB,MAAMC,GAFND,EAASpV,MAAMC,QAAQmV,GAAUA,EAAS,CAACA,IAEjBrR,QAAOC,GAAKA,EAAEoJ,SAAS,eACjD,IAAK,MAAMhN,KAASiV,EAAY,CAC5B,MAAMC,EAAiD,GACjDC,EAAmB,GACnBlV,EAAYD,EAAMC,UAElBmV,EAAiBtV,IACnB,MAAMiI,EAAQC,UAAUlI,EAAKmI,QAAQnC,OAAOiC,OAE5C,IAAIsN,GAAW,EACf,IAAK,IAAInN,EAAIH,EAAMI,OAAS,EAAGD,GAAK,EAAGA,IAC7B,iBAAkBH,EAAMG,KAC9BH,EAAMK,OAAOF,EAAG,GAChBmN,GAAW,GAGXA,GAAUH,EAAOlS,KAAK,CAAEyH,IAAK3K,EAAK8H,GAAI,eAAgBG,GAAQ,EAGtE,IAAK,MAAMjI,KAAQG,EAAU+I,KAGzB,GAFI1F,EAAWxD,IAAOsV,EAActV,GAEhCzC,EAAQyC,EAAM,aAAc,CAC5B,MAAM+K,EAAW/K,EAAKzC,QAAgB,OAAQ,gBAC9C,GAAIwN,EAAU,CACV,MACMnH,EAAO,2BADA9E,EAASkB,EAAKsF,KAAM,CAAEtG,MAAO,gBAE1CoW,EAAOlS,KAAK,CAAEyH,IAAKI,EAAU,CAACnH,IAAO,G,CAEzCyR,EAAOnS,KAAKlD,EAAK8H,G,CAIzB,IAAK,MAAM9H,KAAQG,EAAUkJ,KACrB9L,EAAQyC,EAAM,cAAcqV,EAAOnS,KAAKlD,EAAK8H,IAGrD,IAAK,MAAM9H,KAAQG,EAAU8M,UACrBzJ,EAAWxD,IAAOsV,EAActV,GAGxC,IAAK,MAAMA,KAAQG,EAAU6M,SACrBxJ,EAAWxD,IAAOsV,EAActV,GAGxC,IAAK,MAAMA,KAAQG,EAAUqV,kBACrBjY,EAAQyC,EAAM,cAAcqV,EAAOnS,KAAKlD,EAAK8H,IAGjDsN,EAAO/M,QAAQnI,EAAM+K,wBAAwB,OAAQmK,GACrDC,EAAOhN,QAAQnI,EAAMuV,wBAAwB,OAAQJ,E,CAEjE,CA5D6CK,CAAUnL,EAAQ2K,QAChDD,CAAM,CAErB,CDJIU,EAAqB,IAGzBd,MAAMvB,GAAG,4BENF,SAAkCsC,EAA2B5O,GAChE,MAAM9G,EAAQ0V,EAAM1V,MACpB,IAAKA,EAAM2V,UhBmIR,SAAwB3V,GAC3B,MAAMC,EAAYD,EAAMC,UACxB,OACIA,EAAU6M,SAAS3F,MAAKrH,GAAQlC,EAAiBkC,EAAM2C,MACvDxC,EAAU+I,KAAK7B,MAAKrH,GAAQlC,EAAiBkC,EAAM0C,MACnDvC,EAAU8M,UAAU5F,MAAKrH,MAA8B,IAApBA,EAAKmN,aAAyBrP,EAAiBkC,EAAMyC,IAEhG,CgB1I2BqT,CAAe5V,GAAQ,OAE9C,MAAM6V,EAAQ/O,EAAKxG,KAAK,uCACxBuV,EACKC,OAAO,uCAAuC7U,EAAS,yDACvDX,KAAK,YACL8S,GAAG,SAAS,IAAM,IAAIzB,iBAAiB3R,GAAOyS,QAAO,KAG1DoD,EACKvV,KAAK,sBACLyV,IAAI,SACJ3C,GAAG,SAASxD,GAASzO,KAAK+O,KAAK2E,QAAQC,gBAAgB,CAAElF,QAAOoF,OAAQhV,KACjF,G","sources":["webpack:///../../../../foundryVTT-projects/@utils/module.ts","webpack:///../../../../foundryVTT-projects/@utils/foundry/flags.ts","webpack:///../../../../foundryVTT-projects/@utils/pf2e/utils.ts","webpack:///../../../../foundryVTT-projects/@utils/foundry/item.ts","webpack:///../../../../foundryVTT-projects/@utils/foundry/notification.ts","webpack:///../../../../foundryVTT-projects/@utils/foundry/localize.ts","webpack:///./src/categories.ts","webpack:///../../../../foundryVTT-projects/@utils/foundry/path.ts","webpack:///../../../../foundryVTT-projects/@utils/pf2e/skills.ts","webpack:///../../../../foundryVTT-projects/@utils/pf2e/actor.ts","webpack:///../../../../foundryVTT-projects/@utils/foundry/uuid.ts","webpack:///../../../../foundryVTT-projects/@utils/pf2e/spell.ts","webpack:///../../../../foundryVTT-projects/@utils/string.ts","webpack:///./src/apps/interface/accept.ts","webpack:///../../../../foundryVTT-projects/@utils/pf2e/languages.ts","webpack:///./src/apps/interface/data.ts","webpack:///../../../../foundryVTT-projects/@utils/utils.ts","webpack:///./src/apps/interface/search.ts","webpack:///./src/apps/interface/drop.ts","webpack:///./src/apps/interface.ts","webpack:///./src/main.ts","webpack:///./src/rest.ts","webpack:///./src/sheet.ts"],"sourcesContent":["export let MODULE_ID = ''\r\n\r\nexport function setModuleID(id: string) {\r\n    if (!MODULE_ID) MODULE_ID = id\r\n}\r\n","import { MODULE_ID } from '@utils/module'\r\n\r\nexport function hasModuleFlag(doc: foundry.abstract.Document) {\r\n    return getProperty(doc, `flags.${MODULE_ID}`) !== undefined\r\n}\r\n\r\nexport function getFlag<T extends unknown>(doc: foundry.abstract.Document, key: string): T | undefined\r\nexport function getFlag<T extends unknown>(doc: foundry.abstract.Document, key: string, fallback: T): T\r\nexport function getFlag<T extends unknown>(doc: foundry.abstract.Document, key: string, fallback?: T): T | undefined {\r\n    return (doc.getFlag(MODULE_ID, key) as T | undefined) ?? fallback\r\n}\r\n\r\n/**\r\n * @template {foundry.Document} T\r\n * @param {T} doc\r\n * @param {string} key\r\n * @param {any} value\r\n * @returns T\r\n */\r\nexport function setFlag(doc: foundry.abstract.Document, key: string, value: unknown) {\r\n    return doc.setFlag(MODULE_ID, key, value)\r\n}\r\n\r\nexport function getSourceId<T extends DocumentUUID>(doc: ClientDocument) {\r\n    return doc.getFlag('core', 'sourceId') as T | undefined\r\n}\r\n\r\nexport function hasSourceId(doc: ClientDocument, sourceId: DocumentUUID) {\r\n    return getSourceId(doc) === sourceId\r\n}\r\n\r\nexport function includesSourceId(doc: ClientDocument, list: DocumentUUID[]) {\r\n    const sourceId = getSourceId(doc)\r\n    return sourceId ? list.includes(sourceId) : false\r\n}\r\n","const wordCharacter = String.raw`[\\p{Alphabetic}\\p{Mark}\\p{Decimal_Number}\\p{Join_Control}]`\r\nconst nonWordCharacter = String.raw`[^\\p{Alphabetic}\\p{Mark}\\p{Decimal_Number}\\p{Join_Control}]`\r\nconst nonWordCharacterRE = new RegExp(nonWordCharacter, 'gu')\r\n\r\nconst wordBoundary = String.raw`(?:${wordCharacter})(?=${nonWordCharacter})|(?:${nonWordCharacter})(?=${wordCharacter})`\r\nconst nonWordBoundary = String.raw`(?:${wordCharacter})(?=${wordCharacter})`\r\nconst lowerCaseLetter = String.raw`\\p{Lowercase_Letter}`\r\nconst upperCaseLetter = String.raw`\\p{Uppercase_Letter}`\r\nconst lowerCaseThenUpperCaseRE = new RegExp(`(${lowerCaseLetter})(${upperCaseLetter}${nonWordBoundary})`, 'gu')\r\n\r\nconst nonWordCharacterHyphenOrSpaceRE = /[^-\\p{White_Space}\\p{Alphabetic}\\p{Mark}\\p{Decimal_Number}\\p{Join_Control}]/gu\r\nconst upperOrWordBoundariedLowerRE = new RegExp(`${upperCaseLetter}|(?:${wordBoundary})${lowerCaseLetter}`, 'gu')\r\n\r\n/** Check if an element is present in the provided set. Especially useful for checking against literal sets */\r\nexport function setHasElement<T extends Set<unknown>>(set: T, value: unknown): value is SetElement<T> {\r\n    return set.has(value)\r\n}\r\n\r\n/**\r\n * The system's sluggification algorithm for labels and other terms.\r\n * @param text The text to sluggify\r\n * @param [options.camel=null] The sluggification style to use\r\n */\r\nexport function sluggify(text: string, { camel = null }: { camel?: 'dromedary' | 'bactrian' | null } = {}): string {\r\n    // Sanity check\r\n    if (typeof text !== 'string') {\r\n        console.warn('Non-string argument passed to `sluggify`')\r\n        return ''\r\n    }\r\n\r\n    switch (camel) {\r\n        case null:\r\n            return text\r\n                .replace(lowerCaseThenUpperCaseRE, '$1-$2')\r\n                .toLowerCase()\r\n                .replace(/['’]/g, '')\r\n                .replace(nonWordCharacterRE, ' ')\r\n                .trim()\r\n                .replace(/[-\\s]+/g, '-')\r\n        case 'bactrian': {\r\n            const dromedary = sluggify(text, { camel: 'dromedary' })\r\n            return dromedary.charAt(0).toUpperCase() + dromedary.slice(1)\r\n        }\r\n        case 'dromedary':\r\n            return text\r\n                .replace(nonWordCharacterHyphenOrSpaceRE, '')\r\n                .replace(/[-_]+/g, ' ')\r\n                .replace(upperOrWordBoundariedLowerRE, (part, index) => (index === 0 ? part.toLowerCase() : part.toUpperCase()))\r\n                .replace(/\\s+/g, '')\r\n        default:\r\n            throw ErrorPF2e(\"I don't think that's a real camel.\")\r\n    }\r\n}\r\n\r\nexport function ErrorPF2e(message: string): Error {\r\n    return Error(`PF2e System | ${message}`)\r\n}\r\n","import { getSourceId, includesSourceId } from '@utils/foundry/flags'\r\n\r\ntype ActorItemTypes<A extends Actor> = (keyof A['itemTypes'])[]\r\n\r\nfunction getItemSourceIdCondition(sourceId: ItemUUID | ItemUUID[]) {\r\n    return Array.isArray(sourceId)\r\n        ? (item: Item) => includesSourceId(item, sourceId)\r\n        : (item: Item) => getSourceId(item) === sourceId\r\n}\r\n\r\nfunction getItems<A extends Actor, I extends Item = CollectionValue<A['items']>>(actor: A, itemTypes?: ActorItemTypes<A>) {\r\n    return (itemTypes ? itemTypes.flatMap(type => actor.itemTypes[type as string]) : actor.items) as Embedded<I>[]\r\n}\r\n\r\nexport function findItemWithSourceId<A extends Actor, I extends Item = CollectionValue<A['items']>>(\r\n    actor: A,\r\n    sourceId: ItemUUID,\r\n    itemTypes?: ActorItemTypes<A>\r\n) {\r\n    return getItems<A, I>(actor, itemTypes).find(getItemSourceIdCondition(sourceId))\r\n}\r\n\r\nexport function hasItemWithSourceId<A extends Actor, I extends Item = CollectionValue<A['items']>>(\r\n    actor: A,\r\n    sourceId: ItemUUID | ItemUUID[],\r\n    itemTypes?: ActorItemTypes<A>\r\n) {\r\n    return getItems<A, I>(actor, itemTypes).some(getItemSourceIdCondition(sourceId))\r\n}\r\n\r\nexport function filterItemsWithSourceId<A extends Actor, I extends Item = CollectionValue<A['items']>>(\r\n    actor: A,\r\n    sourceId: ItemUUID | ItemUUID[],\r\n    itemTypes?: ActorItemTypes<A>\r\n) {\r\n    return getItems<A, I>(actor, itemTypes).filter(getItemSourceIdCondition(sourceId))\r\n}\r\n","import { localize } from '@utils/foundry/localize'\r\n\r\nexport type NotifyArgs = [str: string, arg1?: boolean | Record<string, string>, arg2?: boolean]\r\n\r\nfunction notify(\r\n    str: string,\r\n    arg1?: 'warning' | 'info' | 'error' | boolean | Record<string, string>,\r\n    arg2?: boolean | Record<string, string>,\r\n    arg3?: boolean\r\n) {\r\n    const type = typeof arg1 === 'string' ? arg1 : 'info'\r\n    const data = typeof arg1 === 'object' ? arg1 : typeof arg2 === 'object' ? arg2 : undefined\r\n    const permanent = typeof arg1 === 'boolean' ? arg1 : typeof arg2 === 'boolean' ? arg2 : arg3 ?? false\r\n\r\n    ui.notifications.notify(localize(str, data), type, { permanent })\r\n}\r\n\r\nexport function warn(...args: NotifyArgs) {\r\n    const [str, arg1, arg2] = args\r\n    notify(str, 'warning', arg1, arg2)\r\n}\r\n\r\nexport function info(...args: NotifyArgs) {\r\n    const [str, arg1, arg2] = args\r\n    notify(str, 'info', arg1, arg2)\r\n}\r\n\r\nexport function error(...args: NotifyArgs) {\r\n    const [str, arg1, arg2] = args\r\n    notify(str, 'error', arg1, arg2)\r\n}\r\n","import { MODULE_ID } from '@utils/module'\r\nimport { warn, NotifyArgs, info, error } from '@utils/foundry/notification'\r\n\r\nexport type LocalizeArgs = [key: string, data?: Record<string, string | number>]\r\n\r\nexport function localize(...args: LocalizeArgs) {\r\n    let [key, data] = args\r\n    key = `${MODULE_ID}.${key}`\r\n    if (data) return game.i18n.format(key, data)\r\n    return game.i18n.localize(key)\r\n}\r\n\r\nexport function hasLocalization(key: string) {\r\n    return game.i18n.has(`${MODULE_ID}.${key}`, false)\r\n}\r\n\r\nexport function localizePath(key: string) {\r\n    return `${MODULE_ID}.${key}`\r\n}\r\n\r\nexport function subLocalize(subKey: string) {\r\n    const fn = (...args: LocalizeArgs) => localize(`${subKey}.${args[0]}`, args[1])\r\n\r\n    Object.defineProperties(fn, {\r\n        warn: {\r\n            value: (...args: NotifyArgs) => warn(`${subKey}.${args[0]}`, args[1], args[2]),\r\n            enumerable: false,\r\n            configurable: false,\r\n        },\r\n        info: {\r\n            value: (...args: NotifyArgs) => info(`${subKey}.${args[0]}`, args[1], args[2]),\r\n            enumerable: false,\r\n            configurable: false,\r\n        },\r\n        error: {\r\n            value: (...args: NotifyArgs) => error(`${subKey}.${args[0]}`, args[1], args[2]),\r\n            enumerable: false,\r\n            configurable: false,\r\n        },\r\n        has: {\r\n            value: (key: string) => hasLocalization(`${subKey}.${key}`),\r\n            enumerable: false,\r\n            configurable: false,\r\n        },\r\n    })\r\n\r\n    return fn as ((...args: LocalizeArgs) => string) & {\r\n        warn: (...args: NotifyArgs) => void\r\n        info: (...args: NotifyArgs) => void\r\n        error: (...args: NotifyArgs) => void\r\n        has: (key: string) => boolean\r\n    }\r\n}\r\n","import { getSourceId, includesSourceId } from '@utils/foundry/flags'\r\nimport { filterItemsWithSourceId } from '@utils/foundry/item'\r\nimport { hasLocalization, localize } from '@utils/foundry/localize'\r\n\r\nexport const RULE_TYPES = ['addedLanguage', 'trainedSkill', 'addedResistance', 'ganziHeritage', 'thaumaturgeTome'] as const\r\n\r\nexport const CATEGORIES = [\r\n    // TricksterAce\r\n    {\r\n        type: 'tricksterAce',\r\n        category: 'ace',\r\n        uuids: ['Compendium.pf2e.feats-srd.POrE3ZgBRdBL9MsW'],\r\n    },\r\n    // ThaumaturgeTome\r\n    {\r\n        type: 'thaumaturgeTome',\r\n        category: 'tome',\r\n        uuids: [\r\n            'Compendium.pf2e.classfeatures.MyN1cQgE0HsLF20e', // Tome\r\n            'Compendium.pf2e.classfeatures.Obm4ItMIIr0whYeO', // Implement Adept\r\n            'Compendium.pf2e.classfeatures.ZEUxZ4Ta1kDPHiq5', // Second Adept\r\n            'Compendium.pf2e.feats-srd.yRRM1dsY6jakEMaC', // Intense Implement\r\n            'Compendium.pf2e.classfeatures.QEtgbY8N2V4wTbsI', // Implement Paragon\r\n        ],\r\n    },\r\n    // AddedResistance\r\n    {\r\n        type: 'addedResistance',\r\n        category: 'elementalist',\r\n        uuids: ['Compendium.pf2e.feats-srd.tx9pkrpmtqe4FnvS'],\r\n    },\r\n    // GanziHeritage\r\n    {\r\n        type: 'ganziHeritage',\r\n        category: 'ganzi',\r\n        uuids: ['Compendium.pf2e.heritages.3reGfXH0S82hM7Gp'],\r\n    },\r\n    // TrainedLore\r\n    {\r\n        type: 'trainedLore',\r\n        category: 'study',\r\n        uuids: ['Compendium.pf2e.feats-srd.aLJsBBZzlUK3G8MW'],\r\n    },\r\n    // TrainedSkill\r\n    {\r\n        type: 'trainedSkill',\r\n        category: 'ageless',\r\n        uuids: ['Compendium.pf2e.feats-srd.wylnETwIz32Au46y'],\r\n    },\r\n    {\r\n        type: 'trainedSkill',\r\n        category: 'longevity',\r\n        uuids: ['Compendium.pf2e.feats-srd.WoLh16gyDp8y9WOZ'],\r\n    },\r\n    {\r\n        type: 'trainedSkill',\r\n        category: 'memories',\r\n        uuids: ['Compendium.pf2e.feats-srd.ptEOt3lqjxUnAW62'],\r\n    },\r\n    {\r\n        type: 'trainedSkill',\r\n        category: 'studies',\r\n        uuids: ['Compendium.pf2e.feats-srd.9bgl6qYWKHzqWZj0'],\r\n    },\r\n    // AddedLanguage\r\n    {\r\n        type: 'addedLanguage',\r\n        category: 'linguistics',\r\n        uuids: ['Compendium.pf2e.feats-srd.eCWQU16hRLfN1KaX'],\r\n    },\r\n    {\r\n        type: 'addedLanguage',\r\n        category: 'borts',\r\n        uuids: ['Compendium.pf2e.equipment-srd.iS7hAQMAaThHYE8g'],\r\n    },\r\n    // CombatFlexibility\r\n    {\r\n        type: 'combatFlexibility',\r\n        category: 'flexibility',\r\n        uuids: [\r\n            'Compendium.pf2e.classfeatures.8g6HzARbhfcgilP8', // Combat Flexibility\r\n            'Compendium.pf2e.classfeatures.W2rwudMNcAxs8VoX', // Improved Flexibility\r\n        ],\r\n    },\r\n    // ScrollSavant\r\n    {\r\n        type: 'scrollSavant',\r\n        category: 'savant',\r\n        uuids: ['Compendium.pf2e.feats-srd.u5DBg0LrBUKP0JsJ'],\r\n    },\r\n    // ScrollChain\r\n    {\r\n        type: 'scrollChain',\r\n        category: 'esoterica',\r\n        uuids: [\r\n            'Compendium.pf2e.feats-srd.OqObuRB8oVSAEKFR', // Scroll Esoterica\r\n            'Compendium.pf2e.feats-srd.nWd7m0yRcIEVUy7O', // Elaborate Scroll Esoterica\r\n            'Compendium.pf2e.feats-srd.LHjPTV5vP3MOsPPJ', // Grand Scroll Esoterica\r\n        ],\r\n    },\r\n    {\r\n        type: 'scrollChain',\r\n        category: 'trickster',\r\n        uuids: [\r\n            'Compendium.pf2e.feats-srd.ROAUR1GhC19Pjk9C', // Basic Scroll Cache\r\n            'Compendium.pf2e.feats-srd.UrOj9TROtn8nuxPf', // Expert Scroll Cache\r\n            'Compendium.pf2e.feats-srd.lIg5Gzz7W70jfbk1', // Master Scroll Cache\r\n        ],\r\n    },\r\n] as const\r\n\r\ntype UuidsType = [ItemUUID, Omit<Category, 'uuids'> & { index: number }]\r\nconst [UUIDS, EQUIP_UUID, FEATS_UUID, HERITAGES_UUID, RULES_UUIDS, FLATTENED] = (() => {\r\n    const UUIDS: UuidsType[] = []\r\n    const FLATTENED = {} as Record<CategoryName, ItemUUID[]>\r\n    const FEATS: ItemUUID[] = []\r\n    const EQUIP: ItemUUID[] = []\r\n    const HERITAGES: ItemUUID[] = []\r\n    const RULES: ItemUUID[] = []\r\n\r\n    for (const { type, category, uuids } of CATEGORIES) {\r\n        FLATTENED[category] ??= []\r\n        FLATTENED[category].push(...uuids)\r\n        UUIDS.push(...uuids.map((uuid, index) => [uuid, { type, category, index }] as UuidsType))\r\n\r\n        if (RULE_TYPES.includes(type as typeof RULE_TYPES[number])) RULES.push(...uuids)\r\n\r\n        // for fast check on any category\r\n        const firstUUID = uuids[0]\r\n        if (firstUUID.includes('equipment-srd')) EQUIP.push(firstUUID)\r\n        else if (firstUUID.includes('heritages')) HERITAGES.push(firstUUID)\r\n        else FEATS.push(firstUUID)\r\n    }\r\n\r\n    return [new Map(UUIDS), EQUIP, FEATS, HERITAGES, RULES, FLATTENED]\r\n})()\r\n\r\nexport function hasAnyCategory(actor: CharacterPF2e) {\r\n    const itemTypes = actor.itemTypes\r\n    return (\r\n        itemTypes.heritage.some(item => includesSourceId(item, HERITAGES_UUID)) ||\r\n        itemTypes.feat.some(item => includesSourceId(item, FEATS_UUID)) ||\r\n        itemTypes.equipment.some(item => !(item.isInvested === false) && includesSourceId(item, EQUIP_UUID))\r\n    )\r\n}\r\n\r\nexport function getCategoryUUIDS(category: CategoryName) {\r\n    return FLATTENED[category] as ItemUUID[]\r\n}\r\n\r\nexport function getRuleItems(actor: CharacterPF2e) {\r\n    return filterItemsWithSourceId(actor, RULES_UUIDS, ['feat', 'equipment', 'heritage'])\r\n}\r\n\r\nexport function isRuleItem(item: ItemPF2e) {\r\n    return includesSourceId(item, RULES_UUIDS)\r\n}\r\n\r\nexport function hasCategories(actor: CharacterPF2e) {\r\n    const itemTypes = actor.itemTypes\r\n    const categories = {} as Record<CategoryName, Omit<ReturnedCategory, 'items'> & { items: (undefined | ItemPF2e)[] }>\r\n    const items = [...itemTypes.heritage, ...itemTypes.feat, ...itemTypes.equipment]\r\n\r\n    for (const item of items) {\r\n        const sourceId = getSourceId<ItemUUID>(item)\r\n        if (!sourceId || (item.isOfType('equipment') && !item.isInvested)) continue\r\n\r\n        const entry = UUIDS.get(sourceId)\r\n        if (!entry) continue\r\n\r\n        const { category, index, type } = entry\r\n        categories[category] ??= { category, type, label: '', items: [] }\r\n        categories[category].items[index] = item\r\n        if (index === 0) {\r\n            const key = `label.${category}`\r\n            const label = hasLocalization(key) ? localize(key) : item.name\r\n            categories[category].label = label\r\n        }\r\n    }\r\n\r\n    return Object.values(categories).filter(x => x.items[0]) as ReturnedCategory[]\r\n}\r\n\r\nexport function isCategory<N extends CategoryType, C extends Category = ExtractedCategory<N>>(\r\n    object: ReturnedCategory,\r\n    category: N\r\n): object is ReturnedCategory<C> {\r\n    return object.type === category\r\n}\r\n","import { MODULE_ID } from '@utils/module'\r\n\r\nexport function getSettingLocalizationPath(...path: string[]) {\r\n    return `${MODULE_ID}.settings.${path.join('.')}`\r\n}\r\n\r\nexport function flagsUpdatePath(...path: string[]) {\r\n    return `flags.${MODULE_ID}.${path.join('/')}`\r\n}\r\n\r\nexport function templatePath(...path: string[]) {\r\n    path = path.filter(x => typeof x === 'string')\r\n    return `modules/${MODULE_ID}/templates/${path.join('/')}`\r\n}\r\n\r\nexport function imagePath(...path: string[]) {\r\n    return `modules/${MODULE_ID}/images/${path.join('/')}`\r\n}\r\n","export const SKILL_DICTIONARY = {\r\n    acr: 'acrobatics',\r\n    arc: 'arcana',\r\n    ath: 'athletics',\r\n    cra: 'crafting',\r\n    dec: 'deception',\r\n    dip: 'diplomacy',\r\n    itm: 'intimidation',\r\n    med: 'medicine',\r\n    nat: 'nature',\r\n    occ: 'occultism',\r\n    prf: 'performance',\r\n    rel: 'religion',\r\n    soc: 'society',\r\n    ste: 'stealth',\r\n    sur: 'survival',\r\n    thi: 'thievery',\r\n} as const\r\n\r\nexport const SKILL_ABBREVIATIONS = Object.keys(SKILL_DICTIONARY) as (keyof typeof SKILL_DICTIONARY)[]\r\n\r\nexport const SKILL_LONG_FORMS = Object.values(SKILL_DICTIONARY)\r\n","export function getHighestSpellSlot(actor: ActorPF2e) {\r\n    let maxSlot = 0\r\n    for (const entry of actor.spellcasting) {\r\n        if (entry.flags['pf2e-staves']) continue // we skip staff entries\r\n        const slots = entry.system.slots\r\n        for (const key in slots) {\r\n            const slot = slots[key as SlotKey]\r\n            if (slot.max) maxSlot = Math.max(maxSlot, Number(key.slice(4)))\r\n        }\r\n    }\r\n    return maxSlot as ZeroToEleven\r\n}\r\n\r\nexport const PROFICIENCY_RANKS = ['untrained', 'trained', 'expert', 'master', 'legendary'] as const\r\n","export function chatUUID(uuid: string, name?: string) {\r\n    if (name) return `@UUID[${uuid}]{${name}}`\r\n    return `@UUID[${uuid}]`\r\n}\r\n\r\nexport function fakeChatUUID(name: string) {\r\n    return `<span style=\"background: #DDD;\r\n    padding: 1px 4px;\r\n    border: 1px solid var(--color-border-dark-tertiary);\r\n    border-radius: 2px;\r\n    white-space: nowrap;\r\n    word-break: break-all;\">${name}</span>`\r\n}\r\n","import { chatUUID } from '@utils/foundry/uuid'\r\n\r\nexport const MAGIC_TRADITIONS = new Set(['arcane', 'divine', 'occult', 'primal'] as const)\r\n\r\nexport const SPELL_COMPONENTS = ['focus', 'material', 'somatic', 'verbal'] as const\r\n\r\nconst scrolls: (ConsumablePF2e | null)[] = []\r\nexport async function createSpellScroll(uuid: ItemUUID, level: OneToTen | false, temp = false) {\r\n    const spell = (await fromUuid<SpellPF2e>(uuid))?.toObject()\r\n    if (!spell) return null\r\n\r\n    if (level === false) level = spell.system.level.value\r\n\r\n    const scrollUUID = getScrollCompendiumUUID(level)\r\n    scrolls[level] ??= await fromUuid<ConsumablePF2e>(scrollUUID)\r\n\r\n    const scroll = scrolls[level]?.toObject()\r\n    if (!scroll) return null\r\n\r\n    spell.system.location.heightenedLevel = level\r\n\r\n    scroll.name = `Scroll of ${spell.name} (Level ${level})`\r\n    scroll.system.temporary = temp\r\n    scroll.system.spell = spell\r\n    scroll.system.traits.value.push(...spell.system.traditions.value)\r\n\r\n    const sourceId = spell.flags.core?.sourceId\r\n    if (sourceId) scroll.system.description.value = `${chatUUID(sourceId)}\\n<hr />${scroll.system.description.value}`\r\n\r\n    return scroll\r\n}\r\n\r\nfunction getScrollCompendiumUUID(level: OneToTen): ItemUUID {\r\n    return `Compendium.pf2e.equipment-srd.${scrollCompendiumIds[level]}`\r\n}\r\n\r\nconst scrollCompendiumIds: Record<number, string> = {\r\n    1: 'RjuupS9xyXDLgyIr', // Compendium.pf2e.equipment-srd.RjuupS9xyXDLgyIr\r\n    2: 'Y7UD64foDbDMV9sx',\r\n    3: 'ZmefGBXGJF3CFDbn',\r\n    4: 'QSQZJ5BC3DeHv153',\r\n    5: 'tjLvRWklAylFhBHQ',\r\n    6: '4sGIy77COooxhQuC',\r\n    7: 'fomEZZ4MxVVK3uVu',\r\n    8: 'iPki3yuoucnj7bIt',\r\n    9: 'cFHomF3tty8Wi1e5',\r\n    10: 'o1XIHJ4MJyroAHfF',\r\n}\r\n","export function cleanSplit(str: string | undefined) {\r\n    if (!str) return []\r\n    return str\r\n        .split(',')\r\n        .map(x => x.trim())\r\n        .filter(x => x)\r\n}\r\n\r\nexport function capitalize(str: string) {\r\n    if (!str) return ''\r\n    return str[0].toUpperCase() + str.slice(1)\r\n}\r\n","import { getCategoryUUIDS, getRuleItems, RULE_TYPES } from '@src/categories'\r\nimport { getFlag, hasSourceId, setFlag } from '@utils/foundry/flags'\r\nimport { findItemWithSourceId } from '@utils/foundry/item'\r\nimport { hasLocalization, localize, subLocalize } from '@utils/foundry/localize'\r\nimport { chatUUID } from '@utils/foundry/uuid'\r\nimport { MODULE_ID } from '@utils/module'\r\nimport { PROFICIENCY_RANKS } from '@utils/pf2e/actor'\r\nimport { createSpellScroll } from '@utils/pf2e/spell'\r\nimport { sluggify } from '@utils/pf2e/utils'\r\nimport { capitalize } from '@utils/string'\r\n\r\nconst msg = subLocalize('interface.message')\r\n\r\ntype ReturnedMessage = { uuid: ItemUUID; selected?: string; category?: CategoryName; label?: string; random?: boolean }\r\n\r\nexport async function accept(html: JQuery, actor: CharacterPF2e) {\r\n    let message = ''\r\n    const flags = {} as SavedCategories\r\n    const fields = html.find('.window-content .content').find('input, select[data-type]').toArray() as TemplateField[]\r\n    const ruleItems = fields.some(field => RULE_TYPES.includes(field.dataset.type as RulesName)) ? getRuleItems(actor) : []\r\n    const addData: Partial<BaseItemSourcePF2e>[] = []\r\n    const updateData: EmbeddedDocumentUpdateData<ItemPF2e>[] = []\r\n    const rulesToAdd: Map<string, RuleElementSource[]> = new Map()\r\n\r\n    const getRules = (item: ItemPF2e) => {\r\n        const id = item.id\r\n        const existing = rulesToAdd.get(id)\r\n        if (existing) return existing\r\n\r\n        const rules = deepClone(item._source.system.rules)\r\n\r\n        for (let i = rules.length - 1; i >= 0; i--) {\r\n            const rule = rules[i]\r\n            if ('pf2e-dailies' in rule) rules.splice(i, 1)\r\n        }\r\n\r\n        rulesToAdd.set(id, rules)\r\n        return rules\r\n    }\r\n\r\n    const messages = {\r\n        languages: [] as ReturnedMessage[],\r\n        skills: [] as ReturnedMessage[],\r\n        tome: [] as ReturnedMessage[],\r\n        resistances: [] as ReturnedMessage[],\r\n        feats: [] as ReturnedMessage[],\r\n        scrolls: [] as ReturnedMessage[],\r\n        spells: [] as ReturnedMessage[],\r\n    }\r\n\r\n    for (const field of fields) {\r\n        const type = field.dataset.type\r\n\r\n        if (type === 'scrollChain' || type === 'scrollSavant') {\r\n            const { uuid, category } = field.dataset\r\n            const level = Number(field.dataset.level) as OneToTen\r\n            const name = field.value\r\n\r\n            const scroll = await createSpellScroll(uuid, level, true)\r\n            if (scroll) addData.push(scroll)\r\n\r\n            flags[category] ??= []\r\n            flags[category]!.push({ name, uuid })\r\n        } else if (type === 'combatFlexibility') {\r\n            const { category, uuid, level } = field.dataset\r\n            const name = field.value\r\n            const index = level === '8' ? 0 : 1\r\n            const parentUUID = getCategoryUUIDS(category)[index]\r\n\r\n            if (parentUUID) {\r\n                const parent = findItemWithSourceId(actor, parentUUID) as FeatPF2e\r\n                const feat = await createTemporaryFeat(uuid, parent)\r\n                if (feat) addData.push(feat)\r\n            }\r\n\r\n            flags[category] ??= []\r\n            flags[category]!.push({ name, uuid })\r\n        } else if (type === 'trainedLore') {\r\n            const category = field.dataset.category\r\n            const uuid = getCategoryUUIDS(category)[0]\r\n            const selected = field.value\r\n\r\n            const lore = createTemporaryLore(selected, 1)\r\n            addData.push(lore)\r\n            messages.skills.push({ uuid, selected, category })\r\n\r\n            flags[category] = selected\r\n        } else if (type === 'tricksterAce') {\r\n            const { category, uuid } = field.dataset\r\n            const name = field.value\r\n\r\n            const entrySlug = sluggify(\"Trickster's Ace\", { camel: 'dromedary' })\r\n            const spell = await createSpellcastingSpell(uuid, 4, entrySlug)\r\n\r\n            if (spell) {\r\n                const proficiency = actor.classDC?.slug || actor.class?.slug\r\n                const entry = createSpellcastingEntry(\"Trickster's Ace\", entrySlug, proficiency)\r\n                addData.push(spell)\r\n                addData.push(entry)\r\n            }\r\n\r\n            flags[category] = { name, uuid }\r\n        } else if (type === 'trainedSkill' || type === 'thaumaturgeTome') {\r\n            const dataset = field.dataset\r\n            const category = dataset.category\r\n            const uuid = getCategoryUUIDS(category)[0]\r\n            const selected = field.value\r\n            const rank = Number(dataset.rank || '1')\r\n            const isInput = dataset.input === 'true'\r\n\r\n            if (isInput) {\r\n                const lore = createTemporaryLore(selected, rank)\r\n                addData.push(lore)\r\n            } else {\r\n                const ruleItem = ruleItems.find(item => hasSourceId(item, uuid))\r\n                if (!ruleItem) continue\r\n\r\n                const rules = getRules(ruleItem)\r\n                rules.push(createSkillRule(selected.toLowerCase(), rank))\r\n            }\r\n\r\n            const toSave = { selected: isInput ? selected : selected.toLowerCase(), input: isInput }\r\n\r\n            if (type === 'trainedSkill') {\r\n                messages.skills.push({ uuid, selected, category })\r\n                flags[field.dataset.category] = toSave\r\n            } else if (type === 'thaumaturgeTome') {\r\n                const category = field.dataset.category\r\n                messages.tome.push({ uuid, selected, category, label: PROFICIENCY_RANKS[rank] })\r\n                flags[category] ??= []\r\n                flags[category].push(toSave)\r\n            }\r\n        } else {\r\n            const category = field.dataset.category\r\n            const uuid = getCategoryUUIDS(category)[0]\r\n            const ruleItem = ruleItems.find(item => hasSourceId(item, uuid))\r\n            if (!ruleItem) continue\r\n\r\n            const selected = field.value\r\n            const rules = getRules(ruleItem)\r\n\r\n            if (type === 'addedLanguage') {\r\n                rules.push(createLanguageRule(selected))\r\n                messages.languages.push({ uuid, selected, category })\r\n            } else if (type === 'addedResistance') {\r\n                rules.push(createResistanceRule(selected, 'half'))\r\n                messages.resistances.push({ uuid, selected, category })\r\n            } else if (type === 'ganziHeritage') {\r\n                const options = Array.from((field as HTMLSelectElement).options).map(x => x.value) as ResistanceType[]\r\n                const selected = await randomOptions(options)\r\n                rules.push(createResistanceRule(selected, 'half'))\r\n                messages.resistances.push({ uuid, selected, category, random: true })\r\n            }\r\n\r\n            // @ts-ignore\r\n            flags[category] = selected\r\n        }\r\n    }\r\n\r\n    for (const [id, rules] of rulesToAdd) {\r\n        updateData.push({ _id: id, 'system.rules': rules })\r\n    }\r\n\r\n    const pushMessages = (type: string, list: ReturnedMessage[]) => {\r\n        if (!list.length) return\r\n\r\n        if (message) message += '<hr />'\r\n\r\n        const title = msg.has(type) ? msg(type) : msg('gained', { type })\r\n        message += `<p><strong>${title}</strong></p>`\r\n\r\n        for (const { uuid, selected, category, label, random = false } of list) {\r\n            if (label) {\r\n                message += `<p><strong>${capitalize(label)}:</strong>`\r\n            } else {\r\n                const label = category && hasLocalization(`label.${category}`) ? localize(`label.${category}`) : undefined\r\n                message += `<p>${chatUUID(uuid, label)}`\r\n            }\r\n\r\n            if (selected) message += ` <span style=\"text-transform: capitalize;\">${selected}</span>`\r\n            if (random) message += ' <i class=\"fa-solid fa-dice-d20\"></i>'\r\n            message += '</p>'\r\n        }\r\n    }\r\n\r\n    if (addData.length) {\r\n        const items = (await actor.createEmbeddedDocuments('Item', addData)) as ItemPF2e[]\r\n        for (const item of items) {\r\n            const uuid = item.uuid\r\n\r\n            if (item.type === 'feat') messages.feats.push({ uuid })\r\n            else if (item.type === 'consumable') messages.scrolls.push({ uuid })\r\n            // we populate the spellcasting entries with the spells\r\n            else if (item.type === 'spellcastingEntry') {\r\n                const slug = item.slug\r\n                const spells = items.filter(x => x.type === 'spell' && getFlag(x, 'parent') === slug) as SpellPF2e[]\r\n                for (const spell of spells) {\r\n                    const level = getFlag(spell, 'level')\r\n                    updateData.push({ _id: spell.id, 'system.location.value': item.id, 'system.location.heightenedLevel': level })\r\n                    messages.spells.push({ uuid: spell.uuid })\r\n                }\r\n            }\r\n\r\n            // we add a flag to the parent feat to have the cascade effect in the tab\r\n            const parentId = item.getFlag<string>('pf2e', 'grantedBy.id')\r\n            if (parentId) {\r\n                const slug = sluggify(item.name, { camel: 'dromedary' })\r\n                const path = `flags.pf2e.itemGrants.${slug}`\r\n                updateData.push({ _id: parentId, [path]: { id: item.id, onDelete: 'detach' } })\r\n            }\r\n        }\r\n    }\r\n\r\n    pushMessages('languages', messages.languages)\r\n    pushMessages('skills', messages.skills)\r\n    pushMessages('tome', messages.tome)\r\n    pushMessages('resistances', messages.resistances)\r\n    pushMessages('feats', messages.feats)\r\n    pushMessages('spells', messages.spells)\r\n    pushMessages('scrolls', messages.scrolls)\r\n\r\n    if (updateData.length) await actor.updateEmbeddedDocuments('Item', updateData)\r\n\r\n    await setFlag(actor, 'saved', flags)\r\n\r\n    message = `${msg('changes')}<hr>${message}`\r\n    ChatMessage.create({ content: message, speaker: ChatMessage.getSpeaker({ actor }) })\r\n}\r\n\r\nasync function randomOptions<T extends string>(options: T[]) {\r\n    const roll = (await new Roll(`1d${options.length}`).evaluate({ async: true })).total\r\n    return options[roll - 1]\r\n}\r\n\r\nfunction createTemporaryLore(name: string, rank: number) {\r\n    const data: Partial<BaseItemSourcePF2e> = {\r\n        type: 'lore',\r\n        img: 'systems/pf2e/icons/default-icons/lore.svg',\r\n        name: name,\r\n        flags: {\r\n            [MODULE_ID]: { temporary: true },\r\n        },\r\n    }\r\n\r\n    setProperty(data, 'system.proficient.value', rank)\r\n\r\n    return data\r\n}\r\n\r\nasync function createTemporaryFeat(uuid: ItemUUID, parent: FeatPF2e) {\r\n    const feat = ((await fromUuid(uuid)) as FeatPF2e | null)?.toObject()\r\n    if (!feat) return\r\n\r\n    setProperty(feat, 'flags.pf2e.grantedBy', { id: parent.id, onDelete: 'cascade' })\r\n    setProperty(feat, `flags.${MODULE_ID}.temporary`, true)\r\n\r\n    return feat\r\n}\r\n\r\nfunction createLanguageRule(language: string) {\r\n    return {\r\n        key: 'ActiveEffectLike',\r\n        mode: 'add',\r\n        path: 'system.traits.languages.value',\r\n        value: language,\r\n        [MODULE_ID]: true,\r\n    } as const\r\n}\r\n\r\nfunction createSkillRule(skill: string, rank: number) {\r\n    return {\r\n        key: 'ActiveEffectLike',\r\n        mode: 'upgrade',\r\n        path: `system.skills.${skill}.rank`,\r\n        value: Number(rank),\r\n        [MODULE_ID]: true,\r\n    } as const\r\n}\r\n\r\nfunction createResistanceRule(type: string, value: number | string | 'half') {\r\n    if (value === 'half') value = 'max(1,floor(@actor.level/2))'\r\n    return {\r\n        key: 'Resistance',\r\n        type,\r\n        value,\r\n        [MODULE_ID]: true,\r\n    } as const\r\n}\r\n\r\nasync function createSpellcastingSpell(uuid: ItemUUID, level: OneToTen, entry: string) {\r\n    const spell = (await fromUuid<SpellPF2e>(uuid))?.toObject()\r\n    if (!spell) return\r\n\r\n    setProperty(spell, `flags.${MODULE_ID}`, { parent: entry, level: 4 })\r\n\r\n    return spell\r\n}\r\n\r\nfunction createSpellcastingEntry(name: string, slug: string, proficiency: string | undefined | null) {\r\n    const entry: Partial<BaseItemSourcePF2e> = {\r\n        type: 'spellcastingEntry',\r\n        img: 'systems/pf2e/icons/default-icons/spellcastingEntry.svg',\r\n        name,\r\n        flags: {\r\n            [MODULE_ID]: { temporary: true },\r\n        },\r\n    }\r\n\r\n    setProperty(entry, 'system', {\r\n        slug,\r\n        prepared: { value: 'innate' },\r\n        showSlotlessLevels: { value: false },\r\n        showUnpreparedSpells: { value: false },\r\n        proficiency: { value: 1, slug: proficiency },\r\n    })\r\n\r\n    return entry\r\n}\r\n","export const LANGUAGE_LIST = [\r\n    'common',\r\n    'draconic',\r\n    'dwarven',\r\n    'elven',\r\n    'gnomish',\r\n    'goblin',\r\n    'halfling',\r\n    'jotun',\r\n    'orcish',\r\n    'sylvan',\r\n    'undercommon',\r\n    'ysoki',\r\n    'abyssal',\r\n    'adlet',\r\n    'aklo',\r\n    'akitonian',\r\n    'alghollthu',\r\n    'amurrun',\r\n    'anadi',\r\n    'ancient-osiriani',\r\n    'anugobu',\r\n    'arcadian',\r\n    'aquan',\r\n    'arboreal',\r\n    'auran',\r\n    'boggard',\r\n    'calda',\r\n    'caligni',\r\n    'celestial',\r\n    'cyclops',\r\n    'daemonic',\r\n    'destrachan',\r\n    'drooni',\r\n    'dziriak',\r\n    'ekujae',\r\n    'erutaki',\r\n    'formian',\r\n    'garundi',\r\n    'girtablilu',\r\n    'gnoll',\r\n    'goloma',\r\n    'grippli',\r\n    'hallit',\r\n    'hwan',\r\n    'iblydan',\r\n    'ignan',\r\n    'ikeshti',\r\n    'immolis',\r\n    'infernal',\r\n    'iruxi',\r\n    'jistkan',\r\n    'jyoti',\r\n    'kaava',\r\n    'kashrishi',\r\n    'kibwani',\r\n    'kitsune',\r\n    'kelish',\r\n    'lirgeni',\r\n    'mahwek',\r\n    'minaten',\r\n    'minkaian',\r\n    'mwangi',\r\n    'mzunu',\r\n    'nagaji',\r\n    'necril',\r\n    'ocotan',\r\n    'okaiyan',\r\n    'osiriani',\r\n    'protean',\r\n    'rasu',\r\n    'ratajin',\r\n    'razatlani',\r\n    'requian',\r\n    'russian',\r\n    'senzar',\r\n    'shadowtongue',\r\n    'shobhad',\r\n    'shisk',\r\n    'shoanti',\r\n    'shoony',\r\n    'skald',\r\n    'sphinx',\r\n    'strix',\r\n    'taldane',\r\n    'tekritanin',\r\n    'tengu',\r\n    'terran',\r\n    'thassilonian',\r\n    'tien',\r\n    'utopian',\r\n    'vanara',\r\n    'varisian',\r\n    'varki',\r\n    'vishkanyan',\r\n    'vudrani',\r\n    'wyrwood',\r\n    'xanmba',\r\n    'androffan',\r\n    'azlanti',\r\n    'grioth',\r\n    'kovintal',\r\n    'migo',\r\n    'munavri',\r\n    'samsaran',\r\n    'sasquatch',\r\n    'shae',\r\n    'yithian',\r\n    'druidic',\r\n] as const\r\n","import { hasCategories, isCategory } from '@src/categories'\r\nimport { getFlag } from '@utils/foundry/flags'\r\nimport { PROFICIENCY_RANKS } from '@utils/pf2e/actor'\r\nimport { LANGUAGE_LIST } from '@utils/pf2e/languages'\r\nimport { SKILL_LONG_FORMS } from '@utils/pf2e/skills'\r\nimport { capitalize } from '@utils/string'\r\n\r\nconst FOUR_ELEMENTS = ['air', 'earth', 'fire', 'water'] as const\r\nconst GANZI_RESISTANCES = ['acid', 'electricity', 'sonic'] as const\r\n\r\nconst sortOrder = new Proxy(\r\n    {\r\n        addedLanguage: 0,\r\n        trainedSkill: 1,\r\n        addedResistance: 2,\r\n        trainedLore: 3,\r\n    } as Partial<Record<CategoryType | symbol, number>>,\r\n    {\r\n        get(obj, prop) {\r\n            return prop in obj ? obj[prop as CategoryType] : 99\r\n        },\r\n    }\r\n) as Record<CategoryType, number>\r\n\r\nexport function getData(actor: CharacterPF2e) {\r\n    const actorLevel = actor.level\r\n    const flags = (getFlag(actor, 'saved') ?? {}) as SavedCategories\r\n    const categories = hasCategories(actor)\r\n    const templates: BaseCategoryTemplate[] = []\r\n\r\n    for (const entry of categories) {\r\n        if (isCategory(entry, 'scrollChain')) {\r\n            const { type, category, label, items } = entry\r\n            const slots: DropTemplate[] = []\r\n\r\n            const spellSlot = (level: OneToTen) => {\r\n                const { name = '', uuid = '' } = flags[category]?.[level - 1] ?? {}\r\n                slots.push({ type: 'drop', level, name, uuid, label: game.i18n.localize(`PF2E.SpellLevel${level}`) })\r\n            }\r\n\r\n            // first feat\r\n            spellSlot(1)\r\n            if (actorLevel >= 8) spellSlot(2)\r\n\r\n            // second feat\r\n            if (items[1]) {\r\n                spellSlot(3)\r\n                if (actorLevel >= 14) spellSlot(4)\r\n                if (actorLevel >= 16) spellSlot(5)\r\n            }\r\n\r\n            // third feat\r\n            if (items[2]) {\r\n                spellSlot(6)\r\n                if (actorLevel >= 20) spellSlot(7)\r\n            }\r\n\r\n            const template: ScrollChainTemplate = { type, category, label, rows: slots }\r\n            templates.push(template)\r\n        } else if (isCategory(entry, 'scrollSavant')) {\r\n            const { maxSlot, maxTradition } = getSpellcastingDetails(actor, 'arcane')\r\n            if (maxSlot < 4) continue\r\n\r\n            const { type, category, label } = entry\r\n            const slots: DropTemplate[] = []\r\n            const spellSlot = (index: number, level: number): DropTemplate => {\r\n                const { name, uuid } = flags[category]?.[index] ?? { name: '', uuid: '' }\r\n                return { type: 'drop', level, name, uuid, label: game.i18n.localize(`PF2E.SpellLevel${level}`) }\r\n            }\r\n\r\n            // legendary arcane\r\n            if (maxTradition >= 4 && maxSlot >= 6) slots.push(spellSlot(3, maxSlot - 5))\r\n\r\n            // master arcane\r\n            if (maxTradition >= 3 && maxSlot >= 5) slots.push(spellSlot(2, maxSlot - 4))\r\n\r\n            // no proficiency\r\n            slots.push(spellSlot(1, maxSlot - 3))\r\n            slots.push(spellSlot(0, maxSlot - 2))\r\n\r\n            const template: ScrollSavantTemplate = { type, category, label, rows: slots }\r\n            templates.push(template)\r\n        } else if (isCategory(entry, 'trainedSkill')) {\r\n            const options = SKILL_LONG_FORMS.filter(x => actor.skills[x]!.rank! < 1)\r\n            if (!options.length) continue\r\n\r\n            const { type, category, label } = entry\r\n            let { selected = '', input = true } = flags[category] ?? {}\r\n\r\n            if (selected && !input && !options.includes(selected as SkillLongForm)) {\r\n                selected = ''\r\n                input = true\r\n            }\r\n\r\n            const template: TrainedSkillTemplate = {\r\n                type,\r\n                category,\r\n                label,\r\n                rows: [{ type: 'combo', options, selected: input ? selected : capitalize(selected), input }],\r\n            }\r\n            templates.push(template)\r\n        } else if (isCategory(entry, 'thaumaturgeTome')) {\r\n            const { type, category, label, items } = entry\r\n            const slots: ThaumaturgeTomeTemplate['rows'] = []\r\n            const actorSkills = actor.skills as Record<SkillLongForm, { rank: OneToFour }>\r\n\r\n            const skillSlot = (index: number, rank: OneToFour, options: SkillLongForm[]) => {\r\n                let { selected = '', input = true } = flags[category]?.[index] ?? {}\r\n\r\n                if (selected && !input && !options.includes(selected as SkillLongForm)) {\r\n                    selected = ''\r\n                    input = true\r\n                }\r\n\r\n                slots.push({\r\n                    type: 'combo',\r\n                    label: PROFICIENCY_RANKS[rank],\r\n                    options,\r\n                    selected: input ? selected : capitalize(selected),\r\n                    rank,\r\n                    input,\r\n                })\r\n            }\r\n\r\n            const isTomeSelected = (index: number, option: 'adept' | 'paragon' = 'adept') => {\r\n                const item = items[index]\r\n                return item ? getRuleSelection(item, option) === 'tome' : false\r\n            }\r\n\r\n            // Implement Paragon\r\n            if (isTomeSelected(4, 'paragon')) {\r\n                const skills = SKILL_LONG_FORMS.filter(x => actorSkills[x].rank < 4)\r\n                if (!skills.length) continue\r\n\r\n                skillSlot(0, 4, skills)\r\n                skillSlot(1, 4, skills)\r\n            }\r\n            // Intense Implement or Second Adept or Implement Adept\r\n            else if (items[3] || isTomeSelected(2) || isTomeSelected(1)) {\r\n                const masters = SKILL_LONG_FORMS.filter(x => actorSkills[x].rank < 3)\r\n\r\n                if (actorLevel >= 9) {\r\n                    if (!masters.length) continue\r\n                    skillSlot(0, 3, masters)\r\n                    skillSlot(1, 3, masters)\r\n                } else {\r\n                    const experts = SKILL_LONG_FORMS.filter(x => actorSkills[x].rank < 2)\r\n                    if (!experts.length) continue\r\n                    skillSlot(0, 2, experts)\r\n                    if (masters.length) skillSlot(1, 3, masters)\r\n                }\r\n            } else {\r\n                if (actorLevel >= 5) {\r\n                    const experts = SKILL_LONG_FORMS.filter(x => actorSkills[x].rank < 2)\r\n                    if (!experts.length) continue\r\n\r\n                    skillSlot(0, 2, experts)\r\n                    skillSlot(1, 2, experts)\r\n                } else if (actorLevel >= 3) {\r\n                    const trained = SKILL_LONG_FORMS.filter(x => actorSkills[x].rank < 1)\r\n                    if (!trained.length) continue\r\n\r\n                    skillSlot(0, 1, trained)\r\n\r\n                    const experts = SKILL_LONG_FORMS.filter(x => actorSkills[x].rank < 2)\r\n                    if (experts.length) skillSlot(1, 2, experts)\r\n                } else {\r\n                    const trained = SKILL_LONG_FORMS.filter(x => actorSkills[x].rank < 1)\r\n                    if (!trained.length) continue\r\n\r\n                    skillSlot(0, 1, trained)\r\n                    skillSlot(1, 1, trained)\r\n                }\r\n            }\r\n            const template: ThaumaturgeTomeTemplate = {\r\n                type,\r\n                category,\r\n                label,\r\n                rows: slots,\r\n            }\r\n            templates.push(template)\r\n        } else if (isCategory(entry, 'trainedLore')) {\r\n            const { type, category, label } = entry\r\n            const selected = flags[category] ?? ''\r\n            const template: TrainedLoreTemplate = {\r\n                type,\r\n                category,\r\n                label,\r\n                rows: [{ type: 'input', selected, placeholder: game.i18n.localize('PF2E.NewPlaceholders.Lore') }],\r\n            }\r\n            templates.push(template)\r\n        } else if (isCategory(entry, 'addedLanguage')) {\r\n            const actorLanguages = actor.system.traits.languages.value\r\n            const options = LANGUAGE_LIST.filter(x => !actorLanguages.includes(x)).sort()\r\n            if (!options.length) continue\r\n\r\n            const { type, category, label } = entry\r\n            const selected = flags[category] ?? ''\r\n\r\n            const template: AddedLanguageTemplate = {\r\n                type,\r\n                category,\r\n                label,\r\n                rows: [{ type: 'select', options, selected }],\r\n            }\r\n            templates.push(template)\r\n        } else if (isCategory(entry, 'addedResistance')) {\r\n            const { type, category, label } = entry\r\n            const selected = flags[category] ?? ''\r\n            const template: AddedResistanceTemplate = {\r\n                type,\r\n                category,\r\n                label,\r\n                rows: [{ type: 'select', options: FOUR_ELEMENTS, selected }],\r\n            }\r\n            templates.push(template)\r\n        } else if (isCategory(entry, 'combatFlexibility')) {\r\n            const { type, category, label, items } = entry\r\n            const selected = flags[category] ?? []\r\n            // first feat\r\n            const slots: DropTemplate[] = [\r\n                {\r\n                    type: 'drop',\r\n                    label: game.i18n.localize(`PF2E.Level8`),\r\n                    name: selected[0]?.name ?? '',\r\n                    uuid: selected[0]?.uuid ?? '',\r\n                    level: 8,\r\n                },\r\n            ]\r\n            // second feat\r\n            if (items[1])\r\n                slots.push({\r\n                    type: 'drop',\r\n                    label: game.i18n.localize(`PF2E.Level14`),\r\n                    name: selected[1]?.name ?? '',\r\n                    uuid: selected[1]?.uuid ?? '',\r\n                    level: 14,\r\n                })\r\n            const template: CombatFlexibilityTemplate = { type, category, label, rows: slots }\r\n            templates.push(template)\r\n        } else if (isCategory(entry, 'tricksterAce')) {\r\n            const { type, category, label } = entry\r\n            const { name = '', uuid = '' } = flags[category] ?? {}\r\n            const template: TricksterAceTemplate = {\r\n                type,\r\n                category,\r\n                label,\r\n                rows: [{ type: 'drop', level: 4, name, uuid }],\r\n            }\r\n            templates.push(template)\r\n        } else if (isCategory(entry, 'ganziHeritage')) {\r\n            const { type, category, label } = entry\r\n            const template: GanziHeritageTemplate = {\r\n                type,\r\n                category,\r\n                label,\r\n                rows: [{ type: 'random', options: GANZI_RESISTANCES }],\r\n            }\r\n            templates.push(template)\r\n        }\r\n    }\r\n\r\n    const rows: BaseCategoryTemplate[] = []\r\n    const groups: BaseCategoryTemplate[] = []\r\n    for (const template of templates) {\r\n        if (template.rows.length > 1) groups.push(template)\r\n        else rows.push(template)\r\n    }\r\n\r\n    rows.sort((a, b) => sortOrder[a.type] - sortOrder[b.type])\r\n    groups.sort((a, b) => a.rows.length - b.rows.length)\r\n\r\n    return { rows, groups }\r\n}\r\n\r\nfunction getRuleSelection<T extends unknown>(item: ItemPF2e, option: string) {\r\n    const rules = item._source.system.rules as ChoiceSetSource[]\r\n    const rule = rules.find(rule => rule.key === 'ChoiceSet' && rule.rollOption === option)\r\n    return rule?.selection as T | undefined\r\n}\r\n\r\nfunction getSpellcastingDetails(actor: ActorPF2e, tradition: MagicTradition) {\r\n    let maxSlot = 0\r\n    let maxTradition = 0\r\n\r\n    for (const entry of actor.spellcasting) {\r\n        if ('pf2e-staves' in entry.flags) continue // we skip staff entries\r\n\r\n        const slots = entry.system.slots\r\n        for (const key in slots) {\r\n            const slot = slots[key as SlotKey]\r\n            if (slot.max) maxSlot = Math.max(maxSlot, Number(key.slice(4)))\r\n        }\r\n\r\n        if (entry.tradition === tradition) maxTradition = Math.max(maxTradition, entry.rank)\r\n    }\r\n\r\n    return { maxSlot: Math.clamped(maxSlot, 1, 10), maxTradition }\r\n}\r\n","export function sequenceArray<N extends number = number>(start: number, end: number) {\r\n    const levels: number[] = []\r\n\r\n    if (start <= end) {\r\n        for (let i = start; i <= end; i++) levels.push(i)\r\n    } else {\r\n        for (let i = start; i >= end; i--) levels.push(i)\r\n    }\r\n\r\n    return levels as N[]\r\n}\r\n","import { sequenceArray } from '@utils/utils'\r\n\r\nexport const CATEGORY_SEARCH = {\r\n    scrollChain: { category: ['spell'] } as InitialSpellFilters,\r\n    combatFlexibility: { feattype: ['class'], traits: ['fighter'] } as InitialFeatFilters,\r\n    scrollSavant: { category: ['spell'], traditions: ['arcane'] } as InitialSpellFilters,\r\n    tricksterAce: { category: ['cantrip', 'spell'] } as InitialSpellFilters,\r\n} as const\r\n\r\nexport function search(event: JQuery.ClickEvent<any, any, SearchTemplateButton>) {\r\n    event.preventDefault()\r\n\r\n    const data = event.currentTarget.dataset\r\n    const level = Number(data.level)\r\n\r\n    switch (data.type) {\r\n        case 'scrollChain':\r\n            searchSpell({ ...CATEGORY_SEARCH.scrollChain, level: sequenceArray<OneToTen>(1, level) })\r\n            break\r\n        case 'combatFlexibility':\r\n            searchFeat({ ...CATEGORY_SEARCH.combatFlexibility, level: { min: 1, max: level } })\r\n            break\r\n        case 'scrollSavant':\r\n            searchSpell({ ...CATEGORY_SEARCH.scrollSavant, level: sequenceArray<OneToTen>(1, level) })\r\n            break\r\n        case 'tricksterAce':\r\n            searchSpell({ ...CATEGORY_SEARCH.tricksterAce, level: sequenceArray<OneToTen>(1, level) })\r\n            break\r\n    }\r\n}\r\n\r\nfunction searchSpell({ category = [], level = [], traditions = [] }: InitialSpellFilters = {}) {\r\n    const filter: InitialSpellFilters = {\r\n        category,\r\n        classes: [],\r\n        level,\r\n        rarity: [],\r\n        school: [],\r\n        source: [],\r\n        traditions,\r\n        traits: [],\r\n    }\r\n    game.pf2e.compendiumBrowser.openTab('spell', filter)\r\n}\r\n\r\nfunction searchFeat({ feattype = [], level = {}, traits = [] }: InitialFeatFilters = {}) {\r\n    const filter: InitialFeatFilters = {\r\n        feattype,\r\n        skills: [],\r\n        rarity: [],\r\n        source: [],\r\n        traits,\r\n        level,\r\n    }\r\n    game.pf2e.compendiumBrowser.openTab('feat', filter)\r\n}\r\n","import { subLocalize } from '@utils/foundry/localize'\r\nimport { CATEGORY_SEARCH } from './search'\r\n\r\nconst localize = subLocalize('interface.error.drop')\r\n\r\nexport async function dropped(event: ElementDragEvent) {\r\n    let target = $(event.target)\r\n    if (target.is('label')) target = target.next()\r\n\r\n    const categoryType = target.attr('data-type') as CategoryType | undefined\r\n    if (!categoryType) return\r\n\r\n    try {\r\n        const dataString = event.dataTransfer?.getData('text/plain')\r\n        const typeError = () => localize.warn('wrongDataType')\r\n\r\n        const data: { type: string; uuid: string } = JSON.parse(dataString)\r\n        if (!data || data.type !== 'Item' || typeof data.uuid !== 'string') return typeError()\r\n\r\n        const item = await fromUuid<ItemPF2e>(data.uuid)\r\n        if (!item) return typeError()\r\n\r\n        switch (categoryType) {\r\n            case 'scrollChain':\r\n                droppedSpell(target, item, CATEGORY_SEARCH.scrollChain)\r\n                break\r\n            case 'combatFlexibility':\r\n                droppedFeat(target, item, CATEGORY_SEARCH.combatFlexibility)\r\n                break\r\n            case 'scrollSavant':\r\n                droppedSpell(target, item, CATEGORY_SEARCH.scrollSavant)\r\n                break\r\n            case 'tricksterAce':\r\n                droppedSpell(target, item, CATEGORY_SEARCH.tricksterAce, tricksterAceFilter)\r\n                break\r\n        }\r\n    } catch (error) {}\r\n}\r\n\r\nfunction tricksterAceFilter(item: SpellPF2e) {\r\n    const castTime = item.system.time.value\r\n\r\n    if (castTime.includes('hour') || (castTime.includes('min') && parseInt(castTime) > 10)) {\r\n        localize.warn('wrongSpellTime', { time: '10 min' })\r\n        return false\r\n    }\r\n\r\n    return true\r\n}\r\n\r\nfunction droppedSpell(\r\n    target: JQuery,\r\n    item: ItemPF2e,\r\n    { category = [], traditions = [] }: InitialSpellFilters = {},\r\n    filter?: (item: SpellPF2e) => boolean\r\n) {\r\n    if (!item.isOfType('spell')) return localize.warn('wrongType', { type: 'spell' })\r\n\r\n    if (item.isCantrip && !category.includes('cantrip')) return localize.warn('cannotBe', { type: 'spell', not: 'cantrip' })\r\n    if (item.isRitual && !category.includes('ritual')) return localize.warn('cannotBe', { type: 'spell', not: 'ritual' })\r\n    if (item.isFocusSpell && !category.includes('focus')) return localize.warn('cannotBe', { type: 'spell', not: 'focus' })\r\n\r\n    if (traditions.length) {\r\n        const itemTraditions = item.system.traditions.value\r\n        for (const tradition of traditions) {\r\n            if (!itemTraditions.includes(tradition))\r\n                return localize.warn('wrongTrait', { type: 'spell', trait: tradition, category: 'tradition' })\r\n        }\r\n    }\r\n\r\n    if (item.level > Number(target.attr('data-level'))) return localize.warn('wrongLevel', { type: 'spell' })\r\n\r\n    if (filter && !filter(item)) return\r\n\r\n    droppedItem(target, item)\r\n}\r\n\r\nfunction droppedFeat(target: JQuery, item: ItemPF2e, { feattype = [], traits = [] }: InitialFeatFilters) {\r\n    if (!item.isOfType('feat') || item.isFeature) return localize.warn('wrongType', { type: 'feat' })\r\n    if (!feattype.includes(item.featType)) return localize.warn('cannotBe', { type: 'feat', not: item.featType })\r\n\r\n    if (traits.length) {\r\n        const itemTraits = item.system.traits.value\r\n        for (const trait of traits) {\r\n            if (!itemTraits.includes(trait)) return localize.warn('wrongTrait', { type: 'feat', trait, category: 'trait' })\r\n        }\r\n    }\r\n\r\n    if (item.level > Number(target.attr('data-level'))) return localize.warn('wrongLevel', { type: 'feat' })\r\n\r\n    droppedItem(target, item)\r\n}\r\n\r\nfunction droppedItem(target: JQuery, item: ItemPF2e) {\r\n    target.val(item.name)\r\n    target.attr('value', item.name)\r\n    target.attr('data-uuid', item.uuid)\r\n    target.nextAll('[data-action=\"clear\"]').first().removeClass('disabled')\r\n}\r\n","import { subLocalize } from '@utils/foundry/localize'\r\nimport { templatePath } from '@utils/foundry/path'\r\nimport { SKILL_LONG_FORMS } from '@utils/pf2e/skills'\r\nimport { PROFICIENCY_RANKS } from '@utils/pf2e/actor'\r\nimport { accept } from './interface/accept'\r\nimport { getData } from './interface/data'\r\nimport { dropped } from './interface/drop'\r\nimport { search } from './interface/search'\r\nimport { capitalize } from '@utils/string'\r\n\r\nconst localize = subLocalize('interface')\r\n\r\nexport class DailiesInterface extends Application {\r\n    private _actor: CharacterPF2e\r\n    private _randomInterval?: NodeJS.Timer\r\n\r\n    constructor(actor: CharacterPF2e, options?: Partial<ApplicationOptions>) {\r\n        super(options)\r\n        this._actor = actor\r\n    }\r\n\r\n    static get defaultOptions() {\r\n        return mergeObject(super.defaultOptions, {\r\n            id: 'pf2e-dailies-interface',\r\n            title: localize('title'),\r\n            template: templatePath('interface.hbs'),\r\n            height: 'auto',\r\n            submitOnClose: false,\r\n            submitOnChange: false,\r\n            dragDrop: [\r\n                {\r\n                    dropSelector: '[data-droppable=\"true\"]',\r\n                },\r\n            ],\r\n        })\r\n    }\r\n\r\n    getData(options?: Partial<FormApplicationOptions> | undefined) {\r\n        return mergeObject(super.getData(options), {\r\n            i18n: localize,\r\n            ...getData(this._actor),\r\n        })\r\n    }\r\n\r\n    render(force?: boolean | undefined, options?: RenderOptions | undefined): this | Promise<this> {\r\n        if (this._randomInterval) clearInterval(this._randomInterval)\r\n\r\n        if (this.element.find('select.random')) {\r\n            this._randomInterval = setInterval(() => {\r\n                const randoms = this.element.find<HTMLSelectElement>('select.random')\r\n                randoms.each((_, select) => {\r\n                    select.selectedIndex = (select.selectedIndex + 1) % select.options.length\r\n                })\r\n            }, 2000)\r\n        }\r\n\r\n        return super.render(force, options)\r\n    }\r\n\r\n    close(options?: ({ force?: boolean | undefined } & Record<string, unknown>) | undefined): Promise<void> {\r\n        if (this._randomInterval) clearInterval(this._randomInterval)\r\n        return super.close(options)\r\n    }\r\n\r\n    activateListeners(html: JQuery<HTMLElement>): void {\r\n        super.activateListeners(html)\r\n\r\n        html.find<HTMLSelectElement>('.combo select').on('change', this.#onComboSelectChange.bind(this))\r\n        html.find<ComboTemplateField>('.combo input').on('change', this.#onComboInputChange.bind(this))\r\n\r\n        html.find<SearchTemplateButton>('[data-action=search]').on('click', search)\r\n\r\n        html.find<HTMLAnchorElement>('[data-action=clear]').on('click', this.#onClear.bind(this))\r\n        html.find<HTMLButtonElement>('[data-action=accept]').on('click', this.#onAccept.bind(this))\r\n        html.find<HTMLButtonElement>('[data-action=cancel]').on('click', this.#onCancel.bind(this))\r\n    }\r\n\r\n    protected async _onDrop(event: ElementDragEvent) {\r\n        dropped(event)\r\n    }\r\n\r\n    #onComboSelectChange(event: JQuery.ChangeEvent) {\r\n        const select = event.currentTarget\r\n        const input = select.nextElementSibling as HTMLInputElement\r\n        input.dataset.input = 'false'\r\n        input.value = capitalize(select.value)\r\n    }\r\n\r\n    #onComboInputChange(event: JQuery.ChangeEvent<any, any, ComboTemplateField>) {\r\n        const input = event.currentTarget\r\n        const select = input.previousElementSibling as HTMLSelectElement\r\n        const value = input.value.toLowerCase()\r\n        const type = input.dataset.type\r\n\r\n        // TODO original should be conditional on type if more are to come\r\n        const original = SKILL_LONG_FORMS as string[]\r\n        const options = Array.from(select.options).map(x => x.value)\r\n\r\n        if (options.includes(value)) {\r\n            select.value = value\r\n            input.value = capitalize(value)\r\n            input.dataset.input = 'false'\r\n        } else if (original.includes(value)) {\r\n            if (type === 'trainedSkill') {\r\n                const rank = Number(input.dataset.rank || '1')\r\n                localize.warn('error.input.proficiency', { rank: PROFICIENCY_RANKS[rank], proficiency: value })\r\n            }\r\n\r\n            select.value = ''\r\n            input.value = ''\r\n            input.dataset.input = 'true'\r\n        } else {\r\n            select.value = ''\r\n            input.dataset.input = 'true'\r\n        }\r\n    }\r\n\r\n    #lock() {\r\n        this.element.addClass('disabled')\r\n    }\r\n\r\n    #validate() {\r\n        const warns: string[] = []\r\n        const emptyInputs = this.element.find('input').filter((_, input) => !input.value)\r\n\r\n        if (emptyInputs.length) warns.push('error.empty')\r\n\r\n        warns.forEach(x => localize.warn(x))\r\n\r\n        return !warns.length\r\n    }\r\n\r\n    async #onAccept(event: JQuery.ClickEvent) {\r\n        event.preventDefault()\r\n\r\n        if (!this.#validate()) return\r\n\r\n        this.#lock()\r\n\r\n        try {\r\n            await accept(this.element, this._actor)\r\n        } catch (error) {\r\n            localize.error('error.unexpected')\r\n            console.error(error)\r\n        }\r\n\r\n        this.close()\r\n    }\r\n\r\n    #onClear(event: JQuery.ClickEvent<any, any, HTMLAnchorElement>) {\r\n        event.preventDefault()\r\n        const target = $(event.currentTarget)\r\n        const input = target.prevAll('input').first()\r\n        input.val('')\r\n        input.attr('value', '')\r\n        input.attr('data-uuid', '')\r\n        target.addClass('disabled')\r\n    }\r\n\r\n    #onCancel(event: JQuery.ClickEvent) {\r\n        event.preventDefault()\r\n        this.close()\r\n    }\r\n}\r\n","import { setModuleID } from '@utils/module'\r\nimport { wrapRestForTheNight } from './rest'\r\nimport { renderCharacterSheetPF2e } from './sheet'\r\n\r\nsetModuleID('pf2e-dailies')\r\n\r\nHooks.once('ready', () => {\r\n    wrapRestForTheNight()\r\n})\r\n\r\nHooks.on('renderCharacterSheetPF2e', renderCharacterSheetPF2e)\r\n","import { getFlag } from '@utils/foundry/flags'\r\nimport { sluggify } from '@utils/pf2e/utils'\r\nimport { isRuleItem } from './categories'\r\n\r\nexport function wrapRestForTheNight() {\r\n    const original = game.pf2e.actions.restForTheNight\r\n    game.pf2e.actions.restForTheNight = async (options: ActionDefaultOptions) => {\r\n        const result = await original(options)\r\n        if (result.length && options.actors) afterRest(options.actors)\r\n        return result\r\n    }\r\n}\r\n\r\nasync function afterRest(actors: ActorPF2e | ActorPF2e[]) {\r\n    actors = Array.isArray(actors) ? actors : [actors]\r\n\r\n    const characters = actors.filter(x => x.isOfType('character')) as CharacterPF2e[]\r\n    for (const actor of characters) {\r\n        const update: EmbeddedDocumentUpdateData<ItemPF2e>[] = []\r\n        const remove: string[] = []\r\n        const itemTypes = actor.itemTypes\r\n\r\n        const cleanRuleItem = (item: ItemPF2e) => {\r\n            const rules = deepClone(item._source.system.rules)\r\n\r\n            let modified = false\r\n            for (let i = rules.length - 1; i >= 0; i--) {\r\n                if (!('pf2e-dailies' in rules[i])) continue\r\n                rules.splice(i, 1)\r\n                modified = true\r\n            }\r\n\r\n            if (modified) update.push({ _id: item.id, 'system.rules': rules })\r\n        }\r\n\r\n        for (const item of itemTypes.feat) {\r\n            if (isRuleItem(item)) cleanRuleItem(item)\r\n\r\n            if (getFlag(item, 'temporary')) {\r\n                const parentId = item.getFlag<string>('pf2e', 'grantedBy.id')\r\n                if (parentId) {\r\n                    const slug = sluggify(item.name, { camel: 'dromedary' })\r\n                    const path = `flags.pf2e.itemGrants.-=${slug}`\r\n                    update.push({ _id: parentId, [path]: true })\r\n                }\r\n                remove.push(item.id)\r\n            }\r\n        }\r\n\r\n        for (const item of itemTypes.lore) {\r\n            if (getFlag(item, 'temporary')) remove.push(item.id)\r\n        }\r\n\r\n        for (const item of itemTypes.equipment) {\r\n            if (isRuleItem(item)) cleanRuleItem(item)\r\n        }\r\n\r\n        for (const item of itemTypes.heritage) {\r\n            if (isRuleItem(item)) cleanRuleItem(item)\r\n        }\r\n\r\n        for (const item of itemTypes.spellcastingEntry) {\r\n            if (getFlag(item, 'temporary')) remove.push(item.id)\r\n        }\r\n\r\n        if (update.length) actor.updateEmbeddedDocuments('Item', update)\r\n        if (remove.length) actor.deleteEmbeddedDocuments('Item', remove)\r\n    }\r\n}\r\n","import { DailiesInterface } from '@apps/interface'\r\nimport { localize } from '@utils/foundry/localize'\r\nimport { hasAnyCategory } from './categories'\r\n\r\nexport function renderCharacterSheetPF2e(sheet: CharacterSheetPF2e, html: JQuery) {\r\n    const actor = sheet.actor\r\n    if (!actor.isOwner || !hasAnyCategory(actor)) return\r\n\r\n    const small = html.find('aside .sidebar .hitpoints .hp-small')\r\n    small\r\n        .append(`<a class=\"roll-icon dailies\" title=\"${localize('sheet.title')}\"><i class=\"fas fa-mug-saucer\"></i></a>`)\r\n        .find('.dailies')\r\n        .on('click', () => new DailiesInterface(actor).render(true))\r\n\r\n    // TODO remove with next system update\r\n    small\r\n        .find('[data-action=rest]')\r\n        .off('click')\r\n        .on('click', event => game.pf2e.actions.restForTheNight({ event, actors: actor }))\r\n}\r\n"],"names":["getFlag","doc","key","fallback","getSourceId","hasSourceId","sourceId","includesSourceId","list","includes","wordCharacter","String","raw","nonWordCharacter","nonWordCharacterRE","RegExp","wordBoundary","nonWordBoundary","lowerCaseLetter","upperCaseLetter","lowerCaseThenUpperCaseRE","nonWordCharacterHyphenOrSpaceRE","upperOrWordBoundariedLowerRE","sluggify","text","camel","console","warn","replace","toLowerCase","trim","dromedary","charAt","toUpperCase","slice","part","index","Error","getItemSourceIdCondition","Array","isArray","item","getItems","actor","itemTypes","flatMap","type","items","findItemWithSourceId","find","notify","str","arg1","arg2","arg3","data","undefined","permanent","ui","notifications","localize","args","game","i18n","format","hasLocalization","has","subLocalize","subKey","fn","Object","defineProperties","value","enumerable","configurable","info","error","RULE_TYPES","CATEGORIES","category","uuids","UUIDS","EQUIP_UUID","FEATS_UUID","HERITAGES_UUID","RULES_UUIDS","FLATTENED","FEATS","EQUIP","HERITAGES","RULES","push","map","uuid","firstUUID","Map","getCategoryUUIDS","isRuleItem","isCategory","object","templatePath","path","filter","x","join","SKILL_DICTIONARY","acr","arc","ath","cra","dec","dip","itm","med","nat","occ","prf","rel","soc","ste","sur","thi","SKILL_LONG_FORMS","keys","values","PROFICIENCY_RANKS","chatUUID","name","Set","scrolls","async","createSpellScroll","level","temp","spell","fromUuid","toObject","system","scrollUUID","scrollCompendiumIds","getScrollCompendiumUUID","scroll","location","heightenedLevel","temporary","traits","traditions","flags","core","description","capitalize","msg","accept","html","message","fields","toArray","ruleItems","some","field","dataset","filterItemsWithSourceId","getRuleItems","addData","updateData","rulesToAdd","getRules","id","existing","get","rules","deepClone","_source","i","length","splice","set","messages","languages","skills","tome","resistances","feats","spells","Number","parentUUID","parent","feat","createTemporaryFeat","selected","lore","createTemporaryLore","entrySlug","createSpellcastingSpell","entry","createSpellcastingEntry","classDC","slug","class","rank","isInput","input","ruleItem","createSkillRule","toSave","label","mode","createResistanceRule","options","from","randomOptions","random","_id","pushMessages","title","createEmbeddedDocuments","parentId","onDelete","updateEmbeddedDocuments","setFlag","ChatMessage","create","content","speaker","getSpeaker","Roll","evaluate","total","img","setProperty","skill","proficiency","prepared","showSlotlessLevels","showUnpreparedSpells","LANGUAGE_LIST","FOUR_ELEMENTS","GANZI_RESISTANCES","sortOrder","Proxy","addedLanguage","trainedSkill","addedResistance","trainedLore","obj","prop","getData","actorLevel","categories","heritage","equipment","isOfType","isInvested","hasCategories","templates","slots","spellSlot","template","rows","maxSlot","maxTradition","getSpellcastingDetails","actorSkills","skillSlot","isTomeSelected","option","getRuleSelection","masters","experts","trained","placeholder","actorLanguages","sort","groups","a","b","rule","rollOption","selection","tradition","spellcasting","max","Math","clamped","sequenceArray","start","end","levels","CATEGORY_SEARCH","scrollChain","combatFlexibility","feattype","scrollSavant","tricksterAce","search","event","preventDefault","currentTarget","searchSpell","rarity","source","pf2e","compendiumBrowser","openTab","searchFeat","min","classes","school","tricksterAceFilter","castTime","time","parseInt","droppedSpell","target","isCantrip","not","isRitual","isFocusSpell","itemTraditions","trait","attr","droppedItem","val","nextAll","first","removeClass","DailiesInterface","Application","_actor","_randomInterval","constructor","super","this","defaultOptions","mergeObject","height","submitOnClose","submitOnChange","dragDrop","dropSelector","render","force","clearInterval","element","setInterval","each","_","select","selectedIndex","close","activateListeners","on","bind","$","is","next","categoryType","dataString","dataTransfer","typeError","JSON","parse","isFeature","featType","itemTraits","droppedFeat","dropped","nextElementSibling","previousElementSibling","original","addClass","warns","forEach","prevAll","Hooks","once","actions","restForTheNight","result","actors","characters","update","remove","cleanRuleItem","modified","spellcastingEntry","deleteEmbeddedDocuments","afterRest","wrapRestForTheNight","sheet","isOwner","hasAnyCategory","small","append","off"],"sourceRoot":""}