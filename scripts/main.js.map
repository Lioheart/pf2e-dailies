{"version":3,"file":"main.js","mappings":"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EAEP,OADAE,QAAQvC,KAAK,4CACN,GAGX,OAAQsC,GACJ,KAAK,KACD,OAAOD,EACFG,QAAQP,EAA0B,SAClCQ,cACAD,QAAQ,QAAS,IACjBA,QAAQb,EAAoB,KAC5Be,OACAF,QAAQ,UAAW,KAC5B,IAAK,WAAY,CACb,MAAMG,EAAYP,EAASC,EAAM,CAAEC,MAAO,cAC1C,OAAOK,EAAUC,OAAO,GAAGC,cAAgBF,EAAUG,MAAM,E,CAE/D,IAAK,YACD,OAAOT,EACFG,QAAQN,EAAiC,IACzCM,QAAQ,SAAU,KAClBA,QAAQL,GAA8B,CAACY,EAAMC,IAAqB,IAAVA,EAAcD,EAAKN,cAAgBM,EAAKF,gBAChGL,QAAQ,OAAQ,IACzB,QACI,MAKDS,MAAM,oDAHjB,CCUA,MAAMC,EAAqB,CAAC,gBAAiB,gBAAiB,gBAAiB,iBCzDlEC,EAAmB,CAC5BC,IAAK,aACLC,IAAK,SACLC,IAAK,YACLC,IAAK,WACLC,IAAK,YACLC,IAAK,YACLC,IAAK,eACLC,IAAK,WACLC,IAAK,SACLC,IAAK,YACLC,IAAK,cACLC,IAAK,WACLC,IAAK,UACLC,IAAK,UACLC,IAAK,WACLC,IAAK,YAKIC,GAFsBzG,OAAO0G,KAAKlB,GAEfxF,OAAO2G,OAAOnB,ICrBjCoB,EAAgB,CACzB,SACA,WACA,UACA,QACA,UACA,SACA,WACA,QACA,SACA,SACA,cACA,QACA,UACA,QACA,OACA,YACA,aACA,UACA,QACA,mBACA,UACA,WACA,QACA,WACA,QACA,UACA,QACA,UACA,YACA,UACA,WACA,aACA,SACA,UACA,SACA,UACA,UACA,UACA,aACA,QACA,SACA,UACA,SACA,OACA,UACA,QACA,UACA,UACA,WACA,QACA,UACA,QACA,QACA,YACA,UACA,UACA,SACA,UACA,SACA,UACA,WACA,SACA,QACA,SACA,SACA,SACA,UACA,WACA,UACA,OACA,UACA,YACA,UACA,UACA,SACA,eACA,UACA,QACA,UACA,SACA,QACA,SACA,QACA,UACA,aACA,QACA,SACA,eACA,OACA,UACA,SACA,WACA,QACA,aACA,UAC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AAMO,eACjBvQ,EAAQ6H,EAAOqJ,QAAQ,SAAS5R,QACtCU,EAAMvC,IAAI,IACVuC,EAAMmR,KAAK,QAAS,IACpBnR,EAAMmR,KAAK,YAAa,IACxBtJ,EAAO+I,SAAS,WACpB,CAEA,GAAUZ,GACNA,EAAMM,iBACN/N,KAAKhG,OACT,EClXG,SAAS6U,GAA6D5U,GACzE,OAAO7P,KAAK0kB,QAAQvlB,IAAI0Q,EAC5B,CCTO,MAAM8U,GAAO,CAChB,gDACA,yEACA,uFACA,kEACA,GACA,0DACA,GACA,6CACA,0CACA,+DACA,+CACA,wEACA,QACA,uBACA,IACA,GACA,qCACA,4BACA,mBACA,cACA,0EACA,SACA,kBACA,YACA,6BACA,yFACA,wDACA,aACA,YACA,8BACA,sFACA,wDACA,aACA,YACA,+BACA,uFACA,aACA,YACA,+BACA,2FACA,0DACA,aACA,SACA,iDACA,8CACA,yCACA,wGACA,GACA,oCACA,2BACA,+CACA,gDACA,YACA,GACA,+BACA,kCACA,6EACA,0DACA,2DACA,YACA,kEACA,4EACA,8EACA,GACA,qCACA,+DACA,gEACA,uBACA,kFACA,+DACA,gEACA,gBACA,YACA,kBACA,iBACA,qCACA,kFACA,+DACA,gEACA,4CACA,kFACA,kFACA,+DACA,gEACA,uBACA,kFACA,+DACA,gEACA,gBACA,YACA,GACA,wBACA,SACA,kCACA,qDACA,wBACA,6BACA,6BACA,0FACA,gEACA,0DACA,YACA,qBACA,UACA,4EACA,wCACA,GACA,wCACA,gDACA,gDACA,GACA,sDACA,+EACA,kCACA,uBACA,6FACA,kDACA,kCACA,gBACA,GACA,6FACA,YACA,SACA,IACA,GACA,0BACFhlB,KAAK,MC/HMgO,GAAc,CACvB,8DACA,gDACA,+EACA,GACA,MACA,kCACA,2BACA,uCACA,MACA,2CACA,uDACA,oBACA,wBACA,uCACA,gBACA,oBACA,4BACA,wBACA,uCACA,4BACA,2CACA,qBACA,yBACA,iBACA,aACA,QACA,8CACA,iBACA,IACA,GACA,4CACA,8BACA,0BACA,cACA,wFACA,SACA,kBACA,YACA,gCACA,8FACA,aACA,SACA,cACA,0CACA,iDACA,SACA,2EACA,+CACA,4DACA,0BACA,0CACA,GACA,mCACA,gDACA,gEACA,iDACA,8CACA,YACA,SACA,IACA,GACA,4BACFhO,KAAK,MC/DMilB,GAAS,CAClB,sEACA,0FACA,iEACA,GACA,6EACA,GACA,MACA,kCACA,uCACA,MACA,+DACA,sBACA,2BACA,GACA,gDACA,8EACA,GACA,2CACA,qCACA,sCACA,8EACA,YACA,GACA,+FACA,QACA,GACA,8DACA,IACA,GACA,uCACA,yBACA,qBACA,cACA,+EACA,SACA,gCACA,6FACA,mBACA,8DACA,+DACA,2FACA,4FACA,YACA,SACA,kCACA,sDACA,wBACA,4BACA,6BACA,gFACA,wBACA,iCACA,6CACA,2CACA,8CACA,oDACA,sBACA,iBACA,oEACA,YACA,qBACA,UACA,yEACA,uDACA,sCACA,2GACA,8BACA,oEACA,YACA,SACA,IACA,GACA,uBACFjlB,KAAK,MC1EMklB,GAAO,CAChB,gFACA,yEACA,0DACA,GACA,gFACA,GACA,8BACA,iFACA,wEACA,+DACA,wEACA,IACA,GACA,sEACA,yBACA,yBACA,2BACA,IACA,GACA,6EACA,GACA,yDACA,GACA,8FACA,GACA,iCACA,kBACA,mBACA,0BACA,2BACA,wBACA,sBACA,sBACA,2BACA,cACA,gBACA,IACA,GACA,qCACA,sBACA,wBACA,cACA,uFACA,SACA,kBACA,YACA,8BACA,qDACA,aACA,YACA,8BACA,4FACA,aACA,YACA,6BACA,yFACA,aACA,YACA,gCACA,kGACA,aACA,SACA,cACA,YACA,6BACA,6BACA,8CACA,mBACA,mDACA,aACA,YACA,8BACA,6BACA,mCACA,4CACA,2DACA,0CACA,aACA,YACA,8BACA,8BACA,qCACA,sCACA,gEACA,oDACA,aACA,YACA,8BACA,6BACA,uCACA,qCACA,wEACA,wEACA,8FACA,aACA,YACA,8BACA,gCACA,uCACA,6CACA,wEACA,sDACA,8FACA,aACA,SACA,8EACA,yCACA,8BACA,GACA,yCACA,GACA,0EACA,wHACA,oHACA,GACA,iCACA,mDACA,kFACA,oEACA,4EACA,0CACA,8DACA,8CACA,wCACA,iBACA,YACA,GACA,4FACA,gEACA,qEACA,4DACA,2CACA,GACA,sEACA,6HACA,8CACA,0EACA,wCACA,0CACA,qBACA,gBACA,YACA,SACA,kDACA,oDACA,GACA,+DACA,0EACA,sEACA,GACA,6DACA,0BACA,iHACA,YACA,SACA,IACA,GACA,oBACA,8IACA,kHACA,uEACA,iHACA,IACA,GACA,sDACA,kCACA,oBACA,iJACA,GACA,4DACA,8FACA,QACA,GACA,wCACA,YACA,oCACA,uBACA,yBACA,yBACA,2DACA,uCACA,kDACA,qBACA,wBACA,4DACA,uCACA,4CACA,qBACA,iBACA,iCACA,aACA,cACA,oDACA,QACA,GACA,oBACA,gCACA,gEACA,+BACA,sBACA,QACA,GACA,mBACA,IACA,GACA,+BACA,0CACA,+DACA,wBACA,yEACA,iBACA,QACA,GACA,oEACA,qBACA,mFACA,iBACA,QACA,GACA,iDACA,GACA,0DACA,uEACA,6DACA,GACA,oBACA,IACA,GACA,oBACFllB,KAAK,MCtND,GAAWsB,EAAY,WAkBvB6jB,GAAY,CAAC,UAAW,eAAgB,cAAe,WAAY,aAAc,OAAQ,SACzFC,GAAW,CAAC,cAAe,SAAU,OAAQ,QAE5C,MAAMC,qBAAqBC,gBACtBC,kBAA0D,UAC1DC,eAAyB,GACzBC,QAAsB,KAE9BnR,cACI0B,OACJ,CAEW+L,4BACP,OAAOC,YAAYhM,MAAM+L,eAAgB,CACrC7R,GAAI,uBACJR,MAAO,GAAS,SAChB+K,SAAUxa,EAAa,eACvBkiB,gBAAgB,EAChBD,eAAe,EACfwD,eAAe,EACfC,QAAS,CAAC,gBAElB,CAEAvd,oBAAoBsb,EAAckC,GAAoC,CAEtExd,cAAciC,GACV,MAAM8K,EAAU/U,EAA+B,iBACzCgV,EAAOD,EAAQpL,MAAKuJ,GAAUA,EAAOnU,MAAQ8W,KA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","sources":["webpack:///webpack/bootstrap","webpack:///webpack/runtime/define property getters","webpack:///webpack/runtime/hasOwnProperty shorthand","webpack:///../../../../foundryVTT-projects/@utils/module.ts","webpack:///../../../../foundryVTT-projects/@utils/foundry/path.ts","webpack:///../../../../foundryVTT-projects/@utils/foundry/settings.ts","webpack:///../../../../foundryVTT-projects/@utils/foundry/flags.ts","webpack:///../../../../foundryVTT-projects/@utils/foundry/localize.ts","webpack:///../../../../foundryVTT-projects/@utils/foundry/notification.ts","webpack:///../../../../foundryVTT-projects/@utils/pf2e/dc.ts","webpack:///../../../../foundryVTT-projects/@utils/foundry/uuid.ts","webpack:///../../../../foundryVTT-projects/@utils/pf2e/spell.ts","webpack:///../../../../foundryVTT-projects/@utils/pf2e/utils.ts","webpack:///../../../../foundryVTT-projects/@utils/pf2e/item.ts","webpack:///../../../../foundryVTT-projects/@utils/pf2e/skills.ts","webpack:///../../../../foundryVTT-projects/@utils/pf2e/languages.ts","webpack:///../../../../foundryVTT-projects/@utils/string.ts","webpack:///../../../../foundryVTT-projects/@utils/utils.ts","webpack:///./src/api.ts","webpack:///./src/data/spell.ts","webpack:///./src/data/ace.ts","webpack:///./src/data/chain.ts","webpack:///./src/data/feat.ts","webpack:///./src/data/flexibility.ts","webpack:///./src/data/language.ts","webpack:///./src/data/mind.ts","webpack:///./src/data/rations.ts","webpack:///../../../../foundryVTT-projects/@utils/foundry/item.ts","webpack:///./src/data/resistance.ts","webpack:///./src/data/savant.ts","webpack:///./src/data/skill.ts","webpack:///./src/data/tome.ts","webpack:///../../../../foundryVTT-projects/@utils/function.ts","webpack:///./src/dailies.ts","webpack:///../../../../foundryVTT-projects/@utils/pf2e/predicate.ts","webpack:///./src/apps/interface/data.ts","webpack:///./src/apps/interface/drop.ts","webpack:///./src/data/familiar.ts","webpack:///./src/apps/interface/process.ts","webpack:///./src/apps/interface/shared.ts","webpack:///./src/apps/interface.ts","webpack:///../../../../foundryVTT-projects/@utils/foundry/module.ts","webpack:///./src/apps/customs/tome.ts","webpack:///./src/apps/customs/flexibility.ts","webpack:///./src/apps/customs/savant.ts","webpack:///./src/apps/customs/mind.ts","webpack:///./src/apps/customs.ts","webpack:///./src/main.ts","webpack:///./src/rest.ts","webpack:///./src/sheet.ts"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","export let MODULE_ID = ''\r\n\r\nexport function setModuleID(id: string) {\r\n    if (!MODULE_ID) MODULE_ID = id\r\n}\r\n","import { MODULE_ID } from '@utils/module'\r\n\r\nexport function getSettingLocalizationPath(...path: string[]) {\r\n    return `${MODULE_ID}.settings.${path.join('.')}`\r\n}\r\n\r\nexport function flagsUpdatePath(...path: string[]) {\r\n    return `flags.${MODULE_ID}.${path.join('/')}`\r\n}\r\n\r\nexport function templatePath(...path: string[]) {\r\n    path = path.filter(x => typeof x === 'string')\r\n    return `modules/${MODULE_ID}/templates/${path.join('/')}`\r\n}\r\n\r\nexport function imagePath(...path: string[]) {\r\n    return `modules/${MODULE_ID}/images/${path.join('/')}`\r\n}\r\n","import { MODULE_ID } from '@utils/module'\r\nimport { getSettingLocalizationPath } from '@utils/foundry/path'\r\n\r\nexport function getSetting<T extends any>(key: string) {\r\n    return game.settings.get(MODULE_ID, key) as T\r\n}\r\n\r\nexport function setSetting(key: string, value: unknown) {\r\n    return game.settings.set(MODULE_ID, key, value)\r\n}\r\n\r\n/**\r\n * options.scope = 'world'\r\n *\r\n * options.config = false\r\n */\r\nexport function registerSetting<\r\n    TType extends number | string | boolean | object | Function,\r\n    TChoices extends Record<string, unknown> | undefined\r\n>(options: Omit<SettingRegistration<TType, TChoices>, 'choices'> & { choices?: string[] | Record<string, unknown> }) {\r\n    const name = options.name\r\n    options.scope = options.scope ?? 'world'\r\n    options.config = options.config ?? false\r\n    if (options.config) {\r\n        options.name = getSettingLocalizationPath(name, 'name')\r\n        options.hint = getSettingLocalizationPath(name, 'hint')\r\n    }\r\n    if (Array.isArray(options.choices)) {\r\n        options.choices = options.choices.reduce((choices, choice) => {\r\n            choices[choice] = getSettingLocalizationPath(name, 'choices', choice)\r\n            return choices\r\n        }, {} as Record<string, unknown>)\r\n    }\r\n    game.settings.register<TType, TChoices>(MODULE_ID, name, options as SettingRegistration<TType, TChoices>)\r\n}\r\n\r\n/**\r\n * options.restricted = true\r\n *\r\n * options.icon = 'fas fa-cogs'\r\n */\r\nexport function registerSettingMenu(\r\n    options: RequiredBy<Partial<Omit<SettingSubmenuConfig, 'type'>>, 'name'> & { type: ConstructorOf<FormApplication> }\r\n) {\r\n    const name = options.name\r\n    options.name = getSettingLocalizationPath('menus', name, 'name')\r\n    options.label = getSettingLocalizationPath('menus', name, 'label')\r\n    options.hint = getSettingLocalizationPath('menus', name, 'hint')\r\n    options.restricted = options.restricted ?? true\r\n    options.icon = options.icon ?? 'fas fa-cogs'\r\n    game.settings.registerMenu(MODULE_ID, name, options as SettingSubmenuConfig)\r\n}\r\n\r\nexport function getCombatTrackerConfig() {\r\n    return game.settings.get('core', 'combatTrackerConfig') as { resource: string; skipDefeated: boolean }\r\n}\r\n","import { MODULE_ID } from '@utils/module'\r\n\r\nexport function hasModuleFlag(doc: foundry.abstract.Document) {\r\n    return getProperty(doc, `flags.${MODULE_ID}`) !== undefined\r\n}\r\n\r\nexport function flagPath(key: string) {\r\n    return `flags.${MODULE_ID}.key`\r\n}\r\n\r\nexport function getFlag<T extends unknown>(doc: foundry.abstract.Document, key: string): T | undefined\r\nexport function getFlag<T extends unknown>(doc: foundry.abstract.Document, key: string, fallback: T): T\r\nexport function getFlag<T extends unknown>(doc: foundry.abstract.Document, key: string, fallback?: T): T | undefined {\r\n    return (doc.getFlag(MODULE_ID, key) as T | undefined) ?? fallback\r\n}\r\n\r\n/**\r\n * @template {foundry.Document} T\r\n * @param {T} doc\r\n * @param {string} key\r\n * @param {any} value\r\n * @returns T\r\n */\r\nexport function setFlag(doc: foundry.abstract.Document, key: string, value: unknown) {\r\n    return doc.setFlag(MODULE_ID, key, value)\r\n}\r\n\r\nexport function getSourceId(doc: ClientDocument) {\r\n    return doc.getFlag<ItemUUID>('core', 'sourceId')\r\n}\r\n\r\nexport function hasSourceId(doc: ClientDocument, sourceId: DocumentUUID) {\r\n    return getSourceId(doc) === sourceId\r\n}\r\n\r\nexport function includesSourceId(doc: ClientDocument, list: DocumentUUID[]) {\r\n    const sourceId = getSourceId(doc)\r\n    return sourceId ? list.includes(sourceId) : false\r\n}\r\n","import { MODULE_ID } from '@utils/module'\r\nimport { warn, NotifyArgs, info, error } from '@utils/foundry/notification'\r\n\r\nexport type LocalizeArgs = [key: string, data?: Record<string, string | number | boolean>]\r\n\r\nexport function localize(...args: LocalizeArgs) {\r\n    let [key, data] = args\r\n    key = `${MODULE_ID}.${key}`\r\n    if (data) return game.i18n.format(key, data)\r\n    return game.i18n.localize(key)\r\n}\r\n\r\nexport function hasLocalization(key: string) {\r\n    return game.i18n.has(`${MODULE_ID}.${key}`, false)\r\n}\r\n\r\nexport function localizePath(key: string) {\r\n    return `${MODULE_ID}.${key}`\r\n}\r\n\r\nexport function subLocalize(subKey: string) {\r\n    const fn = (...args: LocalizeArgs) => localize(`${subKey}.${args[0]}`, args[1])\r\n\r\n    Object.defineProperties(fn, {\r\n        warn: {\r\n            value: (...args: NotifyArgs) => warn(`${subKey}.${args[0]}`, args[1], args[2]),\r\n            enumerable: false,\r\n            configurable: false,\r\n        },\r\n        info: {\r\n            value: (...args: NotifyArgs) => info(`${subKey}.${args[0]}`, args[1], args[2]),\r\n            enumerable: false,\r\n            configurable: false,\r\n        },\r\n        error: {\r\n            value: (...args: NotifyArgs) => error(`${subKey}.${args[0]}`, args[1], args[2]),\r\n            enumerable: false,\r\n            configurable: false,\r\n        },\r\n        has: {\r\n            value: (key: string) => hasLocalization(`${subKey}.${key}`),\r\n            enumerable: false,\r\n            configurable: false,\r\n        },\r\n        path: {\r\n            value: (key: string) => localizePath(`${subKey}.${key}`),\r\n            enumerable: false,\r\n            configurable: false,\r\n        },\r\n    })\r\n\r\n    return fn as ((...args: LocalizeArgs) => string) & {\r\n        warn: (...args: NotifyArgs) => void\r\n        info: (...args: NotifyArgs) => void\r\n        error: (...args: NotifyArgs) => void\r\n        has: (key: string) => boolean\r\n    }\r\n}\r\n","import { localize } from '@utils/foundry/localize'\r\n\r\nexport type NotifyArgs = [str: string, arg1?: boolean | Record<string, string | number | boolean>, arg2?: boolean]\r\n\r\nfunction notify(\r\n    str: string,\r\n    arg1?: 'warning' | 'info' | 'error' | boolean | Record<string, string | number | boolean>,\r\n    arg2?: boolean | Record<string, string | number | boolean>,\r\n    arg3?: boolean\r\n) {\r\n    const type = typeof arg1 === 'string' ? arg1 : 'info'\r\n    const data = typeof arg1 === 'object' ? arg1 : typeof arg2 === 'object' ? arg2 : undefined\r\n    const permanent = typeof arg1 === 'boolean' ? arg1 : typeof arg2 === 'boolean' ? arg2 : arg3 ?? false\r\n\r\n    ui.notifications.notify(localize(str, data), type, { permanent })\r\n}\r\n\r\nexport function warn(...args: NotifyArgs) {\r\n    const [str, arg1, arg2] = args\r\n    notify(str, 'warning', arg1, arg2)\r\n}\r\n\r\nexport function info(...args: NotifyArgs) {\r\n    const [str, arg1, arg2] = args\r\n    notify(str, 'info', arg1, arg2)\r\n}\r\n\r\nexport function error(...args: NotifyArgs) {\r\n    const [str, arg1, arg2] = args\r\n    notify(str, 'error', arg1, arg2)\r\n}\r\n","const dcByLevel = new Map<number, number>()\r\ndcByLevel.set(-1, 13)\r\ndcByLevel.set(0, 14)\r\ndcByLevel.set(1, 15)\r\ndcByLevel.set(2, 16)\r\ndcByLevel.set(3, 18)\r\ndcByLevel.set(4, 19)\r\ndcByLevel.set(5, 20)\r\ndcByLevel.set(6, 22)\r\ndcByLevel.set(7, 23)\r\ndcByLevel.set(8, 24)\r\ndcByLevel.set(9, 26)\r\ndcByLevel.set(10, 27)\r\ndcByLevel.set(11, 28)\r\ndcByLevel.set(12, 30)\r\ndcByLevel.set(13, 31)\r\ndcByLevel.set(14, 32)\r\ndcByLevel.set(15, 34)\r\ndcByLevel.set(16, 35)\r\ndcByLevel.set(17, 36)\r\ndcByLevel.set(18, 38)\r\ndcByLevel.set(19, 39)\r\ndcByLevel.set(20, 40)\r\ndcByLevel.set(21, 42)\r\ndcByLevel.set(22, 44)\r\ndcByLevel.set(23, 46)\r\ndcByLevel.set(24, 48)\r\ndcByLevel.set(25, 50)\r\n\r\nconst dcAdjustments = new Map<DCAdjustment, number>()\r\ndcAdjustments.set('incredibly easy', -10)\r\ndcAdjustments.set('very easy', -5)\r\ndcAdjustments.set('easy', -2)\r\ndcAdjustments.set('normal', 0)\r\ndcAdjustments.set('hard', 2)\r\ndcAdjustments.set('very hard', 5)\r\ndcAdjustments.set('incredibly hard', 10)\r\n\r\n/**\r\n * Normal Level Based DCs\r\n * @param level\r\n * @param proficiencyWithoutLevel\r\n */\r\nexport function calculateDC(level: number, { proficiencyWithoutLevel = false, rarity = 'common' }: DCOptions = {}): number {\r\n    // assume level 0 if garbage comes in. We cast level to number because the backing data may actually have it\r\n    // stored as a string, which we can't catch at compile time\r\n    const dc = dcByLevel.get(level) ?? 14\r\n    if (proficiencyWithoutLevel) {\r\n        // -1 shouldn't be subtracted since it's just\r\n        // a creature level and not related to PC levels\r\n        return adjustDCByRarity(dc - Math.max(level, 0), rarity)\r\n    } else {\r\n        return adjustDCByRarity(dc, rarity)\r\n    }\r\n}\r\n\r\nexport function adjustDCByRarity(dc: number, rarity: Rarity = 'common') {\r\n    return adjustDC(dc, rarityToDCAdjustment(rarity))\r\n}\r\n\r\nexport function adjustDC(dc: number, adjustment: DCAdjustment = 'normal') {\r\n    return dc + (dcAdjustments.get(adjustment) ?? 0)\r\n}\r\n\r\nexport function rarityToDCAdjustment(rarity: Rarity = 'common'): PositiveDCAdjustment {\r\n    if (rarity === 'uncommon') {\r\n        return 'hard'\r\n    } else if (rarity === 'rare') {\r\n        return 'very hard'\r\n    } else if (rarity === 'unique') {\r\n        return 'incredibly hard'\r\n    } else {\r\n        return 'normal'\r\n    }\r\n}\r\n","export function chatUUID(uuid: string, name?: string) {\r\n    if (name) return `@UUID[${uuid}]{${name}}`\r\n    return `@UUID[${uuid}]`\r\n}\r\n\r\nexport function fakeChatUUID(name: string) {\r\n    return `<span style=\"background: #DDD;\r\n    padding: 1px 4px;\r\n    border: 1px solid var(--color-border-dark-tertiary);\r\n    border-radius: 2px;\r\n    white-space: nowrap;\r\n    word-break: break-all;\">${name}</span>`\r\n}\r\n","import { chatUUID } from '@utils/foundry/uuid'\r\n\r\nexport const MAGIC_TRADITIONS = new Set(['arcane', 'divine', 'occult', 'primal'] as const)\r\n\r\nexport const SPELL_COMPONENTS = ['focus', 'material', 'somatic', 'verbal'] as const\r\n\r\nconst scrolls: (ConsumablePF2e | null)[] = []\r\nexport async function createSpellScroll(uuid: ItemUUID, level: OneToTen | false, temp = false) {\r\n    const spell = (await fromUuid<SpellPF2e>(uuid))?.toObject()\r\n    if (!spell) return null\r\n\r\n    if (level === false) level = spell.system.level.value\r\n\r\n    const scrollUUID = getScrollCompendiumUUID(level)\r\n    scrolls[level] ??= await fromUuid<ConsumablePF2e>(scrollUUID)\r\n\r\n    const scroll = scrolls[level]?.toObject()\r\n    if (!scroll) return null\r\n\r\n    spell.system.location.heightenedLevel = level\r\n\r\n    scroll.name = `Scroll of ${spell.name} (Level ${level})`\r\n    scroll.system.temporary = temp\r\n    scroll.system.spell = spell\r\n    scroll.system.traits.value.push(...spell.system.traditions.value)\r\n\r\n    const sourceId = spell.flags.core?.sourceId\r\n    if (sourceId) scroll.system.description.value = `${chatUUID(sourceId)}\\n<hr />${scroll.system.description.value}`\r\n\r\n    return scroll\r\n}\r\n\r\nfunction getScrollCompendiumUUID(level: OneToTen): ItemUUID {\r\n    return `Compendium.pf2e.equipment-srd.${scrollCompendiumIds[level]}`\r\n}\r\n\r\nconst scrollCompendiumIds: Record<number, string> = {\r\n    1: 'RjuupS9xyXDLgyIr', // Compendium.pf2e.equipment-srd.RjuupS9xyXDLgyIr\r\n    2: 'Y7UD64foDbDMV9sx',\r\n    3: 'ZmefGBXGJF3CFDbn',\r\n    4: 'QSQZJ5BC3DeHv153',\r\n    5: 'tjLvRWklAylFhBHQ',\r\n    6: '4sGIy77COooxhQuC',\r\n    7: 'fomEZZ4MxVVK3uVu',\r\n    8: 'iPki3yuoucnj7bIt',\r\n    9: 'cFHomF3tty8Wi1e5',\r\n    10: 'o1XIHJ4MJyroAHfF',\r\n}\r\n","const wordCharacter = String.raw`[\\p{Alphabetic}\\p{Mark}\\p{Decimal_Number}\\p{Join_Control}]`\r\nconst nonWordCharacter = String.raw`[^\\p{Alphabetic}\\p{Mark}\\p{Decimal_Number}\\p{Join_Control}]`\r\nconst nonWordCharacterRE = new RegExp(nonWordCharacter, 'gu')\r\n\r\nconst wordBoundary = String.raw`(?:${wordCharacter})(?=${nonWordCharacter})|(?:${nonWordCharacter})(?=${wordCharacter})`\r\nconst nonWordBoundary = String.raw`(?:${wordCharacter})(?=${wordCharacter})`\r\nconst lowerCaseLetter = String.raw`\\p{Lowercase_Letter}`\r\nconst upperCaseLetter = String.raw`\\p{Uppercase_Letter}`\r\nconst lowerCaseThenUpperCaseRE = new RegExp(`(${lowerCaseLetter})(${upperCaseLetter}${nonWordBoundary})`, 'gu')\r\n\r\nconst nonWordCharacterHyphenOrSpaceRE = /[^-\\p{White_Space}\\p{Alphabetic}\\p{Mark}\\p{Decimal_Number}\\p{Join_Control}]/gu\r\nconst upperOrWordBoundariedLowerRE = new RegExp(`${upperCaseLetter}|(?:${wordBoundary})${lowerCaseLetter}`, 'gu')\r\n\r\n/**\r\n * The system's sluggification algorithm for labels and other terms.\r\n * @param text The text to sluggify\r\n * @param [options.camel=null] The sluggification style to use\r\n */\r\nexport function sluggify(text: string, { camel = null }: { camel?: 'dromedary' | 'bactrian' | null } = {}): string {\r\n    // Sanity check\r\n    if (typeof text !== 'string') {\r\n        console.warn('Non-string argument passed to `sluggify`')\r\n        return ''\r\n    }\r\n\r\n    switch (camel) {\r\n        case null:\r\n            return text\r\n                .replace(lowerCaseThenUpperCaseRE, '$1-$2')\r\n                .toLowerCase()\r\n                .replace(/['’]/g, '')\r\n                .replace(nonWordCharacterRE, ' ')\r\n                .trim()\r\n                .replace(/[-\\s]+/g, '-')\r\n        case 'bactrian': {\r\n            const dromedary = sluggify(text, { camel: 'dromedary' })\r\n            return dromedary.charAt(0).toUpperCase() + dromedary.slice(1)\r\n        }\r\n        case 'dromedary':\r\n            return text\r\n                .replace(nonWordCharacterHyphenOrSpaceRE, '')\r\n                .replace(/[-_]+/g, ' ')\r\n                .replace(upperOrWordBoundariedLowerRE, (part, index) => (index === 0 ? part.toLowerCase() : part.toUpperCase()))\r\n                .replace(/\\s+/g, '')\r\n        default:\r\n            throw ErrorPF2e(\"I don't think that's a real camel.\")\r\n    }\r\n}\r\n\r\nexport function ErrorPF2e(message: string): Error {\r\n    return Error(`PF2e System | ${message}`)\r\n}\r\n\r\n/** Check if an element is present in the provided set. Especially useful for checking against literal sets */\r\nexport function setHasElement<T extends Set<unknown>>(set: T, value: unknown): value is SetElement<T> {\r\n    return set.has(value)\r\n}\r\n","import { adjustDCByRarity, calculateDC } from '@utils/pf2e/dc'\r\nimport { MAGIC_TRADITIONS } from '@utils/pf2e/spell'\r\nimport { setHasElement } from '@utils/pf2e/utils'\r\n\r\nexport function identifyItem(\r\n    item: PhysicalItemPF2e,\r\n    { proficiencyWithoutLevel = false, notMatchingTraditionModifier }: IdentifyItemOptions\r\n): GenericIdentifyDCs | IdentifyMagicDCs | IdentifyAlchemyDCs {\r\n    const baseDC = calculateDC(item.level, { proficiencyWithoutLevel })\r\n    const rarity = getDcRarity(item)\r\n    const dc = adjustDCByRarity(baseDC, rarity)\r\n    if (item.isMagical) {\r\n        return identifyMagic(item, dc, notMatchingTraditionModifier)\r\n    } else if (item.isAlchemical) {\r\n        return { cra: dc }\r\n    } else {\r\n        return { dc: dc }\r\n    }\r\n}\r\n\r\n/** All cursed items are incredibly hard to identify */\r\nfunction getDcRarity(item: PhysicalItemPF2e): Rarity {\r\n    return item.traits.has('cursed') ? 'unique' : item.rarity\r\n}\r\n\r\nfunction identifyMagic(item: PhysicalItemPF2e, baseDc: number, notMatchingTraditionModifier: number) {\r\n    const result = {\r\n        occult: baseDc,\r\n        primal: baseDc,\r\n        divine: baseDc,\r\n        arcane: baseDc,\r\n    }\r\n    const traditions = getMagicTraditions(item)\r\n    for (const key of MAGIC_TRADITIONS) {\r\n        // once an item has a magic tradition, all skills\r\n        // that don't match the tradition are hard\r\n        if (traditions.size > 0 && !traditions.has(key)) {\r\n            result[key] = baseDc + notMatchingTraditionModifier\r\n        }\r\n    }\r\n    return { arc: result.arcane, nat: result.primal, rel: result.divine, occ: result.occult }\r\n}\r\n\r\n/**\r\n * Extract all traits from an item, that match a magic tradition\r\n */\r\nfunction getMagicTraditions(item: PhysicalItemPF2e): Set<MagicTradition> {\r\n    const traits: string[] = item.system.traits.value\r\n    return new Set(traits.filter((t): t is MagicTradition => setHasElement(MAGIC_TRADITIONS, t)))\r\n}\r\n\r\nexport function getChoiSetRuleSelection<T extends unknown>(item: ItemPF2e, option: string) {\r\n    const rules = item._source.system.rules as ChoiceSetSource[]\r\n    const rule = rules.find(rule => rule.key === 'ChoiceSet' && rule.rollOption === option)\r\n    return rule?.selection as T | undefined\r\n}\r\n\r\nconst RUNE_PROPERTY_KEYS = ['propertyRune1', 'propertyRune2', 'propertyRune3', 'propertyRune4'] as const\r\n\r\nexport function getFreePropertyRuneSlot(item: WeaponPF2e | ArmorPF2e): null | typeof RUNE_PROPERTY_KEYS[number] {\r\n    const potency = item.system.potencyRune.value\r\n    if (potency === null) return null\r\n\r\n    for (let i = 0; i < potency; i++) {\r\n        const property = RUNE_PROPERTY_KEYS[i]\r\n        if (!item.system[property].value) return property\r\n    }\r\n\r\n    return null\r\n}\r\n","export const SKILL_DICTIONARY = {\r\n    acr: 'acrobatics',\r\n    arc: 'arcana',\r\n    ath: 'athletics',\r\n    cra: 'crafting',\r\n    dec: 'deception',\r\n    dip: 'diplomacy',\r\n    itm: 'intimidation',\r\n    med: 'medicine',\r\n    nat: 'nature',\r\n    occ: 'occultism',\r\n    prf: 'performance',\r\n    rel: 'religion',\r\n    soc: 'society',\r\n    ste: 'stealth',\r\n    sur: 'survival',\r\n    thi: 'thievery',\r\n} as const\r\n\r\nexport const SKILL_ABBREVIATIONS = Object.keys(SKILL_DICTIONARY) as (keyof typeof SKILL_DICTIONARY)[]\r\n\r\nexport const SKILL_LONG_FORMS = Object.values(SKILL_DICTIONARY)\r\n\r\nexport function getTranslatedSkills() {\r\n    const skillList = (CONFIG as ConfigPF2e).PF2E.skillList\r\n    return Object.entries(skillList).reduce((result: Record<string, string>, [key, value]) => {\r\n        return {\r\n            ...result,\r\n            [key]: game.i18n.localize(value).toLocaleLowerCase(game.i18n.lang),\r\n        }\r\n    }, {})\r\n}\r\n","export const LANGUAGE_LIST = [\r\n    'common',\r\n    'draconic',\r\n    'dwarven',\r\n    'elven',\r\n    'gnomish',\r\n    'goblin',\r\n    'halfling',\r\n    'jotun',\r\n    'orcish',\r\n    'sylvan',\r\n    'undercommon',\r\n    'ysoki',\r\n    'abyssal',\r\n    'adlet',\r\n    'aklo',\r\n    'akitonian',\r\n    'alghollthu',\r\n    'amurrun',\r\n    'anadi',\r\n    'ancient-osiriani',\r\n    'anugobu',\r\n    'arcadian',\r\n    'aquan',\r\n    'arboreal',\r\n    'auran',\r\n    'boggard',\r\n    'calda',\r\n    'caligni',\r\n    'celestial',\r\n    'cyclops',\r\n    'daemonic',\r\n    'destrachan',\r\n    'drooni',\r\n    'dziriak',\r\n    'ekujae',\r\n    'erutaki',\r\n    'formian',\r\n    'garundi',\r\n    'girtablilu',\r\n    'gnoll',\r\n    'goloma',\r\n    'grippli',\r\n    'hallit',\r\n    'hwan',\r\n    'iblydan',\r\n    'ignan',\r\n    'ikeshti',\r\n    'immolis',\r\n    'infernal',\r\n    'iruxi',\r\n    'jistkan',\r\n    'jyoti',\r\n    'kaava',\r\n    'kashrishi',\r\n    'kibwani',\r\n    'kitsune',\r\n    'kelish',\r\n    'lirgeni',\r\n    'mahwek',\r\n    'minaten',\r\n    'minkaian',\r\n    'mwangi',\r\n    'mzunu',\r\n    'nagaji',\r\n    'necril',\r\n    'ocotan',\r\n    'okaiyan',\r\n    'osiriani',\r\n    'protean',\r\n    'rasu',\r\n    'ratajin',\r\n    'razatlani',\r\n    'requian',\r\n    'russian',\r\n    'senzar',\r\n    'shadowtongue',\r\n    'shobhad',\r\n    'shisk',\r\n    'shoanti',\r\n    'shoony',\r\n    'skald',\r\n    'sphinx',\r\n    'strix',\r\n    'taldane',\r\n    'tekritanin',\r\n    'tengu',\r\n    'terran',\r\n    'thassilonian',\r\n    'tien',\r\n    'utopian',\r\n    'vanara',\r\n    'varisian',\r\n    'varki',\r\n    'vishkanyan',\r\n    'vudrani',\r\n    'wyrwood',\r\n    'xanmba',\r\n    'androffan',\r\n    'azlanti',\r\n    'grioth',\r\n    'kovintal',\r\n    'migo',\r\n    'munavri',\r\n    'samsaran',\r\n    'sasquatch',\r\n    'shae',\r\n    'yithian',\r\n    'druidic',\r\n] as const\r\n","export function cleanSplit(str: string | undefined) {\r\n    if (!str) return []\r\n    return str\r\n        .split(',')\r\n        .map(x => x.trim())\r\n        .filter(x => x)\r\n}\r\n\r\nexport function capitalize(str?: string) {\r\n    if (!str) return ''\r\n    return str[0].toUpperCase() + str.slice(1)\r\n}\r\n","export function sequenceArray<N extends number = number>(start: number, end: number) {\r\n    const levels: number[] = []\r\n\r\n    if (start <= end) {\r\n        for (let i = start; i <= end; i++) levels.push(i)\r\n    } else {\r\n        for (let i = start; i >= end; i--) levels.push(i)\r\n    }\r\n\r\n    return levels as N[]\r\n}\r\n","import { getChoiSetRuleSelection, getFreePropertyRuneSlot } from '@utils/pf2e/item'\r\nimport { SKILL_LONG_FORMS } from '@utils/pf2e/skills'\r\nimport { LANGUAGE_LIST } from '@utils/pf2e/languages'\r\nimport { capitalize } from '@utils/string'\r\nimport { sequenceArray } from '@utils/utils'\r\nimport { createSpellScroll } from '@utils/pf2e/spell'\r\n\r\nconst halfLevelString = 'max(1,floor(@actor.level/2))'\r\n\r\ntype CreateSkillArgs = { skill: string; value: ZeroToFour | string; mode?: PredicateMode; predicate?: RawPredicate }\r\ntype CreateLanguageArgs = { language: string; mode?: PredicateMode; predicate?: RawPredicate }\r\ntype CreateLoreArgs = { name: string; rank: OneToFour }\r\ntype CreateResistanceArgs = { type: string; value: number | string | 'half'; predicate?: RawPredicate }\r\ntype CreateScrollArgs = { uuid: ItemUUID; level?: OneToTen }\r\n\r\nexport const utils = {\r\n    // Skills\r\n    get skillNames() {\r\n        return SKILL_LONG_FORMS.slice()\r\n    },\r\n    skillLabel: (skill: string) => {\r\n        return game.i18n.localize(CONFIG.PF2E.skillList[skill as SkillLongForm])\r\n    },\r\n    createSkillRuleElement: ({ skill, value, mode = 'upgrade', predicate }: CreateSkillArgs) => {\r\n        const rule: AELikeSource = {\r\n            key: 'ActiveEffectLike',\r\n            mode,\r\n            path: `system.skills.${skill}.rank`,\r\n            value,\r\n        }\r\n        if (predicate && predicate.length) rule.predicate = predicate\r\n        return rule\r\n    },\r\n    createLoreSource: ({ name, rank }: CreateLoreArgs) => {\r\n        const data: DeepPartial<LoreSource> = {\r\n            type: 'lore',\r\n            img: 'systems/pf2e/icons/default-icons/lore.svg',\r\n            name,\r\n            system: { proficient: { value: rank as OneToFour } },\r\n        }\r\n        return data\r\n    },\r\n    // Languages\r\n    get languageNames() {\r\n        return LANGUAGE_LIST.slice()\r\n    },\r\n    languageLabel: (language: string) => {\r\n        return game.i18n.localize(CONFIG.PF2E.languages[language as Language])\r\n    },\r\n    createLanguageRuleElement: ({ language, mode = 'add', predicate }: CreateLanguageArgs) => {\r\n        const rule: AELikeSource = {\r\n            key: 'ActiveEffectLike',\r\n            mode,\r\n            path: 'system.traits.languages.value',\r\n            value: language,\r\n        }\r\n        if (predicate && predicate.length) rule.predicate = predicate\r\n        return rule\r\n    },\r\n    // resistances\r\n    resistanceLabel: (resistance: string, value?: number) => {\r\n        let str = game.i18n.localize(`PF2E.Trait${capitalize(resistance)}`)\r\n        if (value) str += ` ${value}`\r\n        return str\r\n    },\r\n    createResistanceRuleElement: ({ type, value, predicate }: CreateResistanceArgs) => {\r\n        if (value === 'half') value = halfLevelString\r\n        const rule: IWRRuleElementSource = {\r\n            key: 'Resistance',\r\n            type,\r\n            value,\r\n        }\r\n        if (predicate && predicate.length) rule.predicate = predicate\r\n        return rule\r\n    },\r\n    // feats\r\n    createFeatSource: async (uuid: ItemUUID) => {\r\n        const source = (await fromUuid<FeatPF2e>(uuid))?.toObject()\r\n        if (!source) throw new Error(`An error occured while trying to create a feat source with uuid: ${uuid}`)\r\n        return source\r\n    },\r\n    // spells\r\n    createSpellScrollSource: async ({ uuid, level }: CreateScrollArgs) => {\r\n        const source = await createSpellScroll(uuid, level ?? false, true)\r\n        if (!source) throw new Error(`An error occured while trying to create a spell scroll source with uuid: ${uuid}`)\r\n        return source\r\n    },\r\n    createSpellSource: async (uuid: ItemUUID) => {\r\n        const source = (await fromUuid<SpellPF2e>(uuid))?.toObject()\r\n        if (!source) throw new Error(`An error occured while trying to create a spell source with uuid: ${uuid}`)\r\n        return source\r\n    },\r\n    // Rule Elements\r\n    get halfLevelString() {\r\n        return halfLevelString\r\n    },\r\n    getChoiSetRuleSelection,\r\n    //\r\n    proficiencyLabel: (rank: ZeroToFour) => {\r\n        return game.i18n.localize(CONFIG.PF2E.proficiencyLevels[rank])\r\n    },\r\n    randomOption: async <T extends string | { value: string }>(options: T[]) => {\r\n        const roll = (await new Roll(`1d${options.length}`).evaluate({ async: true })).total\r\n        const result = options[roll - 1]!\r\n        if (typeof result === 'string') return result\r\n        return result.value\r\n    },\r\n    halfLevelValue: (actor: CharacterPF2e) => Math.max(1, Math.floor(actor.level / 2)),\r\n    sequenceArray,\r\n    // equipment\r\n    damageLabel: (damage: string) => {\r\n        return game.i18n.localize(CONFIG.PF2E.weaponDamage[damage as WeaponDamage])\r\n    },\r\n    weaponTraitLabel: (trait: string) => {\r\n        return game.i18n.localize(CONFIG.PF2E.weaponTraits[trait as WeaponTrait])\r\n    },\r\n    weaponPropertyRunesLabel: (rune: string) => {\r\n        return game.i18n.localize(CONFIG.PF2E.weaponPropertyRunes[rune as WeaponPropertyRuneType])\r\n    },\r\n    hasFreePropertySlot: (item: WeaponPF2e | ArmorPF2e) => {\r\n        const potency = item.system.runes.potency\r\n        return potency > 0 && item.system.runes.property.length < potency\r\n    },\r\n    getFreePropertyRuneSlot,\r\n}\r\n","export type SpellGenerics = ['spell', {}, '']\r\n\r\nexport function createSpellDaily(key: string, uuid: ItemUUID, filter: DailySpellFilter = {}, level?: number, label?: string) {\r\n    const daily: Daily<SpellGenerics> = {\r\n        key,\r\n        label,\r\n        item: {\r\n            uuid,\r\n        },\r\n        rows: [\r\n            {\r\n                type: 'drop',\r\n                slug: 'spell',\r\n                filter: {\r\n                    type: 'spell',\r\n                    search: filter,\r\n                },\r\n            },\r\n        ],\r\n        process: async ({ addSpell, utils, fields, messages }) => {\r\n            const uuid = fields.spell.uuid!\r\n            const source = await utils.createSpellSource(uuid)\r\n            const label = `${source.name} (Level ${level || source.system.level.value})`\r\n            addSpell(source, level)\r\n            messages.add('spells', { uuid, label })\r\n        },\r\n    }\r\n    return daily\r\n}\r\n","import { localizePath } from '@utils/foundry/localize'\r\nimport { createSpellDaily, SpellGenerics } from './spell'\r\n\r\nexport const TricksterAce = (() => {\r\n    const daily = createSpellDaily(\r\n        'ace',\r\n        'Compendium.pf2e.feats-srd.POrE3ZgBRdBL9MsW',\r\n        {\r\n            category: ['cantrip', 'spell'],\r\n            level: 4,\r\n        },\r\n        4\r\n    )\r\n\r\n    const row = daily.rows![0] as DailyRowDropSpell<SpellGenerics>\r\n    row.filter.drop = item => {\r\n        const castTime = item.system.time.value\r\n        if (castTime.includes('hour') || (castTime.includes('min') && parseInt(castTime) > 10)) {\r\n            return { error: localizePath('interface.error.drop.wrongSpellTime'), data: { time: '10 min' } }\r\n        }\r\n        return true\r\n    }\r\n\r\n    return daily\r\n})()\r\n","type ChainRow = typeof rows[number]\r\ntype ChainChild = 'expert' | 'master'\r\ntype ChainGenerics = [ChainRow, {}, ChainChild]\r\n\r\nconst rows = ['first', 'second', 'third', 'fourth', 'fifth', 'sixth', 'seventh'] as const\r\n\r\nexport function createScrollChain(key: string, uuids: [ItemUUID, ItemUUID, ItemUUID], label?: string) {\r\n    const daily: Daily<ChainGenerics> = {\r\n        key,\r\n        label,\r\n        item: {\r\n            uuid: uuids[0],\r\n        },\r\n        children: [\r\n            {\r\n                slug: 'expert',\r\n                uuid: uuids[1],\r\n            },\r\n            {\r\n                slug: 'master',\r\n                uuid: uuids[2],\r\n            },\r\n        ],\r\n        rows: [\r\n            createRow('first', 1), //\r\n            createRow('second', 2, 8),\r\n            createRow('third', 3, undefined, 'expert'), //\r\n            createRow('fourth', 4, 14, 'expert'),\r\n            createRow('fifth', 5, 16, 'expert'),\r\n            createRow('sixth', 6, undefined, 'master'), //\r\n            createRow('seventh', 7, 20, 'master'),\r\n        ],\r\n        process: async ({ utils, fields, addItem, messages }) => {\r\n            for (const field of Object.values(fields)) {\r\n                const uuid = field.uuid!\r\n                const level = (rows.indexOf(field.row) + 1) as OneToTen\r\n                const source = await utils.createSpellScrollSource({ uuid, level })\r\n                addItem(source)\r\n                messages.add('scrolls', { uuid, label: source.name })\r\n            }\r\n        },\r\n    }\r\n    return daily\r\n}\r\n\r\nfunction createRow(slug: ChainRow, level: OneToTen, minActorLevel?: number, child?: ChainChild) {\r\n    const row: DailyRow<ChainGenerics> = {\r\n        type: 'drop',\r\n        slug,\r\n        label: `PF2E.SpellLevel${level}`,\r\n        filter: {\r\n            type: 'spell',\r\n            search: {\r\n                category: ['spell'],\r\n                level,\r\n            },\r\n        },\r\n    }\r\n    if (minActorLevel) row.condition = ({ actor }) => actor.level >= minActorLevel\r\n    if (child) row.childPredicate = [child]\r\n    return row\r\n}\r\n","type FeatGenerics = ['feat', {}, '']\r\n\r\nexport function createFeatDaily(key: string, uuid: ItemUUID, filter: DailyFeatFilter = {}, label?: string) {\r\n    const daily: Daily<FeatGenerics> = {\r\n        key,\r\n        label,\r\n        item: {\r\n            uuid,\r\n        },\r\n        rows: [\r\n            {\r\n                type: 'drop',\r\n                slug: 'feat',\r\n                filter: {\r\n                    type: 'feat',\r\n                    search: filter,\r\n                },\r\n            },\r\n        ],\r\n        process: async ({ utils, fields, addFeat, messages }: DailyProcessFunctionArgs<FeatGenerics>) => {\r\n            const uuid = fields.feat.uuid!\r\n            const source = await utils.createFeatSource(uuid)\r\n            addFeat(source)\r\n            messages.add('feats', { uuid })\r\n        },\r\n    }\r\n    return daily\r\n}\r\n","type FlexibilityRow = 'flexibility' | 'improved'\r\ntype FlexibilityChild = 'improved'\r\ntype FlexibilityGenerics = [FlexibilityRow, {}, FlexibilityChild]\r\n\r\nexport const combatFlexibility: Daily<FlexibilityGenerics> = {\r\n    key: 'flexibility',\r\n    item: {\r\n        uuid: 'Compendium.pf2e.classfeatures.8g6HzARbhfcgilP8', // Combat Flexibility\r\n    },\r\n    children: [\r\n        {\r\n            slug: 'improved',\r\n            uuid: 'Compendium.pf2e.classfeatures.W2rwudMNcAxs8VoX', // Improved Flexibility\r\n        },\r\n    ],\r\n    rows: [\r\n        createRow('flexibility', 8), //\r\n        createRow('improved', 14, 'improved'),\r\n    ],\r\n    process: async ({ utils, fields, addFeat, messages, children }) => {\r\n        const uuid = fields.flexibility.uuid!\r\n        const source = await utils.createFeatSource(uuid)\r\n        addFeat(source)\r\n        messages.add('feats', { uuid })\r\n\r\n        if (children.improved) {\r\n            const uuid = fields.improved.uuid!\r\n            const source = await utils.createFeatSource(uuid)\r\n            addFeat(source, children.improved)\r\n            messages.add('feats', { uuid })\r\n        }\r\n    },\r\n}\r\n\r\nfunction createRow(slug: FlexibilityRow, level: number, child?: FlexibilityChild) {\r\n    const row: DailyRowDrop<FlexibilityGenerics> = {\r\n        type: 'drop',\r\n        label: `PF2E.Level${level}`,\r\n        slug,\r\n        filter: {\r\n            type: 'feat',\r\n            search: {\r\n                feattype: ['class'],\r\n                traits: {\r\n                    values: ['fighter'],\r\n                },\r\n                level,\r\n            },\r\n        },\r\n    }\r\n    if (child) row.childPredicate = [child]\r\n    return row\r\n}\r\n","type LanguageGenerics = ['language', {}, '']\r\n\r\nexport function createLanguageDaily(key: string, uuid: ItemUUID, label?: string) {\r\n    const daily: Daily<LanguageGenerics> = {\r\n        key,\r\n        label,\r\n        item: {\r\n            uuid,\r\n        },\r\n        rows: [\r\n            {\r\n                type: 'select',\r\n                slug: 'language',\r\n                options: ({ actor, utils }) => {\r\n                    const actorLanguages = actor.system.traits.languages.value\r\n                    return utils.languageNames.filter(x => !actorLanguages.includes(x)).sort()\r\n                },\r\n                labelizer: ({ utils }) => utils.languageLabel,\r\n            },\r\n        ],\r\n        process: ({ addRule, utils, fields, messages }) => {\r\n            const value = fields.language.value\r\n            const source = utils.createLanguageRuleElement({ language: value })\r\n            addRule(source)\r\n            messages.add('languages', { uuid, selected: utils.languageLabel(value), label })\r\n        },\r\n    }\r\n    return daily\r\n}\r\n","import { MODULE_ID } from '@src/main'\r\nimport { localize, subLocalize } from '@utils/foundry/localize'\r\nimport { getFlag } from '@utils/foundry/flags'\r\n\r\ntype MindRow = 'alert' | 'smith' | 'mental' | 'runic' | 'advanced'\r\ntype MindChild = 'weapon' | 'mental' | 'runic' | 'advanced'\r\ntype MindGenerics = [MindRow, {}, MindChild]\r\n\r\nconst MIND_WEAPON_UUID = 'Compendium.pf2e-dailies.equipment.VpmEozw21aRxX15P'\r\n\r\nconst WEAPON_BASE_TYPES = {\r\n    '0': { die: 'd4', traits: ['finesse', 'agile'], usage: 'held-in-one-hand' },\r\n    '1': { die: 'd6', traits: ['finesse'], usage: 'held-in-one-hand' },\r\n    '2': { die: 'd8', traits: [], usage: 'held-in-one-hand' },\r\n    '3': { die: 'd10', traits: ['reach'], usage: 'held-in-two-hands' },\r\n}\r\n\r\nconst WEAPON_GROUPS = {\r\n    slashing: 'sword',\r\n    piercing: 'spear',\r\n    bludgeoning: 'club',\r\n} as Record<WeaponDamage, string>\r\n\r\nconst WEAPON_TRAITS = ['grapple', 'nonlethal', 'shove', 'trip', 'modular']\r\n\r\nconst WEAPON_DAMAGE_TYPES = Object.keys(WEAPON_GROUPS)\r\n\r\nconst WEAPON_RUNES = ['corrosive', 'disrupting', 'flaming', 'frost', 'shock', 'thundering']\r\n\r\nconst WEAPON_GREATER_RUNES = [\r\n    'anarchic',\r\n    'axiomatic',\r\n    'greaterCorrosive',\r\n    'greaterDisrupting',\r\n    'greaterFlaming',\r\n    'greaterFrost',\r\n    'greaterShock',\r\n    'greaterThundering',\r\n    'holy',\r\n    'unholy',\r\n]\r\n\r\nexport const mindSmith: Daily<MindGenerics> = {\r\n    key: 'mindsmith',\r\n    item: {\r\n        uuid: 'Compendium.pf2e.feats-srd.juikoiIA0Jy8PboY', // Mind Smith Dedication\r\n    },\r\n    children: [\r\n        {\r\n            slug: 'weapon',\r\n            uuid: MIND_WEAPON_UUID, // Mind Weapon\r\n        },\r\n        {\r\n            slug: 'mental',\r\n            uuid: 'Compendium.pf2e.feats-srd.PccekOihIbRWdDky', // Malleable Mental Forge\r\n        },\r\n        {\r\n            slug: 'runic',\r\n            uuid: 'Compendium.pf2e.feats-srd.2uQbQgz1AbjzcFSp', // Runic Mind Smithing\r\n        },\r\n        {\r\n            slug: 'advanced',\r\n            uuid: 'Compendium.pf2e.feats-srd.fgnfXwFcn9jZlXGD', // Advanced Runic Mind Smithing\r\n        },\r\n    ],\r\n    rows: [\r\n        {\r\n            type: 'alert',\r\n            slug: 'alert',\r\n            message: () => localize('interface.alert.weapon'),\r\n            fix,\r\n            childPredicate: [{ not: 'weapon' }],\r\n        },\r\n        {\r\n            type: 'select',\r\n            slug: 'smith',\r\n            label: () => localize('label.mindsmith'),\r\n            options: WEAPON_DAMAGE_TYPES,\r\n            labelizer: ({ utils }) => utils.damageLabel,\r\n            childPredicate: ['weapon'],\r\n        },\r\n        {\r\n            type: 'select',\r\n            slug: 'mental',\r\n            label: () => localize('label.mentalforge'),\r\n            options: WEAPON_TRAITS,\r\n            labelizer: ({ utils }) => utils.weaponTraitLabel,\r\n            childPredicate: ['weapon', 'mental'],\r\n        },\r\n        {\r\n            type: 'select',\r\n            slug: 'runic',\r\n            label: () => localize('label.runicmind'),\r\n            options: WEAPON_RUNES,\r\n            labelizer: ({ utils }) => utils.weaponPropertyRunesLabel,\r\n            childPredicate: ['weapon', 'runic', { not: 'advanced' }],\r\n            condition: ({ children, utils }) => utils.hasFreePropertySlot(children.weapon as WeaponPF2e),\r\n        },\r\n        {\r\n            type: 'select',\r\n            slug: 'advanced',\r\n            label: () => localize('label.runicmind'),\r\n            options: WEAPON_GREATER_RUNES,\r\n            labelizer: ({ utils }) => utils.weaponPropertyRunesLabel,\r\n            childPredicate: ['weapon', 'advanced'],\r\n            condition: ({ children, utils }) => utils.hasFreePropertySlot(children.weapon as WeaponPF2e),\r\n        },\r\n    ],\r\n    process: ({ children, updateItem, fields, messages, item, utils }) => {\r\n        const weapon = children.weapon as WeaponPF2e | undefined\r\n        if (!weapon) return\r\n\r\n        messages.addGroup('mindsmith')\r\n\r\n        const selected = fields.smith.value as WeaponDamage\r\n        updateItem({ _id: weapon.id, 'system.damage.damageType': selected, 'system.group': WEAPON_GROUPS[selected] })\r\n        messages.add('mindsmith', { selected: utils.damageLabel(selected), uuid: item.uuid, label: 'mindsmith' })\r\n\r\n        if (children.mental) {\r\n            const selected = fields.mental.value as WeaponTrait\r\n            const traits = deepClone(weapon._source.system.traits?.value ?? [])\r\n            if (!traits.includes(selected)) traits.push(selected)\r\n            updateItem({ _id: weapon.id, 'system.traits.value': traits })\r\n            messages.add('mindsmith', {\r\n                selected: utils.weaponTraitLabel(selected),\r\n                uuid: children.mental.uuid,\r\n                label: 'mentalforge',\r\n            })\r\n        }\r\n\r\n        if ((children.advanced || children.runic) && utils.hasFreePropertySlot(weapon)) {\r\n            const child = (children.advanced ?? children.runic) as ItemPF2e\r\n            const freeSlot = utils.getFreePropertyRuneSlot(weapon)\r\n            const field = fields.advanced ?? fields.runic\r\n            const selected = field.value as WeaponPropertyRuneType\r\n\r\n            if (!weapon.system.runes.property.includes(selected)) {\r\n                updateItem({ _id: weapon.id, [`system.${freeSlot}.value`]: selected, [`flags.${MODULE_ID}.runeSlot`]: freeSlot })\r\n                messages.add('mindsmith', {\r\n                    selected: utils.weaponPropertyRunesLabel(selected),\r\n                    uuid: child.uuid,\r\n                    label: 'runicmind',\r\n                })\r\n            }\r\n        }\r\n    },\r\n    rest: ({ item, sourceId, updateItem }) => {\r\n        if (sourceId !== MIND_WEAPON_UUID) return\r\n\r\n        let traits = item._source.system.traits?.value ?? []\r\n        traits = traits.filter(trait => !WEAPON_TRAITS.includes(trait))\r\n        updateItem({ _id: item.id, 'system.traits.value': traits })\r\n\r\n        const runeSlot = getFlag<string>(item, 'runeSlot')\r\n        if (runeSlot) {\r\n            updateItem({ _id: item.id, [`system.${runeSlot}.value`]: null, [`flags.${MODULE_ID}.-=runeSlot`]: true })\r\n        }\r\n    },\r\n}\r\n\r\nasync function fix({ actor }: DailyValueArgs<MindGenerics>) {\r\n    const localize = subLocalize('dialog.weapon')\r\n\r\n    let content = localize('flavor')\r\n\r\n    for (const key of ['0', '1', '2', '3']) {\r\n        const label = localize(`option.${key}`)\r\n        content += `<label><input type=\"radio\" name=\"type\" value=\"${key}\">${label}</label>`\r\n    }\r\n\r\n    const weapon = await Dialog.wait(\r\n        {\r\n            title: localize('title'),\r\n            content,\r\n            buttons: {\r\n                yes: {\r\n                    icon: '<i class=\"fas fa-save\"></i>',\r\n                    label: localize('accept'),\r\n                    callback: onWeaponSelected,\r\n                },\r\n                no: {\r\n                    icon: '<i class=\"fas fa-times\"></i>',\r\n                    label: localize('cancel'),\r\n                    callback: () => null,\r\n                },\r\n            },\r\n            close: () => null,\r\n        },\r\n        {},\r\n        { id: 'pf2e-dailies-weapon', width: 600 }\r\n    )\r\n\r\n    if (weapon) {\r\n        console.log('before')\r\n        await actor.createEmbeddedDocuments('Item', [weapon])\r\n        console.log('after')\r\n        return true\r\n    }\r\n\r\n    return false\r\n}\r\n\r\nasync function onWeaponSelected(html: JQuery) {\r\n    const localize = subLocalize('dialog.weapon')\r\n\r\n    const selection = html.find('[name=type]:checked').val() as keyof typeof WEAPON_BASE_TYPES\r\n    if (!selection) {\r\n        localize.warn('error.noSelection')\r\n        return\r\n    }\r\n\r\n    const weapon = (await fromUuid<WeaponPF2e>(MIND_WEAPON_UUID))?.toObject()\r\n    if (!weapon) {\r\n        localize.warn('error.missing')\r\n        return\r\n    }\r\n\r\n    const stats = WEAPON_BASE_TYPES[selection]\r\n\r\n    setProperty(weapon, 'system.damage.die', stats.die)\r\n    setProperty(weapon, 'system.traits.value', stats.traits.slice())\r\n    setProperty(weapon, 'system.usage.value', stats.usage)\r\n\r\n    return weapon\r\n}\r\n","import { findItemWithSourceId } from '@utils/foundry/item'\r\n\r\nconst RATION_UUID = 'Compendium.pf2e.equipment-srd.L9ZV076913otGtiB'\r\n\r\nexport function getRations(actor: CharacterPF2e) {\r\n    return findItemWithSourceId(actor, RATION_UUID) as ConsumablePF2e | undefined\r\n}\r\n","import { getSourceId, includesSourceId } from '@utils/foundry/flags'\r\n\r\ntype ActorItemTypes<A extends Actor> = (keyof A['itemTypes'])[]\r\n\r\nfunction getItemSourceIdCondition(sourceId: ItemUUID | ItemUUID[]) {\r\n    return Array.isArray(sourceId)\r\n        ? (item: Item) => includesSourceId(item, sourceId)\r\n        : (item: Item) => getSourceId(item) === sourceId\r\n}\r\n\r\nexport function getItems<A extends Actor, I extends Item = CollectionValue<A['items']>>(actor: A, itemTypes?: ActorItemTypes<A>) {\r\n    return (itemTypes ? itemTypes.flatMap(type => actor.itemTypes[type as string]) : actor.items) as Embedded<I>[]\r\n}\r\n\r\nexport function findItemWithSourceId<A extends Actor, I extends Item = CollectionValue<A['items']>>(\r\n    actor: A,\r\n    sourceId: ItemUUID,\r\n    itemTypes?: ActorItemTypes<A>\r\n) {\r\n    return getItems<A, I>(actor, itemTypes).find(getItemSourceIdCondition(sourceId))\r\n}\r\n\r\nexport function hasItemWithSourceId<A extends Actor, I extends Item = CollectionValue<A['items']>>(\r\n    actor: A,\r\n    sourceId: ItemUUID | ItemUUID[],\r\n    itemTypes?: ActorItemTypes<A>\r\n) {\r\n    return getItems<A, I>(actor, itemTypes).some(getItemSourceIdCondition(sourceId))\r\n}\r\n\r\nexport function filterItemsWithSourceId<A extends Actor, I extends Item = CollectionValue<A['items']>>(\r\n    actor: A,\r\n    sourceId: ItemUUID | ItemUUID[],\r\n    itemTypes?: ActorItemTypes<A>\r\n) {\r\n    return getItems<A, I>(actor, itemTypes).filter(getItemSourceIdCondition(sourceId))\r\n}\r\n","type ResistanceGenerics = ['resistance', {}, '']\r\n\r\nexport function createResistancelDaily(\r\n    key: string,\r\n    uuid: ItemUUID,\r\n    resistances: string[],\r\n    resistance: number | 'half' | 'level',\r\n    label?: string,\r\n    random?: boolean\r\n) {\r\n    const daily: Daily<ResistanceGenerics> = {\r\n        key,\r\n        label,\r\n        item: {\r\n            uuid,\r\n        },\r\n        rows: [\r\n            {\r\n                type: random ? 'random' : 'select',\r\n                slug: 'resistance',\r\n                options: resistances,\r\n                labelizer: ({ utils }) => utils.resistanceLabel,\r\n            },\r\n        ],\r\n        process: async ({ utils, fields, actor, addRule, messages }) => {\r\n            const type = random ? await utils.randomOption(resistances) : fields.resistance.value\r\n            const value =\r\n                typeof resistance === 'number' ? resistance : resistance === 'half' ? utils.halfLevelValue(actor) : actor.level\r\n            const rule = utils.createResistanceRuleElement({ type, value })\r\n            addRule(rule)\r\n            messages.add('resistances', { uuid, selected: utils.resistanceLabel(type, value), label, random })\r\n        },\r\n    }\r\n    return daily\r\n}\r\n","type SavantRow = 'first' | 'second' | 'third' | 'fourth'\r\ntype SavantCustom = Record<SavantRow, { level: OneToTen; condition: boolean }>\r\ntype SavantGenerics = [SavantRow, SavantCustom, '']\r\n\r\nexport const scrollSavant: Daily<SavantGenerics> = {\r\n    key: 'savant',\r\n    item: {\r\n        uuid: 'Compendium.pf2e.feats-srd.u5DBg0LrBUKP0JsJ', // Scroll Savant\r\n    },\r\n    prepare: ({ actor }) => {\r\n        const { maxSlot, maxTradition } = getSpellcastingTraditionDetails(actor, 'arcane')\r\n\r\n        return {\r\n            first: { level: maxSlot - 2, condition: true },\r\n            second: { level: maxSlot - 3, condition: true },\r\n            third: { level: maxSlot - 4, condition: maxTradition >= 3 && maxSlot >= 5 },\r\n            fourth: { level: maxSlot - 5, condition: maxTradition >= 4 && maxSlot >= 6 },\r\n        } as SavantCustom\r\n    },\r\n    rows: (['first', 'second', 'third', 'fourth'] as const).map(rowName => {\r\n        const row: DailyRowDrop<SavantGenerics> = {\r\n            type: 'drop',\r\n            slug: rowName,\r\n            label: ({ custom }) => `PF2E.SpellLevel${custom[rowName].level}`,\r\n            filter: {\r\n                type: 'spell',\r\n                search: ({ custom }) => ({\r\n                    category: ['spell'],\r\n                    traditions: ['arcane'],\r\n                    level: custom[rowName].level,\r\n                }),\r\n            },\r\n            condition: ({ custom }) => custom[rowName].condition,\r\n        }\r\n        return row\r\n    }),\r\n    process: async ({ utils, fields, custom, addItem, messages }) => {\r\n        for (const field of Object.values(fields)) {\r\n            const uuid = field.uuid!\r\n            const source = await utils.createSpellScrollSource({ uuid, level: custom[field.row].level })\r\n            addItem(source)\r\n            messages.add('scrolls', { uuid, label: source.name })\r\n        }\r\n    },\r\n}\r\n\r\nfunction getSpellcastingTraditionDetails(actor: CharacterPF2e, tradition: MagicTradition) {\r\n    let maxSlot: OneToTen = 1\r\n    let maxTradition: ZeroToFour = 0\r\n\r\n    for (const entry of actor.spellcasting) {\r\n        if ('pf2e-staves' in entry.flags) continue // we skip staff entries\r\n\r\n        const slots = entry.system.slots\r\n        for (const key in slots) {\r\n            const slot = slots[key as SlotKey]\r\n            if (slot.max) maxSlot = Math.max(maxSlot, Number(key.slice(4))) as OneToTen\r\n        }\r\n\r\n        if (entry.tradition === tradition) maxTradition = Math.max(maxTradition, entry.rank) as ZeroToFour\r\n    }\r\n\r\n    return { maxSlot: Math.min(maxSlot, 10) as OneToTen, maxTradition }\r\n}\r\n","type SkillGenerics = ['skill', {}, '']\r\n\r\nexport function createTrainedSkillDaily(key: string, uuid: ItemUUID, label?: string) {\r\n    const daily: Daily<SkillGenerics> = {\r\n        key,\r\n        label,\r\n        item: {\r\n            uuid,\r\n        },\r\n        rows: [\r\n            {\r\n                type: 'combo',\r\n                slug: 'skill',\r\n                options: ({ actor, utils }) => {\r\n                    const actorSkills = actor.skills\r\n                    return utils.skillNames.filter(x => actorSkills[x]!.rank! < 1)\r\n                },\r\n                labelizer: ({ utils }) => utils.skillLabel,\r\n            },\r\n        ],\r\n        process: ({ fields, addItem, addRule, utils, messages }) => {\r\n            let value = fields.skill.value\r\n\r\n            if (fields.skill.input === 'true') {\r\n                const source = utils.createLoreSource({ name: value, rank: 1 })\r\n                addItem(source)\r\n            } else {\r\n                const source = utils.createSkillRuleElement({ skill: value, value: 1 })\r\n                value = utils.skillLabel(value as SkillLongForm)\r\n                addRule(source)\r\n            }\r\n\r\n            messages.add('skills', { uuid, selected: value, label })\r\n        },\r\n    }\r\n    return daily\r\n}\r\n\r\nexport function createTrainedLoreDaily(key: string, uuid: ItemUUID, label?: string) {\r\n    const daily: Daily<SkillGenerics> = {\r\n        key,\r\n        label,\r\n        item: {\r\n            uuid,\r\n        },\r\n        rows: [\r\n            {\r\n                type: 'input',\r\n                slug: 'skill',\r\n            },\r\n        ],\r\n        process: ({ addItem, utils, fields, messages }) => {\r\n            const value = fields.skill.value\r\n            const source = utils.createLoreSource({ name: value, rank: 1 })\r\n            addItem(source)\r\n            messages.add('skills', { uuid, selected: value, label })\r\n        },\r\n    }\r\n    return daily\r\n}\r\n","type TomeRow = 'first' | 'second'\r\ntype TomeChild = 'adept' | 'second' | 'intense' | 'paragon'\r\ntype TomeCustom = Record<TomeRow, { rank: OneToFour; options: string[] }>\r\ntype TomeGenerics = [TomeRow, TomeCustom, TomeChild]\r\n\r\nexport const thaumaturgeTome: Daily<TomeGenerics> = {\r\n    key: 'tome',\r\n    item: {\r\n        uuid: 'Compendium.pf2e.classfeatures.MyN1cQgE0HsLF20e', // Tome\r\n    },\r\n    children: [\r\n        {\r\n            slug: 'adept',\r\n            uuid: 'Compendium.pf2e.classfeatures.Obm4ItMIIr0whYeO', // Implement Adept\r\n            condition: createChildCondition('adept'),\r\n        },\r\n        {\r\n            slug: 'second',\r\n            uuid: 'Compendium.pf2e.classfeatures.ZEUxZ4Ta1kDPHiq5', // Second Adept\r\n            condition: createChildCondition('adept'),\r\n        },\r\n        {\r\n            slug: 'intense',\r\n            uuid: 'Compendium.pf2e.feats-srd.yRRM1dsY6jakEMaC', // Intense Implement\r\n        },\r\n        {\r\n            slug: 'paragon',\r\n            uuid: 'Compendium.pf2e.classfeatures.QEtgbY8N2V4wTbsI', // Implement Paragon\r\n            condition: createChildCondition('paragon'),\r\n        },\r\n    ],\r\n    prepare: ({ utils, actor, children }) => {\r\n        const skillNames = utils.skillNames\r\n        const actorLevel = actor.level\r\n        const actorSkills = actor.skills as Record<SkillLongForm, { rank: ZeroToFour }>\r\n\r\n        const custom: TomeCustom = {\r\n            first: { options: [], rank: 1 },\r\n            second: { options: [], rank: 1 },\r\n        }\r\n\r\n        // Implement Paragon\r\n        if (children.paragon) {\r\n            const skills = skillNames.filter(x => actorSkills[x].rank < 4)\r\n            custom.first = { rank: 4, options: skills }\r\n            custom.second = { rank: 4, options: skills }\r\n        }\r\n        // Intense Implement or Second Adept or Implement Adept\r\n        else if (children.intense || children.adept || children.second) {\r\n            const masters = skillNames.filter(x => actorSkills[x].rank < 3)\r\n\r\n            if (actorLevel >= 9) {\r\n                custom.first = { rank: 3, options: masters }\r\n                custom.second = { rank: 3, options: masters }\r\n            } else {\r\n                const experts = skillNames.filter(x => actorSkills[x].rank < 2)\r\n                custom.first = { rank: 2, options: experts }\r\n                custom.second = { rank: 3, options: masters }\r\n            }\r\n        }\r\n        // Tome\r\n        else {\r\n            if (actorLevel >= 5) {\r\n                const experts = skillNames.filter(x => actorSkills[x].rank < 2)\r\n                custom.first = { rank: 2, options: experts }\r\n                custom.second = { rank: 2, options: experts }\r\n            } else if (actorLevel >= 3) {\r\n                const trained = skillNames.filter(x => actorSkills[x].rank < 1)\r\n                const experts = skillNames.filter(x => actorSkills[x].rank < 2)\r\n                custom.first = { rank: 1, options: trained }\r\n                custom.second = { rank: 2, options: experts }\r\n            } else {\r\n                const trained = skillNames.filter(x => actorSkills[x].rank < 1)\r\n                custom.first = { rank: 1, options: trained }\r\n                custom.second = { rank: 1, options: trained }\r\n            }\r\n        }\r\n\r\n        return custom\r\n    },\r\n    rows: (['first', 'second'] as const).map(rowName => {\r\n        const row: DailyRow<TomeGenerics> = {\r\n            type: 'combo',\r\n            slug: rowName,\r\n            label: ({ custom, utils }) => utils.proficiencyLabel(custom[rowName].rank),\r\n            options: ({ custom }) => custom[rowName].options,\r\n            labelizer: ({ utils }) => utils.skillLabel,\r\n        }\r\n        return row\r\n    }),\r\n    process: ({ custom, fields, utils, messages, addItem, addRule }) => {\r\n        messages.addGroup('tome', 65)\r\n\r\n        for (const rowName of ['first', 'second'] as const) {\r\n            const rank = custom[rowName].rank\r\n            let value = fields[rowName].value\r\n\r\n            if (fields[rowName].input === 'true') {\r\n                const source = utils.createLoreSource({ name: value, rank })\r\n                addItem(source)\r\n            } else {\r\n                const source = utils.createSkillRuleElement({ skill: value, value: rank })\r\n                value = utils.skillLabel(value)\r\n                addRule(source)\r\n            }\r\n\r\n            messages.add('tome', { label: utils.proficiencyLabel(rank), selected: value })\r\n        }\r\n    },\r\n}\r\n\r\nfunction createChildCondition(option: 'adept' | 'paragon') {\r\n    return function ({ item, utils }: BaseDailyValueArgs<TomeGenerics>) {\r\n        return utils.getChoiSetRuleSelection(item, option) === 'tome'\r\n    }\r\n}\r\n","export const AsyncFunction = async function () {}.constructor as ConstructorOf<(...args: any[]) => Promise<any>>\r\n","import { getSourceId } from '@utils/foundry/flags'\r\nimport { error } from '@utils/foundry/notification'\r\nimport { getSetting } from '@utils/foundry/settings'\r\nimport { utils } from './api'\r\nimport { TricksterAce } from './data/ace'\r\nimport { createScrollChain } from './data/chain'\r\nimport { createFeatDaily } from './data/feat'\r\nimport { combatFlexibility } from './data/flexibility'\r\nimport { createLanguageDaily } from './data/language'\r\nimport { mindSmith } from './data/mind'\r\nimport { getRations } from './data/rations'\r\nimport { createResistancelDaily } from './data/resistance'\r\nimport { scrollSavant } from './data/savant'\r\nimport { createTrainedLoreDaily, createTrainedSkillDaily } from './data/skill'\r\nimport { thaumaturgeTome } from './data/tome'\r\nimport { AsyncFunction } from '@utils/function'\r\n\r\nconst BUILTINS = [\r\n    thaumaturgeTome,\r\n    createTrainedSkillDaily('longevity', 'Compendium.pf2e.feats-srd.WoLh16gyDp8y9WOZ'), // Ancestral Longevity\r\n    createTrainedSkillDaily('ageless', 'Compendium.pf2e.feats-srd.wylnETwIz32Au46y'), // Ageless Spirit\r\n    createTrainedSkillDaily('memories', 'Compendium.pf2e.feats-srd.ptEOt3lqjxUnAW62'), // Ancient Memories\r\n    createTrainedSkillDaily('studies', 'Compendium.pf2e.feats-srd.9bgl6qYWKHzqWZj0'), // Flexible Studies\r\n    createTrainedLoreDaily('study', 'Compendium.pf2e.feats-srd.aLJsBBZzlUK3G8MW'), // Quick Study\r\n    createLanguageDaily('linguistics', 'Compendium.pf2e.feats-srd.eCWQU16hRLfN1KaX'), // Ancestral Linguistics\r\n    createLanguageDaily('borts', 'Compendium.pf2e.equipment-srd.iS7hAQMAaThHYE8g'), // Bort's Blessing\r\n    createResistancelDaily(\r\n        'elementalist',\r\n        'Compendium.pf2e.feats-srd.tx9pkrpmtqe4FnvS',\r\n        ['air', 'earth', 'fire', 'water'],\r\n        'half',\r\n        'elementalist'\r\n    ), // Elementalist Dedication\r\n    createResistancelDaily(\r\n        'ganzi',\r\n        'Compendium.pf2e.heritages.3reGfXH0S82hM7Gp',\r\n        ['acid', 'electricity', 'sonic'],\r\n        'half',\r\n        'ganzi',\r\n        true\r\n    ), // Ganzi\r\n    createFeatDaily('metamagical', 'Compendium.pf2e.classfeatures.89zWKD2CN7nRu2xp', {\r\n        feattype: ['class'],\r\n        traits: { values: ['metamagic', 'wizard'], conjunction: 'and' },\r\n        level: 'half',\r\n    }), // Metamagical Experimentation\r\n    combatFlexibility,\r\n    scrollSavant,\r\n    createScrollChain('esoterica', [\r\n        'Compendium.pf2e.feats-srd.OqObuRB8oVSAEKFR', // Scroll Esoterica\r\n        'Compendium.pf2e.feats-srd.nWd7m0yRcIEVUy7O', // Elaborate Scroll Esoterica\r\n        'Compendium.pf2e.feats-srd.LHjPTV5vP3MOsPPJ', // Grand Scroll Esoterica\r\n    ]),\r\n    createScrollChain('trickster', [\r\n        'Compendium.pf2e.feats-srd.ROAUR1GhC19Pjk9C', // Basic Scroll Cache\r\n        'Compendium.pf2e.feats-srd.UrOj9TROtn8nuxPf', // Expert Scroll Cache\r\n        'Compendium.pf2e.feats-srd.lIg5Gzz7W70jfbk1', // Master Scroll Cache\r\n    ]),\r\n    TricksterAce,\r\n    mindSmith,\r\n] as unknown as Daily[]\r\n\r\ntype DailiesUUIDS = Map<ItemUUID, { daily: Daily; index?: number; condition?: BaseDailyConditionFunction }>\r\n\r\nconst BUILTINS_UUIDS: DailiesUUIDS = parseDailies(BUILTINS, 'dailies')\r\nconst UUIDS: DailiesUUIDS = new Map()\r\n\r\nfunction parseDailies(dailies: Daily[], prefix: 'dailies' | 'custom') {\r\n    const uuids: DailiesUUIDS = new Map()\r\n\r\n    for (const original of dailies) {\r\n        const daily = deepClone(original)\r\n\r\n        try {\r\n            const keyWithPrefix = `${prefix}.${daily.key}`\r\n\r\n            uuids.set(daily.item.uuid, { daily, condition: daily.item.condition })\r\n\r\n            daily.key = keyWithPrefix\r\n\r\n            if (daily.children) {\r\n                for (let i = 0; i < daily.children.length; i++) {\r\n                    const { uuid, condition } = daily.children[i]!\r\n                    uuids.set(uuid, { daily, index: i, condition })\r\n                }\r\n            }\r\n        } catch (err) {\r\n            error('error.unexpected')\r\n            console.error(err)\r\n            console.error(`The error occured during data gathering of ${prefix}.${daily.key}`)\r\n        }\r\n    }\r\n\r\n    return uuids\r\n}\r\n\r\nexport async function parseCustomDailies() {\r\n    UUIDS.clear()\r\n\r\n    const CUSTOM_DAILIES: Daily[] = []\r\n\r\n    const customs = getSetting<SavedCustomDaily[]>('customDailies')\r\n    for (const { key, code } of customs) {\r\n        try {\r\n            const fn = new AsyncFunction(code)\r\n            const daily = await fn()\r\n            CUSTOM_DAILIES.push(daily)\r\n        } catch (err) {\r\n            error('error.unexpected')\r\n            console.error(err)\r\n            console.error(`The error occured during call of custom function for ${key}`)\r\n        }\r\n    }\r\n\r\n    for (const [uuid, daily] of BUILTINS_UUIDS.entries()) {\r\n        UUIDS.set(uuid, daily)\r\n    }\r\n\r\n    const CUSTOM_UUIDS = parseDailies(CUSTOM_DAILIES, 'custom')\r\n    for (const [uuid, daily] of CUSTOM_UUIDS.entries()) {\r\n        UUIDS.set(uuid, daily)\r\n    }\r\n}\r\n\r\nexport function getDailies(actor: CharacterPF2e) {\r\n    const dailies: Record<string, ReturnedDaily> = {}\r\n\r\n    for (const item of actor.items) {\r\n        const sourceId = getSourceId(item)\r\n        if (!sourceId || (item.isOfType('physical') && item.isInvested === false)) continue\r\n\r\n        const entry = UUIDS.get(sourceId)\r\n        if (!entry) continue\r\n\r\n        const { daily, index, condition } = entry\r\n        try {\r\n            if (typeof condition === 'function' && !condition({ actor, item, utils })) continue\r\n\r\n            dailies[daily.key] ??= deepClone(daily) as ReturnedDaily\r\n\r\n            if (index === undefined) {\r\n                dailies[daily.key]!.item = item\r\n            } else {\r\n                dailies[daily.key]!.children![index]!.item = item\r\n            }\r\n        } catch (err) {\r\n            error('error.unexpected')\r\n            console.error(err)\r\n            console.error(`The error occured during data gathering of ${daily.key}`)\r\n        }\r\n    }\r\n\r\n    return Object.values(dailies).filter(daily => daily.item && daily.item instanceof Item)\r\n}\r\n\r\nexport function getDailyFromSourceId(sourceId: ItemUUID) {\r\n    return UUIDS.get(sourceId)?.daily\r\n}\r\n\r\nexport function hasAnyDaily(actor: CharacterPF2e) {\r\n    return actor.familiar || getRations(actor)?.uses.value || getDailies(actor).length\r\n}\r\n","/** Short form of type and non-null check */\r\nfunction isObject<T extends object>(value: unknown): value is DeepPartial<T>\r\nfunction isObject<T extends string>(value: unknown): value is { [K in T]?: unknown }\r\nfunction isObject(value: unknown): boolean {\r\n    return typeof value === 'object' && value !== null\r\n}\r\n\r\n/**\r\n * Encapsulates logic to determine if a modifier should be active or not for a specific roll based\r\n * on a list of string values. This will often be based on traits, but that is not required - sneak\r\n * attack could be an option that is not a trait.\r\n * @category PF2\r\n */\r\nexport class PredicatePF2e extends Array<PredicateStatement> {\r\n    /** Is the predicate data structurally valid? */\r\n    readonly isValid: boolean\r\n\r\n    constructor(...statements: PredicateStatement[] | [PredicateStatement[]]) {\r\n        if (Array.isArray(statements[0])) {\r\n            super(...statements[0])\r\n        } else {\r\n            super(...(statements as PredicateStatement[]))\r\n        }\r\n        this.isValid = PredicatePF2e.isValid(this)\r\n    }\r\n\r\n    /** Structurally validate the predicates */\r\n    static isValid(statements: unknown): statements is PredicateStatement[] {\r\n        return this.isArray(statements)\r\n    }\r\n\r\n    /** Is this an array of predicatation statements? */\r\n    static override isArray(statements: unknown): statements is PredicateStatement[] {\r\n        return super.isArray(statements) && statements.every(s => StatementValidator.isStatement(s))\r\n    }\r\n\r\n    /** Test if the given predicate passes for the given list of options. */\r\n    static test(predicate: PredicateStatement[] = [], options: Set<string> | string[]): boolean {\r\n        return predicate instanceof PredicatePF2e ? predicate.test(options) : new PredicatePF2e(...predicate).test(options)\r\n    }\r\n\r\n    /** Create a predicate from unknown data, with deprecation support for legacy objects */\r\n    static create(data: unknown, warn = false): PredicatePF2e {\r\n        if (data instanceof PredicatePF2e) return data.clone()\r\n        if (Array.isArray(data)) return new PredicatePF2e(data)\r\n        if (isObject<OldRawPredicate>(data)) {\r\n            if (warn) {\r\n                foundry.utils.logCompatibilityWarning('Predicate data must be an array', {\r\n                    mode: CONST.COMPATIBILITY_MODES.WARNING,\r\n                    since: '4.2.0',\r\n                    until: '4.5.0',\r\n                })\r\n            }\r\n\r\n            return new PredicatePF2e(convertLegacyData(data))\r\n        }\r\n\r\n        return new PredicatePF2e()\r\n    }\r\n\r\n    /** Test this predicate against a domain of discourse */\r\n    test(options: Set<string> | string[]): boolean {\r\n        if (this.length === 0) {\r\n            return true\r\n        } else if (!this.isValid) {\r\n            console.error('PF2e System | The provided predicate set is malformed.')\r\n            return false\r\n        }\r\n\r\n        const domain = options instanceof Set ? options : new Set(options)\r\n        return this.every(s => this.isTrue(s, domain))\r\n    }\r\n\r\n    toObject(): RawPredicate {\r\n        return deepClone([...this])\r\n    }\r\n\r\n    clone(): PredicatePF2e {\r\n        return new PredicatePF2e(this.toObject())\r\n    }\r\n\r\n    /** Is the provided statement true? */\r\n    private isTrue(statement: PredicateStatement, domain: Set<string>): boolean {\r\n        return (\r\n            (typeof statement === 'string' && domain.has(statement)) ||\r\n            (StatementValidator.isBinaryOp(statement) && this.testBinaryOp(statement, domain)) ||\r\n            (StatementValidator.isCompound(statement) && this.testCompound(statement, domain))\r\n        )\r\n    }\r\n\r\n    private testBinaryOp(statement: BinaryOperation, domain: Set<string>): boolean {\r\n        if ('eq' in statement) {\r\n            return domain.has(`${statement.eq[0]}:${statement.eq[1]}`)\r\n        } else {\r\n            const operator = Object.keys(statement)[0]\r\n\r\n            // Allow for tests of partial statements against numeric values\r\n            // E.g., `{ \"gt\": [\"actor:level\", 5] }` would match against \"actor:level:6\" and \"actor:level:7\"\r\n            const [left, right] = Object.values(statement)[0]\r\n            const domainArray = Array.from(domain)\r\n            const leftValues =\r\n                typeof left === 'number' || !Number.isNaN(Number(left))\r\n                    ? [Number(left)]\r\n                    : domainArray.flatMap(d => (d.startsWith(left) ? Number(/:(-?\\d+)$/.exec(d)?.[1]) : []))\r\n            const rightValues =\r\n                typeof right === 'number' || !Number.isNaN(Number(right))\r\n                    ? [Number(right)]\r\n                    : domainArray.flatMap(d => (d.startsWith(right) ? Number(/:(-?\\d+)$/.exec(d)?.[1]) : []))\r\n\r\n            switch (operator) {\r\n                case 'gt':\r\n                    return leftValues.some(l => rightValues.every(r => l > r))\r\n                case 'gte':\r\n                    return leftValues.some(l => rightValues.every(r => l >= r))\r\n                case 'lt':\r\n                    return leftValues.some(l => rightValues.every(r => l < r))\r\n                case 'lte':\r\n                    return leftValues.some(l => rightValues.every(r => l <= r))\r\n                default:\r\n                    console.warn('PF2e System | Malformed binary operation encounter')\r\n                    return false\r\n            }\r\n        }\r\n    }\r\n\r\n    /** Is the provided compound statement true? */\r\n    private testCompound(statement: Exclude<PredicateStatement, Atom>, domain: Set<string>): boolean {\r\n        return (\r\n            ('and' in statement && statement.and.every(subProp => this.isTrue(subProp, domain))) ||\r\n            ('nand' in statement && !statement.nand.every(subProp => this.isTrue(subProp, domain))) ||\r\n            ('or' in statement && statement.or.some(subProp => this.isTrue(subProp, domain))) ||\r\n            ('nor' in statement && !statement.nor.some(subProp => this.isTrue(subProp, domain))) ||\r\n            ('not' in statement && !this.isTrue(statement.not, domain)) ||\r\n            ('if' in statement && !(this.isTrue(statement.if, domain) && !this.isTrue(statement.then, domain)))\r\n        )\r\n    }\r\n}\r\n\r\nclass StatementValidator {\r\n    static isStatement(statement: unknown): statement is PredicateStatement {\r\n        return statement instanceof Object\r\n            ? this.isCompound(statement) || this.isBinaryOp(statement)\r\n            : typeof statement === 'string'\r\n            ? this.isAtomic(statement)\r\n            : false\r\n    }\r\n\r\n    static isAtomic(statement: unknown): statement is Atom {\r\n        return (typeof statement === 'string' && statement.length > 0) || this.isBinaryOp(statement)\r\n    }\r\n\r\n    private static binaryOperators = new Set(['eq', 'gt', 'gte', 'lt', 'lte'])\r\n\r\n    static isBinaryOp(statement: unknown): statement is BinaryOperation {\r\n        if (!isObject(statement)) return false\r\n        const entries = Object.entries(statement)\r\n        if (entries.length > 1) return false\r\n        const [operator, operands]: [string, unknown] = entries[0]\r\n        return (\r\n            this.binaryOperators.has(operator) &&\r\n            Array.isArray(operands) &&\r\n            operands.length === 2 &&\r\n            typeof operands[0] === 'string' &&\r\n            ['string', 'number'].includes(typeof operands[1])\r\n        )\r\n    }\r\n\r\n    static isCompound(statement: unknown): statement is CompoundStatement {\r\n        return (\r\n            isObject(statement) &&\r\n            (this.isAnd(statement) ||\r\n                this.isOr(statement) ||\r\n                this.isNand(statement) ||\r\n                this.isNor(statement) ||\r\n                this.isNot(statement) ||\r\n                this.isIf(statement))\r\n        )\r\n    }\r\n\r\n    static isAnd(statement: { and?: unknown }): statement is Conjunction {\r\n        return (\r\n            Object.keys(statement).length === 1 &&\r\n            Array.isArray(statement.and) &&\r\n            statement.and.every(subProp => this.isStatement(subProp))\r\n        )\r\n    }\r\n\r\n    static isNand(statement: { nand?: unknown }): statement is AlternativeDenial {\r\n        return (\r\n            Object.keys(statement).length === 1 &&\r\n            Array.isArray(statement.nand) &&\r\n            statement.nand.every(subProp => this.isStatement(subProp))\r\n        )\r\n    }\r\n\r\n    static isOr(statement: { or?: unknown }): statement is Disjunction {\r\n        return (\r\n            Object.keys(statement).length === 1 &&\r\n            Array.isArray(statement.or) &&\r\n            statement.or.every(subProp => this.isStatement(subProp))\r\n        )\r\n    }\r\n\r\n    static isNor(statement: { nor?: unknown }): statement is JointDenial {\r\n        return (\r\n            Object.keys(statement).length === 1 &&\r\n            Array.isArray(statement.nor) &&\r\n            statement.nor.every(subProp => this.isStatement(subProp))\r\n        )\r\n    }\r\n\r\n    static isNot(statement: { not?: unknown }): statement is Negation {\r\n        return Object.keys(statement).length === 1 && !!statement.not && this.isStatement(statement.not)\r\n    }\r\n\r\n    static isIf(statement: { if?: unknown; then?: unknown }): statement is Conditional {\r\n        return Object.keys(statement).length === 2 && this.isStatement(statement.if) && this.isStatement(statement.then)\r\n    }\r\n}\r\n\r\nfunction convertLegacyData(predicate: OldRawPredicate): RawPredicate {\r\n    const keys = Object.keys(predicate)\r\n    if (keys.length === 0) return []\r\n    if (keys.length === 1 && Array.isArray(predicate.all)) {\r\n        return deepClone(predicate.all)\r\n    }\r\n    if (keys.length === 1 && Array.isArray(predicate.any) && predicate.any.length === 1) {\r\n        return deepClone(predicate.any)\r\n    }\r\n\r\n    return deepClone(\r\n        [\r\n            predicate.all ?? [],\r\n            Array.isArray(predicate.any) ? { or: predicate.any } : [],\r\n            Array.isArray(predicate.not)\r\n                ? predicate.not.length === 1\r\n                    ? { not: predicate.not[0]! }\r\n                    : { nor: predicate.not }\r\n                : [],\r\n        ].flat()\r\n    )\r\n}\r\n","import { DailiesInterface } from '@apps/interface'\r\nimport { utils } from '@src/api'\r\nimport { getFlag } from '@utils/foundry/flags'\r\nimport { hasLocalization, localize } from '@utils/foundry/localize'\r\nimport { PredicatePF2e } from '@utils/pf2e/predicate'\r\nimport { capitalize } from '@utils/string'\r\n\r\nconst templateOrders: Record<DailyRowType, number> = {\r\n    select: 100,\r\n    combo: 80,\r\n    random: 60,\r\n    alert: 40,\r\n    input: 20,\r\n    drop: 0,\r\n}\r\n\r\nexport async function getTemplate(\r\n    this: DailiesInterface,\r\n    { children = [], key, item, prepare, label, rows = [] }: ReturnedDaily\r\n) {\r\n    const actor = this.actor\r\n    const saved = (this.saved[key] = getFlag<DailySaved>(actor, key) ?? {})\r\n    const rowsObj: Record<string, DailyRow> = (this.rows[key] = {})\r\n    const childrenObj = (this.children[key] = children.reduce((children, { slug, item }) => {\r\n        children[slug] = item\r\n        return children\r\n    }, {} as DailyValueArgs['children']))\r\n\r\n    const prepareArgs: DailyPrepareArgs = {\r\n        actor,\r\n        item,\r\n        children: childrenObj,\r\n        utils,\r\n    }\r\n\r\n    const custom = (this.custom[key] = (prepare && (await prepare(prepareArgs))) || {})\r\n\r\n    const dailyArgs = (this.dailyArgs[key] = {\r\n        ...prepareArgs,\r\n        custom,\r\n    })\r\n\r\n    let groupLabel = await getProcessedValue(label, dailyArgs)\r\n    const labeled = groupLabel ? `label.${groupLabel}` : key.startsWith('dailies.') ? `label.${key.slice(8)}` : undefined\r\n    if (labeled && hasLocalization(labeled)) groupLabel = localize(labeled)\r\n\r\n    const predicates = (this.predicate[key] = children.filter(child => child.item).map(child => child.slug))\r\n\r\n    const template: DailyTemplate = {\r\n        label: groupLabel ? game.i18n.localize(groupLabel) : item.name,\r\n        rows: [],\r\n    }\r\n\r\n    for (const row of rows) {\r\n        rowsObj[row.slug] = row\r\n\r\n        const { type, slug, childPredicate = [], condition, label, save } = row\r\n\r\n        if (childPredicate.length && !PredicatePF2e.test(childPredicate, predicates)) continue\r\n        if (condition && !(await condition(dailyArgs))) continue\r\n\r\n        const savedRow = save === false || type === 'random' ? undefined : saved[slug]\r\n        const rowLabel = await getProcessedValue(label, dailyArgs)\r\n        const value =\r\n            savedRow === undefined\r\n                ? ''\r\n                : typeof savedRow !== 'object'\r\n                ? savedRow\r\n                : 'name' in savedRow\r\n                ? savedRow.name\r\n                : savedRow.selected\r\n\r\n        const rowTemplate: DailyRowTemplate = {\r\n            label: rowLabel ? game.i18n.localize(rowLabel) : '',\r\n            value,\r\n            order: templateOrders[type],\r\n            data: {\r\n                type,\r\n                daily: key,\r\n                row: slug,\r\n            },\r\n        }\r\n\r\n        if (isComboRow(row) || isSelectRow(row) || isRandomRow(row)) {\r\n            const tmp = (await getProcessedValue(row.options, dailyArgs)) ?? []\r\n            if (type !== 'combo' && !tmp.length) continue\r\n\r\n            const labelize =\r\n                (typeof row.labelizer === 'function' && row.labelizer(dailyArgs)) || ((value: string) => capitalize(value))\r\n            rowTemplate.options = tmp.map(value => (typeof value === 'string' ? { value, label: labelize(value) } : value))\r\n\r\n            if (isComboRow(row)) {\r\n                rowTemplate.selected = rowTemplate.value\r\n                rowTemplate.data.input = (savedRow as DailySavedCombo | undefined)?.input ?? true\r\n\r\n                if (!rowTemplate.data.input && tmp.includes(rowTemplate.selected)) {\r\n                    rowTemplate.value = labelize(rowTemplate.selected)\r\n                }\r\n            }\r\n        } else if (isDropRow(row)) {\r\n            rowTemplate.data.uuid = (savedRow as DailySavedDrop | undefined)?.uuid ?? ''\r\n        } else if (isAlerRow(row)) {\r\n            rowTemplate.value = typeof row.message === 'function' ? await row.message(dailyArgs) : row.message\r\n        }\r\n\r\n        template.rows.push(rowTemplate)\r\n    }\r\n\r\n    return template\r\n}\r\n\r\nasync function getProcessedValue<T extends any, R = T extends (...args: any[]) => infer R ? R : T>(obj: T, args: DailyValueArgs) {\r\n    if (typeof obj === 'function') return (await obj(args)) as Promise<R>\r\n    return obj as R\r\n}\r\n\r\nfunction isComboRow(row: DailyRow): row is DailyRowCombo {\r\n    return row.type === 'combo'\r\n}\r\n\r\nfunction isSelectRow(row: DailyRow): row is DailyRowSelect {\r\n    return row.type === 'select'\r\n}\r\n\r\nfunction isRandomRow(row: DailyRow): row is DailyRowRandom {\r\n    return row.type === 'random'\r\n}\r\n\r\nfunction isDropRow(row: DailyRow): row is DailyRowDrop {\r\n    return row.type === 'drop'\r\n}\r\n\r\nfunction isAlerRow(row: DailyRow): row is DailyRowAlert {\r\n    return row.type === 'alert'\r\n}\r\n","import { DailiesInterface } from '@apps/interface'\r\nimport { subLocalize } from '@utils/foundry/localize'\r\nimport { getTranslatedSkills } from '@utils/pf2e/skills'\r\nimport { sluggify } from '@utils/pf2e/utils'\r\n\r\nconst localize = subLocalize('interface.error.drop')\r\n\r\nexport async function onDropFeat(\r\n    this: DailiesInterface,\r\n    item: ItemPF2e,\r\n    target: HTMLInputElement,\r\n    filter: DailyRowDropParsedFeat\r\n) {\r\n    if (!item.isOfType('feat')) return localize('notFeat')\r\n\r\n    const { featType, traits, system, level } = item\r\n    const { search, drop } = filter\r\n\r\n    if (search.feattype.length && !search.feattype.includes(featType)) {\r\n        return localize.warn('wrongType', { types: localizeAll('featTypes', search.feattype) })\r\n    }\r\n\r\n    if (search.traits.values.length) {\r\n        const conjunction = search.traits.conjunction ?? 'and'\r\n        const testFn = conjunction === 'or' ? 'some' : 'every'\r\n        const test = search.traits.values[testFn](trait => traits.has(trait))\r\n        if (!test) {\r\n            return localize.warn(conjunction === 'or' ? 'wrongTraitOr' : 'wrongTraitAnd', {\r\n                traits: localizeAll('featTraits', search.traits.values),\r\n            })\r\n        }\r\n    }\r\n\r\n    if (search.skills.length) {\r\n        const translatedSkills = getTranslatedSkills()\r\n        const prerequisites = system.prerequisites.value.map(prerequisite => prerequisite.value.toLocaleLowerCase())\r\n        const test = search.skills.some(skill =>\r\n            prerequisites.some(prerequisite => prerequisite.includes(skill) || prerequisite.includes(translatedSkills[skill]!))\r\n        )\r\n        if (!test) return localize.warn('wrongSkill', { skills: localizeAll('skillList', search.skills) })\r\n    }\r\n\r\n    if (search.rarity.length && !search.rarity.includes(system.traits.rarity)) {\r\n        return localize.warn('wrongRarity', { rarities: localizeAll('rarityTraits', search.rarity) })\r\n    }\r\n\r\n    if (search.source.length && !search.source.includes(sluggify(system.source.value))) {\r\n        return localize.warn('wrongSource', { sources: search.source.join(', ') })\r\n    }\r\n\r\n    const { min, max } = search.level\r\n    if (level < min) return localize.warn('wrongLevelLow', { level: `min: ${min}` })\r\n    else if (level > max) return localize.warn('wrongLevelHigh', { level: `max: ${max}` })\r\n\r\n    if (drop) {\r\n        const args = this.dailyArgs[target.dataset.daily!]\r\n        if (args) {\r\n            const result = await drop(item, args)\r\n            if (typeof result === 'object') {\r\n                if (result.data) return game.i18n.format(result.error, result.data)\r\n                else return game.i18n.localize(result.error)\r\n            } else if (result === false) {\r\n                return localize.warn('wrongCustom')\r\n            }\r\n        }\r\n    }\r\n\r\n    onDropItem(item, target)\r\n}\r\n\r\nexport async function onDropSpell(\r\n    this: DailiesInterface,\r\n    item: ItemPF2e,\r\n    target: HTMLInputElement,\r\n    filter: DailyRowDropParsedSpell\r\n) {\r\n    if (!item.isOfType('spell')) return localize('notSpell')\r\n\r\n    const { system, level, traits, traditions, school } = item\r\n    const { search, drop } = filter\r\n\r\n    if (search.category.length) {\r\n        const categories = search.category\r\n            .map(x => game.i18n.localize(x === 'cantrip' ? 'PF2E.SpellCantripLabel' : CONFIG.PF2E.spellCategories[x]))\r\n            .join(', ')\r\n\r\n        if (\r\n            (item.isCantrip && !search.category.includes('cantrip')) ||\r\n            (item.isFocusSpell && !search.category.includes('focus')) ||\r\n            (item.isRitual && !search.category.includes('ritual')) ||\r\n            (!item.isCantrip && !item.isFocusSpell && !item.isRitual && !search.category.includes('spell'))\r\n        ) {\r\n            return localize.warn('wrongCategory', { categories })\r\n        }\r\n    }\r\n\r\n    if (search.traits.values.length) {\r\n        const conjunction = search.traits.conjunction ?? 'and'\r\n        const testFn = conjunction === 'or' ? 'some' : 'every'\r\n        const test = search.traits.values[testFn](trait => traits.has(trait))\r\n        if (!test) {\r\n            return localize.warn(conjunction === 'or' ? 'wrongTraitOr' : 'wrongTraitAnd', {\r\n                traits: localizeAll('spellTraits', search.traits.values),\r\n            })\r\n        }\r\n    }\r\n\r\n    if (search.traditions.length) {\r\n        if (!search.traditions.some(tradition => traditions.has(tradition))) {\r\n            return localize.warn('wrongTradition', { traditions: localizeAll('magicTraditions', search.traditions) })\r\n        }\r\n    }\r\n\r\n    if (search.level.length && !search.level.includes(level)) {\r\n        return localize.warn('wrongLevel', { levels: search.level.join(', ') })\r\n    }\r\n\r\n    if (search.school.length && !search.school.includes(school)) {\r\n        return localize.warn('wrongSchool', { schools: localizeAll('magicSchools', search.school) })\r\n    }\r\n\r\n    if (search.rarity.length && !search.rarity.includes(system.traits.rarity)) {\r\n        return localize.warn('wrongRarity', { rarities: localizeAll('rarityTraits', search.rarity) })\r\n    }\r\n\r\n    if (search.source.length && !search.source.includes(sluggify(system.source.value))) {\r\n        return localize.warn('wrongSource', { sources: search.source.join(', ') })\r\n    }\r\n\r\n    if (drop) {\r\n        const args = this.dailyArgs[target.dataset.daily!]\r\n        if (args) {\r\n            const result = await drop(item, args)\r\n            if (typeof result === 'object') {\r\n                if (result.data) return ui.notifications.warn(game.i18n.format(result.error, result.data))\r\n                else return ui.notifications.warn(game.i18n.localize(result.error))\r\n            } else if (result === false) {\r\n                return localize.warn('wrongCustom')\r\n            }\r\n        }\r\n    }\r\n\r\n    onDropItem(item, target)\r\n}\r\n\r\nfunction localizeAll<\r\n    C extends keyof Omit<PF2ECONFIG, 'proficiencyLevels'>,\r\n    K extends keyof Omit<PF2ECONFIG, 'proficiencyLevels'>[C]\r\n>(config: C, list: K[]): string {\r\n    const localized = list.map(key => game.i18n.localize(CONFIG.PF2E[config][key] as unknown as string))\r\n    return localized.join(', ')\r\n}\r\n\r\nexport function onDropItem(item: ItemPF2e, target: HTMLInputElement) {\r\n    target.value = item.name\r\n    target.dataset.uuid = item.uuid\r\n    target.nextElementSibling!.nextElementSibling!.classList.remove('disabled')\r\n}\r\n","export function getFamiliarPack() {\r\n    return game.packs.get<CompendiumCollection<EffectPF2e>>('pf2e.familiar-abilities')!\r\n}\r\n\r\nexport function familiarUUID(id: string) {\r\n    return `Compendium.pf2e.familiar-abilities.${id}` as ItemUUID\r\n}\r\n","import { DailiesInterface } from '@apps/interface'\r\nimport { familiarUUID, getFamiliarPack } from '@data/familiar'\r\nimport { getRations } from '@data/rations'\r\nimport { MODULE_ID } from '@src/main'\r\nimport { getFlag } from '@utils/foundry/flags'\r\nimport { hasLocalization, localize, subLocalize } from '@utils/foundry/localize'\r\nimport { error } from '@utils/foundry/notification'\r\nimport { chatUUID, fakeChatUUID } from '@utils/foundry/uuid'\r\nimport { sluggify } from '@utils/pf2e/utils'\r\n\r\nexport async function processData(this: DailiesInterface) {\r\n    const actor = this.actor\r\n    const dailies = this.dailies\r\n    const fields = getFields.call(this)\r\n    const addItems: DeepPartial<BaseItemSourcePF2e>[] = []\r\n    const addRules: Map<string, DailyRuleSource[]> = new Map()\r\n    const updateItems: EmbeddedDocumentUpdateData<ItemPF2e>[] = []\r\n    const flags: Record<string, DailySaved> = {}\r\n    const msg = subLocalize('message')\r\n\r\n    let addedSpells: boolean = false\r\n    let message = ''\r\n\r\n    const getRules = (item: ItemPF2e) => {\r\n        const id = item.id\r\n        const existing = addRules.get(id)\r\n        if (existing) return existing\r\n\r\n        const rules = deepClone(item._source.system.rules)\r\n\r\n        for (let i = rules.length - 1; i >= 0; i--) {\r\n            if (MODULE_ID in rules[i]!) rules.splice(i, 1)\r\n        }\r\n\r\n        addRules.set(id, rules)\r\n        return rules\r\n    }\r\n\r\n    const messages: DailyMessageGroups = {\r\n        languages: { order: 80, messages: [] },\r\n        skills: { order: 70, messages: [] },\r\n        resistances: { order: 60, messages: [] },\r\n        feats: { order: 50, messages: [] },\r\n        spells: { order: 40, messages: [] },\r\n        scrolls: { order: 30, messages: [] },\r\n    }\r\n\r\n    const messageObj = {\r\n        add: (group: string, options: DailyMessage) => {\r\n            messages[group] ??= { order: 0, messages: [] }\r\n            messages[group]!.messages.push(options)\r\n        },\r\n        addGroup: (group: string, order = 1, label?: string) => {\r\n            messages[group] ??= { label, order, messages: [] }\r\n        },\r\n    }\r\n\r\n    if (actor.familiar && fields['dailies.familiar']) {\r\n        const familiar = actor.familiar\r\n        const pack = getFamiliarPack()\r\n        const abilities: EffectSource[] = []\r\n\r\n        // we remove old abilities\r\n        const ids = familiar.itemTypes.effect.map(effect => effect.id)\r\n        if (ids.length) familiar.deleteEmbeddedDocuments('Item', ids)\r\n\r\n        messageObj.addGroup('familiar', 20)\r\n\r\n        for (const field of Object.values(fields['dailies.familiar'])) {\r\n            const value = field.value\r\n            const source = (await pack.getDocument(value))?.toObject()\r\n\r\n            if (source) {\r\n                abilities.push(source)\r\n                messageObj.add('familiar', { uuid: familiarUUID(value) })\r\n            }\r\n        }\r\n\r\n        if (abilities.length) familiar.createEmbeddedDocuments('Item', abilities)\r\n    }\r\n\r\n    if (fields['dailies.rations']?.rations!.value === 'true') {\r\n        const rations = getRations(actor)\r\n\r\n        if (rations?.uses.value) {\r\n            const quantity = rations.quantity\r\n            const { value, max } = rations.uses\r\n\r\n            if (value <= 1) {\r\n                if (quantity <= 1) {\r\n                    rations.delete()\r\n                } else {\r\n                    updateItems.push({\r\n                        _id: rations.id,\r\n                        'system.quantity': Math.max(rations.quantity - 1, 0),\r\n                        'system.charges.value': max,\r\n                    })\r\n                }\r\n            } else {\r\n                updateItems.push({\r\n                    _id: rations.id,\r\n                    'system.charges.value': Math.max(value - 1, 0),\r\n                })\r\n            }\r\n\r\n            const remaining = (quantity - 1) * max + value\r\n            const name = remaining <= 1 ? fakeChatUUID(rations.name) : chatUUID(rations.uuid)\r\n\r\n            if (remaining <= 1) message += msg('rations.last', { name })\r\n            else if (remaining <= 3) message += msg('rations.almost', { name, nb: remaining - 1 })\r\n            else message += msg('rations.used', { name, nb: remaining - 1 })\r\n        }\r\n    }\r\n\r\n    for (const { item, key, process } of dailies) {\r\n        if (!fields[key]) continue\r\n\r\n        const dailyArgs = this.dailyArgs[key]!\r\n\r\n        try {\r\n            await process({\r\n                ...dailyArgs,\r\n                fields: fields[key]!,\r\n                messages: messageObj,\r\n                addItem: source => addItems.push(source),\r\n                updateItem: data => updateItems.push(data),\r\n                addRule: (source, parent) => getRules(parent ?? item).push(source),\r\n                addFeat: (source, parent) => {\r\n                    if (item.isOfType('feat')) {\r\n                        const parentId = (parent ?? item).id\r\n                        setProperty(source, 'flags.pf2e.grantedBy', { id: parentId, onDelete: 'cascade' })\r\n                        setProperty(source, `flags.${MODULE_ID}.grantedBy`, parentId)\r\n                    }\r\n                    addItems.push(source)\r\n                },\r\n                addSpell: (source, level) => {\r\n                    setProperty(source, `flags.${MODULE_ID}.entry`, { level: level })\r\n                    addItems.push(source)\r\n                    addedSpells = true\r\n                },\r\n            })\r\n        } catch (err) {\r\n            error('error.unexpected')\r\n            console.error(err)\r\n            console.error(`The error occured during processing of ${key}`)\r\n        }\r\n    }\r\n\r\n    for (const [key, rowFields] of Object.entries(fields)) {\r\n        const rows = this.rows[key]\r\n        if (!rows) continue\r\n\r\n        for (const { row, type, input, value, uuid } of Object.values(rowFields)) {\r\n            if (type === 'random' || rows[row]?.save === false) continue\r\n\r\n            const flag = (flags[key] ??= {})\r\n\r\n            if (type === 'combo') {\r\n                flag[row] = { input: input === 'true', selected: value }\r\n            } else if (type === 'drop') {\r\n                flag[row] = { uuid: uuid as ItemUUID, name: value }\r\n            } else {\r\n                flag[row] = value\r\n            }\r\n        }\r\n    }\r\n\r\n    for (const [id, rules] of addRules) {\r\n        rules.forEach(x => (x[MODULE_ID] = true))\r\n        updateItems.push({ _id: id, 'system.rules': rules })\r\n    }\r\n\r\n    if (addedSpells) {\r\n        const entry: DeepPartial<SpellcastingEntrySource> = {\r\n            type: 'spellcastingEntry',\r\n            name: localize('spellEntry.name'),\r\n            system: {\r\n                prepared: { value: 'innate' },\r\n                showSlotlessLevels: { value: false },\r\n                showUnpreparedSpells: { value: false },\r\n                proficiency: { value: 1, slug: actor.classDC?.slug || actor.class?.slug || undefined },\r\n            },\r\n        }\r\n        addItems.push(entry)\r\n    }\r\n\r\n    for (const source of addItems) {\r\n        const alreadyTemp = getProperty(source, 'system.temporary') === true\r\n        if (!alreadyTemp) setProperty(source, `flags.${MODULE_ID}.temporary`, true)\r\n    }\r\n\r\n    if (addItems.length) {\r\n        const items = (await actor.createEmbeddedDocuments('Item', addItems)) as ItemPF2e[]\r\n\r\n        for (const item of items) {\r\n            if (item.isOfType('feat')) {\r\n                // we add itemGrants flag to the parent feat to have the cascade effect in the tab\r\n                const parentId = getFlag<string>(item, 'grantedBy')\r\n                if (parentId) {\r\n                    const slug = sluggify(item.name, { camel: 'dromedary' })\r\n                    const path = `flags.pf2e.itemGrants.${slug}`\r\n                    updateItems.push({ _id: parentId, [path]: { id: item.id, onDelete: 'detach' } })\r\n                }\r\n            } else if (item.isOfType('spellcastingEntry')) {\r\n                // we add all the newly created spells with 'addSpell' to this spellcasting entry\r\n                const spells = items.filter(item => item.isOfType('spell') && getFlag(item, 'entry'))\r\n                for (const spell of spells) {\r\n                    const { level } = getFlag<{ level?: number }>(spell, 'entry')!\r\n                    const data: EmbeddedDocumentUpdateData<ItemPF2e> = { _id: spell.id, 'system.location.value': item.id }\r\n                    if (level !== undefined) data['system.location.heightenedLevel'] = level\r\n                    updateItems.push(data)\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    await actor.update({ [`flags.${MODULE_ID}`]: { ...expandObject(flags), rested: false } })\r\n\r\n    if (updateItems.length) await actor.updateEmbeddedDocuments('Item', updateItems)\r\n\r\n    message = parseMessages(messages, message)\r\n    message = message ? `${msg('changes')}<hr />${message}` : msg('noChanges')\r\n    ChatMessage.create({ content: message, speaker: ChatMessage.getSpeaker({ actor }) })\r\n}\r\n\r\nfunction parseMessages(messages: DailyMessageGroups, message: string) {\r\n    const msg = subLocalize('message')\r\n\r\n    const messageList = Object.entries(messages).map(([type, options]) => {\r\n        options.label ??= msg.has(type) ? msg(type) : msg('gained', { type })\r\n        return options\r\n    })\r\n    messageList.sort((a, b) => b.order - a.order)\r\n\r\n    for (const { label, messages } of messageList) {\r\n        if (!messages.length) continue\r\n\r\n        if (message) message += '<hr />'\r\n\r\n        if (label) message += `<p><strong>${label}</strong></p>`\r\n\r\n        for (let { uuid, selected, label, random } of messages) {\r\n            const key = `label.${label}`\r\n            label = label && hasLocalization(key) ? localize(key) : label || ''\r\n\r\n            message += '<p>'\r\n            message += uuid ? `${chatUUID(uuid, label)}` : `<strong>${label}</strong>`\r\n            if (selected) message += ` <span>${selected}</span>`\r\n            if (random) message += ' <i class=\"fa-solid fa-dice-d20\"></i>'\r\n            message += '</p>'\r\n        }\r\n    }\r\n\r\n    return message\r\n}\r\n\r\nfunction getFields(this: DailiesInterface) {\r\n    const elements = this.element\r\n        .find('.window-content .content')\r\n        .find<HTMLInputElement | HTMLSelectElement>('input:not(.alert), select[data-type]')\r\n        .toArray()\r\n\r\n    const fields: Record<string, DailyRowFields> = {}\r\n\r\n    for (const element of elements) {\r\n        const field = {\r\n            ...element.dataset,\r\n            value: element.value,\r\n        } as DailyRowField\r\n\r\n        if (field.type === 'combo' && field.input === 'false') {\r\n            const select = element.previousElementSibling as HTMLSelectElement\r\n            field.value = select.value\r\n        }\r\n\r\n        fields[field.daily] ??= {}\r\n        fields[field.daily]![field.row] = field\r\n    }\r\n\r\n    return fields\r\n}\r\n","import { sequenceArray } from '@utils/utils'\r\n\r\nexport function getSimplifiableValue(actor: CharacterPF2e, value: number | 'half' | 'level') {\r\n    if (typeof value === 'number') return value\r\n    if (value === 'level') return actor.level\r\n    return Math.max(1, Math.floor(actor.level / 2))\r\n}\r\n\r\nexport function parseFeatFilter(actor: CharacterPF2e, filter: DailyFeatFilter) {\r\n    const parsed = {\r\n        feattype: [],\r\n        skills: [],\r\n        rarity: [],\r\n        source: [],\r\n        searchText: '',\r\n        traits: {\r\n            values: [],\r\n            conjunction: 'and',\r\n        },\r\n        orderBy: 'level',\r\n        orderDirection: 'asc',\r\n        ...deepClone(filter),\r\n    }\r\n\r\n    if (parsed.level === undefined) {\r\n        parsed.level = { min: 0, max: 20 }\r\n    } else if (typeof parsed.level !== 'object') {\r\n        parsed.level = { min: 0, max: getSimplifiableValue(actor, parsed.level) }\r\n    } else {\r\n        parsed.level = {\r\n            min: getSimplifiableValue(actor, parsed.level.min ?? 0),\r\n            max: getSimplifiableValue(actor, parsed.level.max ?? 0),\r\n        }\r\n    }\r\n\r\n    return parsed as DeepRequired<InitialFeatFilters>\r\n}\r\n\r\nexport function parseSpellFilter(actor: CharacterPF2e, filter: DailySpellFilter) {\r\n    const parsed = {\r\n        category: [],\r\n        rarity: [],\r\n        school: [],\r\n        source: [],\r\n        traditions: [],\r\n        searchText: '',\r\n        traits: {\r\n            values: [],\r\n            conjunction: 'and',\r\n        },\r\n        orderBy: 'level',\r\n        orderDirection: 'asc',\r\n        ...deepClone(filter),\r\n    }\r\n\r\n    if (parsed.level === undefined) {\r\n        parsed.level = []\r\n    } else if (!Array.isArray(parsed.level)) {\r\n        parsed.level = sequenceArray(1, getSimplifiableValue(actor, parsed.level))\r\n    }\r\n\r\n    return parsed as DeepRequired<InitialSpellFilters>\r\n}\r\n","import { getDailies } from '@src/dailies'\r\nimport { subLocalize } from '@utils/foundry/localize'\r\nimport { templatePath } from '@utils/foundry/path'\r\nimport { getFlag } from '@utils/foundry/flags'\r\nimport { getTemplate } from './interface/data'\r\nimport { onDropFeat, onDropItem, onDropSpell } from './interface/drop'\r\nimport { processData } from './interface/process'\r\nimport { parseFeatFilter, parseSpellFilter } from './interface/shared'\r\nimport { getFamiliarPack } from '@data/familiar'\r\nimport { getRations } from '@data/rations'\r\n\r\nconst localize = subLocalize('interface')\r\n\r\nexport class DailiesInterface extends Application {\r\n    private _actor: CharacterPF2e\r\n    private _randomInterval?: NodeJS.Timer\r\n    private _dailies: ReturnedDaily[] = []\r\n    private _dailyArgs: Record<string, DailyValueArgs> = {}\r\n    private _saved: Record<string, DailySaved> = {}\r\n    private _children: Record<string, DailyValueArgs['children']> = {}\r\n    private _custom: Record<string, DailyCustom> = {}\r\n    private _predicate: Record<string, string[]> = {}\r\n    private _rows: Record<string, Record<string, DailyRow>> = {}\r\n\r\n    constructor(actor: CharacterPF2e, options?: Partial<ApplicationOptions>) {\r\n        super(options)\r\n        this._actor = actor\r\n    }\r\n\r\n    static get defaultOptions() {\r\n        return mergeObject(super.defaultOptions, {\r\n            id: 'pf2e-dailies-interface',\r\n            title: localize('title'),\r\n            template: templatePath('interface.hbs'),\r\n            height: 'auto',\r\n            submitOnClose: false,\r\n            submitOnChange: false,\r\n            dragDrop: [\r\n                {\r\n                    dropSelector: '[data-droppable=\"true\"]',\r\n                },\r\n            ],\r\n        })\r\n    }\r\n\r\n    get actor() {\r\n        return this._actor\r\n    }\r\n\r\n    get dailies() {\r\n        return this._dailies\r\n    }\r\n\r\n    get dailyArgs() {\r\n        return this._dailyArgs\r\n    }\r\n\r\n    get saved() {\r\n        return this._saved\r\n    }\r\n\r\n    get children() {\r\n        return this._children\r\n    }\r\n\r\n    get custom() {\r\n        return this._custom\r\n    }\r\n\r\n    get predicate() {\r\n        return this._predicate\r\n    }\r\n\r\n    get rows() {\r\n        return this._rows\r\n    }\r\n\r\n    async getData(options?: Partial<FormApplicationOptions> | undefined) {\r\n        const templates: DailyTemplate[] = []\r\n        const actor = this._actor\r\n        this._dailies = getDailies(actor)\r\n\r\n        if (actor.familiar) {\r\n            const type = 'dailies.familiar'\r\n            const localize = subLocalize('label')\r\n            const nbAbilityies = actor.attributes.familiarAbilities.value\r\n            const pack = getFamiliarPack()\r\n            const options = pack.index.map(index => ({ value: index._id, label: index.name }))\r\n            const flags = getFlag<Record<`${number}`, string>>(actor, type) ?? {}\r\n\r\n            const template: DailyTemplate = {\r\n                label: localize('familiar'),\r\n                rows: [],\r\n            }\r\n\r\n            for (let index = 0; index < nbAbilityies; index++) {\r\n                template.rows.push({\r\n                    label: localize('ability', { nb: index + 1 }),\r\n                    value: flags[`${index}`] ?? '',\r\n                    order: 100,\r\n                    options,\r\n                    data: {\r\n                        type: 'select',\r\n                        daily: type,\r\n                        row: index.toString(),\r\n                    },\r\n                })\r\n            }\r\n\r\n            if (template.rows.length) {\r\n                this._rows[type] = template.rows.reduce((rows, { data }) => {\r\n                    rows[data.row] = { save: true } as DailyRow\r\n                    return rows\r\n                }, {} as Record<string, DailyRow>)\r\n                templates.push(template)\r\n            }\r\n        }\r\n\r\n        const rations = getRations(actor)\r\n        if (rations?.uses.value) {\r\n            const type = 'dailies.rations'\r\n            const row = 'rations'\r\n            const { value, max } = rations.uses\r\n            const quantity = rations.quantity\r\n            const remaining = (quantity - 1) * max + value\r\n            const last = remaining <= 1\r\n\r\n            const options = [\r\n                {\r\n                    value: 'false',\r\n                    label: localize('rations.no'),\r\n                },\r\n                {\r\n                    value: 'true',\r\n                    label: last ? localize('rations.last') : localize('rations.yes', { nb: remaining }),\r\n                },\r\n            ]\r\n\r\n            templates.push({\r\n                label: rations.name,\r\n                rows: [\r\n                    {\r\n                        label: '',\r\n                        order: 200,\r\n                        value: 'false',\r\n                        options,\r\n                        data: {\r\n                            type: 'select',\r\n                            daily: type,\r\n                            row: row,\r\n                        },\r\n                    },\r\n                ],\r\n            })\r\n\r\n            this._rows[type] = { [row]: { save: false } as DailyRow }\r\n        }\r\n\r\n        for (const daily of this._dailies) {\r\n            try {\r\n                const template = await getTemplate.call(this, daily)\r\n                templates.push(template)\r\n            } catch (error) {\r\n                localize.error('error.unexpected')\r\n                console.error(error)\r\n                console.error(`The error occured during templating of ${daily.key}`)\r\n            }\r\n        }\r\n\r\n        const rows: DailyTemplate[] = []\r\n        const groups: DailyTemplate[] = []\r\n        for (const template of templates) {\r\n            if (template.rows.length > 1) groups.push(template)\r\n            else if (template.rows.length) rows.push(template)\r\n        }\r\n\r\n        rows.sort((a, b) => b.rows[0]!.order - a.rows[0]!.order)\r\n        groups.sort((a, b) => a.rows.length - b.rows.length)\r\n\r\n        return mergeObject(super.getData(options), {\r\n            i18n: localize,\r\n            dump: ({ value, placeholder, data }: DailyRowTemplate) => {\r\n                let msg = ''\r\n                if (value) msg += ` value=\"${value}\"`\r\n                if (placeholder) msg += ` placeholder=\"${placeholder}\"`\r\n                Object.entries(data).forEach(([key, value]) => (msg += ` data-${key}=\"${value}\"`))\r\n                if (msg) msg += ' '\r\n                return msg\r\n            },\r\n            rows,\r\n            groups,\r\n        })\r\n    }\r\n\r\n    render(force?: boolean | undefined, options?: RenderOptions | undefined): this | Promise<this> {\r\n        if (this._randomInterval) clearInterval(this._randomInterval)\r\n\r\n        if (this.element.find('select.random')) {\r\n            this._randomInterval = setInterval(() => {\r\n                const randoms = this.element.find<HTMLSelectElement>('select.random')\r\n                randoms.each((_, select) => {\r\n                    select.selectedIndex = (select.selectedIndex + 1) % select.options.length\r\n                })\r\n            }, 2000)\r\n        }\r\n\r\n        return super.render(force, options)\r\n    }\r\n\r\n    close(options?: ({ force?: boolean | undefined } & Record<string, unknown>) | undefined): Promise<void> {\r\n        if (this._randomInterval) clearInterval(this._randomInterval)\r\n        return super.close(options)\r\n    }\r\n\r\n    activateListeners(html: JQuery<HTMLElement>): void {\r\n        super.activateListeners(html)\r\n\r\n        html.find<HTMLAnchorElement>('[data-action=clear]').on('click', this.#onClear.bind(this))\r\n        html.find<HTMLButtonElement>('[data-action=accept]').on('click', this.#onAccept.bind(this))\r\n        html.find<HTMLButtonElement>('[data-action=cancel]').on('click', this.#onCancel.bind(this))\r\n\r\n        html.find<HTMLSelectElement>('.combo select').on('change', this.#onComboSelectChange.bind(this))\r\n        html.find<HTMLInputElement>('.combo input').on('change', this.#onComboInputChange.bind(this))\r\n\r\n        html.find<HTMLAnchorElement>('[data-action=search]').on('click', this.#onSearch.bind(this))\r\n\r\n        html.find<HTMLAnchorElement>('[data-action=alert]').on('click', this.#onAlert.bind(this))\r\n    }\r\n\r\n    protected async _onDrop(event: ElementDragEvent) {\r\n        const localize = subLocalize('interface.error.drop')\r\n        let target = event.target as HTMLInputElement | HTMLLabelElement\r\n        if (target instanceof HTMLLabelElement) target = target.nextElementSibling as HTMLInputElement\r\n\r\n        try {\r\n            const dataString = event.dataTransfer?.getData('text/plain')\r\n            const data: { type: string; uuid: string } = JSON.parse(dataString)\r\n            if (!data || data.type !== 'Item' || typeof data.uuid !== 'string') return localize.warn('wrongDataType')\r\n\r\n            const item = await fromUuid<ItemPF2e>(data.uuid)\r\n            if (!item) return localize.warn('wrongDataType')\r\n\r\n            const filter = await this.#getfilterFromElement(target)\r\n            if (!filter) return onDropItem(item, target)\r\n\r\n            if (filter.type === 'feat') onDropFeat.call(this, item, target, filter)\r\n            else if (filter.type === 'spell') onDropSpell.call(this, item, target, filter)\r\n            else onDropItem(item, target)\r\n        } catch (error) {\r\n            localize.error('error.unexpected')\r\n            console.error(error)\r\n            console.error(`The error occured during _onDrop`)\r\n        }\r\n    }\r\n\r\n    async #onAlert(event: JQuery.ClickEvent<any, any, HTMLAnchorElement>) {\r\n        event.preventDefault()\r\n        this.#lock()\r\n\r\n        const data = event.currentTarget.dataset as { daily: string; row: string }\r\n        const row = this.rows[data.daily]![data.row]! as DailyRowAlert\r\n        const args = this.dailyArgs[data.daily]!\r\n\r\n        let fixed\r\n        try {\r\n            console.log('before fix')\r\n            fixed = await row.fix(args)\r\n            console.log('after fix')\r\n        } catch (error) {\r\n            localize.error('error.unexpected')\r\n            console.error(error)\r\n            console.error(`The error occured during an alert fix of '${data.daily}'`)\r\n        }\r\n\r\n        this.#unlock()\r\n        console.log(fixed)\r\n        if (fixed) this.render()\r\n    }\r\n\r\n    async #onSearch(event: JQuery.ClickEvent<any, any, HTMLAnchorElement>) {\r\n        event.preventDefault()\r\n        const filter = await this.#getfilterFromElement(event.currentTarget)\r\n        if (filter) game.pf2e.compendiumBrowser.openTab(filter.type, filter.search)\r\n        else game.pf2e.compendiumBrowser.render(true)\r\n    }\r\n\r\n    async #getfilterFromElement(element: HTMLElement) {\r\n        const { daily, row } = element.dataset as { daily: string; row: string }\r\n        const filter = (this.rows[daily]?.[row] as DailyRowDrop | undefined)?.filter\r\n        const args = this.dailyArgs[daily]\r\n\r\n        if (!args || !filter) return\r\n\r\n        let { search, drop, type } = filter\r\n        if (typeof search === 'function') search = await search(args)\r\n\r\n        if (type === 'feat') {\r\n            return {\r\n                type: 'feat',\r\n                search: parseFeatFilter(this.actor, search as DailyFeatFilter),\r\n                drop,\r\n            } as DailyRowDropParsedFeat\r\n        } else {\r\n            return {\r\n                type: 'spell',\r\n                search: parseSpellFilter(this.actor, search as DailySpellFilter),\r\n                drop,\r\n            } as DailyRowDropParsedSpell\r\n        }\r\n    }\r\n\r\n    #onComboSelectChange(event: JQuery.ChangeEvent) {\r\n        const select = event.currentTarget as HTMLSelectElement\r\n        const input = select.nextElementSibling as HTMLInputElement\r\n        input.dataset.input = 'false'\r\n        input.value = select.options[select.selectedIndex]!.text\r\n    }\r\n\r\n    #onComboInputChange(event: JQuery.ChangeEvent<any, any, HTMLInputElement>) {\r\n        const input = event.currentTarget\r\n        const select = input.previousElementSibling as HTMLSelectElement\r\n        const value = input.value.toLowerCase()\r\n        const options = Array.from(select.options).map(x => x.value)\r\n\r\n        const index = options.indexOf(value)\r\n        if (index !== -1) {\r\n            select.value = value\r\n            input.value = select.options[index]!.text\r\n            input.dataset.input = 'false'\r\n        } else {\r\n            select.value = ''\r\n            input.dataset.input = 'true'\r\n        }\r\n    }\r\n\r\n    #lock() {\r\n        this.element.addClass('disabled')\r\n    }\r\n\r\n    #unlock() {\r\n        this.element.removeClass('disabled')\r\n    }\r\n\r\n    #validate() {\r\n        const warns: string[] = []\r\n        const emptyInputs = this.element.find('input').filter((_, input) => !input.value)\r\n        const alertInputs = this.element.find('input.alert')\r\n\r\n        if (emptyInputs.length) warns.push('error.empty')\r\n        if (alertInputs.length) warns.push('error.unattended')\r\n\r\n        warns.forEach(x => localize.warn(x))\r\n\r\n        return !warns.length\r\n    }\r\n\r\n    async #onAccept(event: JQuery.ClickEvent) {\r\n        event.preventDefault()\r\n        if (!this.#validate()) return\r\n        this.#lock()\r\n        await processData.call(this)\r\n        this.close()\r\n    }\r\n\r\n    #onClear(event: JQuery.ClickEvent<any, any, HTMLAnchorElement>) {\r\n        event.preventDefault()\r\n        const target = $(event.currentTarget)\r\n        const input = target.prevAll('input').first()\r\n        input.val('')\r\n        input.attr('value', '')\r\n        input.attr('data-uuid', '')\r\n        target.addClass('disabled')\r\n    }\r\n\r\n    #onCancel(event: JQuery.ClickEvent) {\r\n        event.preventDefault()\r\n        this.close()\r\n    }\r\n}\r\n","import { MODULE_ID } from '@utils/module'\r\n\r\ntype OwnModule = 'anonymous' | 'idleuh' | 'pf2e-hero-actions'\r\n\r\ntype ReturnedModule<T extends Record<string, any> | unknown = unknown> = Module<T> | undefined\r\ntype ReturnedModuleApi<T extends Record<string, any>> = Module<T>['api'] | undefined\r\n\r\nexport function getModule<T extends Record<string, any> | unknown = unknown>(id: string | OwnModule) {\r\n    return game.modules.get(id) as ReturnedModule<T>\r\n}\r\n\r\nexport function getCurrentModule<T extends Record<string, any> | unknown = unknown>() {\r\n    return getModule(MODULE_ID) as Module<T>\r\n}\r\n\r\nexport function getModuleApi<T extends Record<string, any>>(id: string | OwnModule) {\r\n    return getModule<T>(id)?.api as ReturnedModuleApi<T>\r\n}\r\n","export const tome = [\r\n    '/** @typedef {typeof ROWS[number]} TomeRow */',\r\n    \"/** @typedef {'adept' | 'second' | 'intense' | 'paragon'} TomeChild */\",\r\n    '/** @typedef {Record<TomeRow, { rank: OneToFour; options: string[] }>} TomeCustom */',\r\n    '/** @typedef {[TomeRow, TomeCustom, TomeChild]} TomeGenerics */',\r\n    '',\r\n    \"const ROWS = /** @type {const} */ (['first', 'second'])\",\r\n    '',\r\n    \"/** @param {'adept' | 'paragon'} option */\",\r\n    'function createChildCondition(option) {',\r\n    '    /** @type { BaseDailyConditionFunction<TomeGenerics>} */',\r\n    '    const condition = ({ item, utils }) => {',\r\n    \"        return utils.getChoiSetRuleSelection(item, option) === 'tome'\",\r\n    '    }',\r\n    '    return condition',\r\n    '}',\r\n    '',\r\n    '/** @type {Daily<TomeGenerics>} */',\r\n    'const thaumaturgeTome = {',\r\n    \"    key: 'tome',\",\r\n    '    item: {',\r\n    \"        uuid: 'Compendium.pf2e.classfeatures.MyN1cQgE0HsLF20e', // Tome\",\r\n    '    },',\r\n    '    children: [',\r\n    '        {',\r\n    \"            slug: 'adept',\",\r\n    \"            uuid: 'Compendium.pf2e.classfeatures.Obm4ItMIIr0whYeO', // Implement Adept\",\r\n    \"            condition: createChildCondition('adept'),\",\r\n    '        },',\r\n    '        {',\r\n    \"            slug: 'second',\",\r\n    \"            uuid: 'Compendium.pf2e.classfeatures.ZEUxZ4Ta1kDPHiq5', // Second Adept\",\r\n    \"            condition: createChildCondition('adept'),\",\r\n    '        },',\r\n    '        {',\r\n    \"            slug: 'intense',\",\r\n    \"            uuid: 'Compendium.pf2e.feats-srd.yRRM1dsY6jakEMaC', // Intense Implement\",\r\n    '        },',\r\n    '        {',\r\n    \"            slug: 'paragon',\",\r\n    \"            uuid: 'Compendium.pf2e.classfeatures.QEtgbY8N2V4wTbsI', // Implement Paragon\",\r\n    \"            condition: createChildCondition('paragon'),\",\r\n    '        },',\r\n    '    ],',\r\n    '    prepare: ({ utils, actor, children }) => {',\r\n    '        const skillNames = utils.skillNames',\r\n    '        const actorLevel = actor.level',\r\n    '        const actorSkills = /** @type {Record<SkillLongForm, { rank: ZeroToFour }>} */ (actor.skills)',\r\n    '',\r\n    '        /** @type {TomeCustom} */',\r\n    '        const custom = {',\r\n    '            first: { options: [], rank: 1 },',\r\n    '            second: { options: [], rank: 1 },',\r\n    '        }',\r\n    '',\r\n    '        // Implement Paragon',\r\n    '        if (children.paragon) {',\r\n    '            const skills = skillNames.filter(x => actorSkills[x].rank < 4)',\r\n    '            custom.first = { rank: 4, options: skills }',\r\n    '            custom.second = { rank: 4, options: skills }',\r\n    '        }',\r\n    '        // Intense Implement or Second Adept or Implement Adept',\r\n    '        else if (children.intense || children.adept || children.second) {',\r\n    '            const masters = skillNames.filter(x => actorSkills[x].rank < 3)',\r\n    '',\r\n    '            if (actorLevel >= 9) {',\r\n    '                custom.first = { rank: 3, options: masters }',\r\n    '                custom.second = { rank: 3, options: masters }',\r\n    '            } else {',\r\n    '                const experts = skillNames.filter(x => actorSkills[x].rank < 2)',\r\n    '                custom.first = { rank: 2, options: experts }',\r\n    '                custom.second = { rank: 3, options: masters }',\r\n    '            }',\r\n    '        }',\r\n    '        // Tome',\r\n    '        else {',\r\n    '            if (actorLevel >= 5) {',\r\n    '                const experts = skillNames.filter(x => actorSkills[x].rank < 2)',\r\n    '                custom.first = { rank: 2, options: experts }',\r\n    '                custom.second = { rank: 2, options: experts }',\r\n    '            } else if (actorLevel >= 3) {',\r\n    '                const trained = skillNames.filter(x => actorSkills[x].rank < 1)',\r\n    '                const experts = skillNames.filter(x => actorSkills[x].rank < 2)',\r\n    '                custom.first = { rank: 1, options: trained }',\r\n    '                custom.second = { rank: 2, options: experts }',\r\n    '            } else {',\r\n    '                const trained = skillNames.filter(x => actorSkills[x].rank < 1)',\r\n    '                custom.first = { rank: 1, options: trained }',\r\n    '                custom.second = { rank: 1, options: trained }',\r\n    '            }',\r\n    '        }',\r\n    '',\r\n    '        return custom',\r\n    '    },',\r\n    '    rows: ROWS.map(rowName => {',\r\n    '        /** @type {DailyRowCombo<TomeGenerics>} */',\r\n    '        const row = {',\r\n    \"            type: 'combo',\",\r\n    '            slug: rowName,',\r\n    '            label: ({ custom, utils }) => utils.proficiencyLabel(custom[rowName].rank),',\r\n    '            options: ({ custom }) => custom[rowName].options,',\r\n    '            labelizer: ({ utils }) => utils.skillLabel,',\r\n    '        }',\r\n    '        return row',\r\n    '    }),',\r\n    '    process: ({ custom, fields, utils, messages, addItem, addRule }) => {',\r\n    \"        messages.addGroup('tome', 65)\",\r\n    '',\r\n    '        for (const rowName of ROWS) {',\r\n    '            const rank = custom[rowName].rank',\r\n    '            let value = fields[rowName].value',\r\n    '',\r\n    \"            if (fields[rowName].input === 'true') {\",\r\n    '                const source = utils.createLoreSource({ name: value, rank })',\r\n    '                addItem(source)',\r\n    '            } else {',\r\n    '                const source = utils.createSkillRuleElement({ skill: value, value: rank })',\r\n    '                value = utils.skillLabel(value)',\r\n    '                addRule(source)',\r\n    '            }',\r\n    '',\r\n    \"            messages.add('tome', { label: utils.proficiencyLabel(rank), selected: value })\",\r\n    '        }',\r\n    '    },',\r\n    '}',\r\n    '',\r\n    'return thaumaturgeTome',\r\n].join('\\n')\r\n","export const flexibility = [\r\n    \"/** @typedef {'flexibility' | 'improved'} FlexibilityRow */\",\r\n    \"/** @typedef {'improved'} FlexibilityChild */\",\r\n    '/** @typedef {[FlexibilityRow, {}, FlexibilityChild]} FlexibilityGenerics */',\r\n    '',\r\n    '/**',\r\n    ' * @param {FlexibilityRow} slug',\r\n    ' * @param {number} level',\r\n    ' * @param {FlexibilityChild} [child]',\r\n    ' */',\r\n    'function createRow(slug, level, child) {',\r\n    '    /** @type {DailyRowDrop<FlexibilityGenerics>} */',\r\n    '    const row = {',\r\n    \"        type: 'drop',\",\r\n    '        label: `PF2E.Level${level}`,',\r\n    '        slug,',\r\n    '        filter: {',\r\n    \"            type: 'feat',\",\r\n    '            search: {',\r\n    \"                feattype: ['class'],\",\r\n    '                traits: {',\r\n    \"                    values: ['fighter'],\",\r\n    '                },',\r\n    '                level,',\r\n    '            },',\r\n    '        },',\r\n    '    }',\r\n    '    if (child) row.childPredicate = [child]',\r\n    '    return row',\r\n    '}',\r\n    '',\r\n    '/** @type {Daily<FlexibilityGenerics>} */',\r\n    'const combatFlexibility = {',\r\n    \"    key: 'flexibility',\",\r\n    '    item: {',\r\n    \"        uuid: 'Compendium.pf2e.classfeatures.8g6HzARbhfcgilP8', // Combat Flexibility\",\r\n    '    },',\r\n    '    children: [',\r\n    '        {',\r\n    \"            slug: 'improved',\",\r\n    \"            uuid: 'Compendium.pf2e.classfeatures.W2rwudMNcAxs8VoX', // Improved Flexibility\",\r\n    '        },',\r\n    '    ],',\r\n    '    rows: [',\r\n    \"        createRow('flexibility', 8), //\",\r\n    \"        createRow('improved', 14, 'improved'),\",\r\n    '    ],',\r\n    '    process: async ({ utils, fields, addFeat, messages, children }) => {',\r\n    '        const uuid = fields.flexibility.uuid',\r\n    '        const source = await utils.createFeatSource(uuid)',\r\n    '        addFeat(source)',\r\n    \"        messages.add('feats', { uuid })\",\r\n    '',\r\n    '        if (children.improved) {',\r\n    '            const uuid = fields.improved.uuid',\r\n    '            const source = await utils.createFeatSource(uuid)',\r\n    '            addFeat(source, children.improved)',\r\n    \"            messages.add('feats', { uuid })\",\r\n    '        }',\r\n    '    },',\r\n    '}',\r\n    '',\r\n    'return combatFlexibility',\r\n].join('\\n')\r\n","export const savant = [\r\n    \"/** @typedef {'first' | 'second' | 'third' | 'fourth'} SavantRow */\",\r\n    '/** @typedef {Record<SavantRow, { level: number; condition: boolean }>} SavantCustom */',\r\n    \"/** @typedef {[SavantRow, SavantCustom, '']} SavantGenerics */\",\r\n    '',\r\n    \"const ROWS = /** @type {const} */ (['first', 'second', 'third', 'fourth'])\",\r\n    '',\r\n    '/**',\r\n    ' * @param {CharacterPF2e} actor',\r\n    ' * @param {MagicTradition} tradition',\r\n    ' */',\r\n    'function getSpellcastingTraditionDetails(actor, tradition) {',\r\n    '    let maxSlot = 1',\r\n    '    let maxTradition = 0',\r\n    '',\r\n    '    for (const entry of actor.spellcasting) {',\r\n    \"        if ('pf2e-staves' in entry.flags) continue // we skip staff entries\",\r\n    '',\r\n    '        const slots = entry.system.slots',\r\n    '        for (const key in slots) {',\r\n    '            const slot = slots[key]',\r\n    '            if (slot.max) maxSlot = Math.max(maxSlot, Number(key.slice(4)))',\r\n    '        }',\r\n    '',\r\n    '        if (entry.tradition === tradition) maxTradition = Math.max(maxTradition, entry.rank)',\r\n    '    }',\r\n    '',\r\n    '    return { maxSlot: Math.min(maxSlot, 10), maxTradition }',\r\n    '}',\r\n    '',\r\n    '/** @type {Daily<SavantGenerics>} */',\r\n    'const scrollSavant = {',\r\n    \"    key: 'savant',\",\r\n    '    item: {',\r\n    \"        uuid: 'Compendium.pf2e.feats-srd.u5DBg0LrBUKP0JsJ', // Scroll Savant\",\r\n    '    },',\r\n    '    prepare: ({ actor }) => {',\r\n    \"        const { maxSlot, maxTradition } = getSpellcastingTraditionDetails(actor, 'arcane')\",\r\n    '        return {',\r\n    '            first: { level: maxSlot - 2, condition: true },',\r\n    '            second: { level: maxSlot - 3, condition: true },',\r\n    '            third: { level: maxSlot - 4, condition: maxTradition >= 3 && maxSlot >= 5 },',\r\n    '            fourth: { level: maxSlot - 5, condition: maxTradition >= 4 && maxSlot >= 6 },',\r\n    '        }',\r\n    '    },',\r\n    '    rows: ROWS.map(rowName => {',\r\n    '        /** @type {DailyRowDrop<SavantGenerics>} */',\r\n    '        const row = {',\r\n    \"            type: 'drop',\",\r\n    '            slug: rowName,',\r\n    '            label: ({ custom }) => `PF2E.SpellLevel${custom[rowName].level}`,',\r\n    '            filter: {',\r\n    \"                type: 'spell',\",\r\n    '                search: ({ custom }) => ({',\r\n    \"                    category: ['spell'],\",\r\n    \"                    traditions: ['arcane'],\",\r\n    '                    level: custom[rowName].level,',\r\n    '                }),',\r\n    '            },',\r\n    '            condition: ({ custom }) => custom[rowName].condition,',\r\n    '        }',\r\n    '        return row',\r\n    '    }),',\r\n    '    process: async ({ utils, fields, custom, addItem, messages }) => {',\r\n    '        for (const field of Object.values(fields)) {',\r\n    '            const uuid = field.uuid',\r\n    '            const source = await utils.createSpellScrollSource({ uuid, level: custom[field.row].level })',\r\n    '            addItem(source)',\r\n    \"            messages.add('scrolls', { uuid, label: source.name })\",\r\n    '        }',\r\n    '    },',\r\n    '}',\r\n    '',\r\n    'return scrollSavant',\r\n].join('\\n')\r\n","export const mind = [\r\n    \"/** @typedef {'alert' | 'smith' | 'mental' | 'runic' | 'advanced'} MindRow */\",\r\n    \"/** @typedef {'weapon' | 'mental' | 'runic' | 'advanced'} MindChild */\",\r\n    '/** @typedef {[MindRow, {}, MindChild]} MindGenerics */',\r\n    '',\r\n    \"const MIND_WEAPON_UUID = 'Compendium.pf2e-dailies.equipment.VpmEozw21aRxX15P'\",\r\n    '',\r\n    'const WEAPON_BASE_TYPES = {',\r\n    \"    0: { die: 'd4', traits: ['finesse', 'agile'], usage: 'held-in-one-hand' },\",\r\n    \"    1: { die: 'd6', traits: ['finesse'], usage: 'held-in-one-hand' },\",\r\n    \"    2: { die: 'd8', traits: [], usage: 'held-in-one-hand' },\",\r\n    \"    3: { die: 'd10', traits: ['reach'], usage: 'held-in-two-hands' },\",\r\n    '}',\r\n    '',\r\n    'const WEAPON_GROUPS = /** @type {Record<WeaponDamage, string>} */ {',\r\n    \"    slashing: 'sword',\",\r\n    \"    piercing: 'spear',\",\r\n    \"    bludgeoning: 'club',\",\r\n    '}',\r\n    '',\r\n    \"const WEAPON_TRAITS = ['grapple', 'nonlethal', 'shove', 'trip', 'modular']\",\r\n    '',\r\n    'const WEAPON_DAMAGE_TYPES = Object.keys(WEAPON_GROUPS)',\r\n    '',\r\n    \"const WEAPON_RUNES = ['corrosive', 'disrupting', 'flaming', 'frost', 'shock', 'thundering']\",\r\n    '',\r\n    'const WEAPON_GREATER_RUNES = [',\r\n    \"    'anarchic',\",\r\n    \"    'axiomatic',\",\r\n    \"    'greaterCorrosive',\",\r\n    \"    'greaterDisrupting',\",\r\n    \"    'greaterFlaming',\",\r\n    \"    'greaterFrost',\",\r\n    \"    'greaterShock',\",\r\n    \"    'greaterThundering',\",\r\n    \"    'holy',\",\r\n    \"    'unholy',\",\r\n    ']',\r\n    '',\r\n    '/** @type {Daily<MindGenerics>} */',\r\n    'const mindSmith = {',\r\n    \"    key: 'mindsmith',\",\r\n    '    item: {',\r\n    \"        uuid: 'Compendium.pf2e.feats-srd.juikoiIA0Jy8PboY', // Mind Smith Dedication\",\r\n    '    },',\r\n    '    children: [',\r\n    '        {',\r\n    \"            slug: 'weapon',\",\r\n    '            uuid: MIND_WEAPON_UUID, // Mind Weapon',\r\n    '        },',\r\n    '        {',\r\n    \"            slug: 'mental',\",\r\n    \"            uuid: 'Compendium.pf2e.feats-srd.PccekOihIbRWdDky', // Malleable Mental Forge\",\r\n    '        },',\r\n    '        {',\r\n    \"            slug: 'runic',\",\r\n    \"            uuid: 'Compendium.pf2e.feats-srd.2uQbQgz1AbjzcFSp', // Runic Mind Smithing\",\r\n    '        },',\r\n    '        {',\r\n    \"            slug: 'advanced',\",\r\n    \"            uuid: 'Compendium.pf2e.feats-srd.fgnfXwFcn9jZlXGD', // Advanced Runic Mind Smithing\",\r\n    '        },',\r\n    '    ],',\r\n    '    rows: [',\r\n    '        {',\r\n    \"            type: 'alert',\",\r\n    \"            slug: 'alert',\",\r\n    \"            message: 'Missing Mind Weapon',\",\r\n    '            fix,',\r\n    \"            childPredicate: [{ not: 'weapon' }],\",\r\n    '        },',\r\n    '        {',\r\n    \"            type: 'select',\",\r\n    \"            slug: 'smith',\",\r\n    \"            label: 'Mind Smith',\",\r\n    '            options: WEAPON_DAMAGE_TYPES,',\r\n    '            labelizer: ({ utils }) => utils.damageLabel,',\r\n    \"            childPredicate: ['weapon'],\",\r\n    '        },',\r\n    '        {',\r\n    \"            type: 'select',\",\r\n    \"            slug: 'mental',\",\r\n    \"            label: 'Mental Forge',\",\r\n    '            options: WEAPON_TRAITS,',\r\n    '            labelizer: ({ utils }) => utils.weaponTraitLabel,',\r\n    \"            childPredicate: ['weapon', 'mental'],\",\r\n    '        },',\r\n    '        {',\r\n    \"            type: 'select',\",\r\n    \"            slug: 'runic',\",\r\n    \"            label: 'Runic Smithing',\",\r\n    '            options: WEAPON_RUNES,',\r\n    '            labelizer: ({ utils }) => utils.weaponPropertyRunesLabel,',\r\n    \"            childPredicate: ['weapon', 'runic', { not: 'advanced' }],\",\r\n    '            condition: ({ children, utils }) => utils.hasFreePropertySlot(children.weapon),',\r\n    '        },',\r\n    '        {',\r\n    \"            type: 'select',\",\r\n    \"            slug: 'advanced',\",\r\n    \"            label: 'Runic Smithing',\",\r\n    '            options: WEAPON_GREATER_RUNES,',\r\n    '            labelizer: ({ utils }) => utils.weaponPropertyRunesLabel,',\r\n    \"            childPredicate: ['weapon', 'advanced'],\",\r\n    '            condition: ({ children, utils }) => utils.hasFreePropertySlot(children.weapon),',\r\n    '        },',\r\n    '    ],',\r\n    '    process: ({ children, updateItem, fields, messages, item, utils }) => {',\r\n    '        const weapon = children.weapon',\r\n    '        if (!weapon) return',\r\n    '',\r\n    \"        messages.addGroup('mindsmith')\",\r\n    '',\r\n    '        const selected = /** @type {WeaponDamage} */ fields.smith.value',\r\n    \"        updateItem({ _id: weapon.id, 'system.damage.damageType': selected, 'system.group': WEAPON_GROUPS[selected] })\",\r\n    \"        messages.add('mindsmith', { selected: utils.damageLabel(selected), uuid: item.uuid, label: 'mindsmith' })\",\r\n    '',\r\n    '        if (children.mental) {',\r\n    '            const selected = fields.mental.value',\r\n    '            const traits = deepClone(weapon._source.system.traits?.value ?? [])',\r\n    '            if (!traits.includes(selected)) traits.push(selected)',\r\n    \"            updateItem({ _id: weapon.id, 'system.traits.value': traits })\",\r\n    \"            messages.add('mindsmith', {\",\r\n    '                selected: utils.weaponTraitLabel(selected),',\r\n    '                uuid: children.mental.uuid,',\r\n    \"                label: 'mentalforge',\",\r\n    '            })',\r\n    '        }',\r\n    '',\r\n    '        if ((children.advanced || children.runic) && utils.hasFreePropertySlot(weapon)) {',\r\n    '            const child = children.advanced ?? children.runic',\r\n    '            const freeSlot = utils.getFreePropertyRuneSlot(weapon)',\r\n    '            const field = fields.advanced ?? fields.runic',\r\n    '            const selected = field.value',\r\n    '',\r\n    '            if (!weapon.system.runes.property.includes(selected)) {',\r\n    '                updateItem({ _id: weapon.id, [`system.${freeSlot}.value`]: selected, [`flags.world.runeSlot`]: freeSlot })',\r\n    \"                messages.add('mindsmith', {\",\r\n    '                    selected: utils.weaponPropertyRunesLabel(selected),',\r\n    '                    uuid: child.uuid,',\r\n    \"                    label: 'runicmind',\",\r\n    '                })',\r\n    '            }',\r\n    '        }',\r\n    '    },',\r\n    '    rest: ({ item, sourceId, updateItem }) => {',\r\n    '        if (sourceId !== MIND_WEAPON_UUID) return',\r\n    '',\r\n    '        let traits = item._source.system.traits?.value ?? []',\r\n    '        traits = traits.filter(trait => !WEAPON_TRAITS.includes(trait))',\r\n    \"        updateItem({ _id: item.id, 'system.traits.value': traits })\",\r\n    '',\r\n    \"        const runeSlot = item.getFlag('world', 'runeSlot')\",\r\n    '        if (runeSlot) {',\r\n    '            updateItem({ _id: item.id, [`system.${runeSlot}.value`]: null, [`flags.world.-=runeSlot`]: true })',\r\n    '        }',\r\n    '    },',\r\n    '}',\r\n    '',\r\n    'const OPTIONS = {',\r\n    \"    0: 'A one-handed weapon that deals <strong>1d4</strong> damage and has the <strong>agile</strong> and <strong>finesse</strong> traits',\",\r\n    \"    1: 'A one-handed weapon that deals <strong>1d6</strong> damage and has the <strong>finesse</strong> trait',\",\r\n    \"    2: 'A one-handed weapon that deals <strong>1d8</strong> damage',\",\r\n    \"    3: 'A two-handed weapon that deals <strong>1d10</strong> damage and has the <strong>reach</strong> trait',\",\r\n    '}',\r\n    '',\r\n    '/** * @param {DailyValueArgs<MindGenerics>} args */',\r\n    'async function fix({ actor }) {',\r\n    '    let content =',\r\n    \"        `<p>This character doesn't have a mind weapon in their inventory.</p><p>Please select one of the following options to create one.</p>`\",\r\n    '',\r\n    '    for (const [key, label] of Object.entries(OPTIONS)) {',\r\n    \"        content += `<label><input type='radio' name='type' value='${key}'>${label}</label>`\",\r\n    '    }',\r\n    '',\r\n    '    const weapon = await Dialog.wait(',\r\n    '        {',\r\n    \"            title: 'Mind Weapon',\",\r\n    '            content,',\r\n    '            buttons: {',\r\n    '                yes: {',\r\n    \"                    icon: `<i class='fas fa-save'></i>`,\",\r\n    \"                    label: 'Accept',\",\r\n    '                    callback: onWeaponSelected,',\r\n    '                },',\r\n    '                no: {',\r\n    \"                    icon: `<i class='fas fa-times'></i>`,\",\r\n    \"                    label: 'Cancel',\",\r\n    '                    callback: () => null,',\r\n    '                },',\r\n    '            },',\r\n    '            close: () => null,',\r\n    '        },',\r\n    '        {},',\r\n    \"        { id: 'pf2e-dailies-weapon', width: 600 }\",\r\n    '    )',\r\n    '',\r\n    '    if (weapon) {',\r\n    \"        console.log('before')\",\r\n    \"        await actor.createEmbeddedDocuments('Item', [weapon])\",\r\n    \"        console.log('after')\",\r\n    '        return true',\r\n    '    }',\r\n    '',\r\n    '    return false',\r\n    '}',\r\n    '',\r\n    '/** @params {JQuery} html */',\r\n    'async function onWeaponSelected(html) {',\r\n    \"    const selection = html.find('[name=type]:checked').val()\",\r\n    '    if (!selection) {',\r\n    \"        ui.notifications.warn('You must select one weapon base type.')\",\r\n    '        return',\r\n    '    }',\r\n    '',\r\n    '    const weapon = (await fromUuid(MIND_WEAPON_UUID))?.toObject()',\r\n    '    if (!weapon) {',\r\n    \"        ui.notifications.warn(`The weapon couldn't be found in the compendium.`)\",\r\n    '        return',\r\n    '    }',\r\n    '',\r\n    '    const stats = WEAPON_BASE_TYPES[selection]',\r\n    '',\r\n    \"    setProperty(weapon, 'system.damage.die', stats.die)\",\r\n    \"    setProperty(weapon, 'system.traits.value', stats.traits.slice())\",\r\n    \"    setProperty(weapon, 'system.usage.value', stats.usage)\",\r\n    '',\r\n    '    return weapon',\r\n    '}',\r\n    '',\r\n    'return mindSmith',\r\n].join('\\n')\r\n","import { createFeatDaily } from '@src/data/feat'\r\nimport { createLanguageDaily } from '@src/data/language'\r\nimport { createResistancelDaily } from '@src/data/resistance'\r\nimport { createTrainedLoreDaily, createTrainedSkillDaily } from '@src/data/skill'\r\nimport { createSpellDaily } from '@src/data/spell'\r\nimport { subLocalize } from '@utils/foundry/localize'\r\nimport { templatePath } from '@utils/foundry/path'\r\nimport { getSetting, setSetting } from '@utils/foundry/settings'\r\nimport { getModule } from '@utils/foundry/module'\r\nimport { AsyncFunction } from '@utils/function'\r\nimport { error, warn } from '@utils/foundry/notification'\r\nimport { tome } from './customs/tome'\r\nimport { flexibility } from './customs/flexibility'\r\nimport { savant } from './customs/savant'\r\nimport { mind } from './customs/mind'\r\n\r\nconst localize = subLocalize('customs')\r\n\r\ntype DailyExampleType = 'tome' | 'flexibility' | 'savant' | 'mind'\r\ntype DailyTemplateType = 'default' | 'trainedSkill' | 'trainedLore' | 'language' | 'resistance' | 'feat' | 'spell'\r\ntype DailyData = {\r\n    key: string\r\n    uuid: ItemUUID\r\n    label: string\r\n    resistances: string\r\n    resistance: string\r\n    feattype: string\r\n    traits: string\r\n    level: string\r\n    category: string\r\n    traditions: string\r\n    levels: string\r\n}\r\n\r\nconst TEMPLATES = ['default', 'trainedSkill', 'trainedLore', 'language', 'resistance', 'feat', 'spell']\r\nconst EXAMPLES = ['flexibility', 'savant', 'tome', 'mind']\r\n\r\nexport class DailyCustoms extends FormApplication {\r\n    private _selectedTemplate: DailyTemplateType | DailyExampleType = 'default'\r\n    private _selectedDaily: string = ''\r\n    private _monaco: any | null = null\r\n\r\n    constructor() {\r\n        super()\r\n    }\r\n\r\n    static get defaultOptions(): FormApplicationOptions {\r\n        return mergeObject(super.defaultOptions, {\r\n            id: 'pf2e-dailies-customs',\r\n            title: localize('title'),\r\n            template: templatePath('customs.hbs'),\r\n            submitOnChange: false,\r\n            submitOnClose: false,\r\n            closeOnSubmit: false,\r\n            scrollY: ['.left .list'],\r\n        })\r\n    }\r\n\r\n    async _updateObject(event: Event, formData: Record<string, unknown>) {}\r\n\r\n    async getData(options?: Partial<FormApplicationOptions> | undefined) {\r\n        const customs = getSetting<SavedCustomDaily[]>('customDailies')\r\n        const code = customs.find(custom => custom.key === this._selectedDaily)?.code\r\n        const template = this._selectedTemplate\r\n\r\n        return mergeObject(super.getData(options), {\r\n            i18n: localize,\r\n            template,\r\n            templates: TEMPLATES,\r\n            daily: this._selectedDaily,\r\n            code,\r\n            customs,\r\n            examples: EXAMPLES,\r\n            isExample: EXAMPLES.includes(template),\r\n            monaco: getModule<PF2eDailiesExtApi>('pf2e-dailies-ext')?.active,\r\n        })\r\n    }\r\n\r\n    activateListeners(html: JQuery<HTMLElement>) {\r\n        super.activateListeners(html)\r\n\r\n        const monaco = getModule<PF2eDailiesExtApi>('pf2e-dailies-ext')?.api\r\n        const area = html.find<HTMLTextAreaElement>('.code')[0]\r\n        if (monaco && area) {\r\n            const element = html.find('.monaco .placeholder')[0]!\r\n            this._monaco = monaco.createEditor(element, area.value)\r\n            this._monaco.onDidChangeModelContent(debounce(() => (area.value = this._monaco.getValue()), 200))\r\n        } else {\r\n            this._monaco = null\r\n        }\r\n\r\n        html.find<HTMLSelectElement>('[data-action=select-template]').on('change', this.#onSelectTemplate.bind(this))\r\n        html.find('[data-action=create-template]').on('click', this.#onCreateTemplate.bind(this))\r\n        html.find('[data-action=create-daily]').on('click', this.#onCreateDaily.bind(this))\r\n\r\n        html.find('.row[data-key]').on('click', this.#onSelectDaily.bind(this))\r\n        html.find('[data-action=delete-daily]').on('click', this.#onDeleteDaily.bind(this))\r\n\r\n        html.find('[data-action=save-code]').on('click', this.#onSaveCode.bind(this))\r\n    }\r\n\r\n    get code() {\r\n        const element = this.form.querySelector<HTMLTextAreaElement>('.window-content .code')\r\n        return element?.value\r\n    }\r\n\r\n    async #onSaveCode(event: JQuery.ClickEvent) {\r\n        event.preventDefault()\r\n\r\n        const code = this.code\r\n        const selected = this._selectedDaily\r\n\r\n        if (!selected || !code) return\r\n\r\n        const customs = getSetting<SavedCustomDaily[]>('customDailies')\r\n        const stipped = customs.filter(custom => custom.key !== selected)\r\n\r\n        try {\r\n            const fn = new AsyncFunction(code)\r\n            const daily = await fn()\r\n            const key = daily.key\r\n\r\n            if (typeof key !== 'string') return warn('invalidKey')\r\n            if (stipped.find(custom => custom.key === key)) return warn('duplicate')\r\n\r\n            const index = customs.findIndex(custom => custom.key === selected)\r\n            if (index < 0) return\r\n\r\n            customs.splice(index, 1, { key, code })\r\n            await setSetting('customDailies', customs)\r\n\r\n            localize.info('saved', { daily: key })\r\n            this._selectedDaily = key\r\n            this.render()\r\n        } catch (err) {\r\n            error('error.unexpected')\r\n            console.error(err)\r\n            console.error(`The error occured while testing the custom daily ${selected}`)\r\n        }\r\n    }\r\n\r\n    async #onDeleteDaily(event: JQuery.ClickEvent) {\r\n        event.preventDefault()\r\n        event.stopPropagation()\r\n\r\n        const remove = await Dialog.confirm({\r\n            title: localize('delete.title'),\r\n            content: localize('delete.content'),\r\n        })\r\n\r\n        if (!remove) return\r\n\r\n        const key = event.currentTarget.dataset.key as string\r\n        const customs = getSetting<SavedCustomDaily[]>('customDailies').filter(custom => custom.key !== key)\r\n\r\n        await setSetting('customDailies', customs)\r\n        localize.info('deleted', { daily: key })\r\n        this.#onCreateDaily()\r\n    }\r\n\r\n    #onCreateDaily() {\r\n        this._selectedDaily = ''\r\n        this._selectedTemplate = 'default'\r\n        this.render()\r\n    }\r\n\r\n    #onSelectDaily(event: JQuery.ClickEvent) {\r\n        event.preventDefault()\r\n\r\n        this._selectedDaily = event.currentTarget.dataset.key\r\n        this.render()\r\n    }\r\n\r\n    async #onCreateTemplate(event: JQuery.ClickEvent) {\r\n        event.preventDefault()\r\n        const template = this._selectedTemplate\r\n\r\n        const customs = getSetting<SavedCustomDaily[]>('customDailies')\r\n        const formData = new FormData(this.form)\r\n        const data = Object.fromEntries(formData) as DailyData\r\n        const isExample = EXAMPLES.includes(template)\r\n        let { key, uuid, label } = data\r\n\r\n        if (isExample) {\r\n            key = template\r\n        } else if (!key || !uuid) {\r\n            return localize.warn('template.noEmpty')\r\n        }\r\n\r\n        if (customs.find(custom => custom.key === key)) return warn('error.duplicate')\r\n\r\n        let code\r\n\r\n        if (template === 'trainedSkill') {\r\n            const daily = createTrainedSkillDaily(key, uuid, label)\r\n            code = this.#stringifyDaily(daily, { key, uuid, label }, 'SkillGenerics')\r\n        } else if (template === 'trainedLore') {\r\n            const daily = createTrainedLoreDaily(key, uuid, label)\r\n            code = this.#stringifyDaily(daily, { key, uuid, label }, 'SkillGenerics')\r\n        } else if (template === 'language') {\r\n            const daily = createLanguageDaily(key, uuid, label)\r\n            code = this.#stringifyDaily(daily, { key, uuid, label }, 'LanguageGenerics')\r\n        } else if (template === 'resistance') {\r\n            const resistance = simplyfiable(data.resistance)\r\n            const resistances = splitList(data.resistances)\r\n\r\n            if (resistance === '' || !resistances.length) return localize.warn('template.noEmpty')\r\n            if (typeof resistance === 'number' && resistance < 1) return localize.warn('template.badResistance')\r\n\r\n            const daily = createResistancelDaily(key, uuid, resistances, resistance, label)\r\n            code = this.#stringifyDaily(daily, { key, uuid, label, resistance, resistances }, 'ResistanceGenerics')\r\n        } else if (template === 'feat') {\r\n            const traits = splitList<FeatTrait>(data.traits)\r\n            const filter: DailyFeatFilter = {\r\n                feattype: splitList<FeatType>(data.feattype),\r\n                level: simplyfiable(data.level) || { min: 0, max: 20 },\r\n            }\r\n\r\n            if (traits.length) filter.traits = { values: traits, conjunction: 'and' }\r\n\r\n            const daily = createFeatDaily(key, uuid, filter, label)\r\n            code = this.#stringifyDaily(daily, { key, uuid, label }, 'FeatGenerics')\r\n        } else if (template === 'spell') {\r\n            const level = Number(data.level) || undefined\r\n            const traits = splitList<SpellTrait>(data.traits)\r\n\r\n            let levels: (DailySimplifiableValue | string)[] | DailySimplifiableValue = data.levels.split(',').map(x => x.trim())\r\n            if (levels.length === 1) {\r\n                levels = simplyfiable(levels[0]!) as DailySimplifiableValue\r\n            } else {\r\n                levels = levels\r\n                    .filter(x => x)\r\n                    .map(x => Number(x))\r\n                    .filter(x => !isNaN(x)) as number[]\r\n            }\r\n\r\n            const filter: DailySpellFilter = {\r\n                category: splitList(data.category),\r\n                traditions: splitList(data.traditions),\r\n                level: (levels || []) as DailySimplifiableValue | number[],\r\n            }\r\n\r\n            if (traits.length) filter.traits = { values: traits, conjunction: 'and' }\r\n\r\n            const daily = createSpellDaily(key, uuid, filter, level, label)\r\n            code = this.#stringifyDaily(daily, { key, uuid, label, level }, 'SpellGenerics')\r\n        } else if (template === 'tome') {\r\n            code = tome\r\n        } else if (template === 'flexibility') {\r\n            code = flexibility\r\n        } else if (template === 'savant') {\r\n            code = savant\r\n        } else if (template === 'mind') {\r\n            code = mind\r\n        } else {\r\n            const daily = { key, label, item: { uuid }, rows: [], process: () => {} }\r\n            code = this.#stringifyDaily(daily, { key, uuid, label })\r\n        }\r\n\r\n        customs.push({ key, code })\r\n        await setSetting('customDailies', customs)\r\n\r\n        this._selectedDaily = key\r\n        this.render()\r\n    }\r\n\r\n    #stringifyDaily(daily: Record<string, any>, args: Record<string, any>, type?: string) {\r\n        const placeholder = '____PLACEHOLDER____'\r\n        const fns: Function[] = []\r\n\r\n        let str = JSON.stringify(\r\n            daily,\r\n            (_, value) => {\r\n                if (typeof value === 'function') {\r\n                    fns.push(value)\r\n                    return placeholder\r\n                }\r\n                return value\r\n            },\r\n            4\r\n        )\r\n\r\n        str = str.replace(new RegExp('\"' + placeholder + '\"', 'g'), () => {\r\n            const fn = fns.shift()?.toString()\r\n            return fn?.replace(/( {5,})/g, match => match.slice(4)) ?? ''\r\n        })\r\n\r\n        let strArgs = ''\r\n        for (const [key, value] of Object.entries(args)) {\r\n            if (typeof value === 'string') strArgs += `const ${key} = '${value}';\\n`\r\n            else if (typeof value === 'object') strArgs += `const ${key} = ${JSON.stringify(value)};\\n`\r\n            else strArgs += `const ${key} = ${value};\\n`\r\n        }\r\n\r\n        const typing = type ? `Daily<${type}>` : 'Daily'\r\n        return `${strArgs}\\n/** @type {${typing}} */\\nconst daily = ${str};\\n\\nreturn daily;`\r\n    }\r\n\r\n    #onSelectTemplate(event: JQuery.ChangeEvent<any, any, HTMLSelectElement>) {\r\n        event.preventDefault()\r\n\r\n        this._selectedDaily = ''\r\n        this._selectedTemplate = event.currentTarget.value as DailyTemplateType\r\n\r\n        this.render()\r\n    }\r\n}\r\n\r\nfunction splitList<T extends string>(list: string) {\r\n    return list\r\n        .split(',')\r\n        .map(x => x.trim())\r\n        .filter(x => x) as T[]\r\n}\r\n\r\nfunction simplyfiable(value: string | number) {\r\n    if (typeof value === 'number') return value\r\n    value = value.trim()\r\n    if (value === 'level' || value === 'half') return value\r\n    const numbered = Number(value)\r\n    return isNaN(numbered) ? '' : numbered\r\n}\r\n","import { setModuleID } from '@utils/module'\r\nimport { registerSetting, registerSettingMenu } from '@utils/foundry/settings'\r\nimport { parseCustomDailies } from './dailies'\r\nimport { restForTheNight } from './rest'\r\nimport { renderCharacterSheetPF2e } from './sheet'\r\nimport { DailyCustoms } from '@apps/customs'\r\n\r\nexport const MODULE_ID = 'pf2e-dailies'\r\nsetModuleID(MODULE_ID)\r\n\r\nHooks.on('pf2e.restForTheNight', restForTheNight)\r\n\r\nHooks.on('renderCharacterSheetPF2e', renderCharacterSheetPF2e)\r\n\r\nHooks.once('setup', () => {\r\n    registerSetting({\r\n        name: 'customDailies',\r\n        type: Array,\r\n        default: [],\r\n        onChange: parseCustomDailies,\r\n    })\r\n\r\n    registerSettingMenu({\r\n        name: 'customs',\r\n        type: DailyCustoms,\r\n    })\r\n})\r\n\r\nHooks.once('ready', async () => {\r\n    await parseCustomDailies()\r\n})\r\n","import { getFlag, getSourceId, setFlag } from '@utils/foundry/flags'\r\nimport { sluggify } from '@utils/pf2e/utils'\r\nimport { getDailyFromSourceId } from './dailies'\r\nimport { MODULE_ID } from './main'\r\n\r\nexport async function restForTheNight(actor: CharacterPF2e) {\r\n    const update: EmbeddedDocumentUpdateData<ItemPF2e>[] = []\r\n    const remove: string[] = []\r\n\r\n    for (const item of actor.items) {\r\n        if (getFlag(item, 'temporary')) {\r\n            remove.push(item.id)\r\n\r\n            // we remove the itemGrants flag from the parent feat\r\n            if (item.isOfType('feat')) {\r\n                const parentId = getFlag<string>(item, 'grantedBy')\r\n                if (parentId) {\r\n                    const slug = sluggify(item.name, { camel: 'dromedary' })\r\n                    const path = `flags.pf2e.itemGrants.-=${slug}`\r\n                    update.push({ _id: parentId, [path]: true })\r\n                }\r\n            }\r\n\r\n            // we don't need to do more work because the item is being deleted\r\n            continue\r\n        }\r\n\r\n        const sourceId = getSourceId(item)\r\n\r\n        // We run the daily rest function if it exists\r\n        if (sourceId) {\r\n            const daily = getDailyFromSourceId(sourceId)\r\n            if (daily?.rest) {\r\n                await daily.rest({ item, sourceId, updateItem: data => update.push(data) })\r\n            }\r\n        }\r\n\r\n        // we clean temporary rule elements\r\n        const rules = deepClone(item._source.system.rules)\r\n        let modifiedRules = false\r\n        for (let i = rules.length - 1; i >= 0; i--) {\r\n            if (MODULE_ID in rules[i]!) {\r\n                rules.splice(i, 1)\r\n                modifiedRules = true\r\n            }\r\n        }\r\n        if (modifiedRules) update.push({ _id: item.id, 'system.rules': rules })\r\n    }\r\n\r\n    if (update.length) await actor.updateEmbeddedDocuments('Item', update)\r\n    if (remove.length) await actor.deleteEmbeddedDocuments('Item', remove)\r\n\r\n    await setFlag(actor, 'rested', true)\r\n}\r\n","import { DailiesInterface } from '@apps/interface'\r\nimport { localize } from '@utils/foundry/localize'\r\nimport { getFlag } from '@utils/foundry/flags'\r\nimport { warn } from '@utils/foundry/notification'\r\nimport { hasAnyDaily } from './dailies'\r\n\r\nexport function renderCharacterSheetPF2e(sheet: CharacterSheetPF2e, html: JQuery) {\r\n    const actor = sheet.actor\r\n    if (!actor.isOwner || !hasAnyDaily(actor)) return\r\n\r\n    const small = html.find('aside .sidebar .hitpoints .hp-small')\r\n    small\r\n        .append(`<a class=\"roll-icon dailies\" data-tooltip=\"${localize('sheet.title')}\"><i class=\"fas fa-mug-saucer\"></i></a>`)\r\n        .find('.dailies')\r\n        .on('click', () => openDailiesInterface(actor))\r\n}\r\n\r\nfunction openDailiesInterface(actor: CharacterPF2e) {\r\n    if (getFlag(actor, 'rested') !== true) return warn('error.unrested')\r\n    new DailiesInterface(actor).render(true)\r\n}\r\n"],"names":["__webpack_require__","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","getSettingLocalizationPath","path","join","templatePath","filter","x","getSetting","game","settings","setSetting","value","set","getFlag","doc","fallback","getSourceId","localize","args","data","i18n","format","hasLocalization","has","localizePath","subLocalize","subKey","fn","defineProperties","warn","configurable","info","str","arg1","arg2","notify","error","arg3","type","undefined","permanent","ui","notifications","dcByLevel","Map","dcAdjustments","chatUUID","uuid","name","Set","scrolls","scrollCompendiumIds","wordCharacter","String","raw","nonWordCharacter","nonWordCharacterRE","RegExp","wordBoundary","nonWordBoundary","lowerCaseLetter","upperCaseLetter","lowerCaseThenUpperCaseRE","nonWordCharacterHyphenOrSpaceRE","upperOrWordBoundariedLowerRE","sluggify","text","camel","console","replace","toLowerCase","trim","dromedary","charAt","toUpperCase","slice","part","index","Error","RUNE_PROPERTY_KEYS","SKILL_DICTIONARY","acr","arc","ath","cra","dec","dip","itm","med","nat","occ","prf","rel","soc","ste","sur","thi","SKILL_LONG_FORMS","keys","values","LANGUAGE_LIST","capitalize","sequenceArray","start","end","levels","i","push","halfLevelString","utils","skillNames","skillLabel","skill","CONFIG","PF2E","skillList","createSkillRuleElement","mode","predicate","rule","length","createLoreSource","rank","img","system","proficient","languageNames","languageLabel","language","languages","createLanguageRuleElement","resistanceLabel","resistance","createResistanceRuleElement","createFeatSource","async","source","fromUuid","toObject","createSpellScrollSource","level","temp","spell","scrollUUID","getScrollCompendiumUUID","scroll","location","heightenedLevel","temporary","traits","traditions","sourceId","flags","core","description","createSpellScroll","createSpellSource","getChoiSetRuleSelection","item","option","_source","rules","find","rollOption","selection","proficiencyLabel","proficiencyLevels","randomOption","options","result","Roll","evaluate","total","halfLevelValue","actor","Math","max","floor","damageLabel","damage","weaponDamage","weaponTraitLabel","trait","weaponTraits","weaponPropertyRunesLabel","rune","weaponPropertyRunes","hasFreePropertySlot","potency","runes","property","getFreePropertyRuneSlot","potencyRune","createSpellDaily","label","daily","rows","slug","search","process","addSpell","fields","messages","add","TricksterAce","category","drop","castTime","time","includes","parseInt","createScrollChain","uuids","children","createRow","addItem","field","indexOf","row","minActorLevel","child","condition","childPredicate","createFeatDaily","addFeat","feat","combatFlexibility","flexibility","improved","feattype","createLanguageDaily","actorLanguages","sort","labelizer","addRule","selected","MIND_WEAPON_UUID","WEAPON_BASE_TYPES","die","usage","WEAPON_GROUPS","slashing","piercing","bludgeoning","WEAPON_TRAITS","WEAPON_DAMAGE_TYPES","mindSmith","message","fix","content","weapon","Dialog","wait","title","buttons","yes","icon","callback","onWeaponSelected","no","close","id","width","log","createEmbeddedDocuments","not","updateItem","addGroup","smith","_id","mental","deepClone","advanced","runic","freeSlot","rest","runeSlot","html","val","stats","setProperty","RATION_UUID","getRations","itemTypes","flatMap","items","getItems","findItemWithSourceId","Array","isArray","list","includesSourceId","getItemSourceIdCondition","createResistancelDaily","resistances","random","scrollSavant","prepare","maxSlot","maxTradition","tradition","entry","spellcasting","slots","Number","min","getSpellcastingTraditionDetails","first","second","third","fourth","map","rowName","custom","createTrainedSkillDaily","actorSkills","skills","input","createTrainedLoreDaily","thaumaturgeTome","createChildCondition","actorLevel","paragon","intense","adept","masters","experts","trained","AsyncFunction","constructor","BUILTINS_UUIDS","parseDailies","conjunction","UUIDS","dailies","prefix","original","keyWithPrefix","err","parseCustomDailies","clear","CUSTOM_DAILIES","customs","code","entries","CUSTOM_UUIDS","getDailies","isOfType","isInvested","Item","getDailyFromSourceId","isObject","PredicatePF2e","isValid","statements","super","this","static","every","s","StatementValidator","isStatement","test","clone","foundry","logCompatibilityWarning","CONST","COMPATIBILITY_MODES","WARNING","since","until","all","any","or","nor","flat","convertLegacyData","domain","isTrue","statement","isBinaryOp","testBinaryOp","isCompound","testCompound","eq","operator","left","right","domainArray","from","leftValues","isNaN","d","startsWith","exec","rightValues","some","l","r","and","subProp","nand","if","then","isAtomic","operands","binaryOperators","isAnd","isOr","isNand","isNor","isNot","isIf","templateOrders","select","combo","alert","getTemplate","saved","rowsObj","childrenObj","reduce","prepareArgs","dailyArgs","groupLabel","getProcessedValue","labeled","predicates","template","save","savedRow","rowLabel","rowTemplate","order","isComboRow","isSelectRow","isRandomRow","tmp","labelize","isDropRow","isAlerRow","onDropFeat","target","featType","types","localizeAll","testFn","translatedSkills","toLocaleLowerCase","lang","getTranslatedSkills","prerequisites","prerequisite","rarity","rarities","sources","dataset","onDropItem","onDropSpell","school","categories","spellCategories","isCantrip","isFocusSpell","isRitual","schools","config","nextElementSibling","classList","remove","getFamiliarPack","packs","processData","getFields","addItems","addRules","updateItems","msg","addedSpells","getRules","existing","splice","feats","spells","messageObj","group","familiar","pack","abilities","ids","effect","deleteEmbeddedDocuments","getDocument","rations","uses","quantity","delete","remaining","fakeChatUUID","nb","parent","parentId","onDelete","rowFields","forEach","prepared","showSlotlessLevels","showUnpreparedSpells","proficiency","classDC","class","getProperty","update","expandObject","rested","updateEmbeddedDocuments","messageList","a","b","parseMessages","ChatMessage","create","speaker","getSpeaker","elements","element","toArray","previousElementSibling","getSimplifiableValue","parseFeatFilter","parsed","searchText","orderBy","orderDirection","parseSpellFilter","DailiesInterface","Application","_actor","_randomInterval","_dailies","_dailyArgs","_saved","_children","_custom","_predicate","_rows","defaultOptions","mergeObject","height","submitOnClose","submitOnChange","dragDrop","dropSelector","templates","nbAbilityies","attributes","familiarAbilities","toString","last","groups","getData","dump","placeholder","render","force","clearInterval","setInterval","each","_","selectedIndex","activateListeners","on","bind","event","HTMLLabelElement","dataString","dataTransfer","JSON","parse","preventDefault","currentTarget","fixed","pf2e","compendiumBrowser","openTab","addClass","removeClass","warns","emptyInputs","alertInputs","$","prevAll","attr","getModule","modules","tome","savant","mind","TEMPLATES","EXAMPLES","DailyCustoms","FormApplication","_selectedTemplate","_selectedDaily","_monaco","closeOnSubmit","scrollY","formData","examples","isExample","monaco","active","api","area","createEditor","onDidChangeModelContent","debounce","getValue","form","querySelector","stipped","findIndex","stopPropagation","confirm","FormData","fromEntries","simplyfiable","splitList","split","fns","stringify","shift","match","strArgs","numbered","Hooks","modifiedRules","setFlag","sheet","isOwner","hasAnyDaily","append","openDailiesInterface","once","scope","hint","choices","choice","register","registerSetting","default","onChange","restricted","registerMenu","registerSettingMenu"],"sourceRoot":""}