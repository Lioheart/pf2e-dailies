{"version":3,"file":"main.js","mappings":"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B,CACHrE,IAAK,aACL2C,OACA0B,QACA,CAAC,IAAY,EAErB,CCpMO,MAAM4G,EAAgB,CACzB,SACA,WACA,UACA,QACA,UACA,SACA,WACA,QACA,SACA,SACA,cACA,QACA,UACA,QACA,OACA,YACA,aACA,UACA,QACA,mBACA,UACA,WACA,QACA,WACA,QACA,UACA,QACA,UACA,YACA,UACA,WACA,aACA,SACA,UACA,SACA,UACA,UACA,UACA,aACA,QACA,SACA,UACA,SACA,OACA,UACA,QACA,UACA,UACA,WACA,QACA,UACA,QACA,QACA,YACA,UACA,UACA,SACA,UACA,SACA,UACA,WACA,SACA,QACA,SACA,SACA,SACA,UACA,WACA,UACA,OACA,UACA,YACA,UACA,UACA,SACA,eACA,UACA,QACA,UACA,SACA,QACA,SACA,QACA,UACA,aACA,QACA,SACA,eACA,OACA,UACA,SACA,WACA,QACA,aACA,UACA,UACA,SACA,YACA,UACA,SACA,WACA,OACA,UACA,WACA,YACA,OACA,UACA,WC5GSC,EAAmB,CAC5BC,IAAK,aACLC,IAAK,SACLC,IAAK,YACLC,IAAK,WACLC,IAAK,YACLC,IAAK,YACLC,IAAK,eACLC,IAAK,WACLC,IAAK,SACLC,IAAK,YACLC,IAAK,cACLC,IAAK,WACLC,IAAK,UACLC,IAAK,UACLC,IAAK,WACLC,IAAK,YAKIC,GAFsBhI,OAAOiI,KAAKlB,GAEf/G,OAAOkI,OAAOnB,ICfxCoB,EAAY,IAAIC,MAClB,CACIC,cAAe,EACfC,aAAc,EACdC,kBAAmB,EACnBC,aAAc,GAElB,CACIC,IAAG,CAACC,EAAKC,IACEA,KAAQD,EAAMA,EAAIC,GAAwB,KAKtD,SAASC,EAAQvK,GACpB,MAAMkE,EAAQlE,EAAMkE,MACde,EAAS3H,EAAQ0C,EAAO,UAAY,CAAC,EACrCwK,EPoGH,SAAuBxK,GAC1B,MAAMwK,EAAa,CAAC,EACdpK,EAAQ,IAAIJ,EAAMC,UAAUwG,QAASzG,EAAMC,UAAUwK,WAC3D,IAAK,MAAM3K,KAAQM,EAAO,CACtB,MAAMvC,E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","sources":["webpack:///../../../../foundryVTT-projects/@utils/module.ts","webpack:///../../../../foundryVTT-projects/@utils/foundry/flags.ts","webpack:///../../../../foundryVTT-projects/@utils/pf2e/utils.ts","webpack:///../../../../foundryVTT-projects/@utils/foundry/item.ts","webpack:///../../../../foundryVTT-projects/@utils/foundry/notification.ts","webpack:///../../../../foundryVTT-projects/@utils/foundry/localize.ts","webpack:///./src/categories.ts","webpack:///../../../../foundryVTT-projects/@utils/foundry/path.ts","webpack:///../../../../foundryVTT-projects/@utils/foundry/uuid.ts","webpack:///../../../../foundryVTT-projects/@utils/pf2e/spell.ts","webpack:///./src/apps/interface/accept.ts","webpack:///../../../../foundryVTT-projects/@utils/pf2e/languages.ts","webpack:///../../../../foundryVTT-projects/@utils/pf2e/skills.ts","webpack:///./src/apps/interface/data.ts","webpack:///../../../../foundryVTT-projects/@utils/utils.ts","webpack:///./src/apps/interface/search.ts","webpack:///./src/apps/interface/drop.ts","webpack:///./src/apps/interface.ts","webpack:///./src/main.ts","webpack:///./src/rest.ts","webpack:///./src/sheet.ts"],"sourcesContent":["export let MODULE_ID = ''\r\n\r\nexport function setModuleID(id: string) {\r\n    if (!MODULE_ID) MODULE_ID = id\r\n}\r\n","import { MODULE_ID } from '@utils/module'\r\n\r\nexport function hasModuleFlag(doc: foundry.abstract.Document) {\r\n    return getProperty(doc, `flags.${MODULE_ID}`) !== undefined\r\n}\r\n\r\nexport function getFlag<T extends unknown>(doc: foundry.abstract.Document, key: string): T | undefined\r\nexport function getFlag<T extends unknown>(doc: foundry.abstract.Document, key: string, fallback: T): T\r\nexport function getFlag<T extends unknown>(doc: foundry.abstract.Document, key: string, fallback?: T): T | undefined {\r\n    return (doc.getFlag(MODULE_ID, key) as T | undefined) ?? fallback\r\n}\r\n\r\n/**\r\n * @template {foundry.Document} T\r\n * @param {T} doc\r\n * @param {string} key\r\n * @param {any} value\r\n * @returns T\r\n */\r\nexport function setFlag(doc: foundry.abstract.Document, key: string, value: unknown) {\r\n    return doc.setFlag(MODULE_ID, key, value)\r\n}\r\n\r\nexport function getSourceId<T extends DocumentUUID>(doc: ClientDocument) {\r\n    return doc.getFlag('core', 'sourceId') as T | undefined\r\n}\r\n\r\nexport function hasSourceId(doc: ClientDocument, sourceId: DocumentUUID) {\r\n    return getSourceId(doc) === sourceId\r\n}\r\n\r\nexport function includesSourceId(doc: ClientDocument, list: DocumentUUID[]) {\r\n    const sourceId = getSourceId(doc)\r\n    return sourceId ? list.includes(sourceId) : false\r\n}\r\n","const wordCharacter = String.raw`[\\p{Alphabetic}\\p{Mark}\\p{Decimal_Number}\\p{Join_Control}]`\r\nconst nonWordCharacter = String.raw`[^\\p{Alphabetic}\\p{Mark}\\p{Decimal_Number}\\p{Join_Control}]`\r\nconst nonWordCharacterRE = new RegExp(nonWordCharacter, 'gu')\r\n\r\nconst wordBoundary = String.raw`(?:${wordCharacter})(?=${nonWordCharacter})|(?:${nonWordCharacter})(?=${wordCharacter})`\r\nconst nonWordBoundary = String.raw`(?:${wordCharacter})(?=${wordCharacter})`\r\nconst lowerCaseLetter = String.raw`\\p{Lowercase_Letter}`\r\nconst upperCaseLetter = String.raw`\\p{Uppercase_Letter}`\r\nconst lowerCaseThenUpperCaseRE = new RegExp(`(${lowerCaseLetter})(${upperCaseLetter}${nonWordBoundary})`, 'gu')\r\n\r\nconst nonWordCharacterHyphenOrSpaceRE = /[^-\\p{White_Space}\\p{Alphabetic}\\p{Mark}\\p{Decimal_Number}\\p{Join_Control}]/gu\r\nconst upperOrWordBoundariedLowerRE = new RegExp(`${upperCaseLetter}|(?:${wordBoundary})${lowerCaseLetter}`, 'gu')\r\n\r\n/** Check if an element is present in the provided set. Especially useful for checking against literal sets */\r\nexport function setHasElement<T extends Set<unknown>>(set: T, value: unknown): value is SetElement<T> {\r\n    return set.has(value)\r\n}\r\n\r\n/**\r\n * The system's sluggification algorithm for labels and other terms.\r\n * @param text The text to sluggify\r\n * @param [options.camel=null] The sluggification style to use\r\n */\r\nexport function sluggify(text: string, { camel = null }: { camel?: 'dromedary' | 'bactrian' | null } = {}): string {\r\n    // Sanity check\r\n    if (typeof text !== 'string') {\r\n        console.warn('Non-string argument passed to `sluggify`')\r\n        return ''\r\n    }\r\n\r\n    switch (camel) {\r\n        case null:\r\n            return text\r\n                .replace(lowerCaseThenUpperCaseRE, '$1-$2')\r\n                .toLowerCase()\r\n                .replace(/['’]/g, '')\r\n                .replace(nonWordCharacterRE, ' ')\r\n                .trim()\r\n                .replace(/[-\\s]+/g, '-')\r\n        case 'bactrian': {\r\n            const dromedary = sluggify(text, { camel: 'dromedary' })\r\n            return dromedary.charAt(0).toUpperCase() + dromedary.slice(1)\r\n        }\r\n        case 'dromedary':\r\n            return text\r\n                .replace(nonWordCharacterHyphenOrSpaceRE, '')\r\n                .replace(/[-_]+/g, ' ')\r\n                .replace(upperOrWordBoundariedLowerRE, (part, index) => (index === 0 ? part.toLowerCase() : part.toUpperCase()))\r\n                .replace(/\\s+/g, '')\r\n        default:\r\n            throw ErrorPF2e(\"I don't think that's a real camel.\")\r\n    }\r\n}\r\n\r\nexport function ErrorPF2e(message: string): Error {\r\n    return Error(`PF2e System | ${message}`)\r\n}\r\n","import { getSourceId, includesSourceId } from '@utils/foundry/flags'\r\n\r\ntype ActorItemTypes<A extends Actor> = (keyof A['itemTypes'])[]\r\n\r\nfunction getItemSourceIdCondition(sourceId: ItemUUID | ItemUUID[]) {\r\n    return Array.isArray(sourceId)\r\n        ? (item: Item) => includesSourceId(item, sourceId)\r\n        : (item: Item) => getSourceId(item) === sourceId\r\n}\r\n\r\nfunction getItems<A extends Actor, I extends Item = CollectionValue<A['items']>>(actor: A, itemTypes?: ActorItemTypes<A>) {\r\n    return (itemTypes ? itemTypes.flatMap(type => actor.itemTypes[type as string]) : actor.items) as Embedded<I>[]\r\n}\r\n\r\nexport function findItemWithSourceId<A extends Actor, I extends Item = CollectionValue<A['items']>>(\r\n    actor: A,\r\n    sourceId: ItemUUID,\r\n    itemTypes?: ActorItemTypes<A>\r\n) {\r\n    return getItems<A, I>(actor, itemTypes).find(getItemSourceIdCondition(sourceId))\r\n}\r\n\r\nexport function hasItemWithSourceId<A extends Actor, I extends Item = CollectionValue<A['items']>>(\r\n    actor: A,\r\n    sourceId: ItemUUID | ItemUUID[],\r\n    itemTypes?: ActorItemTypes<A>\r\n) {\r\n    return getItems<A, I>(actor, itemTypes).some(getItemSourceIdCondition(sourceId))\r\n}\r\n\r\nexport function filterItemsWithSourceId<A extends Actor, I extends Item = CollectionValue<A['items']>>(\r\n    actor: A,\r\n    sourceId: ItemUUID | ItemUUID[],\r\n    itemTypes?: ActorItemTypes<A>\r\n) {\r\n    return getItems<A, I>(actor, itemTypes).filter(getItemSourceIdCondition(sourceId))\r\n}\r\n","import { localize } from '@utils/foundry/localize'\r\n\r\nexport type NotifyArgs = [str: string, arg1?: boolean | Record<string, string>, arg2?: boolean]\r\n\r\nfunction notify(\r\n    str: string,\r\n    arg1?: 'warning' | 'info' | 'error' | boolean | Record<string, string>,\r\n    arg2?: boolean | Record<string, string>,\r\n    arg3?: boolean\r\n) {\r\n    const type = typeof arg1 === 'string' ? arg1 : 'info'\r\n    const data = typeof arg1 === 'object' ? arg1 : typeof arg2 === 'object' ? arg2 : undefined\r\n    const permanent = typeof arg1 === 'boolean' ? arg1 : typeof arg2 === 'boolean' ? arg2 : arg3 ?? false\r\n\r\n    ui.notifications.notify(localize(str, data), type, { permanent })\r\n}\r\n\r\nexport function warn(...args: NotifyArgs) {\r\n    const [str, arg1, arg2] = args\r\n    notify(str, 'warning', arg1, arg2)\r\n}\r\n\r\nexport function info(...args: NotifyArgs) {\r\n    const [str, arg1, arg2] = args\r\n    notify(str, 'info', arg1, arg2)\r\n}\r\n\r\nexport function error(...args: NotifyArgs) {\r\n    const [str, arg1, arg2] = args\r\n    notify(str, 'error', arg1, arg2)\r\n}\r\n","import { MODULE_ID } from '@utils/module'\r\nimport { warn, NotifyArgs, info, error } from '@utils/foundry/notification'\r\n\r\nexport type LocalizeArgs = [key: string, data?: Record<string, string | number>]\r\n\r\nexport function localize(...args: LocalizeArgs) {\r\n    let [key, data] = args\r\n    key = `${MODULE_ID}.${key}`\r\n    if (data) return game.i18n.format(key, data)\r\n    return game.i18n.localize(key)\r\n}\r\n\r\nexport function hasLocalization(key: string) {\r\n    return game.i18n.has(`${MODULE_ID}.${key}`, false)\r\n}\r\n\r\nexport function localizePath(key: string) {\r\n    return `${MODULE_ID}.${key}`\r\n}\r\n\r\nexport function subLocalize(subKey: string) {\r\n    const fn = (...args: LocalizeArgs) => localize(`${subKey}.${args[0]}`, args[1])\r\n\r\n    Object.defineProperties(fn, {\r\n        warn: {\r\n            value: (...args: NotifyArgs) => warn(`${subKey}.${args[0]}`, args[1], args[2]),\r\n            enumerable: false,\r\n            configurable: false,\r\n        },\r\n        info: {\r\n            value: (...args: NotifyArgs) => info(`${subKey}.${args[0]}`, args[1], args[2]),\r\n            enumerable: false,\r\n            configurable: false,\r\n        },\r\n        error: {\r\n            value: (...args: NotifyArgs) => error(`${subKey}.${args[0]}`, args[1], args[2]),\r\n            enumerable: false,\r\n            configurable: false,\r\n        },\r\n        has: {\r\n            value: (key: string) => hasLocalization(`${subKey}.${key}`),\r\n            enumerable: false,\r\n            configurable: false,\r\n        },\r\n    })\r\n\r\n    return fn as ((...args: LocalizeArgs) => string) & {\r\n        warn: (...args: NotifyArgs) => void\r\n        info: (...args: NotifyArgs) => void\r\n        error: (...args: NotifyArgs) => void\r\n        has: (key: string) => boolean\r\n    }\r\n}\r\n","import { getSourceId, includesSourceId } from '@utils/foundry/flags'\r\nimport { filterItemsWithSourceId } from '@utils/foundry/item'\r\nimport { hasLocalization, localize } from '@utils/foundry/localize'\r\n\r\nexport const RULE_TYPES = ['addedLanguage', 'trainedSkill', 'elementalist'] as const\r\n\r\nexport const CATEGORIES = [\r\n    // ElementalistDedication\r\n    {\r\n        type: 'elementalist',\r\n        category: 'elementalist',\r\n        uuids: ['Compendium.pf2e.feats-srd.tx9pkrpmtqe4FnvS'],\r\n    },\r\n    // TrainedLore\r\n    {\r\n        type: 'trainedLore',\r\n        category: 'study',\r\n        uuids: ['Compendium.pf2e.feats-srd.aLJsBBZzlUK3G8MW'],\r\n    },\r\n    // TrainedSkill\r\n    {\r\n        type: 'trainedSkill',\r\n        category: 'ageless',\r\n        uuids: ['Compendium.pf2e.feats-srd.wylnETwIz32Au46y'],\r\n    },\r\n    {\r\n        type: 'trainedSkill',\r\n        category: 'longevity',\r\n        uuids: ['Compendium.pf2e.feats-srd.WoLh16gyDp8y9WOZ'],\r\n    },\r\n    {\r\n        type: 'trainedSkill',\r\n        category: 'memories',\r\n        uuids: ['Compendium.pf2e.feats-srd.ptEOt3lqjxUnAW62'],\r\n    },\r\n    {\r\n        type: 'trainedSkill',\r\n        category: 'studies',\r\n        uuids: ['Compendium.pf2e.feats-srd.9bgl6qYWKHzqWZj0'],\r\n    },\r\n    // AddedLanguage\r\n    {\r\n        type: 'addedLanguage',\r\n        category: 'linguistics',\r\n        uuids: ['Compendium.pf2e.feats-srd.eCWQU16hRLfN1KaX'],\r\n    },\r\n    {\r\n        type: 'addedLanguage',\r\n        category: 'borts',\r\n        uuids: ['Compendium.pf2e.equipment-srd.iS7hAQMAaThHYE8g'],\r\n    },\r\n    // CombatFlexibility\r\n    {\r\n        type: 'combatFlexibility',\r\n        category: 'flexibility',\r\n        uuids: ['Compendium.pf2e.classfeatures.8g6HzARbhfcgilP8', 'Compendium.pf2e.classfeatures.W2rwudMNcAxs8VoX'],\r\n    },\r\n    // ScrollSavant\r\n    {\r\n        type: 'scrollSavant',\r\n        category: 'savant',\r\n        uuids: ['Compendium.pf2e.feats-srd.u5DBg0LrBUKP0JsJ'],\r\n    },\r\n    // ScrollChain\r\n    {\r\n        type: 'scrollChain',\r\n        category: 'esoterica',\r\n        uuids: [\r\n            'Compendium.pf2e.feats-srd.OqObuRB8oVSAEKFR',\r\n            'Compendium.pf2e.feats-srd.nWd7m0yRcIEVUy7O',\r\n            'Compendium.pf2e.feats-srd.LHjPTV5vP3MOsPPJ',\r\n        ],\r\n    },\r\n    {\r\n        type: 'scrollChain',\r\n        category: 'trickster',\r\n        uuids: [\r\n            'Compendium.pf2e.feats-srd.ROAUR1GhC19Pjk9C',\r\n            'Compendium.pf2e.feats-srd.UrOj9TROtn8nuxPf',\r\n            'Compendium.pf2e.feats-srd.lIg5Gzz7W70jfbk1',\r\n        ],\r\n    },\r\n] as const\r\n\r\ntype UuidsType = [ItemUUID, Omit<Category, 'uuids'> & { index: number }]\r\nconst [UUIDS, EQUIP_UUID, FEATS_UUID, RULES_UUIDS, FLATTENED] = (() => {\r\n    const UUIDS: UuidsType[] = []\r\n    const FLATTENED = {} as Record<CategoryName, ItemUUID[]>\r\n    const FEATS: ItemUUID[] = []\r\n    const EQUIP: ItemUUID[] = []\r\n    const RULES: ItemUUID[] = []\r\n\r\n    for (const { type, category, uuids } of CATEGORIES) {\r\n        FLATTENED[category] ??= []\r\n        FLATTENED[category].push(...uuids)\r\n        UUIDS.push(...uuids.map((uuid, index) => [uuid, { type, category, index }] as UuidsType))\r\n        if (RULE_TYPES.includes(type as typeof RULE_TYPES[number])) RULES.push(...uuids)\r\n        if (uuids[0].includes('equipment-srd')) EQUIP.push(uuids[0])\r\n        else FEATS.push(uuids[0])\r\n    }\r\n\r\n    return [new Map(UUIDS), EQUIP, FEATS, RULES, FLATTENED]\r\n})()\r\n\r\nexport function hasAnyCategory(actor: CharacterPF2e) {\r\n    return (\r\n        actor.itemTypes.feat.some(item => includesSourceId(item, FEATS_UUID)) ||\r\n        actor.itemTypes.equipment.some(item => includesSourceId(item, EQUIP_UUID) && item.isInvested)\r\n    )\r\n}\r\n\r\nexport function getCategoryUUIDS(category: CategoryName) {\r\n    return FLATTENED[category]\r\n}\r\n\r\nexport function getRuleItems(actor: CharacterPF2e) {\r\n    return filterItemsWithSourceId(actor, RULES_UUIDS, ['feat', 'equipment'])\r\n}\r\n\r\nexport function isRuleItem(item: ItemPF2e) {\r\n    return includesSourceId(item, RULES_UUIDS)\r\n}\r\n\r\nexport function hasCategories(actor: CharacterPF2e) {\r\n    const categories = {} as Record<CategoryName, Omit<ReturnedCategory, 'items'> & { items: (undefined | true)[] }>\r\n    const items = [...actor.itemTypes.feat, ...actor.itemTypes.equipment]\r\n    for (const item of items) {\r\n        const sourceId = getSourceId<ItemUUID>(item)\r\n        if (!sourceId || (item.isOfType('equipment') && !item.isInvested)) continue\r\n\r\n        const entry = UUIDS.get(sourceId)\r\n        if (!entry) continue\r\n\r\n        const { category, index, type } = entry\r\n        categories[category] ??= { category, type, label: '', items: [] }\r\n        categories[category].items[index] = true\r\n        if (index === 0) {\r\n            const key = `label.${category}`\r\n            const label = hasLocalization(key) ? localize(key) : item.name\r\n            categories[category].label = label\r\n        }\r\n    }\r\n    return Object.values(categories).filter(x => x.items[0]) as ReturnedCategory[]\r\n}\r\n\r\nexport function isCategory<N extends CategoryType, C extends Category = ExtractedCategory<N>>(\r\n    object: ReturnedCategory,\r\n    category: N\r\n): object is ReturnedCategory<C> {\r\n    return object.type === category\r\n}\r\n","import { MODULE_ID } from '@utils/module'\r\n\r\nexport function getSettingLocalizationPath(...path: string[]) {\r\n    return `${MODULE_ID}.settings.${path.join('.')}`\r\n}\r\n\r\nexport function flagsUpdatePath(...path: string[]) {\r\n    return `flags.${MODULE_ID}.${path.join('/')}`\r\n}\r\n\r\nexport function templatePath(...path: string[]) {\r\n    path = path.filter(x => typeof x === 'string')\r\n    return `modules/${MODULE_ID}/templates/${path.join('/')}`\r\n}\r\n\r\nexport function imagePath(...path: string[]) {\r\n    return `modules/${MODULE_ID}/images/${path.join('/')}`\r\n}\r\n","export function chatUUID(uuid: string, name?: string) {\r\n    if (name) return `@UUID[${uuid}]{${name}}`\r\n    return `@UUID[${uuid}]`\r\n}\r\n\r\nexport function fakeChatUUID(name: string) {\r\n    return `<span style=\"background: #DDD;\r\n    padding: 1px 4px;\r\n    border: 1px solid var(--color-border-dark-tertiary);\r\n    border-radius: 2px;\r\n    white-space: nowrap;\r\n    word-break: break-all;\">${name}</span>`\r\n}\r\n","import { chatUUID } from '@utils/foundry/uuid'\r\n\r\nexport const FOUR_ELEMENTS = ['air', 'earth', 'fire', 'water'] as const\r\n\r\nexport const MAGIC_TRADITIONS = new Set(['arcane', 'divine', 'occult', 'primal'] as const)\r\n\r\nexport const SPELL_COMPONENTS = ['focus', 'material', 'somatic', 'verbal'] as const\r\n\r\nconst scrolls: (ConsumablePF2e | null)[] = []\r\nexport async function createSpellScroll(uuid: ItemUUID, level: OneToTen | false, temp = false) {\r\n    const spell = (await fromUuid<SpellPF2e>(uuid))?.toObject()\r\n    if (!spell) return null\r\n\r\n    if (level === false) level = spell.system.level.value\r\n\r\n    const scrollUUID = getScrollCompendiumUUID(level)\r\n    scrolls[level] ??= await fromUuid<ConsumablePF2e>(scrollUUID)\r\n\r\n    const scroll = scrolls[level]?.toObject()\r\n    if (!scroll) return null\r\n\r\n    spell.system.location.heightenedLevel = level\r\n\r\n    scroll.name = `Scroll of ${spell.name} (Level ${level})`\r\n    scroll.system.temporary = temp\r\n    scroll.system.spell = spell\r\n    scroll.system.traits.value.push(...spell.system.traditions.value)\r\n\r\n    const sourceId = spell.flags.core?.sourceId\r\n    if (sourceId) scroll.system.description.value = `${chatUUID(sourceId)}\\n<hr />${scroll.system.description.value}`\r\n\r\n    return scroll\r\n}\r\n\r\nfunction getScrollCompendiumUUID(level: OneToTen): ItemUUID {\r\n    return `Compendium.pf2e.equipment-srd.${scrollCompendiumIds[level]}`\r\n}\r\n\r\nconst scrollCompendiumIds: Record<number, string> = {\r\n    1: 'RjuupS9xyXDLgyIr', // Compendium.pf2e.equipment-srd.RjuupS9xyXDLgyIr\r\n    2: 'Y7UD64foDbDMV9sx',\r\n    3: 'ZmefGBXGJF3CFDbn',\r\n    4: 'QSQZJ5BC3DeHv153',\r\n    5: 'tjLvRWklAylFhBHQ',\r\n    6: '4sGIy77COooxhQuC',\r\n    7: 'fomEZZ4MxVVK3uVu',\r\n    8: 'iPki3yuoucnj7bIt',\r\n    9: 'cFHomF3tty8Wi1e5',\r\n    10: 'o1XIHJ4MJyroAHfF',\r\n}\r\n","import { getCategoryUUIDS, getRuleItems, RULE_TYPES } from '@src/categories'\r\nimport { hasSourceId, setFlag } from '@utils/foundry/flags'\r\nimport { findItemWithSourceId } from '@utils/foundry/item'\r\nimport { subLocalize } from '@utils/foundry/localize'\r\nimport { chatUUID } from '@utils/foundry/uuid'\r\nimport { MODULE_ID } from '@utils/module'\r\nimport { createSpellScroll } from '@utils/pf2e/spell'\r\nimport { sluggify } from '@utils/pf2e/utils'\r\n\r\nconst localize = subLocalize('interface.message')\r\n\r\nexport async function accept(html: JQuery, actor: CharacterPF2e) {\r\n    let message = ''\r\n    const flags = {} as SavedCategories\r\n    const fields = html.find('.window-content .content').find('input, select').toArray() as TemplateField[]\r\n    const ruleItems = fields.some(field => RULE_TYPES.includes(field.dataset.type as RulesName)) ? getRuleItems(actor) : []\r\n    const addData: Partial<BaseItemSourcePF2e>[] = []\r\n    const updateData: EmbeddedDocumentUpdateData<ItemPF2e>[] = []\r\n\r\n    const messages = {\r\n        languages: [] as { uuid: ItemUUID; selected: string }[],\r\n        skills: [] as { uuid: ItemUUID; selected: string }[],\r\n        resistances: [] as { uuid: ItemUUID; selected: string }[],\r\n        feats: [] as { uuid: ItemUUID }[],\r\n        scrolls: [] as { uuid: ItemUUID }[],\r\n    }\r\n\r\n    for (const field of fields) {\r\n        const type = field.dataset.type\r\n\r\n        if (type === 'scrollChain' || type === 'scrollSavant') {\r\n            const { uuid, category } = field.dataset\r\n            const level = Number(field.dataset.level) as OneToTen\r\n            const name = field.value\r\n\r\n            if (uuid) {\r\n                const scroll = await createSpellScroll(uuid, level, true)\r\n                if (scroll) addData.push(scroll)\r\n            }\r\n\r\n            flags[category] ??= []\r\n            flags[category]!.push({ name, uuid })\r\n        } else if (type === 'combatFlexibility') {\r\n            const { category, uuid, level } = field.dataset\r\n            const name = field.value\r\n            const index = level === '8' ? 0 : 1\r\n            const parentUUID = getCategoryUUIDS(category)[index]\r\n\r\n            if (parentUUID) {\r\n                const parent = findItemWithSourceId(actor, parentUUID) as FeatPF2e\r\n                const feat = await createTemporaryFeat(uuid, parent)\r\n                if (feat) addData.push(feat)\r\n            }\r\n\r\n            flags[category] ??= []\r\n            flags[category]!.push({ name, uuid })\r\n        } else if (type === 'trainedLore') {\r\n            const category = field.dataset.category\r\n            const uuid = getCategoryUUIDS(category)[0]\r\n            const selected = field.value\r\n\r\n            if (uuid) {\r\n                const lore = createTemporaryLore(selected, 1)\r\n                addData.push(lore)\r\n                messages.skills.push({ uuid, selected })\r\n            }\r\n\r\n            flags[category] = selected\r\n        } else {\r\n            const category = field.dataset.category\r\n            const uuid = getCategoryUUIDS(category)[0]\r\n            const ruleItem = ruleItems.find(item => hasSourceId(item, uuid))\r\n            if (!ruleItem) continue\r\n\r\n            const selected = field.value\r\n            const rules = deepClone(ruleItem._source.system.rules)\r\n\r\n            for (let i = rules.length - 1; i >= 0; i--) {\r\n                const rule = rules[i]\r\n                if ('pf2e-dailies' in rule) rules.splice(i, 1)\r\n            }\r\n\r\n            if (type === 'addedLanguage') {\r\n                rules.push(createLanguageRule(selected as Language))\r\n                messages.languages.push({ uuid, selected })\r\n            } else if (type === 'elementalist') {\r\n                rules.push(createResistanceRule(selected as FourElementTrait, 'half'))\r\n                messages.resistances.push({ uuid, selected })\r\n            } else if (type === 'trainedSkill') {\r\n                rules.push(createTrainedSkillRule(selected as SkillLongForm))\r\n                messages.skills.push({ uuid, selected })\r\n            }\r\n\r\n            // @ts-ignore\r\n            flags[category] = selected\r\n            updateData.push({ _id: ruleItem.id, 'system.rules': rules })\r\n        }\r\n    }\r\n\r\n    const pushMessages = (type: string, list: { uuid: ItemUUID; selected?: string }[]) => {\r\n        if (!list.length) return\r\n\r\n        if (message) message += '<hr />'\r\n\r\n        const title = localize.has(type) ? localize(type) : localize('gained', { type })\r\n        message += `<p><strong>${title}</strong></p>`\r\n\r\n        for (const { uuid, selected } of list) {\r\n            if (selected === undefined) message += `<p>${chatUUID(uuid)}</p>`\r\n            else message += `<p>${chatUUID(uuid)} <span style=\"text-transform: capitalize;\">${selected}</span></p>`\r\n        }\r\n    }\r\n\r\n    if (addData.length) {\r\n        const items = (await actor.createEmbeddedDocuments('Item', addData)) as ItemPF2e[]\r\n        for (const item of items) {\r\n            const uuid = item.uuid\r\n\r\n            if (item.type === 'feat') messages.feats.push({ uuid })\r\n            else if (item.type !== 'lore') messages.scrolls.push({ uuid })\r\n\r\n            // we add a flag to the parent feat to have the cascade effect in the tab\r\n            const parentId = item.getFlag<string>('pf2e', 'grantedBy.id')\r\n            if (parentId) {\r\n                const slug = sluggify(item.name, { camel: 'dromedary' })\r\n                const path = `flags.pf2e.itemGrants.${slug}`\r\n                updateData.push({ _id: parentId, [path]: { id: item.id, onDelete: 'detach' } })\r\n            }\r\n        }\r\n    }\r\n\r\n    pushMessages('languages', messages.languages)\r\n    pushMessages('skills', messages.skills)\r\n    pushMessages('resistances', messages.resistances)\r\n    pushMessages('feats', messages.feats)\r\n    pushMessages('scrolls', messages.scrolls)\r\n\r\n    if (updateData.length) await actor.updateEmbeddedDocuments('Item', updateData)\r\n\r\n    await setFlag(actor, 'saved', flags)\r\n\r\n    message = `${localize('changes')}<hr>${message}`\r\n    ChatMessage.create({ content: message, speaker: ChatMessage.getSpeaker({ actor }) })\r\n}\r\n\r\nfunction createTemporaryLore(name: string, rank: OneToFour) {\r\n    const data: Partial<BaseItemSourcePF2e> = {\r\n        type: 'lore',\r\n        img: 'systems/pf2e/icons/default-icons/lore.svg',\r\n        name: name,\r\n    }\r\n\r\n    setProperty(data, `flags.${MODULE_ID}.temporary`, true)\r\n    setProperty(data, 'system.proficient.value', rank)\r\n\r\n    return data\r\n}\r\n\r\nasync function createTemporaryFeat(uuid: ItemUUID, parent: FeatPF2e) {\r\n    const feat = ((await fromUuid(uuid)) as FeatPF2e | null)?.toObject()\r\n    if (!feat) return\r\n\r\n    setProperty(feat, 'flags.pf2e.grantedBy', { id: parent.id, onDelete: 'cascade' })\r\n    setProperty(feat, `flags.${MODULE_ID}.temporary`, true)\r\n\r\n    return feat\r\n}\r\n\r\nfunction createLanguageRule(language: Language) {\r\n    return {\r\n        key: 'ActiveEffectLike',\r\n        mode: 'add',\r\n        path: 'system.traits.languages.value',\r\n        value: language,\r\n        [MODULE_ID]: true,\r\n    } as const\r\n}\r\n\r\nfunction createTrainedSkillRule(skill: SkillLongForm) {\r\n    return {\r\n        key: 'ActiveEffectLike',\r\n        mode: 'upgrade',\r\n        path: `system.skills.${skill}.rank`,\r\n        value: 1,\r\n        [MODULE_ID]: true,\r\n    } as const\r\n}\r\n\r\nfunction createResistanceRule(type: ResistanceType, value: number | string | 'half') {\r\n    if (value === 'half') value = 'max(1,floor(@actor.level/2))'\r\n    return {\r\n        key: 'Resistance',\r\n        type,\r\n        value,\r\n        [MODULE_ID]: true,\r\n    } as const\r\n}\r\n","export const LANGUAGE_LIST = [\r\n    'common',\r\n    'draconic',\r\n    'dwarven',\r\n    'elven',\r\n    'gnomish',\r\n    'goblin',\r\n    'halfling',\r\n    'jotun',\r\n    'orcish',\r\n    'sylvan',\r\n    'undercommon',\r\n    'ysoki',\r\n    'abyssal',\r\n    'adlet',\r\n    'aklo',\r\n    'akitonian',\r\n    'alghollthu',\r\n    'amurrun',\r\n    'anadi',\r\n    'ancient-osiriani',\r\n    'anugobu',\r\n    'arcadian',\r\n    'aquan',\r\n    'arboreal',\r\n    'auran',\r\n    'boggard',\r\n    'calda',\r\n    'caligni',\r\n    'celestial',\r\n    'cyclops',\r\n    'daemonic',\r\n    'destrachan',\r\n    'drooni',\r\n    'dziriak',\r\n    'ekujae',\r\n    'erutaki',\r\n    'formian',\r\n    'garundi',\r\n    'girtablilu',\r\n    'gnoll',\r\n    'goloma',\r\n    'grippli',\r\n    'hallit',\r\n    'hwan',\r\n    'iblydan',\r\n    'ignan',\r\n    'ikeshti',\r\n    'immolis',\r\n    'infernal',\r\n    'iruxi',\r\n    'jistkan',\r\n    'jyoti',\r\n    'kaava',\r\n    'kashrishi',\r\n    'kibwani',\r\n    'kitsune',\r\n    'kelish',\r\n    'lirgeni',\r\n    'mahwek',\r\n    'minaten',\r\n    'minkaian',\r\n    'mwangi',\r\n    'mzunu',\r\n    'nagaji',\r\n    'necril',\r\n    'ocotan',\r\n    'okaiyan',\r\n    'osiriani',\r\n    'protean',\r\n    'rasu',\r\n    'ratajin',\r\n    'razatlani',\r\n    'requian',\r\n    'russian',\r\n    'senzar',\r\n    'shadowtongue',\r\n    'shobhad',\r\n    'shisk',\r\n    'shoanti',\r\n    'shoony',\r\n    'skald',\r\n    'sphinx',\r\n    'strix',\r\n    'taldane',\r\n    'tekritanin',\r\n    'tengu',\r\n    'terran',\r\n    'thassilonian',\r\n    'tien',\r\n    'utopian',\r\n    'vanara',\r\n    'varisian',\r\n    'varki',\r\n    'vishkanyan',\r\n    'vudrani',\r\n    'wyrwood',\r\n    'xanmba',\r\n    'androffan',\r\n    'azlanti',\r\n    'grioth',\r\n    'kovintal',\r\n    'migo',\r\n    'munavri',\r\n    'samsaran',\r\n    'sasquatch',\r\n    'shae',\r\n    'yithian',\r\n    'druidic',\r\n] as const\r\n","export const SKILL_DICTIONARY = {\r\n    acr: 'acrobatics',\r\n    arc: 'arcana',\r\n    ath: 'athletics',\r\n    cra: 'crafting',\r\n    dec: 'deception',\r\n    dip: 'diplomacy',\r\n    itm: 'intimidation',\r\n    med: 'medicine',\r\n    nat: 'nature',\r\n    occ: 'occultism',\r\n    prf: 'performance',\r\n    rel: 'religion',\r\n    soc: 'society',\r\n    ste: 'stealth',\r\n    sur: 'survival',\r\n    thi: 'thievery',\r\n} as const\r\n\r\nexport const SKILL_ABBREVIATIONS = Object.keys(SKILL_DICTIONARY) as (keyof typeof SKILL_DICTIONARY)[]\r\n\r\nexport const SKILL_LONG_FORMS = Object.values(SKILL_DICTIONARY)\r\n","import { hasCategories, isCategory } from '@src/categories'\r\nimport { getFlag } from '@utils/foundry/flags'\r\nimport { LANGUAGE_LIST } from '@utils/pf2e/languages'\r\nimport { SKILL_LONG_FORMS } from '@utils/pf2e/skills'\r\nimport { FOUR_ELEMENTS } from '@utils/pf2e/spell'\r\n\r\nconst sortOrder = new Proxy(\r\n    {\r\n        addedLanguage: 0,\r\n        trainedSkill: 1,\r\n        combatFlexibility: 2,\r\n        elementalist: 3,\r\n    } as Partial<Record<CategoryType | symbol, number>>,\r\n    {\r\n        get(obj, prop) {\r\n            return prop in obj ? obj[prop as CategoryType] : 99\r\n        },\r\n    }\r\n) as Record<CategoryType, number>\r\n\r\nexport function getData(actor: CharacterPF2e) {\r\n    const level = actor.level\r\n    const flags = (getFlag(actor, 'saved') ?? {}) as SavedCategories\r\n    const categories = hasCategories(actor)\r\n    const templates: BaseCategoryTemplate[] = []\r\n    const actorLanguages = actor.system.traits.languages.value\r\n    const fourElements = FOUR_ELEMENTS.map(x => ({ key: x }))\r\n    const skills = SKILL_LONG_FORMS.filter(x => actor.skills[x]!.rank! < 1).map(x => ({ key: x }))\r\n    const languages = LANGUAGE_LIST.filter(x => !actorLanguages.includes(x))\r\n        .sort()\r\n        .map(x => ({ key: x }))\r\n\r\n    for (const entry of categories) {\r\n        if (isCategory(entry, 'scrollChain')) {\r\n            const { type, category, label, items } = entry\r\n            const slots: DropTemplate[] = []\r\n            const spellSlot = (level: OneToTen): DropTemplate => {\r\n                const { name, uuid } = flags[category]?.[level - 1] ?? { name: '', uuid: '' }\r\n                return { type: 'drop', level, name, uuid, label: game.i18n.localize(`PF2E.SpellLevel${level}`) }\r\n            }\r\n\r\n            // first feat\r\n            slots.push(spellSlot(1))\r\n            if (level >= 8) slots.push(spellSlot(2))\r\n\r\n            // second feat\r\n            if (items[1]) {\r\n                slots.push(spellSlot(3))\r\n                if (level >= 14) slots.push(spellSlot(4))\r\n                if (level >= 16) slots.push(spellSlot(5))\r\n            }\r\n\r\n            // third feat\r\n            if (items[2]) {\r\n                slots.push(spellSlot(6))\r\n                if (level >= 20) slots.push(spellSlot(7))\r\n            }\r\n\r\n            const template: ScrollChainTemplate = { type, category, label, rows: slots }\r\n            templates.push(template)\r\n        } else if (isCategory(entry, 'scrollSavant')) {\r\n            const { maxSlot, maxTradition } = getSpellcastingDetails(actor, 'arcane')\r\n            if (maxSlot < 4) continue\r\n\r\n            const { type, category, label } = entry\r\n            const slots: DropTemplate[] = []\r\n            const spellSlot = (index: number, level: number): DropTemplate => {\r\n                const { name, uuid } = flags[category]?.[index] ?? { name: '', uuid: '' }\r\n                return { type: 'drop', level, name, uuid, label: game.i18n.localize(`PF2E.SpellLevel${level}`) }\r\n            }\r\n\r\n            // legendary arcane\r\n            if (maxTradition >= 4 && maxSlot >= 6) slots.push(spellSlot(3, maxSlot - 5))\r\n\r\n            // master arcane\r\n            if (maxTradition >= 3 && maxSlot >= 5) slots.push(spellSlot(2, maxSlot - 4))\r\n\r\n            // no proficiency\r\n            slots.push(spellSlot(1, maxSlot - 3))\r\n            slots.push(spellSlot(0, maxSlot - 2))\r\n\r\n            const template: ScrollSavantTemplate = { type, category, label, rows: slots }\r\n            templates.push(template)\r\n        } else if (isCategory(entry, 'trainedSkill')) {\r\n            const { type, category, label } = entry\r\n            const selected = flags[category] ?? ''\r\n            const template: TrainedSkillTemplate = {\r\n                type,\r\n                category,\r\n                label,\r\n                rows: [{ type: 'select', options: skills, selected }],\r\n            }\r\n            templates.push(template)\r\n        } else if (isCategory(entry, 'trainedLore')) {\r\n            const { type, category, label } = entry\r\n            const selected = flags[category] ?? ''\r\n            const template: TrainedLoreTemplate = {\r\n                type,\r\n                category,\r\n                label,\r\n                rows: [{ type: 'input', selected, placeholder: game.i18n.localize('PF2E.NewPlaceholders.Lore') }],\r\n            }\r\n            templates.push(template)\r\n        } else if (isCategory(entry, 'addedLanguage')) {\r\n            const { type, category, label } = entry\r\n            const selected = flags[category] ?? ''\r\n            const template: AddedLanguageTemplate = {\r\n                type,\r\n                category,\r\n                label,\r\n                rows: [{ type: 'select', options: languages, selected }],\r\n            }\r\n            templates.push(template)\r\n        } else if (isCategory(entry, 'elementalist')) {\r\n            const { type, category, label } = entry\r\n            const selected = flags[category] ?? ''\r\n            const template: ElementalistTemplate = {\r\n                type,\r\n                category,\r\n                label,\r\n                rows: [{ type: 'select', options: fourElements, selected }],\r\n            }\r\n            templates.push(template)\r\n        } else if (isCategory(entry, 'combatFlexibility')) {\r\n            const { type, category, label, items } = entry\r\n            const selected = flags[category] ?? []\r\n            // first feat\r\n            const slots: DropTemplate[] = [\r\n                {\r\n                    type: 'drop',\r\n                    label: game.i18n.localize(`PF2E.Level8`),\r\n                    name: selected[0]?.name ?? '',\r\n                    uuid: selected[0]?.uuid ?? '',\r\n                    level: 8,\r\n                },\r\n            ]\r\n            // second feat\r\n            if (items[1])\r\n                slots.push({\r\n                    type: 'drop',\r\n                    label: game.i18n.localize(`PF2E.Level14`),\r\n                    name: selected[1]?.name ?? '',\r\n                    uuid: selected[1]?.uuid ?? '',\r\n                    level: 14,\r\n                })\r\n            const template: CombatFlexibilityTemplate = { type, category, label, rows: slots }\r\n            templates.push(template)\r\n        }\r\n    }\r\n\r\n    const rows: BaseCategoryTemplate[] = []\r\n    const groups: BaseCategoryTemplate[] = []\r\n    for (const template of templates) {\r\n        if (template.rows.length > 1) groups.push(template)\r\n        else rows.push(template)\r\n    }\r\n\r\n    rows.sort((a, b) => sortOrder[a.type] - sortOrder[b.type])\r\n    groups.sort((a, b) => a.rows.length - b.rows.length)\r\n\r\n    return { rows, groups }\r\n}\r\n\r\nfunction getSpellcastingDetails(actor: ActorPF2e, tradition: MagicTradition) {\r\n    let maxSlot = 0\r\n    let maxTradition = 0\r\n\r\n    for (const entry of actor.spellcasting) {\r\n        if ('pf2e-staves' in entry.flags) continue // we skip staff entries\r\n\r\n        const slots = entry.system.slots\r\n        for (const key in slots) {\r\n            const slot = slots[key as SlotKey]\r\n            if (slot.max) maxSlot = Math.max(maxSlot, Number(key.slice(4)))\r\n        }\r\n\r\n        if (entry.tradition === tradition) maxTradition = Math.max(maxTradition, entry.rank)\r\n    }\r\n\r\n    return { maxSlot: Math.clamped(maxSlot, 1, 10), maxTradition }\r\n}\r\n","export function sequenceArray<N extends number = number>(start: number, end: number) {\r\n    const levels: number[] = []\r\n\r\n    if (start <= end) {\r\n        for (let i = start; i <= end; i++) levels.push(i)\r\n    } else {\r\n        for (let i = start; i >= end; i--) levels.push(i)\r\n    }\r\n\r\n    return levels as N[]\r\n}\r\n","import { sequenceArray } from '@utils/utils'\r\n\r\nexport const CATEGORY_SEARCH = {\r\n    scrollChain: { category: ['spell'] } as InitialSpellFilters,\r\n    combatFlexibility: { feattype: ['class'], traits: ['fighter'] } as InitialFeatFilters,\r\n    scrollSavant: { category: ['spell'], traditions: ['arcane'] } as InitialSpellFilters,\r\n} as const\r\n\r\nexport function search(event: JQuery.ClickEvent<any, any, SearchTemplateButton>) {\r\n    event.preventDefault()\r\n\r\n    const data = event.currentTarget.dataset\r\n    const level = Number(data.level)\r\n\r\n    switch (data.type) {\r\n        case 'scrollChain':\r\n            searchSpell({\r\n                ...CATEGORY_SEARCH.scrollChain,\r\n                level: sequenceArray<OneToTen>(1, level),\r\n            })\r\n            break\r\n        case 'combatFlexibility':\r\n            searchFeat({\r\n                ...CATEGORY_SEARCH.combatFlexibility,\r\n                level: { min: 1, max: level },\r\n            })\r\n            break\r\n        case 'scrollSavant':\r\n            searchSpell({\r\n                ...CATEGORY_SEARCH.scrollSavant,\r\n                level: sequenceArray<OneToTen>(1, level),\r\n            })\r\n            break\r\n    }\r\n}\r\n\r\nfunction searchSpell({ category = [], level = [], traditions = [] }: InitialSpellFilters = {}) {\r\n    const filter: InitialSpellFilters = {\r\n        category,\r\n        classes: [],\r\n        level,\r\n        rarity: [],\r\n        school: [],\r\n        source: [],\r\n        traditions,\r\n        traits: [],\r\n    }\r\n    game.pf2e.compendiumBrowser.openTab('spell', filter)\r\n}\r\n\r\nfunction searchFeat({ feattype = [], level = {}, traits = [] }: InitialFeatFilters = {}) {\r\n    const filter: InitialFeatFilters = {\r\n        feattype,\r\n        skills: [],\r\n        rarity: [],\r\n        source: [],\r\n        traits,\r\n        level,\r\n    }\r\n    game.pf2e.compendiumBrowser.openTab('feat', filter)\r\n}\r\n","import { subLocalize } from '@utils/foundry/localize'\r\nimport { CATEGORY_SEARCH } from './search'\r\n\r\nconst localize = subLocalize('interface.error.drop')\r\n\r\nexport async function dropped(event: ElementDragEvent) {\r\n    let target = $(event.target)\r\n    if (target.is('label')) target = target.next()\r\n\r\n    const categoryType = target.attr('data-type') as CategoryType | undefined\r\n    if (!categoryType) return\r\n\r\n    try {\r\n        const dataString = event.dataTransfer?.getData('text/plain')\r\n        const typeError = () => localize.warn('wrongDataType')\r\n\r\n        const data: { type: string; uuid: string } = JSON.parse(dataString)\r\n        if (!data || data.type !== 'Item' || typeof data.uuid !== 'string') return typeError()\r\n\r\n        const item = await fromUuid<ItemPF2e>(data.uuid)\r\n        if (!item) return typeError()\r\n\r\n        switch (categoryType) {\r\n            case 'scrollChain':\r\n                droppedSpell(target, item, CATEGORY_SEARCH.scrollChain)\r\n                break\r\n            case 'combatFlexibility':\r\n                droppedFeat(target, item, CATEGORY_SEARCH.combatFlexibility)\r\n                break\r\n            case 'scrollSavant':\r\n                droppedSpell(target, item, CATEGORY_SEARCH.scrollSavant)\r\n                break\r\n        }\r\n    } catch (error) {}\r\n}\r\n\r\nfunction droppedSpell(target: JQuery, item: ItemPF2e, { category = [], traditions = [] }: InitialSpellFilters = {}) {\r\n    if (!item.isOfType('spell')) return localize.warn('wrongType', { type: 'spell' })\r\n\r\n    if (item.isCantrip && !category.includes('cantrip')) return localize.warn('cannotBe', { type: 'spell', not: 'cantrip' })\r\n    if (item.isRitual && !category.includes('ritual')) return localize.warn('cannotBe', { type: 'spell', not: 'ritual' })\r\n    if (item.isFocusSpell && !category.includes('focus')) return localize.warn('cannotBe', { type: 'spell', not: 'focus' })\r\n\r\n    if (traditions.length) {\r\n        const itemTraditions = item.system.traditions.value\r\n        for (const tradition of traditions) {\r\n            if (!itemTraditions.includes(tradition))\r\n                return localize.warn('wrongTrait', { type: 'spell', trait: tradition, category: 'tradition' })\r\n        }\r\n    }\r\n\r\n    if (item.level > Number(target.attr('data-level'))) return localize.warn('wrongLevel', { type: 'spell' })\r\n\r\n    droppedItem(target, item)\r\n}\r\n\r\nfunction droppedFeat(target: JQuery, item: ItemPF2e, { feattype = [], traits = [] }: InitialFeatFilters) {\r\n    if (!item.isOfType('feat') || item.isFeature) return localize.warn('wrongType', { type: 'feat' })\r\n    if (!feattype.includes(item.featType)) return localize.warn('cannotBe', { type: 'feat', not: item.featType })\r\n\r\n    if (traits.length) {\r\n        const itemTraits = item.system.traits.value\r\n        for (const trait of traits) {\r\n            if (!itemTraits.includes(trait)) return localize.warn('wrongTrait', { type: 'feat', trait, category: 'trait' })\r\n        }\r\n    }\r\n\r\n    if (item.level > Number(target.attr('data-level'))) return localize.warn('wrongLevel', { type: 'feat' })\r\n\r\n    droppedItem(target, item)\r\n}\r\n\r\nfunction droppedItem(target: JQuery, item: ItemPF2e) {\r\n    target.val(item.name)\r\n    target.attr('value', item.name)\r\n    target.attr('data-uuid', item.uuid)\r\n    target.nextAll('[data-action=\"clear\"]').first().removeClass('disabled')\r\n}\r\n","import { subLocalize } from '@utils/foundry/localize'\r\nimport { templatePath } from '@utils/foundry/path'\r\nimport { accept } from './interface/accept'\r\nimport { getData } from './interface/data'\r\nimport { dropped } from './interface/drop'\r\nimport { search } from './interface/search'\r\n\r\nconst localize = subLocalize('interface')\r\n\r\nexport class DailiesInterface extends Application {\r\n    private _actor: CharacterPF2e\r\n\r\n    constructor(actor: CharacterPF2e, options?: Partial<ApplicationOptions>) {\r\n        super(options)\r\n        this._actor = actor\r\n    }\r\n\r\n    static get defaultOptions() {\r\n        return mergeObject(super.defaultOptions, {\r\n            title: localize('title'),\r\n            template: templatePath('interface.hbs'),\r\n            height: 'auto',\r\n            submitOnClose: false,\r\n            submitOnChange: false,\r\n            dragDrop: [\r\n                {\r\n                    dropSelector: '[data-droppable=\"true\"]',\r\n                },\r\n            ],\r\n        })\r\n    }\r\n\r\n    getData(options?: Partial<FormApplicationOptions> | undefined) {\r\n        return mergeObject(super.getData(options), {\r\n            i18n: localize,\r\n            ...getData(this._actor),\r\n        })\r\n    }\r\n\r\n    activateListeners(html: JQuery<HTMLElement>): void {\r\n        super.activateListeners(html)\r\n\r\n        html.find<SearchTemplateButton>('[data-action=search]').on('click', search)\r\n        html.find<HTMLAnchorElement>('[data-action=clear]').on('click', this.#onClear.bind(this))\r\n        html.find<HTMLButtonElement>('[data-action=accept]').on('click', this.#onAccept.bind(this))\r\n        html.find<HTMLButtonElement>('[data-action=cancel]').on('click', this.#onCancel.bind(this))\r\n    }\r\n\r\n    protected async _onDrop(event: ElementDragEvent) {\r\n        dropped(event)\r\n    }\r\n\r\n    #lock() {\r\n        this.element.addClass('disabled')\r\n    }\r\n\r\n    #validate() {\r\n        const warns: string[] = []\r\n        const emptyInputs = this.element.find('input').filter((_, input) => !input.value)\r\n\r\n        if (emptyInputs.length) warns.push('error.empty')\r\n\r\n        warns.forEach(x => localize.warn(x))\r\n\r\n        return !warns.length\r\n    }\r\n\r\n    async #onAccept(event: JQuery.ClickEvent) {\r\n        event.preventDefault()\r\n\r\n        if (!this.#validate()) return\r\n\r\n        this.#lock()\r\n\r\n        try {\r\n            await accept(this.element, this._actor)\r\n        } catch (error) {\r\n            localize.error('error.unexpected')\r\n            console.error(error)\r\n        }\r\n\r\n        this.close()\r\n    }\r\n\r\n    #onClear(event: JQuery.ClickEvent<any, any, HTMLAnchorElement>) {\r\n        event.preventDefault()\r\n        const target = $(event.currentTarget)\r\n        const input = target.prevAll('input').first()\r\n        input.val('')\r\n        input.attr('value', '')\r\n        input.attr('data-uuid', '')\r\n        target.addClass('disabled')\r\n    }\r\n\r\n    #onCancel(event: JQuery.ClickEvent) {\r\n        event.preventDefault()\r\n        this.close()\r\n    }\r\n}\r\n","import { setModuleID } from '@utils/module'\r\nimport { wrapRestForTheNight } from './rest'\r\nimport { renderCharacterSheetPF2e } from './sheet'\r\n\r\nsetModuleID('pf2e-dailies')\r\n\r\nHooks.once('ready', () => {\r\n    wrapRestForTheNight()\r\n})\r\n\r\nHooks.on('renderCharacterSheetPF2e', renderCharacterSheetPF2e)\r\n","import { getFlag } from '@utils/foundry/flags'\r\nimport { sluggify } from '@utils/pf2e/utils'\r\nimport { isRuleItem } from './categories'\r\n\r\nexport function wrapRestForTheNight() {\r\n    const original = game.pf2e.actions.restForTheNight\r\n    game.pf2e.actions.restForTheNight = async (options: ActionDefaultOptions) => {\r\n        const result = await original(options)\r\n        if (result.length && options.actors) afterRest(options.actors)\r\n        return result\r\n    }\r\n}\r\n\r\nasync function afterRest(actors: ActorPF2e | ActorPF2e[]) {\r\n    actors = Array.isArray(actors) ? actors : [actors]\r\n\r\n    const characters = actors.filter(x => x.isOfType('character')) as CharacterPF2e[]\r\n    for (const actor of characters) {\r\n        const update: EmbeddedDocumentUpdateData<ItemPF2e>[] = []\r\n        const remove: string[] = []\r\n        const itemTypes = actor.itemTypes\r\n\r\n        const cleanRuleItem = (item: ItemPF2e) => {\r\n            const rules = deepClone(item._source.system.rules)\r\n\r\n            let modified = false\r\n            for (let i = rules.length - 1; i >= 0; i--) {\r\n                if (!('pf2e-dailies' in rules[i])) continue\r\n                rules.splice(i, 1)\r\n                modified = true\r\n            }\r\n\r\n            if (modified) update.push({ _id: item.id, 'system.rules': rules })\r\n        }\r\n\r\n        for (const item of itemTypes.feat) {\r\n            if (isRuleItem(item)) cleanRuleItem(item)\r\n\r\n            if (getFlag(item, 'temporary')) {\r\n                const parentId = item.getFlag<string>('pf2e', 'grantedBy.id')\r\n                if (parentId) {\r\n                    const slug = sluggify(item.name, { camel: 'dromedary' })\r\n                    const path = `flags.pf2e.itemGrants.-=${slug}`\r\n                    update.push({ _id: parentId, [path]: true })\r\n                }\r\n                remove.push(item.id)\r\n            }\r\n        }\r\n\r\n        for (const item of itemTypes.lore) {\r\n            if (getFlag(item, 'temporary')) remove.push(item.id)\r\n        }\r\n\r\n        for (const item of itemTypes.equipment) {\r\n            if (isRuleItem(item)) cleanRuleItem(item)\r\n        }\r\n\r\n        if (update.length) actor.updateEmbeddedDocuments('Item', update)\r\n        if (remove.length) actor.deleteEmbeddedDocuments('Item', remove)\r\n    }\r\n}\r\n","import { DailiesInterface } from '@apps/interface'\r\nimport { localize } from '@utils/foundry/localize'\r\nimport { hasAnyCategory } from './categories'\r\n\r\nexport function renderCharacterSheetPF2e(sheet: CharacterSheetPF2e, html: JQuery) {\r\n    const actor = sheet.actor\r\n    if (!actor.isOwner || !hasAnyCategory(actor)) return\r\n\r\n    const small = html.find('aside .sidebar .hitpoints .hp-small')\r\n    small\r\n        .append(`<a class=\"roll-icon dailies\" title=\"${localize('sheet.title')}\"><i class=\"fas fa-mug-saucer\"></i></a>`)\r\n        .find('.dailies')\r\n        .on('click', () => new DailiesInterface(actor).render(true, { id: `pf2e-dailies-interface-${actor.id}` }))\r\n\r\n    // TODO remove with next system update\r\n    small\r\n        .find('[data-action=rest]')\r\n        .off('click')\r\n        .on('click', event => game.pf2e.actions.restForTheNight({ event, actors: actor }))\r\n}\r\n"],"names":["getFlag","doc","key","fallback","getSourceId","includesSourceId","list","sourceId","includes","wordCharacter","String","raw","nonWordCharacter","nonWordCharacterRE","RegExp","wordBoundary","nonWordBoundary","lowerCaseLetter","upperCaseLetter","lowerCaseThenUpperCaseRE","nonWordCharacterHyphenOrSpaceRE","upperOrWordBoundariedLowerRE","sluggify","text","camel","console","warn","replace","toLowerCase","trim","dromedary","charAt","toUpperCase","slice","part","index","Error","getItemSourceIdCondition","Array","isArray","item","getItems","actor","itemTypes","flatMap","type","items","findItemWithSourceId","find","notify","str","arg1","arg2","arg3","data","undefined","permanent","ui","notifications","localize","args","game","i18n","format","hasLocalization","has","subLocalize","subKey","fn","Object","defineProperties","value","enumerable","configurable","info","error","RULE_TYPES","CATEGORIES","category","uuids","UUIDS","EQUIP_UUID","FEATS_UUID","RULES_UUIDS","FLATTENED","FEATS","EQUIP","RULES","push","map","uuid","Map","getCategoryUUIDS","isRuleItem","isCategory","object","templatePath","path","filter","x","join","chatUUID","name","FOUR_ELEMENTS","scrolls","Set","async","createSpellScroll","level","temp","spell","fromUuid","toObject","system","scrollUUID","scrollCompendiumIds","getScrollCompendiumUUID","scroll","location","heightenedLevel","temporary","traits","traditions","flags","core","description","accept","html","message","fields","toArray","ruleItems","some","field","dataset","filterItemsWithSourceId","getRuleItems","addData","updateData","messages","languages","skills","resistances","feats","Number","parentUUID","parent","feat","createTemporaryFeat","selected","lore","createTemporaryLore","ruleItem","hasSourceId","rules","deepClone","_source","i","length","splice","mode","createResistanceRule","_id","id","pushMessages","title","createEmbeddedDocuments","parentId","onDelete","updateEmbeddedDocuments","setFlag","ChatMessage","create","content","speaker","getSpeaker","rank","img","setProperty","LANGUAGE_LIST","SKILL_DICTIONARY","acr","arc","ath","cra","dec","dip","itm","med","nat","occ","prf","rel","soc","ste","sur","thi","SKILL_LONG_FORMS","keys","values","sortOrder","Proxy","addedLanguage","trainedSkill","combatFlexibility","elementalist","get","obj","prop","getData","categories","equipment","isOfType","isInvested","entry","label","hasCategories","templates","actorLanguages","fourElements","sort","slots","spellSlot","template","rows","maxSlot","maxTradition","getSpellcastingDetails","options","placeholder","groups","a","b","tradition","spellcasting","max","Math","clamped","sequenceArray","start","end","levels","CATEGORY_SEARCH","scrollChain","feattype","scrollSavant","search","event","preventDefault","currentTarget","searchSpell","rarity","source","pf2e","compendiumBrowser","openTab","searchFeat","min","classes","school","droppedSpell","target","isCantrip","not","isRitual","isFocusSpell","itemTraditions","trait","attr","droppedItem","val","nextAll","first","removeClass","DailiesInterface","Application","_actor","constructor","super","this","defaultOptions","mergeObject","height","submitOnClose","submitOnChange","dragDrop","dropSelector","activateListeners","on","bind","$","is","next","categoryType","dataString","dataTransfer","typeError","JSON","parse","isFeature","featType","itemTraits","droppedFeat","dropped","element","addClass","warns","_","input","forEach","close","prevAll","Hooks","once","original","actions","restForTheNight","result","actors","characters","update","remove","cleanRuleItem","modified","deleteEmbeddedDocuments","afterRest","wrapRestForTheNight","sheet","isOwner","hasAnyCategory","small","append","render","off"],"sourceRoot":""}